define(['dart_sdk', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/widgets/icon_theme.dart', 'packages/flutter/src/widgets/icon_theme_data.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/material/icons.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/widgets/icon_data.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/painting/matrix_utils.dart', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/material/material_state.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/rendering/layout_helper.dart', 'packages/flutter/src/rendering/shifted_box.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/material/constants.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter/src/widgets/safe_area.dart', 'packages/flutter/src/widgets/dismissible.dart', 'packages/flutter/src/foundation/object.dart', 'packages/flutter/src/foundation/print.dart', 'packages/flutter/src/painting/circle_border.dart', 'packages/flutter/src/painting/stadium_border.dart', 'packages/flutter/src/widgets/layout_builder.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/widgets/implicit_animations.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/widgets/single_child_scroll_view.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/rendering/paragraph.dart', 'packages/flutter/src/painting/_network_image_web.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/material/tab_controller.dart', 'packages/flutter/src/painting/decoration.dart', 'packages/flutter/src/widgets/preferred_size.dart', 'packages/flutter/src/material/tab_indicator.dart', 'packages/flutter/src/widgets/page_view.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/widgets/dual_transition_builder.dart', 'packages/flutter/src/animation/tween_sequence.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/gestures/binding.dart', 'packages/flutter/src/semantics/semantics_service.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/painting/geometry.dart', 'packages/flutter/src/semantics/semantics_event.dart', 'packages/flutter/src/services/system_sound.dart', 'packages/flutter/src/services/haptic_feedback.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/foundation/observer_list.dart', 'packages/flutter/src/widgets/bottom_navigation_bar_item.dart', 'packages/flutter/src/painting/notched_shapes.dart', 'packages/flutter/src/material/typography.dart', 'packages/flutter/src/material/floating_action_button_theme.dart', 'packages/flutter/src/material/bottom_sheet_theme.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/widgets/draggable_scrollable_sheet.dart', 'packages/flutter/src/rendering/custom_layout.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/flutter/src/scheduler/ticker.dart', 'packages/flutter/src/foundation/synchronous_future.dart', 'packages/flutter/src/services/system_chrome.dart', 'packages/flutter/src/widgets/navigation_toolbar.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/semantics/semantics.dart', 'packages/flutter/src/widgets/annotated_region.dart', 'packages/flutter/src/rendering/sliver_persistent_header.dart', 'packages/flutter/src/widgets/sliver_persistent_header.dart'], (function load__packages__flutter__src__material__icon_button_dart(dart_sdk, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__widgets__icon_theme$46dart, packages__flutter__src__widgets__icon_theme_data$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__material__icons$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__widgets__icon_data$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__painting__matrix_utils$46dart, packages__vector_math__vector_math_64$46dart, packages__flutter__src__material__material_state$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__rendering__layout_helper$46dart, packages__flutter__src__rendering__shifted_box$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__material__constants$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter__src__widgets__safe_area$46dart, packages__flutter__src__widgets__dismissible$46dart, packages__flutter__src__foundation__object$46dart, packages__flutter__src__foundation__print$46dart, packages__flutter__src__painting__circle_border$46dart, packages__flutter__src__painting__stadium_border$46dart, packages__flutter__src__widgets__layout_builder$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__widgets__implicit_animations$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__widgets__single_child_scroll_view$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__rendering__paragraph$46dart, packages__flutter__src__painting___network_image_web$46dart, packages__flutter__src__foundation__collections$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__material__tab_controller$46dart, packages__flutter__src__painting__decoration$46dart, packages__flutter__src__widgets__preferred_size$46dart, packages__flutter__src__material__tab_indicator$46dart, packages__flutter__src__widgets__page_view$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__widgets__dual_transition_builder$46dart, packages__flutter__src__animation__tween_sequence$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__gestures__binding$46dart, packages__flutter__src__semantics__semantics_service$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__painting__geometry$46dart, packages__flutter__src__semantics__semantics_event$46dart, packages__flutter__src__services__system_sound$46dart, packages__flutter__src__services__haptic_feedback$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__foundation__observer_list$46dart, packages__flutter__src__widgets__bottom_navigation_bar_item$46dart, packages__flutter__src__painting__notched_shapes$46dart, packages__flutter__src__material__typography$46dart, packages__flutter__src__material__floating_action_button_theme$46dart, packages__flutter__src__material__bottom_sheet_theme$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__widgets__draggable_scrollable_sheet$46dart, packages__flutter__src__rendering__custom_layout$46dart, packages__flutter__src__services__system_channels$46dart, packages__flutter__src__scheduler__ticker$46dart, packages__flutter__src__foundation__synchronous_future$46dart, packages__flutter__src__services__system_chrome$46dart, packages__flutter__src__widgets__navigation_toolbar$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__semantics__semantics$46dart, packages__flutter__src__widgets__annotated_region$46dart, packages__flutter__src__rendering__sliver_persistent_header$46dart, packages__flutter__src__widgets__sliver_persistent_header$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const math = dart_sdk.math;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const collection = dart_sdk.collection;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const mouse_cursor = packages__flutter__src__rendering__layer$46dart.src__rendering__mouse_cursor;
  const box$ = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const layer = packages__flutter__src__rendering__layer$46dart.src__rendering__layer;
  const binding = packages__flutter__src__rendering__layer$46dart.src__rendering__binding;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const navigator$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const debug = packages__flutter__src__widgets__widget_span$46dart.src__widgets__debug;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const text$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const heroes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__heroes;
  const inherited_theme = packages__flutter__src__widgets__widget_span$46dart.src__widgets__inherited_theme;
  const routes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__routes;
  const focus_scope = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_scope;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const scroll_position_with_single_context = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_position_with_single_context;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const scroll_physics = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_physics;
  const scroll_notification = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_notification;
  const notification_listener = packages__flutter__src__widgets__widget_span$46dart.src__widgets__notification_listener;
  const pages = packages__flutter__src__widgets__widget_span$46dart.src__widgets__pages;
  const overlay$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__overlay;
  const actions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__actions;
  const automatic_keep_alive = packages__flutter__src__widgets__widget_span$46dart.src__widgets__automatic_keep_alive;
  const restoration_properties = packages__flutter__src__widgets__widget_span$46dart.src__widgets__restoration_properties;
  const primary_scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__primary_scroll_controller;
  const modal_barrier = packages__flutter__src__widgets__widget_span$46dart.src__widgets__modal_barrier;
  const restoration = packages__flutter__src__widgets__widget_span$46dart.src__widgets__restoration;
  const localizations$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__localizations;
  const scrollable = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scrollable;
  const scroll_position = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_position;
  const icon_theme = packages__flutter__src__widgets__icon_theme$46dart.src__widgets__icon_theme;
  const icon_theme_data = packages__flutter__src__widgets__icon_theme_data$46dart.src__widgets__icon_theme_data;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const debug$ = packages__flutter__src__foundation__debug$46dart.src__foundation__debug;
  const colors = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const icons = packages__flutter__src__material__icons$46dart.src__material__icons;
  const platform$ = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const icon_data = packages__flutter__src__widgets__icon_data$46dart.src__widgets__icon_data;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const matrix_utils = packages__flutter__src__painting__matrix_utils$46dart.src__painting__matrix_utils;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const material_state = packages__flutter__src__material__material_state$46dart.src__material__material_state;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const colors$ = packages__flutter__src__material__colors$46dart.src__material__colors;
  const layout_helper = packages__flutter__src__rendering__layout_helper$46dart.src__rendering__layout_helper;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const constants = packages__flutter__src__material__constants$46dart.src__material__constants;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const safe_area = packages__flutter__src__widgets__safe_area$46dart.src__widgets__safe_area;
  const dismissible = packages__flutter__src__widgets__dismissible$46dart.src__widgets__dismissible;
  const object$ = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  const print = packages__flutter__src__foundation__print$46dart.src__foundation__print;
  const circle_border = packages__flutter__src__painting__circle_border$46dart.src__painting__circle_border;
  const stadium_border = packages__flutter__src__painting__stadium_border$46dart.src__painting__stadium_border;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const implicit_animations = packages__flutter__src__widgets__implicit_animations$46dart.src__widgets__implicit_animations;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const single_child_scroll_view = packages__flutter__src__widgets__single_child_scroll_view$46dart.src__widgets__single_child_scroll_view;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const paragraph = packages__flutter__src__rendering__paragraph$46dart.src__rendering__paragraph;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const tab_controller = packages__flutter__src__material__tab_controller$46dart.src__material__tab_controller;
  const decoration = packages__flutter__src__painting__decoration$46dart.src__painting__decoration;
  const preferred_size = packages__flutter__src__widgets__preferred_size$46dart.src__widgets__preferred_size;
  const tab_indicator = packages__flutter__src__material__tab_indicator$46dart.src__material__tab_indicator;
  const page_view = packages__flutter__src__widgets__page_view$46dart.src__widgets__page_view;
  const text_painter = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_painter;
  const dual_transition_builder = packages__flutter__src__widgets__dual_transition_builder$46dart.src__widgets__dual_transition_builder;
  const tween_sequence = packages__flutter__src__animation__tween_sequence$46dart.src__animation__tween_sequence;
  const route$ = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const binding$ = packages__flutter__src__gestures__binding$46dart.src__gestures__binding;
  const semantics_service = packages__flutter__src__semantics__semantics_service$46dart.src__semantics__semantics_service;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const geometry = packages__flutter__src__painting__geometry$46dart.src__painting__geometry;
  const semantics_event = packages__flutter__src__semantics__semantics_event$46dart.src__semantics__semantics_event;
  const system_sound = packages__flutter__src__services__system_sound$46dart.src__services__system_sound;
  const haptic_feedback = packages__flutter__src__services__haptic_feedback$46dart.src__services__haptic_feedback;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const observer_list = packages__flutter__src__foundation__observer_list$46dart.src__foundation__observer_list;
  const bottom_navigation_bar_item = packages__flutter__src__widgets__bottom_navigation_bar_item$46dart.src__widgets__bottom_navigation_bar_item;
  const notched_shapes = packages__flutter__src__painting__notched_shapes$46dart.src__painting__notched_shapes;
  const typography$ = packages__flutter__src__material__typography$46dart.src__material__typography;
  const text_theme = packages__flutter__src__material__typography$46dart.src__material__text_theme;
  const floating_action_button_theme = packages__flutter__src__material__floating_action_button_theme$46dart.src__material__floating_action_button_theme;
  const bottom_sheet_theme = packages__flutter__src__material__bottom_sheet_theme$46dart.src__material__bottom_sheet_theme;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const colors$0 = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__colors;
  const text_theme$ = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__text_theme;
  const draggable_scrollable_sheet = packages__flutter__src__widgets__draggable_scrollable_sheet$46dart.src__widgets__draggable_scrollable_sheet;
  const custom_layout = packages__flutter__src__rendering__custom_layout$46dart.src__rendering__custom_layout;
  const restoration$ = packages__flutter__src__services__system_channels$46dart.src__services__restoration;
  const ticker = packages__flutter__src__scheduler__ticker$46dart.src__scheduler__ticker;
  const synchronous_future = packages__flutter__src__foundation__synchronous_future$46dart.src__foundation__synchronous_future;
  const system_chrome = packages__flutter__src__services__system_chrome$46dart.src__services__system_chrome;
  const navigation_toolbar = packages__flutter__src__widgets__navigation_toolbar$46dart.src__widgets__navigation_toolbar;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const semantics = packages__flutter__src__semantics__semantics$46dart.src__semantics__semantics;
  const annotated_region = packages__flutter__src__widgets__annotated_region$46dart.src__widgets__annotated_region;
  const sliver_persistent_header = packages__flutter__src__rendering__sliver_persistent_header$46dart.src__rendering__sliver_persistent_header;
  const sliver_persistent_header$ = packages__flutter__src__widgets__sliver_persistent_header$46dart.src__widgets__sliver_persistent_header;
  var icon_button = Object.create(dart.library);
  var back_button = Object.create(dart.library);
  var time = Object.create(dart.library);
  var ink_ripple = Object.create(dart.library);
  var button_style_button = Object.create(dart.library);
  var text_button = Object.create(dart.library);
  var snack_bar = Object.create(dart.library);
  var floating_action_button_location = Object.create(dart.library);
  var floating_action_button = Object.create(dart.library);
  var flexible_space_bar = Object.create(dart.library);
  var list_tile = Object.create(dart.library);
  var drawer = Object.create(dart.library);
  var divider = Object.create(dart.library);
  var dialog = Object.create(dart.library);
  var raised_button = Object.create(dart.library);
  var outline_button = Object.create(dart.library);
  var material_button = Object.create(dart.library);
  var button = Object.create(dart.library);
  var flat_button = Object.create(dart.library);
  var toggle_buttons_theme = Object.create(dart.library);
  var time_picker_theme = Object.create(dart.library);
  var text_selection_theme = Object.create(dart.library);
  var text_button_theme = Object.create(dart.library);
  var tabs$ = Object.create(dart.library);
  var tab_bar_theme = Object.create(dart.library);
  var switch_theme = Object.create(dart.library);
  var snack_bar_theme = Object.create(dart.library);
  var slider_theme = Object.create(dart.library);
  var scrollbar_theme = Object.create(dart.library);
  var radio_theme = Object.create(dart.library);
  var popup_menu_theme = Object.create(dart.library);
  var page_transitions_theme = Object.create(dart.library);
  var outlined_button_theme = Object.create(dart.library);
  var navigation_rail = Object.create(dart.library);
  var navigation_rail_theme = Object.create(dart.library);
  var input_decorator = Object.create(dart.library);
  var ink_splash = Object.create(dart.library);
  var button_style = Object.create(dart.library);
  var elevated_button_theme = Object.create(dart.library);
  var divider_theme = Object.create(dart.library);
  var dialog_theme = Object.create(dart.library);
  var data_table_theme = Object.create(dart.library);
  var chip_theme = Object.create(dart.library);
  var checkbox_theme = Object.create(dart.library);
  var card_theme = Object.create(dart.library);
  var tooltip_theme = Object.create(dart.library);
  var tooltip = Object.create(dart.library);
  var ink_highlight = Object.create(dart.library);
  var feedback = Object.create(dart.library);
  var ink_well = Object.create(dart.library);
  var bottom_navigation_bar = Object.create(dart.library);
  var bottom_navigation_bar_theme = Object.create(dart.library);
  var bottom_app_bar_theme = Object.create(dart.library);
  var banner_theme = Object.create(dart.library);
  var theme_data = Object.create(dart.library);
  var color_scheme = Object.create(dart.library);
  var button_theme = Object.create(dart.library);
  var button_bar_theme = Object.create(dart.library);
  var button_bar = Object.create(dart.library);
  var bottom_sheet = Object.create(dart.library);
  var scaffold$ = Object.create(dart.library);
  var elevation_overlay = Object.create(dart.library);
  var material = Object.create(dart.library);
  var debug$0 = Object.create(dart.library);
  var material_localizations = Object.create(dart.library);
  var theme$ = Object.create(dart.library);
  var app_bar_theme = Object.create(dart.library);
  var app_bar = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T$ = {
    _LocationL: () => (T$._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    DiagnosticsPropertyOfWidget: () => (T$.DiagnosticsPropertyOfWidget = dart.constFn(diagnostics.DiagnosticsProperty$(framework.Widget)))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ObjectFlagPropertyOfVoidTovoid: () => (T$.ObjectFlagPropertyOfVoidTovoid = dart.constFn(diagnostics.ObjectFlagProperty$(T$.VoidTovoid())))(),
    DiagnosticsPropertyOfEdgeInsetsGeometry: () => (T$.DiagnosticsPropertyOfEdgeInsetsGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(edge_insets.EdgeInsetsGeometry)))(),
    DiagnosticsPropertyOfFocusNode: () => (T$.DiagnosticsPropertyOfFocusNode = dart.constFn(diagnostics.DiagnosticsProperty$(focus_manager.FocusNode)))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    DayPeriodL: () => (T$.DayPeriodL = dart.constFn(dart.legacy(time.DayPeriod)))(),
    intToString: () => (T$.intToString = dart.constFn(dart.fnType(core.String, [core.int])))(),
    TimeOfDayFormatL: () => (T$.TimeOfDayFormatL = dart.constFn(dart.legacy(time.TimeOfDayFormat)))(),
    HourFormatL: () => (T$.HourFormatL = dart.constFn(dart.legacy(time.HourFormat)))(),
    TweenOfdouble: () => (T$.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    JSArrayOfRenderObject: () => (T$.JSArrayOfRenderObject = dart.constFn(_interceptors.JSArray$(object.RenderObject)))(),
    VoidToRect: () => (T$.VoidToRect = dart.constFn(dart.fnType(ui.Rect, [])))(),
    DiagnosticsPropertyOfButtonStyle: () => (T$.DiagnosticsPropertyOfButtonStyle = dart.constFn(diagnostics.DiagnosticsProperty$(button_style.ButtonStyle)))(),
    LinkedHashSetOfMaterialState: () => (T$.LinkedHashSetOfMaterialState = dart.constFn(collection.LinkedHashSet$(material_state.MaterialState)))(),
    ButtonStyleN: () => (T$.ButtonStyleN = dart.constFn(dart.nullable(button_style.ButtonStyle)))(),
    FnToTN: () => (T$.FnToTN = dart.constFn(dart.gFnType(T => [dart.nullable(T), [dart.fnType(dart.nullable(T), [T$.ButtonStyleN()])]], T => [T$.ObjectN()])))(),
    FnToTN$1: () => (T$.FnToTN$1 = dart.constFn(dart.gFnType(T => [dart.nullable(T), [dart.fnType(dart.nullable(material_state.MaterialStateProperty$(T)), [T$.ButtonStyleN()])]], T => [T$.ObjectN()])))(),
    doubleN: () => (T$.doubleN = dart.constFn(dart.nullable(core.double)))(),
    MaterialStatePropertyOfdoubleN: () => (T$.MaterialStatePropertyOfdoubleN = dart.constFn(material_state.MaterialStateProperty$(T$.doubleN())))(),
    MaterialStatePropertyNOfdoubleN: () => (T$.MaterialStatePropertyNOfdoubleN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfdoubleN())))(),
    ButtonStyleNToMaterialStatePropertyNOfdoubleN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfdoubleN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfdoubleN(), [T$.ButtonStyleN()])))(),
    TextStyleN: () => (T$.TextStyleN = dart.constFn(dart.nullable(text_style.TextStyle)))(),
    MaterialStatePropertyOfTextStyleN: () => (T$.MaterialStatePropertyOfTextStyleN = dart.constFn(material_state.MaterialStateProperty$(T$.TextStyleN())))(),
    MaterialStatePropertyNOfTextStyleN: () => (T$.MaterialStatePropertyNOfTextStyleN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfTextStyleN())))(),
    ButtonStyleNToMaterialStatePropertyNOfTextStyleN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfTextStyleN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfTextStyleN(), [T$.ButtonStyleN()])))(),
    ColorN: () => (T$.ColorN = dart.constFn(dart.nullable(ui.Color)))(),
    MaterialStatePropertyOfColorN: () => (T$.MaterialStatePropertyOfColorN = dart.constFn(material_state.MaterialStateProperty$(T$.ColorN())))(),
    MaterialStatePropertyNOfColorN: () => (T$.MaterialStatePropertyNOfColorN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfColorN())))(),
    ButtonStyleNToMaterialStatePropertyNOfColorN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfColorN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfColorN(), [T$.ButtonStyleN()])))(),
    EdgeInsetsGeometryN: () => (T$.EdgeInsetsGeometryN = dart.constFn(dart.nullable(edge_insets.EdgeInsetsGeometry)))(),
    MaterialStatePropertyOfEdgeInsetsGeometryN: () => (T$.MaterialStatePropertyOfEdgeInsetsGeometryN = dart.constFn(material_state.MaterialStateProperty$(T$.EdgeInsetsGeometryN())))(),
    MaterialStatePropertyNOfEdgeInsetsGeometryN: () => (T$.MaterialStatePropertyNOfEdgeInsetsGeometryN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfEdgeInsetsGeometryN())))(),
    ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfEdgeInsetsGeometryN(), [T$.ButtonStyleN()])))(),
    SizeN: () => (T$.SizeN = dart.constFn(dart.nullable(ui.Size)))(),
    MaterialStatePropertyOfSizeN: () => (T$.MaterialStatePropertyOfSizeN = dart.constFn(material_state.MaterialStateProperty$(T$.SizeN())))(),
    MaterialStatePropertyNOfSizeN: () => (T$.MaterialStatePropertyNOfSizeN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfSizeN())))(),
    ButtonStyleNToMaterialStatePropertyNOfSizeN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfSizeN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfSizeN(), [T$.ButtonStyleN()])))(),
    BorderSideN: () => (T$.BorderSideN = dart.constFn(dart.nullable(borders.BorderSide)))(),
    MaterialStatePropertyOfBorderSideN: () => (T$.MaterialStatePropertyOfBorderSideN = dart.constFn(material_state.MaterialStateProperty$(T$.BorderSideN())))(),
    MaterialStatePropertyNOfBorderSideN: () => (T$.MaterialStatePropertyNOfBorderSideN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfBorderSideN())))(),
    ButtonStyleNToMaterialStatePropertyNOfBorderSideN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfBorderSideN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfBorderSideN(), [T$.ButtonStyleN()])))(),
    OutlinedBorderN: () => (T$.OutlinedBorderN = dart.constFn(dart.nullable(borders.OutlinedBorder)))(),
    MaterialStatePropertyOfOutlinedBorderN: () => (T$.MaterialStatePropertyOfOutlinedBorderN = dart.constFn(material_state.MaterialStateProperty$(T$.OutlinedBorderN())))(),
    MaterialStatePropertyNOfOutlinedBorderN: () => (T$.MaterialStatePropertyNOfOutlinedBorderN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfOutlinedBorderN())))(),
    ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfOutlinedBorderN(), [T$.ButtonStyleN()])))(),
    MouseCursorN: () => (T$.MouseCursorN = dart.constFn(dart.nullable(mouse_cursor.MouseCursor)))(),
    ButtonStyleNToMouseCursorN: () => (T$.ButtonStyleNToMouseCursorN = dart.constFn(dart.fnType(T$.MouseCursorN(), [T$.ButtonStyleN()])))(),
    SetOfMaterialState: () => (T$.SetOfMaterialState = dart.constFn(core.Set$(material_state.MaterialState)))(),
    SetOfMaterialStateToMouseCursorN: () => (T$.SetOfMaterialStateToMouseCursorN = dart.constFn(dart.fnType(T$.MouseCursorN(), [T$.SetOfMaterialState()])))(),
    ButtonStyleNToColorN: () => (T$.ButtonStyleNToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.ButtonStyleN()])))(),
    SetOfMaterialStateToColorN: () => (T$.SetOfMaterialStateToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.SetOfMaterialState()])))(),
    VisualDensityN: () => (T$.VisualDensityN = dart.constFn(dart.nullable(theme_data.VisualDensity)))(),
    ButtonStyleNToVisualDensityN: () => (T$.ButtonStyleNToVisualDensityN = dart.constFn(dart.fnType(T$.VisualDensityN(), [T$.ButtonStyleN()])))(),
    MaterialTapTargetSizeN: () => (T$.MaterialTapTargetSizeN = dart.constFn(dart.nullable(theme_data.MaterialTapTargetSize)))(),
    ButtonStyleNToMaterialTapTargetSizeN: () => (T$.ButtonStyleNToMaterialTapTargetSizeN = dart.constFn(dart.fnType(T$.MaterialTapTargetSizeN(), [T$.ButtonStyleN()])))(),
    DurationN: () => (T$.DurationN = dart.constFn(dart.nullable(core.Duration)))(),
    ButtonStyleNToDurationN: () => (T$.ButtonStyleNToDurationN = dart.constFn(dart.fnType(T$.DurationN(), [T$.ButtonStyleN()])))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    ButtonStyleNToboolN: () => (T$.ButtonStyleNToboolN = dart.constFn(dart.fnType(T$.boolN(), [T$.ButtonStyleN()])))(),
    AlignmentGeometryN: () => (T$.AlignmentGeometryN = dart.constFn(dart.nullable(alignment.AlignmentGeometry)))(),
    ButtonStyleNToAlignmentGeometryN: () => (T$.ButtonStyleNToAlignmentGeometryN = dart.constFn(dart.fnType(T$.AlignmentGeometryN(), [T$.ButtonStyleN()])))(),
    AnimationStatusTovoid: () => (T$.AnimationStatusTovoid = dart.constFn(dart.fnType(dart.void, [animation.AnimationStatus])))(),
    RenderBoxAndBoxConstraintsToSize: () => (T$.RenderBoxAndBoxConstraintsToSize = dart.constFn(dart.fnType(ui.Size, [box$.RenderBox, box$.BoxConstraints])))(),
    OffsetN: () => (T$.OffsetN = dart.constFn(dart.nullable(ui.Offset)))(),
    BoxHitTestResultAndOffsetNTobool: () => (T$.BoxHitTestResultAndOffsetNTobool = dart.constFn(dart.fnType(core.bool, [box$.BoxHitTestResult, T$.OffsetN()])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    SnackBarClosedReasonL: () => (T$.SnackBarClosedReasonL = dart.constFn(dart.legacy(snack_bar.SnackBarClosedReason)))(),
    StringL: () => (T$.StringL = dart.constFn(dart.legacy(core.String)))(),
    ValueKeyOfStringL: () => (T$.ValueKeyOfStringL = dart.constFn(key.ValueKey$(T$.StringL())))(),
    DismissDirectionTovoid: () => (T$.DismissDirectionTovoid = dart.constFn(dart.fnType(dart.void, [dismissible.DismissDirection])))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndWidgetNToAlign: () => (T$.BuildContextAndWidgetNToAlign = dart.constFn(dart.fnType(basic.Align, [framework.BuildContext, T$.WidgetN()])))(),
    _AnimationSwapOfdouble: () => (T$._AnimationSwapOfdouble = dart.constFn(floating_action_button_location._AnimationSwap$(core.double)))(),
    ObjectFlagPropertyOfObject: () => (T$.ObjectFlagPropertyOfObject = dart.constFn(diagnostics.ObjectFlagProperty$(core.Object)))(),
    DiagnosticsPropertyOfShapeBorder: () => (T$.DiagnosticsPropertyOfShapeBorder = dart.constFn(diagnostics.DiagnosticsProperty$(borders.ShapeBorder)))(),
    DiagnosticsPropertyOfMaterialTapTargetSize: () => (T$.DiagnosticsPropertyOfMaterialTapTargetSize = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.MaterialTapTargetSize)))(),
    CollapseModeL: () => (T$.CollapseModeL = dart.constFn(dart.legacy(flexible_space_bar.CollapseMode)))(),
    StretchModeL: () => (T$.StretchModeL = dart.constFn(dart.legacy(flexible_space_bar.StretchMode)))(),
    BuildContextAndBoxConstraintsToContainer: () => (T$.BuildContextAndBoxConstraintsToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, box$.BoxConstraints])))(),
    BuildContextAndBoxConstraintsToClipRect: () => (T$.BuildContextAndBoxConstraintsToClipRect = dart.constFn(dart.fnType(basic.ClipRect, [framework.BuildContext, box$.BoxConstraints])))(),
    ListTileStyleL: () => (T$.ListTileStyleL = dart.constFn(dart.legacy(list_tile.ListTileStyle)))(),
    BuildContextToListTileTheme: () => (T$.BuildContextToListTileTheme = dart.constFn(dart.fnType(list_tile.ListTileTheme, [framework.BuildContext])))(),
    ListTileControlAffinityL: () => (T$.ListTileControlAffinityL = dart.constFn(dart.legacy(list_tile.ListTileControlAffinity)))(),
    SyncIterableOfWidget: () => (T$.SyncIterableOfWidget = dart.constFn(_js_helper.SyncIterable$(framework.Widget)))(),
    _ListTileSlotL: () => (T$._ListTileSlotL = dart.constFn(dart.legacy(list_tile._ListTileSlot)))(),
    LinkedMapOf_ListTileSlot$Element: () => (T$.LinkedMapOf_ListTileSlot$Element = dart.constFn(_js_helper.LinkedMap$(list_tile._ListTileSlot, framework.Element)))(),
    LinkedMapOf_ListTileSlot$RenderBox: () => (T$.LinkedMapOf_ListTileSlot$RenderBox = dart.constFn(_js_helper.LinkedMap$(list_tile._ListTileSlot, box$.RenderBox)))(),
    SyncIterableOfRenderBox: () => (T$.SyncIterableOfRenderBox = dart.constFn(_js_helper.SyncIterable$(box$.RenderBox)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    RenderBoxN: () => (T$.RenderBoxN = dart.constFn(dart.nullable(box$.RenderBox)))(),
    RenderBoxNAndStringTovoid: () => (T$.RenderBoxNAndStringTovoid = dart.constFn(dart.fnType(dart.void, [T$.RenderBoxN(), core.String])))(),
    RenderBoxNTovoid: () => (T$.RenderBoxNTovoid = dart.constFn(dart.fnType(dart.void, [T$.RenderBoxN()])))(),
    BoxHitTestResultAndOffsetTobool: () => (T$.BoxHitTestResultAndOffsetTobool = dart.constFn(dart.fnType(core.bool, [box$.BoxHitTestResult, ui.Offset])))(),
    DrawerAlignmentL: () => (T$.DrawerAlignmentL = dart.constFn(dart.legacy(drawer.DrawerAlignment)))(),
    StateOfStatefulWidget: () => (T$.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T$.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T$.StateOfStatefulWidget())))(),
    AnimationOfdouble: () => (T$.AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble()])))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble(), framework.Widget])))(),
    DiagnosticsPropertyOfdouble: () => (T$.DiagnosticsPropertyOfdouble = dart.constFn(diagnostics.DiagnosticsProperty$(core.double)))(),
    DiagnosticsPropertyOfButtonTextTheme: () => (T$.DiagnosticsPropertyOfButtonTextTheme = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonTextTheme)))(),
    DiagnosticsPropertyOfBrightness: () => (T$.DiagnosticsPropertyOfBrightness = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Brightness)))(),
    DiagnosticsPropertyOfVisualDensity: () => (T$.DiagnosticsPropertyOfVisualDensity = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.VisualDensity)))(),
    DiagnosticsPropertyOfBorderSide: () => (T$.DiagnosticsPropertyOfBorderSide = dart.constFn(diagnostics.DiagnosticsProperty$(borders.BorderSide)))(),
    BuildContextAndWidgetNToRaisedButton: () => (T$.BuildContextAndWidgetNToRaisedButton = dart.constFn(dart.fnType(raised_button.RaisedButton, [framework.BuildContext, T$.WidgetN()])))(),
    ShapeBorderN: () => (T$.ShapeBorderN = dart.constFn(dart.nullable(borders.ShapeBorder)))(),
    DiagnosticsPropertyOfBoxConstraints: () => (T$.DiagnosticsPropertyOfBoxConstraints = dart.constFn(diagnostics.DiagnosticsProperty$(box$.BoxConstraints)))(),
    DiagnosticsPropertyOfBorderRadius: () => (T$.DiagnosticsPropertyOfBorderRadius = dart.constFn(diagnostics.DiagnosticsProperty$(border_radius.BorderRadius)))(),
    DiagnosticsPropertyOfTextStyle: () => (T$.DiagnosticsPropertyOfTextStyle = dart.constFn(diagnostics.DiagnosticsProperty$(text_style.TextStyle)))(),
    DiagnosticsPropertyOfInputDecorationTheme: () => (T$.DiagnosticsPropertyOfInputDecorationTheme = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.InputDecorationTheme)))(),
    TabBarIndicatorSizeL: () => (T$.TabBarIndicatorSizeL = dart.constFn(dart.legacy(tabs$.TabBarIndicatorSize)))(),
    JSArrayOfdouble: () => (T$.JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(core.double)))(),
    WidgetL: () => (T$.WidgetL = dart.constFn(dart.legacy(framework.Widget)))(),
    WidgetToGlobalKeyOfStateOfStatefulWidget: () => (T$.WidgetToGlobalKeyOfStateOfStatefulWidget = dart.constFn(dart.fnType(T$.GlobalKeyOfStateOfStatefulWidget(), [framework.Widget])))(),
    ListOfGlobalKeyOfStateOfStatefulWidget: () => (T$.ListOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(core.List$(T$.GlobalKeyOfStateOfStatefulWidget())))(),
    intToGlobalKeyOfStateOfStatefulWidget: () => (T$.intToGlobalKeyOfStateOfStatefulWidget = dart.constFn(dart.fnType(T$.GlobalKeyOfStateOfStatefulWidget(), [core.int])))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    ListOfWidget: () => (T$.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    NotificationListenerOfScrollNotification: () => (T$.NotificationListenerOfScrollNotification = dart.constFn(notification_listener.NotificationListener$(scroll_notification.ScrollNotification)))(),
    intToWidget: () => (T$.intToWidget = dart.constFn(dart.fnType(framework.Widget, [core.int])))(),
    BuildContextAndWidgetNToSemantics: () => (T$.BuildContextAndWidgetNToSemantics = dart.constFn(dart.fnType(basic.Semantics, [framework.BuildContext, T$.WidgetN()])))(),
    ColorNAndColorNAnddoubleToColorN: () => (T$.ColorNAndColorNAnddoubleToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.ColorN(), T$.ColorN(), core.double])))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfColorN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfColorN())))(),
    MaterialStatePropertyOfMouseCursorN: () => (T$.MaterialStatePropertyOfMouseCursorN = dart.constFn(material_state.MaterialStateProperty$(T$.MouseCursorN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfMouseCursorN())))(),
    SnackBarBehaviorL: () => (T$.SnackBarBehaviorL = dart.constFn(dart.legacy(snack_bar_theme.SnackBarBehavior)))(),
    DiagnosticsPropertyOfSnackBarBehavior: () => (T$.DiagnosticsPropertyOfSnackBarBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(snack_bar_theme.SnackBarBehavior)))(),
    ShowValueIndicatorL: () => (T$.ShowValueIndicatorL = dart.constFn(dart.legacy(slider_theme.ShowValueIndicator)))(),
    ThumbL: () => (T$.ThumbL = dart.constFn(dart.legacy(slider_theme.Thumb)))(),
    JSArrayOfObjectN: () => (T$.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T$.ObjectN())))(),
    DiagnosticsPropertyOfSliderComponentShape: () => (T$.DiagnosticsPropertyOfSliderComponentShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderComponentShape)))(),
    DiagnosticsPropertyOfSliderTickMarkShape: () => (T$.DiagnosticsPropertyOfSliderTickMarkShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderTickMarkShape)))(),
    DiagnosticsPropertyOfSliderTrackShape: () => (T$.DiagnosticsPropertyOfSliderTrackShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderTrackShape)))(),
    DiagnosticsPropertyOfRangeSliderTickMarkShape: () => (T$.DiagnosticsPropertyOfRangeSliderTickMarkShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderTickMarkShape)))(),
    DiagnosticsPropertyOfRangeSliderThumbShape: () => (T$.DiagnosticsPropertyOfRangeSliderThumbShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderThumbShape)))(),
    DiagnosticsPropertyOfRangeSliderTrackShape: () => (T$.DiagnosticsPropertyOfRangeSliderTrackShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderTrackShape)))(),
    DiagnosticsPropertyOfRangeSliderValueIndicatorShape: () => (T$.DiagnosticsPropertyOfRangeSliderValueIndicatorShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderValueIndicatorShape)))(),
    EnumPropertyOfShowValueIndicator: () => (T$.EnumPropertyOfShowValueIndicator = dart.constFn(diagnostics.EnumProperty$(slider_theme.ShowValueIndicator)))(),
    ThumbN: () => (T$.ThumbN = dart.constFn(dart.nullable(slider_theme.Thumb)))(),
    TextDirectionAndRangeValuesAnddouble__ToThumbN: () => (T$.TextDirectionAndRangeValuesAnddouble__ToThumbN = dart.constFn(dart.fnType(T$.ThumbN(), [ui.TextDirection, slider_theme.RangeValues, core.double, ui.Size, ui.Size, core.double])))(),
    DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN: () => (T$.DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.TextDirectionAndRangeValuesAnddouble__ToThumbN())))(),
    numN: () => (T$.numN = dart.constFn(dart.nullable(core.num)))(),
    numNAndnumNAnddoubleTodoubleN: () => (T$.numNAndnumNAnddoubleTodoubleN = dart.constFn(dart.fnType(T$.doubleN(), [T$.numN(), T$.numN(), core.double])))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfdoubleN())))(),
    DiagnosticsPropertyOfbool: () => (T$.DiagnosticsPropertyOfbool = dart.constFn(diagnostics.DiagnosticsProperty$(core.bool)))(),
    DiagnosticsPropertyOfRadius: () => (T$.DiagnosticsPropertyOfRadius = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Radius)))(),
    TweenOfOffset: () => (T$.TweenOfOffset = dart.constFn(tween.Tween$(ui.Offset)))(),
    BuildContextAndWidgetNToContainer: () => (T$.BuildContextAndWidgetNToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextAndWidgetNToFractionalTranslation: () => (T$.BuildContextAndWidgetNToFractionalTranslation = dart.constFn(dart.fnType(basic.FractionalTranslation, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextAndBoxConstraintsToAnimatedBuilder: () => (T$.BuildContextAndBoxConstraintsToAnimatedBuilder = dart.constFn(dart.fnType(transitions.AnimatedBuilder, [framework.BuildContext, box$.BoxConstraints])))(),
    BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition: () => (T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition = dart.constFn(dart.fnType(page_transitions_theme._ZoomEnterTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.WidgetN()])))(),
    BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition: () => (T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition = dart.constFn(dart.fnType(page_transitions_theme._ZoomExitTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.WidgetN()])))(),
    TweenSequenceItemOfdouble: () => (T$.TweenSequenceItemOfdouble = dart.constFn(tween_sequence.TweenSequenceItem$(core.double)))(),
    JSArrayOfTweenSequenceItemOfdouble: () => (T$.JSArrayOfTweenSequenceItemOfdouble = dart.constFn(_interceptors.JSArray$(T$.TweenSequenceItemOfdouble())))(),
    TweenSequenceOfdouble: () => (T$.TweenSequenceOfdouble = dart.constFn(tween_sequence.TweenSequence$(core.double)))(),
    TweenOfdoubleN: () => (T$.TweenOfdoubleN = dart.constFn(tween.Tween$(T$.doubleN())))(),
    PageTransitionsBuilderN: () => (T$.PageTransitionsBuilderN = dart.constFn(dart.nullable(page_transitions_theme.PageTransitionsBuilder)))(),
    TargetPlatformToPageTransitionsBuilderN: () => (T$.TargetPlatformToPageTransitionsBuilderN = dart.constFn(dart.fnType(T$.PageTransitionsBuilderN(), [platform$.TargetPlatform])))(),
    MapOfTargetPlatform$PageTransitionsBuilder: () => (T$.MapOfTargetPlatform$PageTransitionsBuilder = dart.constFn(core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)))(),
    DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder: () => (T$.DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MapOfTargetPlatform$PageTransitionsBuilder())))(),
    TargetPlatformL: () => (T$.TargetPlatformL = dart.constFn(dart.legacy(platform$.TargetPlatform)))(),
    PageTransitionsBuilderL: () => (T$.PageTransitionsBuilderL = dart.constFn(dart.legacy(page_transitions_theme.PageTransitionsBuilder)))(),
    ListOfAnimationController: () => (T$.ListOfAnimationController = dart.constFn(core.List$(animation_controller.AnimationController)))(),
    intToAnimationController: () => (T$.intToAnimationController = dart.constFn(dart.fnType(animation_controller.AnimationController, [core.int])))(),
    AnimationControllerToAnimationOfdouble: () => (T$.AnimationControllerToAnimationOfdouble = dart.constFn(dart.fnType(T$.AnimationOfdouble(), [animation_controller.AnimationController])))(),
    boolTovoid: () => (T$.boolTovoid = dart.constFn(dart.fnType(dart.void, [core.bool])))(),
    NavigationRailLabelTypeL: () => (T$.NavigationRailLabelTypeL = dart.constFn(dart.legacy(navigation_rail.NavigationRailLabelType)))(),
    DiagnosticsPropertyOfIconThemeData: () => (T$.DiagnosticsPropertyOfIconThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(icon_theme_data.IconThemeData)))(),
    DiagnosticsPropertyOfNavigationRailLabelType: () => (T$.DiagnosticsPropertyOfNavigationRailLabelType = dart.constFn(diagnostics.DiagnosticsProperty$(navigation_rail.NavigationRailLabelType)))(),
    JSArrayOfListenable: () => (T$.JSArrayOfListenable = dart.constFn(_interceptors.JSArray$(change_notifier.Listenable)))(),
    FloatingLabelBehaviorL: () => (T$.FloatingLabelBehaviorL = dart.constFn(dart.legacy(input_decorator.FloatingLabelBehavior)))(),
    _DecorationSlotL: () => (T$._DecorationSlotL = dart.constFn(dart.legacy(input_decorator._DecorationSlot)))(),
    LinkedMapOf_DecorationSlot$RenderBox: () => (T$.LinkedMapOf_DecorationSlot$RenderBox = dart.constFn(_js_helper.LinkedMap$(input_decorator._DecorationSlot, box$.RenderBox)))(),
    LinkedMapOfRenderBoxN$double: () => (T$.LinkedMapOfRenderBoxN$double = dart.constFn(_js_helper.LinkedMap$(T$.RenderBoxN(), core.double)))(),
    JSArrayOfRenderBoxN: () => (T$.JSArrayOfRenderBoxN = dart.constFn(_interceptors.JSArray$(T$.RenderBoxN())))(),
    RenderBoxAnddoubleTodouble: () => (T$.RenderBoxAnddoubleTodouble = dart.constFn(dart.fnType(core.double, [box$.RenderBox, core.double])))(),
    LinkedMapOf_DecorationSlot$Element: () => (T$.LinkedMapOf_DecorationSlot$Element = dart.constFn(_js_helper.LinkedMap$(input_decorator._DecorationSlot, framework.Element)))(),
    DiagnosticsPropertyOfInputDecoration: () => (T$.DiagnosticsPropertyOfInputDecoration = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.InputDecoration)))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    DiagnosticsPropertyOfFloatingLabelBehavior: () => (T$.DiagnosticsPropertyOfFloatingLabelBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.FloatingLabelBehavior)))(),
    DiagnosticsPropertyOfInputBorder: () => (T$.DiagnosticsPropertyOfInputBorder = dart.constFn(diagnostics.DiagnosticsProperty$(input_border.InputBorder)))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfTextStyleN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfEdgeInsetsGeometryN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfSizeN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfSizeN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfBorderSideN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfOutlinedBorderN())))(),
    EnumPropertyOfMaterialTapTargetSize: () => (T$.EnumPropertyOfMaterialTapTargetSize = dart.constFn(diagnostics.EnumProperty$(theme_data.MaterialTapTargetSize)))(),
    DiagnosticsPropertyOfDuration: () => (T$.DiagnosticsPropertyOfDuration = dart.constFn(diagnostics.DiagnosticsProperty$(core.Duration)))(),
    DiagnosticsPropertyOfAlignmentGeometry: () => (T$.DiagnosticsPropertyOfAlignmentGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(alignment.AlignmentGeometry)))(),
    TextStyleNAndTextStyleNAnddoubleToTextStyleN: () => (T$.TextStyleNAndTextStyleNAnddoubleToTextStyleN = dart.constFn(dart.fnType(T$.TextStyleN(), [T$.TextStyleN(), T$.TextStyleN(), core.double])))(),
    EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN: () => (T$.EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN = dart.constFn(dart.fnType(T$.EdgeInsetsGeometryN(), [T$.EdgeInsetsGeometryN(), T$.EdgeInsetsGeometryN(), core.double])))(),
    SizeNAndSizeNAnddoubleToSizeN: () => (T$.SizeNAndSizeNAnddoubleToSizeN = dart.constFn(dart.fnType(T$.SizeN(), [T$.SizeN(), T$.SizeN(), core.double])))(),
    DiagnosticsPropertyOfDecoration: () => (T$.DiagnosticsPropertyOfDecoration = dart.constFn(diagnostics.DiagnosticsProperty$(decoration.Decoration)))(),
    EnumPropertyOfBrightness: () => (T$.EnumPropertyOfBrightness = dart.constFn(diagnostics.EnumProperty$(ui.Brightness)))(),
    DiagnosticsPropertyOfClip: () => (T$.DiagnosticsPropertyOfClip = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Clip)))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    PointerEnterEventTovoid: () => (T$.PointerEnterEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerEnterEvent])))(),
    PointerExitEventTovoid: () => (T$.PointerExitEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerExitEvent])))(),
    IterablePropertyOfString: () => (T$.IterablePropertyOfString = dart.constFn(diagnostics.IterableProperty$(core.String)))(),
    DiagnosticsPropertyOfMouseCursor: () => (T$.DiagnosticsPropertyOfMouseCursor = dart.constFn(diagnostics.DiagnosticsProperty$(mouse_cursor.MouseCursor)))(),
    DiagnosticsPropertyOfBoxShape: () => (T$.DiagnosticsPropertyOfBoxShape = dart.constFn(diagnostics.DiagnosticsProperty$(box_border.BoxShape)))(),
    _HighlightTypeL: () => (T$._HighlightTypeL = dart.constFn(dart.legacy(ink_well._HighlightType)))(),
    InkHighlightN: () => (T$.InkHighlightN = dart.constFn(dart.nullable(ink_highlight.InkHighlight)))(),
    LinkedMapOf_HighlightType$InkHighlightN: () => (T$.LinkedMapOf_HighlightType$InkHighlightN = dart.constFn(_js_helper.LinkedMap$(ink_well._HighlightType, T$.InkHighlightN())))(),
    ObserverListOf_ParentInkResponseState: () => (T$.ObserverListOf_ParentInkResponseState = dart.constFn(observer_list.ObserverList$(ink_well._ParentInkResponseState)))(),
    CallbackActionOfActivateIntent: () => (T$.CallbackActionOfActivateIntent = dart.constFn(actions.CallbackAction$(actions.ActivateIntent)))(),
    CallbackActionOfButtonActivateIntent: () => (T$.CallbackActionOfButtonActivateIntent = dart.constFn(actions.CallbackAction$(actions.ButtonActivateIntent)))(),
    ActionOfIntent: () => (T$.ActionOfIntent = dart.constFn(actions.Action$(actions.Intent)))(),
    LinkedMapOfType$ActionOfIntent: () => (T$.LinkedMapOfType$ActionOfIntent = dart.constFn(_js_helper.LinkedMap$(core.Type, T$.ActionOfIntent())))(),
    InkHighlightNTobool: () => (T$.InkHighlightNTobool = dart.constFn(dart.fnType(core.bool, [T$.InkHighlightN()])))(),
    MaterialStateL: () => (T$.MaterialStateL = dart.constFn(dart.legacy(material_state.MaterialState)))(),
    _HashSetOfInteractiveInkFeature: () => (T$._HashSetOfInteractiveInkFeature = dart.constFn(collection._HashSet$(ink_well.InteractiveInkFeature)))(),
    BottomNavigationBarTypeL: () => (T$.BottomNavigationBarTypeL = dart.constFn(dart.legacy(bottom_navigation_bar.BottomNavigationBarType)))(),
    BottomNavigationBarItemTobool: () => (T$.BottomNavigationBarItemTobool = dart.constFn(dart.fnType(core.bool, [bottom_navigation_bar_item.BottomNavigationBarItem])))(),
    JSArrayOfAnimationController: () => (T$.JSArrayOfAnimationController = dart.constFn(_interceptors.JSArray$(animation_controller.AnimationController)))(),
    ListQueueOf_Circle: () => (T$.ListQueueOf_Circle = dart.constFn(collection.ListQueue$(bottom_navigation_bar._Circle)))(),
    ListOfCurvedAnimation: () => (T$.ListOfCurvedAnimation = dart.constFn(core.List$(animations.CurvedAnimation)))(),
    intToCurvedAnimation: () => (T$.intToCurvedAnimation = dart.constFn(dart.fnType(animations.CurvedAnimation, [core.int])))(),
    doubleAnddoubleTodouble: () => (T$.doubleAnddoubleTodouble = dart.constFn(dart.fnType(core.double, [core.double, core.double])))(),
    IterableOfAnimationOfdouble: () => (T$.IterableOfAnimationOfdouble = dart.constFn(core.Iterable$(T$.AnimationOfdouble())))(),
    IterableOfAnimationOfdoubleTodouble: () => (T$.IterableOfAnimationOfdoubleTodouble = dart.constFn(dart.fnType(core.double, [T$.IterableOfAnimationOfdouble()])))(),
    DiagnosticsPropertyOfBottomNavigationBarType: () => (T$.DiagnosticsPropertyOfBottomNavigationBarType = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_navigation_bar.BottomNavigationBarType)))(),
    DiagnosticsPropertyOfNotchedShape: () => (T$.DiagnosticsPropertyOfNotchedShape = dart.constFn(diagnostics.DiagnosticsProperty$(notched_shapes.NotchedShape)))(),
    MaterialTapTargetSizeL: () => (T$.MaterialTapTargetSizeL = dart.constFn(dart.legacy(theme_data.MaterialTapTargetSize)))(),
    VoidToThemeData: () => (T$.VoidToThemeData = dart.constFn(dart.fnType(theme_data.ThemeData, [])))(),
    EnumPropertyOfTargetPlatform: () => (T$.EnumPropertyOfTargetPlatform = dart.constFn(diagnostics.EnumProperty$(platform$.TargetPlatform)))(),
    DiagnosticsPropertyOfButtonThemeData: () => (T$.DiagnosticsPropertyOfButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonThemeData)))(),
    DiagnosticsPropertyOfToggleButtonsThemeData: () => (T$.DiagnosticsPropertyOfToggleButtonsThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(toggle_buttons_theme.ToggleButtonsThemeData)))(),
    DiagnosticsPropertyOfTextTheme: () => (T$.DiagnosticsPropertyOfTextTheme = dart.constFn(diagnostics.DiagnosticsProperty$(text_theme.TextTheme)))(),
    DiagnosticsPropertyOfSliderThemeData: () => (T$.DiagnosticsPropertyOfSliderThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderThemeData)))(),
    DiagnosticsPropertyOfTabBarTheme: () => (T$.DiagnosticsPropertyOfTabBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(tab_bar_theme.TabBarTheme)))(),
    DiagnosticsPropertyOfTooltipThemeData: () => (T$.DiagnosticsPropertyOfTooltipThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(tooltip_theme.TooltipThemeData)))(),
    DiagnosticsPropertyOfCardTheme: () => (T$.DiagnosticsPropertyOfCardTheme = dart.constFn(diagnostics.DiagnosticsProperty$(card_theme.CardTheme)))(),
    DiagnosticsPropertyOfChipThemeData: () => (T$.DiagnosticsPropertyOfChipThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(chip_theme.ChipThemeData)))(),
    DiagnosticsPropertyOfPageTransitionsTheme: () => (T$.DiagnosticsPropertyOfPageTransitionsTheme = dart.constFn(diagnostics.DiagnosticsProperty$(page_transitions_theme.PageTransitionsTheme)))(),
    DiagnosticsPropertyOfAppBarTheme: () => (T$.DiagnosticsPropertyOfAppBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(app_bar_theme.AppBarTheme)))(),
    DiagnosticsPropertyOfScrollbarThemeData: () => (T$.DiagnosticsPropertyOfScrollbarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(scrollbar_theme.ScrollbarThemeData)))(),
    DiagnosticsPropertyOfBottomAppBarTheme: () => (T$.DiagnosticsPropertyOfBottomAppBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_app_bar_theme.BottomAppBarTheme)))(),
    DiagnosticsPropertyOfColorScheme: () => (T$.DiagnosticsPropertyOfColorScheme = dart.constFn(diagnostics.DiagnosticsProperty$(color_scheme.ColorScheme)))(),
    DiagnosticsPropertyOfDialogTheme: () => (T$.DiagnosticsPropertyOfDialogTheme = dart.constFn(diagnostics.DiagnosticsProperty$(dialog_theme.DialogTheme)))(),
    DiagnosticsPropertyOfFloatingActionButtonThemeData: () => (T$.DiagnosticsPropertyOfFloatingActionButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(floating_action_button_theme.FloatingActionButtonThemeData)))(),
    DiagnosticsPropertyOfNavigationRailThemeData: () => (T$.DiagnosticsPropertyOfNavigationRailThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(navigation_rail_theme.NavigationRailThemeData)))(),
    DiagnosticsPropertyOfTypography: () => (T$.DiagnosticsPropertyOfTypography = dart.constFn(diagnostics.DiagnosticsProperty$(typography$.Typography)))(),
    DiagnosticsPropertyOfNoDefaultCupertinoThemeData: () => (T$.DiagnosticsPropertyOfNoDefaultCupertinoThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(theme.NoDefaultCupertinoThemeData)))(),
    DiagnosticsPropertyOfSnackBarThemeData: () => (T$.DiagnosticsPropertyOfSnackBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(snack_bar_theme.SnackBarThemeData)))(),
    DiagnosticsPropertyOfBottomSheetThemeData: () => (T$.DiagnosticsPropertyOfBottomSheetThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_sheet_theme.BottomSheetThemeData)))(),
    DiagnosticsPropertyOfPopupMenuThemeData: () => (T$.DiagnosticsPropertyOfPopupMenuThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(popup_menu_theme.PopupMenuThemeData)))(),
    DiagnosticsPropertyOfMaterialBannerThemeData: () => (T$.DiagnosticsPropertyOfMaterialBannerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(banner_theme.MaterialBannerThemeData)))(),
    DiagnosticsPropertyOfDividerThemeData: () => (T$.DiagnosticsPropertyOfDividerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(divider_theme.DividerThemeData)))(),
    DiagnosticsPropertyOfButtonBarThemeData: () => (T$.DiagnosticsPropertyOfButtonBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(button_bar_theme.ButtonBarThemeData)))(),
    DiagnosticsPropertyOfTimePickerThemeData: () => (T$.DiagnosticsPropertyOfTimePickerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(time_picker_theme.TimePickerThemeData)))(),
    DiagnosticsPropertyOfTextSelectionThemeData: () => (T$.DiagnosticsPropertyOfTextSelectionThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(text_selection_theme.TextSelectionThemeData)))(),
    DiagnosticsPropertyOfBottomNavigationBarThemeData: () => (T$.DiagnosticsPropertyOfBottomNavigationBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_navigation_bar_theme.BottomNavigationBarThemeData)))(),
    DiagnosticsPropertyOfTextButtonThemeData: () => (T$.DiagnosticsPropertyOfTextButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(text_button_theme.TextButtonThemeData)))(),
    DiagnosticsPropertyOfElevatedButtonThemeData: () => (T$.DiagnosticsPropertyOfElevatedButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(elevated_button_theme.ElevatedButtonThemeData)))(),
    DiagnosticsPropertyOfOutlinedButtonThemeData: () => (T$.DiagnosticsPropertyOfOutlinedButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(outlined_button_theme.OutlinedButtonThemeData)))(),
    DiagnosticsPropertyOfDataTableThemeData: () => (T$.DiagnosticsPropertyOfDataTableThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(data_table_theme.DataTableThemeData)))(),
    DiagnosticsPropertyOfCheckboxThemeData: () => (T$.DiagnosticsPropertyOfCheckboxThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(checkbox_theme.CheckboxThemeData)))(),
    DiagnosticsPropertyOfRadioThemeData: () => (T$.DiagnosticsPropertyOfRadioThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(radio_theme.RadioThemeData)))(),
    DiagnosticsPropertyOfSwitchThemeData: () => (T$.DiagnosticsPropertyOfSwitchThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(switch_theme.SwitchThemeData)))(),
    _FifoCacheOf_IdentityThemeDataCacheKey$ThemeData: () => (T$._FifoCacheOf_IdentityThemeDataCacheKey$ThemeData = dart.constFn(theme_data._FifoCache$(theme_data._IdentityThemeDataCacheKey, theme_data.ThemeData)))(),
    intL: () => (T$.intL = dart.constFn(dart.legacy(core.int)))(),
    ColorL: () => (T$.ColorL = dart.constFn(dart.legacy(ui.Color)))(),
    ButtonTextThemeL: () => (T$.ButtonTextThemeL = dart.constFn(dart.legacy(button_theme.ButtonTextTheme)))(),
    ButtonBarLayoutBehaviorL: () => (T$.ButtonBarLayoutBehaviorL = dart.constFn(dart.legacy(button_theme.ButtonBarLayoutBehavior)))(),
    EnumPropertyOfButtonTextTheme: () => (T$.EnumPropertyOfButtonTextTheme = dart.constFn(diagnostics.EnumProperty$(button_theme.ButtonTextTheme)))(),
    DiagnosticsPropertyOfMainAxisAlignment: () => (T$.DiagnosticsPropertyOfMainAxisAlignment = dart.constFn(diagnostics.DiagnosticsProperty$(flex.MainAxisAlignment)))(),
    DiagnosticsPropertyOfMainAxisSize: () => (T$.DiagnosticsPropertyOfMainAxisSize = dart.constFn(diagnostics.DiagnosticsProperty$(flex.MainAxisSize)))(),
    DiagnosticsPropertyOfButtonBarLayoutBehavior: () => (T$.DiagnosticsPropertyOfButtonBarLayoutBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonBarLayoutBehavior)))(),
    DiagnosticsPropertyOfVerticalDirection: () => (T$.DiagnosticsPropertyOfVerticalDirection = dart.constFn(diagnostics.DiagnosticsProperty$(basic_types.VerticalDirection)))(),
    WidgetToPadding: () => (T$.WidgetToPadding = dart.constFn(dart.fnType(basic.Padding, [framework.Widget])))(),
    NotificationListenerOfDraggableScrollableNotification: () => (T$.NotificationListenerOfDraggableScrollableNotification = dart.constFn(notification_listener.NotificationListener$(draggable_scrollable_sheet.DraggableScrollableNotification)))(),
    _ScaffoldSlotL: () => (T$._ScaffoldSlotL = dart.constFn(dart.legacy(scaffold$._ScaffoldSlot)))(),
    _HashSetOfScaffoldState: () => (T$._HashSetOfScaffoldState = dart.constFn(collection._HashSet$(scaffold$.ScaffoldState)))(),
    ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason)))(),
    ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(collection.ListQueue$(T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason())))(),
    VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(dart.fnType(T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason(), [])))(),
    ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic: () => (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()])))(),
    CompleterOfSnackBarClosedReason: () => (T$.CompleterOfSnackBarClosedReason = dart.constFn(async.Completer$(snack_bar.SnackBarClosedReason)))(),
    voidToNull: () => (T$.voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))(),
    BuildContextAndBoxConstraintsToMediaQuery: () => (T$.BuildContextAndBoxConstraintsToMediaQuery = dart.constFn(dart.fnType(media_query.MediaQuery, [framework.BuildContext, box$.BoxConstraints])))(),
    RectTodynamic: () => (T$.RectTodynamic = dart.constFn(dart.fnType(dart.dynamic, [ui.Rect])))(),
    AnimationMinOfdouble: () => (T$.AnimationMinOfdouble = dart.constFn(animations.AnimationMin$(core.double)))(),
    GlobalKeyOfDrawerControllerState: () => (T$.GlobalKeyOfDrawerControllerState = dart.constFn(framework.GlobalKey$(drawer.DrawerControllerState)))(),
    JSArrayOf_StandardBottomSheet: () => (T$.JSArrayOf_StandardBottomSheet = dart.constFn(_interceptors.JSArray$(scaffold$._StandardBottomSheet)))(),
    DraggableScrollableNotificationTobool: () => (T$.DraggableScrollableNotificationTobool = dart.constFn(dart.fnType(core.bool, [draggable_scrollable_sheet.DraggableScrollableNotification])))(),
    FnTovoid: () => (T$.FnTovoid = dart.constFn(dart.fnType(dart.void, [T$.VoidTovoid()])))(),
    BuildContextAndFnToWidget: () => (T$.BuildContextAndFnToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.FnTovoid()])))(),
    BuildContextToNotificationListenerOfDraggableScrollableNotification: () => (T$.BuildContextToNotificationListenerOfDraggableScrollableNotification = dart.constFn(dart.fnType(T$.NotificationListenerOfDraggableScrollableNotification(), [framework.BuildContext])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    GlobalKeyOf_StandardBottomSheetState: () => (T$.GlobalKeyOf_StandardBottomSheetState = dart.constFn(framework.GlobalKey$(scaffold$._StandardBottomSheetState)))(),
    VoidTo_StandardBottomSheet: () => (T$.VoidTo_StandardBottomSheet = dart.constFn(dart.fnType(scaffold$._StandardBottomSheet, [])))(),
    _StandardBottomSheetTodynamic: () => (T$._StandardBottomSheetTodynamic = dart.constFn(dart.fnType(dart.dynamic, [scaffold$._StandardBottomSheet])))(),
    JSArrayOfLayoutId: () => (T$.JSArrayOfLayoutId = dart.constFn(_interceptors.JSArray$(basic.LayoutId)))(),
    BuildContextAndWidgetNToCustomMultiChildLayout: () => (T$.BuildContextAndWidgetNToCustomMultiChildLayout = dart.constFn(dart.fnType(basic.CustomMultiChildLayout, [framework.BuildContext, T$.WidgetN()])))(),
    MaterialTypeL: () => (T$.MaterialTypeL = dart.constFn(dart.legacy(material.MaterialType)))(),
    EnumPropertyOfMaterialType: () => (T$.EnumPropertyOfMaterialType = dart.constFn(diagnostics.EnumProperty$(material.MaterialType)))(),
    DiagnosticsPropertyOfBorderRadiusGeometry: () => (T$.DiagnosticsPropertyOfBorderRadiusGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(border_radius.BorderRadiusGeometry)))(),
    NotificationListenerOfLayoutChangedNotification: () => (T$.NotificationListenerOfLayoutChangedNotification = dart.constFn(notification_listener.NotificationListener$(notification_listener.LayoutChangedNotification)))(),
    LayoutChangedNotificationTobool: () => (T$.LayoutChangedNotificationTobool = dart.constFn(dart.fnType(core.bool, [notification_listener.LayoutChangedNotification])))(),
    JSArrayOfInkFeature: () => (T$.JSArrayOfInkFeature = dart.constFn(_interceptors.JSArray$(material.InkFeature)))(),
    dynamicToTweenOfdouble: () => (T$.dynamicToTweenOfdouble = dart.constFn(dart.fnType(T$.TweenOfdouble(), [dart.dynamic])))(),
    TweenNOfdouble: () => (T$.TweenNOfdouble = dart.constFn(dart.nullable(T$.TweenOfdouble())))(),
    dynamicToColorTween: () => (T$.dynamicToColorTween = dart.constFn(dart.fnType(tween.ColorTween, [dart.dynamic])))(),
    ColorTweenN: () => (T$.ColorTweenN = dart.constFn(dart.nullable(tween.ColorTween)))(),
    dynamicToShapeBorderTween: () => (T$.dynamicToShapeBorderTween = dart.constFn(dart.fnType(material.ShapeBorderTween, [dart.dynamic])))(),
    ShapeBorderTweenN: () => (T$.ShapeBorderTweenN = dart.constFn(dart.nullable(material.ShapeBorderTween)))(),
    BorderRadiusN: () => (T$.BorderRadiusN = dart.constFn(dart.nullable(border_radius.BorderRadius)))(),
    LinkedMapOfMaterialType$BorderRadiusN: () => (T$.LinkedMapOfMaterialType$BorderRadiusN = dart.constFn(_js_helper.LinkedMap$(material.MaterialType, T$.BorderRadiusN())))(),
    SynchronousFutureOfMaterialLocalizations: () => (T$.SynchronousFutureOfMaterialLocalizations = dart.constFn(synchronous_future.SynchronousFuture$(material_localizations.MaterialLocalizations)))(),
    DiagnosticsPropertyOfThemeData: () => (T$.DiagnosticsPropertyOfThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.ThemeData)))(),
    dynamicToThemeDataTween: () => (T$.dynamicToThemeDataTween = dart.constFn(dart.fnType(theme$.ThemeDataTween, [dart.dynamic])))(),
    DiagnosticsPropertyOfThemeDataTween: () => (T$.DiagnosticsPropertyOfThemeDataTween = dart.constFn(diagnostics.DiagnosticsProperty$(theme$.ThemeDataTween)))(),
    AnnotatedRegionOfSystemUiOverlayStyle: () => (T$.AnnotatedRegionOfSystemUiOverlayStyle = dart.constFn(annotated_region.AnnotatedRegion$(system_chrome.SystemUiOverlayStyle)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T$);
  var S = {
    iconSize: dart.privateName(icon_button, "IconButton.iconSize"),
    visualDensity: dart.privateName(icon_button, "IconButton.visualDensity"),
    padding: dart.privateName(icon_button, "IconButton.padding"),
    alignment: dart.privateName(icon_button, "IconButton.alignment"),
    splashRadius: dart.privateName(icon_button, "IconButton.splashRadius"),
    icon: dart.privateName(icon_button, "IconButton.icon"),
    focusColor: dart.privateName(icon_button, "IconButton.focusColor"),
    hoverColor: dart.privateName(icon_button, "IconButton.hoverColor"),
    color: dart.privateName(icon_button, "IconButton.color"),
    splashColor: dart.privateName(icon_button, "IconButton.splashColor"),
    highlightColor: dart.privateName(icon_button, "IconButton.highlightColor"),
    disabledColor: dart.privateName(icon_button, "IconButton.disabledColor"),
    onPressed: dart.privateName(icon_button, "IconButton.onPressed"),
    mouseCursor: dart.privateName(icon_button, "IconButton.mouseCursor"),
    focusNode: dart.privateName(icon_button, "IconButton.focusNode"),
    autofocus: dart.privateName(icon_button, "IconButton.autofocus"),
    tooltip: dart.privateName(icon_button, "IconButton.tooltip"),
    enableFeedback: dart.privateName(icon_button, "IconButton.enableFeedback"),
    constraints: dart.privateName(icon_button, "IconButton.constraints"),
    EdgeInsets_bottom: dart.privateName(edge_insets, "EdgeInsets.bottom"),
    EdgeInsets_right: dart.privateName(edge_insets, "EdgeInsets.right"),
    EdgeInsets_top: dart.privateName(edge_insets, "EdgeInsets.top"),
    EdgeInsets_left: dart.privateName(edge_insets, "EdgeInsets.left"),
    Alignment_y: dart.privateName(alignment, "Alignment.y"),
    Alignment_x: dart.privateName(alignment, "Alignment.x"),
    SystemMouseCursor_kind: dart.privateName(mouse_cursor, "SystemMouseCursor.kind"),
    BoxConstraints_maxHeight: dart.privateName(box$, "BoxConstraints.maxHeight"),
    BoxConstraints_minHeight: dart.privateName(box$, "BoxConstraints.minHeight"),
    BoxConstraints_maxWidth: dart.privateName(box$, "BoxConstraints.maxWidth"),
    BoxConstraints_minWidth: dart.privateName(box$, "BoxConstraints.minWidth"),
    _Location_parameterLocations: dart.privateName(widget_inspector, "_Location.parameterLocations"),
    _Location_name: dart.privateName(widget_inspector, "_Location.name"),
    _Location_column: dart.privateName(widget_inspector, "_Location.column"),
    _Location_line: dart.privateName(widget_inspector, "_Location.line"),
    _Location_file: dart.privateName(widget_inspector, "_Location.file"),
    _name: dart.privateName(platform$, "_name"),
    color$1: dart.privateName(back_button, "BackButton.color"),
    onPressed$1: dart.privateName(back_button, "BackButton.onPressed"),
    Widget__location: dart.privateName(framework, "Widget._location"),
    Widget_key: dart.privateName(framework, "Widget.key"),
    color$2: dart.privateName(back_button, "CloseButton.color"),
    onPressed$2: dart.privateName(back_button, "CloseButton.onPressed"),
    Icon_textDirection: dart.privateName(icon, "Icon.textDirection"),
    Icon_semanticLabel: dart.privateName(icon, "Icon.semanticLabel"),
    Icon_color: dart.privateName(icon, "Icon.color"),
    Icon_size: dart.privateName(icon, "Icon.size"),
    IconData_matchTextDirection: dart.privateName(icon_data, "IconData.matchTextDirection"),
    IconData_fontPackage: dart.privateName(icon_data, "IconData.fontPackage"),
    IconData_fontFamily: dart.privateName(icon_data, "IconData.fontFamily"),
    IconData_codePoint: dart.privateName(icon_data, "IconData.codePoint"),
    Icon_icon: dart.privateName(icon, "Icon.icon"),
    _name$1: dart.privateName(time, "_name"),
    hour: dart.privateName(time, "TimeOfDay.hour"),
    minute: dart.privateName(time, "TimeOfDay.minute"),
    $toString: dartx.toString,
    __InkRipple__radius: dart.privateName(ink_ripple, "_#InkRipple#_radius"),
    __InkRipple__radius_isSet: dart.privateName(ink_ripple, "_#InkRipple#_radius#isSet"),
    __InkRipple__radiusController: dart.privateName(ink_ripple, "_#InkRipple#_radiusController"),
    __InkRipple__radiusController_isSet: dart.privateName(ink_ripple, "_#InkRipple#_radiusController#isSet"),
    __InkRipple__fadeIn: dart.privateName(ink_ripple, "_#InkRipple#_fadeIn"),
    __InkRipple__fadeIn_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeIn#isSet"),
    __InkRipple__fadeInController: dart.privateName(ink_ripple, "_#InkRipple#_fadeInController"),
    __InkRipple__fadeInController_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeInController#isSet"),
    __InkRipple__fadeOut: dart.privateName(ink_ripple, "_#InkRipple#_fadeOut"),
    __InkRipple__fadeOut_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeOut#isSet"),
    __InkRipple__fadeOutController: dart.privateName(ink_ripple, "_#InkRipple#_fadeOutController"),
    __InkRipple__fadeOutController_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeOutController#isSet"),
    _position: dart.privateName(ink_ripple, "_position"),
    _borderRadius: dart.privateName(ink_ripple, "_borderRadius"),
    _customBorder: dart.privateName(ink_ripple, "_customBorder"),
    _textDirection: dart.privateName(ink_ripple, "_textDirection"),
    _targetRadius: dart.privateName(ink_ripple, "_targetRadius"),
    _clipCallback: dart.privateName(ink_ripple, "_clipCallback"),
    _fadeInController: dart.privateName(ink_ripple, "_fadeInController"),
    _fadeIn: dart.privateName(ink_ripple, "_fadeIn"),
    _radiusController: dart.privateName(ink_ripple, "_radiusController"),
    _radius: dart.privateName(ink_ripple, "_radius"),
    _fadeOutController: dart.privateName(ink_ripple, "_fadeOutController"),
    _handleAlphaStatusChanged: dart.privateName(ink_ripple, "_handleAlphaStatusChanged"),
    _fadeOut: dart.privateName(ink_ripple, "_fadeOut"),
    _color: dart.privateName(ink_well, "_color"),
    Radius_y: dart.privateName(ui, "Radius.y"),
    Radius_x: dart.privateName(ui, "Radius.x"),
    BorderRadius_bottomRight: dart.privateName(border_radius, "BorderRadius.bottomRight"),
    BorderRadius_bottomLeft: dart.privateName(border_radius, "BorderRadius.bottomLeft"),
    BorderRadius_topRight: dart.privateName(border_radius, "BorderRadius.topRight"),
    BorderRadius_topLeft: dart.privateName(border_radius, "BorderRadius.topLeft"),
    referenceBox: dart.privateName(material, "InkFeature.referenceBox"),
    onRemoved: dart.privateName(material, "InkFeature.onRemoved"),
    _debugDisposed: dart.privateName(material, "_debugDisposed"),
    _controller: dart.privateName(material, "_controller"),
    _removeFeature: dart.privateName(material, "_removeFeature"),
    $add: dartx.add,
    $length: dartx.length,
    $_get: dartx._get,
    _paint: dart.privateName(material, "_paint"),
    Interval_curve: dart.privateName(curves, "Interval.curve"),
    Interval_end: dart.privateName(curves, "Interval.end"),
    Interval_begin: dart.privateName(curves, "Interval.begin"),
    Duration__duration: dart.privateName(core, "Duration._duration"),
    onPressed$3: dart.privateName(button_style_button, "ButtonStyleButton.onPressed"),
    onLongPress: dart.privateName(button_style_button, "ButtonStyleButton.onLongPress"),
    style: dart.privateName(button_style_button, "ButtonStyleButton.style"),
    clipBehavior: dart.privateName(button_style_button, "ButtonStyleButton.clipBehavior"),
    focusNode$1: dart.privateName(button_style_button, "ButtonStyleButton.focusNode"),
    autofocus$1: dart.privateName(button_style_button, "ButtonStyleButton.autofocus"),
    child: dart.privateName(button_style_button, "ButtonStyleButton.child"),
    _controller$1: dart.privateName(button_style_button, "_controller"),
    _elevation: dart.privateName(button_style_button, "_elevation"),
    _backgroundColor: dart.privateName(button_style_button, "_backgroundColor"),
    _states: dart.privateName(button_style_button, "_states"),
    _hovered: dart.privateName(button_style_button, "_hovered"),
    _focused: dart.privateName(button_style_button, "_focused"),
    _pressed: dart.privateName(button_style_button, "_pressed"),
    _disabled: dart.privateName(button_style_button, "_disabled"),
    _updateState: dart.privateName(button_style_button, "_updateState"),
    _handleHighlightChanged: dart.privateName(button_style_button, "_handleHighlightChanged"),
    _handleHoveredChanged: dart.privateName(button_style_button, "_handleHoveredChanged"),
    _handleFocusedChanged: dart.privateName(button_style_button, "_handleFocusedChanged"),
    _name$2: dart.privateName(theme_data, "_name"),
    resolveCallback: dart.privateName(button_style_button, "_MouseCursor.resolveCallback"),
    minSize: dart.privateName(button_style_button, "_InputPadding.minSize"),
    _minSize: dart.privateName(button_style_button, "_minSize"),
    _computeSize: dart.privateName(button_style_button, "_computeSize"),
    _name$3: dart.privateName(ui, "_name"),
    OffsetBase__dy: dart.privateName(ui, "OffsetBase._dy"),
    OffsetBase__dx: dart.privateName(ui, "OffsetBase._dx"),
    _name$4: dart.privateName(borders, "_name"),
    BorderSide_style: dart.privateName(borders, "BorderSide.style"),
    BorderSide_width: dart.privateName(borders, "BorderSide.width"),
    Color_value: dart.privateName(ui, "Color.value"),
    BorderSide_color: dart.privateName(borders, "BorderSide.color"),
    OutlinedBorder_side: dart.privateName(borders, "OutlinedBorder.side"),
    RoundedRectangleBorder_borderRadius: dart.privateName(rounded_rectangle_border, "RoundedRectangleBorder.borderRadius"),
    label: dart.privateName(text_button, "_TextButtonWithIconChild.label"),
    icon$1: dart.privateName(text_button, "_TextButtonWithIconChild.icon"),
    _name$5: dart.privateName(snack_bar, "_name"),
    textColor: dart.privateName(snack_bar, "SnackBarAction.textColor"),
    disabledTextColor: dart.privateName(snack_bar, "SnackBarAction.disabledTextColor"),
    label$1: dart.privateName(snack_bar, "SnackBarAction.label"),
    onPressed$4: dart.privateName(snack_bar, "SnackBarAction.onPressed"),
    _haveTriggeredAction: dart.privateName(snack_bar, "_haveTriggeredAction"),
    _handlePressed: dart.privateName(snack_bar, "_handlePressed"),
    content: dart.privateName(snack_bar, "SnackBar.content"),
    backgroundColor: dart.privateName(snack_bar, "SnackBar.backgroundColor"),
    elevation: dart.privateName(snack_bar, "SnackBar.elevation"),
    margin: dart.privateName(snack_bar, "SnackBar.margin"),
    padding$1: dart.privateName(snack_bar, "SnackBar.padding"),
    width: dart.privateName(snack_bar, "SnackBar.width"),
    shape: dart.privateName(snack_bar, "SnackBar.shape"),
    behavior: dart.privateName(snack_bar, "SnackBar.behavior"),
    action: dart.privateName(snack_bar, "SnackBar.action"),
    duration: dart.privateName(snack_bar, "SnackBar.duration"),
    animation: dart.privateName(snack_bar, "SnackBar.animation"),
    onVisible: dart.privateName(snack_bar, "SnackBar.onVisible"),
    _wasVisible: dart.privateName(snack_bar, "_wasVisible"),
    _onAnimationStatusChanged: dart.privateName(snack_bar, "_onAnimationStatusChanged"),
    _name$6: dart.privateName(animation, "_name"),
    Threshold_threshold: dart.privateName(curves, "Threshold.threshold"),
    ValueKey_value: dart.privateName(key, "ValueKey.value"),
    Cubic_d: dart.privateName(curves, "Cubic.d"),
    Cubic_c: dart.privateName(curves, "Cubic.c"),
    Cubic_b: dart.privateName(curves, "Cubic.b"),
    Cubic_a: dart.privateName(curves, "Cubic.a"),
    child$1: dart.privateName(floating_action_button, "FloatingActionButton.child"),
    tooltip$1: dart.privateName(floating_action_button, "FloatingActionButton.tooltip"),
    foregroundColor: dart.privateName(floating_action_button, "FloatingActionButton.foregroundColor"),
    backgroundColor$1: dart.privateName(floating_action_button, "FloatingActionButton.backgroundColor"),
    focusColor$1: dart.privateName(floating_action_button, "FloatingActionButton.focusColor"),
    hoverColor$1: dart.privateName(floating_action_button, "FloatingActionButton.hoverColor"),
    splashColor$1: dart.privateName(floating_action_button, "FloatingActionButton.splashColor"),
    heroTag: dart.privateName(floating_action_button, "FloatingActionButton.heroTag"),
    onPressed$5: dart.privateName(floating_action_button, "FloatingActionButton.onPressed"),
    mouseCursor$1: dart.privateName(floating_action_button, "FloatingActionButton.mouseCursor"),
    elevation$1: dart.privateName(floating_action_button, "FloatingActionButton.elevation"),
    focusElevation: dart.privateName(floating_action_button, "FloatingActionButton.focusElevation"),
    hoverElevation: dart.privateName(floating_action_button, "FloatingActionButton.hoverElevation"),
    highlightElevation: dart.privateName(floating_action_button, "FloatingActionButton.highlightElevation"),
    disabledElevation: dart.privateName(floating_action_button, "FloatingActionButton.disabledElevation"),
    mini: dart.privateName(floating_action_button, "FloatingActionButton.mini"),
    shape$1: dart.privateName(floating_action_button, "FloatingActionButton.shape"),
    clipBehavior$1: dart.privateName(floating_action_button, "FloatingActionButton.clipBehavior"),
    isExtended: dart.privateName(floating_action_button, "FloatingActionButton.isExtended"),
    focusNode$2: dart.privateName(floating_action_button, "FloatingActionButton.focusNode"),
    autofocus$2: dart.privateName(floating_action_button, "FloatingActionButton.autofocus"),
    materialTapTargetSize: dart.privateName(floating_action_button, "FloatingActionButton.materialTapTargetSize"),
    _sizeConstraints: dart.privateName(floating_action_button, "FloatingActionButton._sizeConstraints"),
    SingleChildRenderObjectWidget_child: dart.privateName(framework, "SingleChildRenderObjectWidget.child"),
    SizedBox_height: dart.privateName(basic, "SizedBox.height"),
    SizedBox_width: dart.privateName(basic, "SizedBox.width"),
    _sizeConstraints$1: dart.privateName(floating_action_button, "_sizeConstraints"),
    _name$7: dart.privateName(flexible_space_bar, "_name"),
    title: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.title"),
    background: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.background"),
    centerTitle: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.centerTitle"),
    collapseMode: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.collapseMode"),
    stretchModes: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.stretchModes"),
    titlePadding: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.titlePadding"),
    _getEffectiveCenterTitle: dart.privateName(flexible_space_bar, "_getEffectiveCenterTitle"),
    _getTitleAlignment: dart.privateName(flexible_space_bar, "_getTitleAlignment"),
    _getCollapsePadding: dart.privateName(flexible_space_bar, "_getCollapsePadding"),
    $clamp: dartx.clamp,
    $contains: dartx.contains,
    toolbarOpacity: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.toolbarOpacity"),
    minExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.minExtent"),
    maxExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.maxExtent"),
    currentExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.currentExtent"),
    _name$8: dart.privateName(list_tile, "_name"),
    dense: dart.privateName(list_tile, "ListTileTheme.dense"),
    shape$2: dart.privateName(list_tile, "ListTileTheme.shape"),
    style$1: dart.privateName(list_tile, "ListTileTheme.style"),
    selectedColor: dart.privateName(list_tile, "ListTileTheme.selectedColor"),
    iconColor: dart.privateName(list_tile, "ListTileTheme.iconColor"),
    textColor$1: dart.privateName(list_tile, "ListTileTheme.textColor"),
    contentPadding: dart.privateName(list_tile, "ListTileTheme.contentPadding"),
    tileColor: dart.privateName(list_tile, "ListTileTheme.tileColor"),
    selectedTileColor: dart.privateName(list_tile, "ListTileTheme.selectedTileColor"),
    horizontalTitleGap: dart.privateName(list_tile, "ListTileTheme.horizontalTitleGap"),
    minVerticalPadding: dart.privateName(list_tile, "ListTileTheme.minVerticalPadding"),
    minLeadingWidth: dart.privateName(list_tile, "ListTileTheme.minLeadingWidth"),
    enableFeedback$1: dart.privateName(list_tile, "ListTileTheme.enableFeedback"),
    ProxyWidget_child: dart.privateName(framework, "ProxyWidget.child"),
    leading: dart.privateName(list_tile, "ListTile.leading"),
    title$1: dart.privateName(list_tile, "ListTile.title"),
    subtitle: dart.privateName(list_tile, "ListTile.subtitle"),
    trailing: dart.privateName(list_tile, "ListTile.trailing"),
    isThreeLine: dart.privateName(list_tile, "ListTile.isThreeLine"),
    dense$1: dart.privateName(list_tile, "ListTile.dense"),
    visualDensity$1: dart.privateName(list_tile, "ListTile.visualDensity"),
    shape$3: dart.privateName(list_tile, "ListTile.shape"),
    contentPadding$1: dart.privateName(list_tile, "ListTile.contentPadding"),
    enabled: dart.privateName(list_tile, "ListTile.enabled"),
    onTap: dart.privateName(list_tile, "ListTile.onTap"),
    onLongPress$1: dart.privateName(list_tile, "ListTile.onLongPress"),
    mouseCursor$2: dart.privateName(list_tile, "ListTile.mouseCursor"),
    selected: dart.privateName(list_tile, "ListTile.selected"),
    focusColor$2: dart.privateName(list_tile, "ListTile.focusColor"),
    hoverColor$2: dart.privateName(list_tile, "ListTile.hoverColor"),
    focusNode$3: dart.privateName(list_tile, "ListTile.focusNode"),
    autofocus$3: dart.privateName(list_tile, "ListTile.autofocus"),
    tileColor$1: dart.privateName(list_tile, "ListTile.tileColor"),
    selectedTileColor$1: dart.privateName(list_tile, "ListTile.selectedTileColor"),
    enableFeedback$2: dart.privateName(list_tile, "ListTile.enableFeedback"),
    horizontalTitleGap$1: dart.privateName(list_tile, "ListTile.horizontalTitleGap"),
    minVerticalPadding$1: dart.privateName(list_tile, "ListTile.minVerticalPadding"),
    minLeadingWidth$1: dart.privateName(list_tile, "ListTile.minLeadingWidth"),
    $iterator: dartx.iterator,
    _iconColor: dart.privateName(list_tile, "_iconColor"),
    _textColor: dart.privateName(list_tile, "_textColor"),
    _isDenseLayout: dart.privateName(list_tile, "_isDenseLayout"),
    _titleTextStyle: dart.privateName(list_tile, "_titleTextStyle"),
    _subtitleTextStyle: dart.privateName(list_tile, "_subtitleTextStyle"),
    _trailingAndLeadingTextStyle: dart.privateName(list_tile, "_trailingAndLeadingTextStyle"),
    _tileBackgroundColor: dart.privateName(list_tile, "_tileBackgroundColor"),
    leading$1: dart.privateName(list_tile, "_ListTile.leading"),
    title$2: dart.privateName(list_tile, "_ListTile.title"),
    subtitle$1: dart.privateName(list_tile, "_ListTile.subtitle"),
    trailing$1: dart.privateName(list_tile, "_ListTile.trailing"),
    isThreeLine$1: dart.privateName(list_tile, "_ListTile.isThreeLine"),
    isDense: dart.privateName(list_tile, "_ListTile.isDense"),
    visualDensity$2: dart.privateName(list_tile, "_ListTile.visualDensity"),
    textDirection: dart.privateName(list_tile, "_ListTile.textDirection"),
    titleBaselineType: dart.privateName(list_tile, "_ListTile.titleBaselineType"),
    subtitleBaselineType: dart.privateName(list_tile, "_ListTile.subtitleBaselineType"),
    horizontalTitleGap$2: dart.privateName(list_tile, "_ListTile.horizontalTitleGap"),
    minVerticalPadding$2: dart.privateName(list_tile, "_ListTile.minVerticalPadding"),
    minLeadingWidth$2: dart.privateName(list_tile, "_ListTile.minLeadingWidth"),
    $values: dartx.values,
    $forEach: dartx.forEach,
    $containsValue: dartx.containsValue,
    $containsKey: dartx.containsKey,
    $remove: dartx.remove,
    $_set: dartx._set,
    _mountChild: dart.privateName(list_tile, "_mountChild"),
    _updateChild: dart.privateName(list_tile, "_updateChild"),
    _updateRenderObject: dart.privateName(list_tile, "_updateRenderObject"),
    $keys: dartx.keys,
    _leading: dart.privateName(list_tile, "_leading"),
    _title: dart.privateName(list_tile, "_title"),
    _subtitle: dart.privateName(list_tile, "_subtitle"),
    _trailing: dart.privateName(list_tile, "_trailing"),
    _isDense: dart.privateName(list_tile, "_isDense"),
    _visualDensity: dart.privateName(list_tile, "_visualDensity"),
    _isThreeLine: dart.privateName(list_tile, "_isThreeLine"),
    _textDirection$1: dart.privateName(list_tile, "_textDirection"),
    _titleBaselineType: dart.privateName(list_tile, "_titleBaselineType"),
    _subtitleBaselineType: dart.privateName(list_tile, "_subtitleBaselineType"),
    _horizontalTitleGap: dart.privateName(list_tile, "_horizontalTitleGap"),
    _minVerticalPadding: dart.privateName(list_tile, "_minVerticalPadding"),
    _minLeadingWidth: dart.privateName(list_tile, "_minLeadingWidth"),
    _children: dart.privateName(list_tile, "_children"),
    _effectiveHorizontalTitleGap: dart.privateName(list_tile, "_effectiveHorizontalTitleGap"),
    _defaultTileHeight: dart.privateName(list_tile, "_defaultTileHeight"),
    _name$9: dart.privateName(drawer, "_name"),
    elevation$2: dart.privateName(drawer, "Drawer.elevation"),
    child$2: dart.privateName(drawer, "Drawer.child"),
    semanticLabel: dart.privateName(drawer, "Drawer.semanticLabel"),
    child$3: dart.privateName(drawer, "DrawerController.child"),
    alignment$1: dart.privateName(drawer, "DrawerController.alignment"),
    drawerCallback: dart.privateName(drawer, "DrawerController.drawerCallback"),
    dragStartBehavior: dart.privateName(drawer, "DrawerController.dragStartBehavior"),
    scrimColor: dart.privateName(drawer, "DrawerController.scrimColor"),
    enableOpenDragGesture: dart.privateName(drawer, "DrawerController.enableOpenDragGesture"),
    edgeDragWidth: dart.privateName(drawer, "DrawerController.edgeDragWidth"),
    isDrawerOpen: dart.privateName(drawer, "DrawerController.isDrawerOpen"),
    _name$10: dart.privateName(recognizer, "_name"),
    _historyEntry: dart.privateName(drawer, "_historyEntry"),
    _focusScopeNode: dart.privateName(drawer, "_focusScopeNode"),
    __DrawerControllerState__controller: dart.privateName(drawer, "_#DrawerControllerState#_controller"),
    __DrawerControllerState__controller_isSet: dart.privateName(drawer, "_#DrawerControllerState#_controller#isSet"),
    _drawerKey: dart.privateName(drawer, "_drawerKey"),
    _previouslyOpened: dart.privateName(drawer, "_previouslyOpened"),
    __DrawerControllerState__scrimColorTween: dart.privateName(drawer, "_#DrawerControllerState#_scrimColorTween"),
    __DrawerControllerState__scrimColorTween_isSet: dart.privateName(drawer, "_#DrawerControllerState#_scrimColorTween#isSet"),
    _gestureDetectorKey: dart.privateName(drawer, "_gestureDetectorKey"),
    _scrimColorTween: dart.privateName(drawer, "_scrimColorTween"),
    _buildScrimColorTween: dart.privateName(drawer, "_buildScrimColorTween"),
    _controller$2: dart.privateName(drawer, "_controller"),
    _animationChanged: dart.privateName(drawer, "_animationChanged"),
    _animationStatusChanged: dart.privateName(drawer, "_animationStatusChanged"),
    _handleHistoryEntryRemoved: dart.privateName(drawer, "_handleHistoryEntryRemoved"),
    _ensureHistoryEntry: dart.privateName(drawer, "_ensureHistoryEntry"),
    _handleDragDown: dart.privateName(drawer, "_handleDragDown"),
    _handleDragCancel: dart.privateName(drawer, "_handleDragCancel"),
    _width: dart.privateName(drawer, "_width"),
    _move: dart.privateName(drawer, "_move"),
    $abs: dartx.abs,
    _settle: dart.privateName(drawer, "_settle"),
    _drawerOuterAlignment: dart.privateName(drawer, "_drawerOuterAlignment"),
    _drawerInnerAlignment: dart.privateName(drawer, "_drawerInnerAlignment"),
    _buildDrawer: dart.privateName(drawer, "_buildDrawer"),
    height: dart.privateName(divider, "Divider.height"),
    thickness: dart.privateName(divider, "Divider.thickness"),
    indent: dart.privateName(divider, "Divider.indent"),
    endIndent: dart.privateName(divider, "Divider.endIndent"),
    color$3: dart.privateName(divider, "Divider.color"),
    width$1: dart.privateName(divider, "VerticalDivider.width"),
    thickness$1: dart.privateName(divider, "VerticalDivider.thickness"),
    indent$1: dart.privateName(divider, "VerticalDivider.indent"),
    endIndent$1: dart.privateName(divider, "VerticalDivider.endIndent"),
    color$4: dart.privateName(divider, "VerticalDivider.color"),
    backgroundColor$2: dart.privateName(dialog, "Dialog.backgroundColor"),
    elevation$3: dart.privateName(dialog, "Dialog.elevation"),
    insetAnimationDuration: dart.privateName(dialog, "Dialog.insetAnimationDuration"),
    insetAnimationCurve: dart.privateName(dialog, "Dialog.insetAnimationCurve"),
    insetPadding: dart.privateName(dialog, "Dialog.insetPadding"),
    clipBehavior$2: dart.privateName(dialog, "Dialog.clipBehavior"),
    shape$4: dart.privateName(dialog, "Dialog.shape"),
    child$4: dart.privateName(dialog, "Dialog.child"),
    title$3: dart.privateName(dialog, "AlertDialog.title"),
    titlePadding$1: dart.privateName(dialog, "AlertDialog.titlePadding"),
    titleTextStyle: dart.privateName(dialog, "AlertDialog.titleTextStyle"),
    content$1: dart.privateName(dialog, "AlertDialog.content"),
    contentPadding$2: dart.privateName(dialog, "AlertDialog.contentPadding"),
    contentTextStyle: dart.privateName(dialog, "AlertDialog.contentTextStyle"),
    actions: dart.privateName(dialog, "AlertDialog.actions"),
    actionsPadding: dart.privateName(dialog, "AlertDialog.actionsPadding"),
    actionsOverflowDirection: dart.privateName(dialog, "AlertDialog.actionsOverflowDirection"),
    actionsOverflowButtonSpacing: dart.privateName(dialog, "AlertDialog.actionsOverflowButtonSpacing"),
    buttonPadding: dart.privateName(dialog, "AlertDialog.buttonPadding"),
    backgroundColor$3: dart.privateName(dialog, "AlertDialog.backgroundColor"),
    elevation$4: dart.privateName(dialog, "AlertDialog.elevation"),
    semanticLabel$1: dart.privateName(dialog, "AlertDialog.semanticLabel"),
    insetPadding$1: dart.privateName(dialog, "AlertDialog.insetPadding"),
    clipBehavior$3: dart.privateName(dialog, "AlertDialog.clipBehavior"),
    shape$5: dart.privateName(dialog, "AlertDialog.shape"),
    scrollable: dart.privateName(dialog, "AlertDialog.scrollable"),
    onPressed$6: dart.privateName(dialog, "SimpleDialogOption.onPressed"),
    child$5: dart.privateName(dialog, "SimpleDialogOption.child"),
    padding$2: dart.privateName(dialog, "SimpleDialogOption.padding"),
    title$4: dart.privateName(dialog, "SimpleDialog.title"),
    titlePadding$2: dart.privateName(dialog, "SimpleDialog.titlePadding"),
    titleTextStyle$1: dart.privateName(dialog, "SimpleDialog.titleTextStyle"),
    children: dart.privateName(dialog, "SimpleDialog.children"),
    contentPadding$3: dart.privateName(dialog, "SimpleDialog.contentPadding"),
    backgroundColor$4: dart.privateName(dialog, "SimpleDialog.backgroundColor"),
    elevation$5: dart.privateName(dialog, "SimpleDialog.elevation"),
    semanticLabel$2: dart.privateName(dialog, "SimpleDialog.semanticLabel"),
    insetPadding$2: dart.privateName(dialog, "SimpleDialog.insetPadding"),
    clipBehavior$4: dart.privateName(dialog, "SimpleDialog.clipBehavior"),
    shape$6: dart.privateName(dialog, "SimpleDialog.shape"),
    $toDouble: dartx.toDouble,
    onPressed$7: dart.privateName(material_button, "MaterialButton.onPressed"),
    onLongPress$2: dart.privateName(material_button, "MaterialButton.onLongPress"),
    onHighlightChanged: dart.privateName(material_button, "MaterialButton.onHighlightChanged"),
    mouseCursor$3: dart.privateName(material_button, "MaterialButton.mouseCursor"),
    textTheme: dart.privateName(material_button, "MaterialButton.textTheme"),
    textColor$2: dart.privateName(material_button, "MaterialButton.textColor"),
    disabledTextColor$1: dart.privateName(material_button, "MaterialButton.disabledTextColor"),
    color$5: dart.privateName(material_button, "MaterialButton.color"),
    disabledColor$1: dart.privateName(material_button, "MaterialButton.disabledColor"),
    splashColor$2: dart.privateName(material_button, "MaterialButton.splashColor"),
    focusColor$3: dart.privateName(material_button, "MaterialButton.focusColor"),
    hoverColor$3: dart.privateName(material_button, "MaterialButton.hoverColor"),
    highlightColor$1: dart.privateName(material_button, "MaterialButton.highlightColor"),
    elevation$6: dart.privateName(material_button, "MaterialButton.elevation"),
    hoverElevation$1: dart.privateName(material_button, "MaterialButton.hoverElevation"),
    focusElevation$1: dart.privateName(material_button, "MaterialButton.focusElevation"),
    highlightElevation$1: dart.privateName(material_button, "MaterialButton.highlightElevation"),
    disabledElevation$1: dart.privateName(material_button, "MaterialButton.disabledElevation"),
    colorBrightness: dart.privateName(material_button, "MaterialButton.colorBrightness"),
    child$6: dart.privateName(material_button, "MaterialButton.child"),
    padding$3: dart.privateName(material_button, "MaterialButton.padding"),
    visualDensity$3: dart.privateName(material_button, "MaterialButton.visualDensity"),
    shape$7: dart.privateName(material_button, "MaterialButton.shape"),
    clipBehavior$5: dart.privateName(material_button, "MaterialButton.clipBehavior"),
    focusNode$4: dart.privateName(material_button, "MaterialButton.focusNode"),
    autofocus$4: dart.privateName(material_button, "MaterialButton.autofocus"),
    animationDuration: dart.privateName(material_button, "MaterialButton.animationDuration"),
    materialTapTargetSize$1: dart.privateName(material_button, "MaterialButton.materialTapTargetSize"),
    minWidth: dart.privateName(material_button, "MaterialButton.minWidth"),
    height$1: dart.privateName(material_button, "MaterialButton.height"),
    enableFeedback$3: dart.privateName(material_button, "MaterialButton.enableFeedback"),
    highlightedBorderColor: dart.privateName(outline_button, "OutlineButton.highlightedBorderColor"),
    disabledBorderColor: dart.privateName(outline_button, "OutlineButton.disabledBorderColor"),
    borderSide: dart.privateName(outline_button, "OutlineButton.borderSide"),
    onPressed$8: dart.privateName(outline_button, "_OutlineButton.onPressed"),
    onLongPress$3: dart.privateName(outline_button, "_OutlineButton.onLongPress"),
    mouseCursor$4: dart.privateName(outline_button, "_OutlineButton.mouseCursor"),
    brightness: dart.privateName(outline_button, "_OutlineButton.brightness"),
    textTheme$1: dart.privateName(outline_button, "_OutlineButton.textTheme"),
    textColor$3: dart.privateName(outline_button, "_OutlineButton.textColor"),
    disabledTextColor$2: dart.privateName(outline_button, "_OutlineButton.disabledTextColor"),
    color$6: dart.privateName(outline_button, "_OutlineButton.color"),
    splashColor$3: dart.privateName(outline_button, "_OutlineButton.splashColor"),
    focusColor$4: dart.privateName(outline_button, "_OutlineButton.focusColor"),
    hoverColor$4: dart.privateName(outline_button, "_OutlineButton.hoverColor"),
    highlightColor$2: dart.privateName(outline_button, "_OutlineButton.highlightColor"),
    highlightElevation$2: dart.privateName(outline_button, "_OutlineButton.highlightElevation"),
    borderSide$1: dart.privateName(outline_button, "_OutlineButton.borderSide"),
    disabledBorderColor$1: dart.privateName(outline_button, "_OutlineButton.disabledBorderColor"),
    highlightedBorderColor$1: dart.privateName(outline_button, "_OutlineButton.highlightedBorderColor"),
    padding$4: dart.privateName(outline_button, "_OutlineButton.padding"),
    visualDensity$4: dart.privateName(outline_button, "_OutlineButton.visualDensity"),
    shape$8: dart.privateName(outline_button, "_OutlineButton.shape"),
    clipBehavior$6: dart.privateName(outline_button, "_OutlineButton.clipBehavior"),
    focusNode$5: dart.privateName(outline_button, "_OutlineButton.focusNode"),
    autofocus$5: dart.privateName(outline_button, "_OutlineButton.autofocus"),
    child$7: dart.privateName(outline_button, "_OutlineButton.child"),
    materialTapTargetSize$2: dart.privateName(outline_button, "_OutlineButton.materialTapTargetSize"),
    ___OutlineButtonState__controller: dart.privateName(outline_button, "_#_OutlineButtonState#_controller"),
    ___OutlineButtonState__controller_isSet: dart.privateName(outline_button, "_#_OutlineButtonState#_controller#isSet"),
    ___OutlineButtonState__fillAnimation: dart.privateName(outline_button, "_#_OutlineButtonState#_fillAnimation"),
    ___OutlineButtonState__fillAnimation_isSet: dart.privateName(outline_button, "_#_OutlineButtonState#_fillAnimation#isSet"),
    ___OutlineButtonState__elevationAnimation: dart.privateName(outline_button, "_#_OutlineButtonState#_elevationAnimation"),
    ___OutlineButtonState__elevationAnimation_isSet: dart.privateName(outline_button, "_#_OutlineButtonState#_elevationAnimation#isSet"),
    _pressed$1: dart.privateName(outline_button, "_pressed"),
    _controller$3: dart.privateName(outline_button, "_controller"),
    _fillAnimation: dart.privateName(outline_button, "_fillAnimation"),
    _elevationAnimation: dart.privateName(outline_button, "_elevationAnimation"),
    _handleHighlightChanged$1: dart.privateName(outline_button, "_handleHighlightChanged"),
    _getFillColor: dart.privateName(outline_button, "_getFillColor"),
    _outlineColor: dart.privateName(outline_button, "_outlineColor"),
    _getOutline: dart.privateName(outline_button, "_getOutline"),
    _getHighlightElevation: dart.privateName(outline_button, "_getHighlightElevation"),
    shape$9: dart.privateName(outline_button, "_OutlineBorder.shape"),
    side: dart.privateName(outline_button, "_OutlineBorder.side"),
    $runtimeType: dartx.runtimeType,
    onPressed$9: dart.privateName(button, "RawMaterialButton.onPressed"),
    onLongPress$4: dart.privateName(button, "RawMaterialButton.onLongPress"),
    onHighlightChanged$1: dart.privateName(button, "RawMaterialButton.onHighlightChanged"),
    mouseCursor$5: dart.privateName(button, "RawMaterialButton.mouseCursor"),
    textStyle: dart.privateName(button, "RawMaterialButton.textStyle"),
    fillColor: dart.privateName(button, "RawMaterialButton.fillColor"),
    focusColor$5: dart.privateName(button, "RawMaterialButton.focusColor"),
    hoverColor$5: dart.privateName(button, "RawMaterialButton.hoverColor"),
    highlightColor$3: dart.privateName(button, "RawMaterialButton.highlightColor"),
    splashColor$4: dart.privateName(button, "RawMaterialButton.splashColor"),
    elevation$7: dart.privateName(button, "RawMaterialButton.elevation"),
    hoverElevation$2: dart.privateName(button, "RawMaterialButton.hoverElevation"),
    focusElevation$2: dart.privateName(button, "RawMaterialButton.focusElevation"),
    highlightElevation$3: dart.privateName(button, "RawMaterialButton.highlightElevation"),
    disabledElevation$2: dart.privateName(button, "RawMaterialButton.disabledElevation"),
    padding$5: dart.privateName(button, "RawMaterialButton.padding"),
    visualDensity$5: dart.privateName(button, "RawMaterialButton.visualDensity"),
    constraints$1: dart.privateName(button, "RawMaterialButton.constraints"),
    shape$10: dart.privateName(button, "RawMaterialButton.shape"),
    animationDuration$1: dart.privateName(button, "RawMaterialButton.animationDuration"),
    child$8: dart.privateName(button, "RawMaterialButton.child"),
    materialTapTargetSize$3: dart.privateName(button, "RawMaterialButton.materialTapTargetSize"),
    focusNode$6: dart.privateName(button, "RawMaterialButton.focusNode"),
    autofocus$6: dart.privateName(button, "RawMaterialButton.autofocus"),
    clipBehavior$7: dart.privateName(button, "RawMaterialButton.clipBehavior"),
    enableFeedback$4: dart.privateName(button, "RawMaterialButton.enableFeedback"),
    VisualDensity_vertical: dart.privateName(theme_data, "VisualDensity.vertical"),
    VisualDensity_horizontal: dart.privateName(theme_data, "VisualDensity.horizontal"),
    _states$1: dart.privateName(button, "_states"),
    _hovered$1: dart.privateName(button, "_hovered"),
    _focused$1: dart.privateName(button, "_focused"),
    _pressed$2: dart.privateName(button, "_pressed"),
    _disabled$1: dart.privateName(button, "_disabled"),
    _updateState$1: dart.privateName(button, "_updateState"),
    _handleHighlightChanged$2: dart.privateName(button, "_handleHighlightChanged"),
    _handleHoveredChanged$1: dart.privateName(button, "_handleHoveredChanged"),
    _handleFocusedChanged$1: dart.privateName(button, "_handleFocusedChanged"),
    _effectiveElevation: dart.privateName(button, "_effectiveElevation"),
    minSize$1: dart.privateName(button, "_InputPadding.minSize"),
    _minSize$1: dart.privateName(button, "_minSize"),
    _computeSize$1: dart.privateName(button, "_computeSize"),
    textStyle$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.textStyle")
  };
  var S$ = {
    constraints$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.constraints"),
    color$7: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.color"),
    selectedColor$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.selectedColor"),
    disabledColor$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.disabledColor"),
    fillColor$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.fillColor"),
    focusColor$6: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.focusColor"),
    highlightColor$4: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.highlightColor"),
    splashColor$5: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.splashColor"),
    hoverColor$6: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.hoverColor"),
    borderColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderColor"),
    selectedBorderColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.selectedBorderColor"),
    disabledBorderColor$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.disabledBorderColor"),
    borderWidth: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderWidth"),
    borderRadius: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderRadius"),
    data: dart.privateName(toggle_buttons_theme, "ToggleButtonsTheme.data"),
    backgroundColor$5: dart.privateName(time_picker_theme, "TimePickerThemeData.backgroundColor"),
    hourMinuteTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteTextColor"),
    hourMinuteColor: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteColor"),
    dayPeriodTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodTextColor"),
    dayPeriodColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodColor"),
    dialHandColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialHandColor"),
    dialBackgroundColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialBackgroundColor"),
    dialTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialTextColor"),
    entryModeIconColor: dart.privateName(time_picker_theme, "TimePickerThemeData.entryModeIconColor"),
    hourMinuteTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteTextStyle"),
    dayPeriodTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodTextStyle"),
    helpTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.helpTextStyle"),
    shape$11: dart.privateName(time_picker_theme, "TimePickerThemeData.shape"),
    hourMinuteShape: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteShape"),
    dayPeriodShape: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodShape"),
    dayPeriodBorderSide: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodBorderSide"),
    inputDecorationTheme: dart.privateName(time_picker_theme, "TimePickerThemeData.inputDecorationTheme"),
    data$1: dart.privateName(time_picker_theme, "TimePickerTheme.data"),
    cursorColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.cursorColor"),
    selectionColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.selectionColor"),
    selectionHandleColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.selectionHandleColor"),
    data$2: dart.privateName(text_selection_theme, "TextSelectionTheme.data"),
    style$2: dart.privateName(text_button_theme, "TextButtonThemeData.style"),
    $hashCode: dartx.hashCode,
    data$3: dart.privateName(text_button_theme, "TextButtonTheme.data"),
    _name$11: dart.privateName(tabs$, "_name"),
    text: dart.privateName(tabs$, "Tab.text"),
    child$9: dart.privateName(tabs$, "Tab.child"),
    icon$2: dart.privateName(tabs$, "Tab.icon"),
    iconMargin: dart.privateName(tabs$, "Tab.iconMargin"),
    _buildLabelText: dart.privateName(tabs$, "_buildLabelText"),
    labelStyle: dart.privateName(tabs$, "_TabStyle.labelStyle"),
    unselectedLabelStyle: dart.privateName(tabs$, "_TabStyle.unselectedLabelStyle"),
    selected$1: dart.privateName(tabs$, "_TabStyle.selected"),
    labelColor: dart.privateName(tabs$, "_TabStyle.labelColor"),
    unselectedLabelColor: dart.privateName(tabs$, "_TabStyle.unselectedLabelColor"),
    child$10: dart.privateName(tabs$, "_TabStyle.child"),
    $insert: dartx.insert,
    _currentTabOffsets: dart.privateName(tabs$, "_currentTabOffsets"),
    _currentTextDirection: dart.privateName(tabs$, "_currentTextDirection"),
    _currentRect: dart.privateName(tabs$, "_currentRect"),
    _painter: dart.privateName(tabs$, "_painter"),
    _needsPaint: dart.privateName(tabs$, "_needsPaint"),
    $isNotEmpty: dartx.isNotEmpty,
    $floor: dartx.floor,
    $ceil: dartx.ceil,
    $toInt: dartx.toInt,
    _initialViewportDimensionWasZero: dart.privateName(tabs$, "_initialViewportDimensionWasZero"),
    _initialScrollOffset: dart.privateName(tabs$, "_initialScrollOffset"),
    tabs: dart.privateName(tabs$, "TabBar.tabs"),
    controller: dart.privateName(tabs$, "TabBar.controller"),
    isScrollable: dart.privateName(tabs$, "TabBar.isScrollable"),
    indicatorColor: dart.privateName(tabs$, "TabBar.indicatorColor"),
    indicatorWeight: dart.privateName(tabs$, "TabBar.indicatorWeight"),
    indicatorPadding: dart.privateName(tabs$, "TabBar.indicatorPadding"),
    indicator: dart.privateName(tabs$, "TabBar.indicator"),
    automaticIndicatorColorAdjustment: dart.privateName(tabs$, "TabBar.automaticIndicatorColorAdjustment"),
    indicatorSize: dart.privateName(tabs$, "TabBar.indicatorSize"),
    labelColor$1: dart.privateName(tabs$, "TabBar.labelColor"),
    unselectedLabelColor$1: dart.privateName(tabs$, "TabBar.unselectedLabelColor"),
    labelStyle$1: dart.privateName(tabs$, "TabBar.labelStyle"),
    labelPadding: dart.privateName(tabs$, "TabBar.labelPadding"),
    unselectedLabelStyle$1: dart.privateName(tabs$, "TabBar.unselectedLabelStyle"),
    overlayColor: dart.privateName(tabs$, "TabBar.overlayColor"),
    dragStartBehavior$1: dart.privateName(tabs$, "TabBar.dragStartBehavior"),
    mouseCursor$6: dart.privateName(tabs$, "TabBar.mouseCursor"),
    enableFeedback$5: dart.privateName(tabs$, "TabBar.enableFeedback"),
    onTap$1: dart.privateName(tabs$, "TabBar.onTap"),
    physics: dart.privateName(tabs$, "TabBar.physics"),
    _scrollController: dart.privateName(tabs$, "_scrollController"),
    _controller$4: dart.privateName(tabs$, "_controller"),
    _indicatorPainter: dart.privateName(tabs$, "_indicatorPainter"),
    _currentIndex: dart.privateName(tabs$, "_currentIndex"),
    ___TabBarState__tabStripWidth: dart.privateName(tabs$, "_#_TabBarState#_tabStripWidth"),
    ___TabBarState__tabStripWidth_isSet: dart.privateName(tabs$, "_#_TabBarState#_tabStripWidth#isSet"),
    ___TabBarState__tabKeys: dart.privateName(tabs$, "_#_TabBarState#_tabKeys"),
    ___TabBarState__tabKeys_isSet: dart.privateName(tabs$, "_#_TabBarState#_tabKeys#isSet"),
    _tabStripWidth: dart.privateName(tabs$, "_tabStripWidth"),
    _tabKeys: dart.privateName(tabs$, "_tabKeys"),
    $map: dartx.map,
    $toList: dartx.toList,
    _indicator: dart.privateName(tabs$, "_indicator"),
    _controllerIsValid: dart.privateName(tabs$, "_controllerIsValid"),
    _handleTabControllerAnimationTick: dart.privateName(tabs$, "_handleTabControllerAnimationTick"),
    _handleTabControllerTick: dart.privateName(tabs$, "_handleTabControllerTick"),
    _updateTabController: dart.privateName(tabs$, "_updateTabController"),
    _initIndicatorPainter: dart.privateName(tabs$, "_initIndicatorPainter"),
    $addAll: dartx.addAll,
    $removeRange: dartx.removeRange,
    _tabScrollOffset: dart.privateName(tabs$, "_tabScrollOffset"),
    _tabCenteredScrollOffset: dart.privateName(tabs$, "_tabCenteredScrollOffset"),
    _scrollToCurrentIndex: dart.privateName(tabs$, "_scrollToCurrentIndex"),
    _scrollToControllerValue: dart.privateName(tabs$, "_scrollToControllerValue"),
    _saveTabOffsets: dart.privateName(tabs$, "_saveTabOffsets"),
    _handleTap: dart.privateName(tabs$, "_handleTap"),
    _buildStyledTab: dart.privateName(tabs$, "_buildStyledTab"),
    controller$1: dart.privateName(tabs$, "TabBarView.controller"),
    children$1: dart.privateName(tabs$, "TabBarView.children"),
    physics$1: dart.privateName(tabs$, "TabBarView.physics"),
    dragStartBehavior$2: dart.privateName(tabs$, "TabBarView.dragStartBehavior"),
    ___TabBarViewState__pageController: dart.privateName(tabs$, "_#_TabBarViewState#_pageController"),
    ___TabBarViewState__pageController_isSet: dart.privateName(tabs$, "_#_TabBarViewState#_pageController#isSet"),
    ___TabBarViewState__children: dart.privateName(tabs$, "_#_TabBarViewState#_children"),
    ___TabBarViewState__children_isSet: dart.privateName(tabs$, "_#_TabBarViewState#_children#isSet"),
    ___TabBarViewState__childrenWithKey: dart.privateName(tabs$, "_#_TabBarViewState#_childrenWithKey"),
    ___TabBarViewState__childrenWithKey_isSet: dart.privateName(tabs$, "_#_TabBarViewState#_childrenWithKey#isSet"),
    _warpUnderwayCount: dart.privateName(tabs$, "_warpUnderwayCount"),
    _pageController: dart.privateName(tabs$, "_pageController"),
    _children$1: dart.privateName(tabs$, "_children"),
    _childrenWithKey: dart.privateName(tabs$, "_childrenWithKey"),
    _updateChildren: dart.privateName(tabs$, "_updateChildren"),
    _warpToCurrentIndex: dart.privateName(tabs$, "_warpToCurrentIndex"),
    $round: dartx.round,
    _handleScrollNotification: dart.privateName(tabs$, "_handleScrollNotification"),
    ScrollPhysics_parent: dart.privateName(scroll_physics, "ScrollPhysics.parent"),
    backgroundColor$6: dart.privateName(tabs$, "TabPageSelectorIndicator.backgroundColor"),
    borderColor$1: dart.privateName(tabs$, "TabPageSelectorIndicator.borderColor"),
    size: dart.privateName(tabs$, "TabPageSelectorIndicator.size"),
    controller$2: dart.privateName(tabs$, "TabPageSelector.controller"),
    indicatorSize$1: dart.privateName(tabs$, "TabPageSelector.indicatorSize"),
    color$8: dart.privateName(tabs$, "TabPageSelector.color"),
    selectedColor$2: dart.privateName(tabs$, "TabPageSelector.selectedColor"),
    _buildTabIndicator: dart.privateName(tabs$, "_buildTabIndicator"),
    indicator$1: dart.privateName(tab_bar_theme, "TabBarTheme.indicator"),
    indicatorSize$2: dart.privateName(tab_bar_theme, "TabBarTheme.indicatorSize"),
    labelColor$2: dart.privateName(tab_bar_theme, "TabBarTheme.labelColor"),
    labelPadding$1: dart.privateName(tab_bar_theme, "TabBarTheme.labelPadding"),
    labelStyle$2: dart.privateName(tab_bar_theme, "TabBarTheme.labelStyle"),
    unselectedLabelColor$2: dart.privateName(tab_bar_theme, "TabBarTheme.unselectedLabelColor"),
    unselectedLabelStyle$2: dart.privateName(tab_bar_theme, "TabBarTheme.unselectedLabelStyle"),
    thumbColor: dart.privateName(switch_theme, "SwitchThemeData.thumbColor"),
    trackColor: dart.privateName(switch_theme, "SwitchThemeData.trackColor"),
    materialTapTargetSize$4: dart.privateName(switch_theme, "SwitchThemeData.materialTapTargetSize"),
    mouseCursor$7: dart.privateName(switch_theme, "SwitchThemeData.mouseCursor"),
    overlayColor$1: dart.privateName(switch_theme, "SwitchThemeData.overlayColor"),
    splashRadius$1: dart.privateName(switch_theme, "SwitchThemeData.splashRadius"),
    a: dart.privateName(switch_theme, "_LerpProperties.a"),
    b: dart.privateName(switch_theme, "_LerpProperties.b"),
    t: dart.privateName(switch_theme, "_LerpProperties.t"),
    lerpFunction: dart.privateName(switch_theme, "_LerpProperties.lerpFunction"),
    data$4: dart.privateName(switch_theme, "SwitchTheme.data"),
    _name$12: dart.privateName(snack_bar_theme, "_name"),
    backgroundColor$7: dart.privateName(snack_bar_theme, "SnackBarThemeData.backgroundColor"),
    actionTextColor: dart.privateName(snack_bar_theme, "SnackBarThemeData.actionTextColor"),
    disabledActionTextColor: dart.privateName(snack_bar_theme, "SnackBarThemeData.disabledActionTextColor"),
    contentTextStyle$1: dart.privateName(snack_bar_theme, "SnackBarThemeData.contentTextStyle"),
    elevation$8: dart.privateName(snack_bar_theme, "SnackBarThemeData.elevation"),
    shape$12: dart.privateName(snack_bar_theme, "SnackBarThemeData.shape"),
    behavior$1: dart.privateName(snack_bar_theme, "SnackBarThemeData.behavior"),
    data$5: dart.privateName(slider_theme, "SliderTheme.data"),
    _name$13: dart.privateName(slider_theme, "_name"),
    trackHeight: dart.privateName(slider_theme, "SliderThemeData.trackHeight"),
    activeTrackColor: dart.privateName(slider_theme, "SliderThemeData.activeTrackColor"),
    inactiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.inactiveTrackColor"),
    disabledActiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.disabledActiveTrackColor"),
    disabledInactiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.disabledInactiveTrackColor"),
    activeTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.activeTickMarkColor"),
    inactiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.inactiveTickMarkColor"),
    disabledActiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.disabledActiveTickMarkColor"),
    disabledInactiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.disabledInactiveTickMarkColor"),
    thumbColor$1: dart.privateName(slider_theme, "SliderThemeData.thumbColor"),
    overlappingShapeStrokeColor: dart.privateName(slider_theme, "SliderThemeData.overlappingShapeStrokeColor"),
    disabledThumbColor: dart.privateName(slider_theme, "SliderThemeData.disabledThumbColor"),
    overlayColor$2: dart.privateName(slider_theme, "SliderThemeData.overlayColor"),
    valueIndicatorColor: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorColor"),
    overlayShape: dart.privateName(slider_theme, "SliderThemeData.overlayShape"),
    tickMarkShape: dart.privateName(slider_theme, "SliderThemeData.tickMarkShape"),
    thumbShape: dart.privateName(slider_theme, "SliderThemeData.thumbShape"),
    trackShape: dart.privateName(slider_theme, "SliderThemeData.trackShape"),
    valueIndicatorShape: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorShape"),
    rangeTickMarkShape: dart.privateName(slider_theme, "SliderThemeData.rangeTickMarkShape"),
    rangeThumbShape: dart.privateName(slider_theme, "SliderThemeData.rangeThumbShape"),
    rangeTrackShape: dart.privateName(slider_theme, "SliderThemeData.rangeTrackShape"),
    rangeValueIndicatorShape: dart.privateName(slider_theme, "SliderThemeData.rangeValueIndicatorShape"),
    showValueIndicator: dart.privateName(slider_theme, "SliderThemeData.showValueIndicator"),
    valueIndicatorTextStyle: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorTextStyle"),
    minThumbSeparation: dart.privateName(slider_theme, "SliderThemeData.minThumbSeparation"),
    thumbSelector: dart.privateName(slider_theme, "SliderThemeData.thumbSelector"),
    RoundSliderOverlayShape_overlayRadius: dart.privateName(slider_theme, "RoundSliderOverlayShape.overlayRadius"),
    RoundSliderTickMarkShape_tickMarkRadius: dart.privateName(slider_theme, "RoundSliderTickMarkShape.tickMarkRadius"),
    RoundSliderThumbShape_pressedElevation: dart.privateName(slider_theme, "RoundSliderThumbShape.pressedElevation"),
    RoundSliderThumbShape_elevation: dart.privateName(slider_theme, "RoundSliderThumbShape.elevation"),
    RoundSliderThumbShape_disabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.disabledThumbRadius"),
    RoundSliderThumbShape_enabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.enabledThumbRadius"),
    RoundRangeSliderTickMarkShape_tickMarkRadius: dart.privateName(slider_theme, "RoundRangeSliderTickMarkShape.tickMarkRadius"),
    RoundRangeSliderThumbShape_pressedElevation: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.pressedElevation"),
    RoundRangeSliderThumbShape_elevation: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.elevation"),
    RoundRangeSliderThumbShape_disabledThumbRadius: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.disabledThumbRadius"),
    RoundRangeSliderThumbShape_enabledThumbRadius: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.enabledThumbRadius"),
    disabledThumbGapWidth: dart.privateName(slider_theme, "RectangularSliderTrackShape.disabledThumbGapWidth"),
    tickMarkRadius: dart.privateName(slider_theme, "RoundSliderTickMarkShape.tickMarkRadius"),
    tickMarkRadius$1: dart.privateName(slider_theme, "RoundRangeSliderTickMarkShape.tickMarkRadius"),
    enabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.enabledThumbRadius"),
    disabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.disabledThumbRadius"),
    elevation$9: dart.privateName(slider_theme, "RoundSliderThumbShape.elevation"),
    pressedElevation: dart.privateName(slider_theme, "RoundSliderThumbShape.pressedElevation"),
    _disabledThumbRadius: dart.privateName(slider_theme, "_disabledThumbRadius"),
    enabledThumbRadius$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.enabledThumbRadius"),
    disabledThumbRadius$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.disabledThumbRadius"),
    elevation$10: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.elevation"),
    pressedElevation$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.pressedElevation"),
    overlayRadius: dart.privateName(slider_theme, "RoundSliderOverlayShape.overlayRadius"),
    _upperRectangleWidth: dart.privateName(slider_theme, "_upperRectangleWidth"),
    _getIdealOffset: dart.privateName(slider_theme, "_getIdealOffset"),
    start: dart.privateName(slider_theme, "RangeValues.start"),
    end: dart.privateName(slider_theme, "RangeValues.end"),
    start$1: dart.privateName(slider_theme, "RangeLabels.start"),
    end$1: dart.privateName(slider_theme, "RangeLabels.end"),
    thickness$2: dart.privateName(scrollbar_theme, "ScrollbarThemeData.thickness"),
    showTrackOnHover: dart.privateName(scrollbar_theme, "ScrollbarThemeData.showTrackOnHover"),
    isAlwaysShown: dart.privateName(scrollbar_theme, "ScrollbarThemeData.isAlwaysShown"),
    radius: dart.privateName(scrollbar_theme, "ScrollbarThemeData.radius"),
    thumbColor$2: dart.privateName(scrollbar_theme, "ScrollbarThemeData.thumbColor"),
    trackColor$1: dart.privateName(scrollbar_theme, "ScrollbarThemeData.trackColor"),
    trackBorderColor: dart.privateName(scrollbar_theme, "ScrollbarThemeData.trackBorderColor"),
    crossAxisMargin: dart.privateName(scrollbar_theme, "ScrollbarThemeData.crossAxisMargin"),
    mainAxisMargin: dart.privateName(scrollbar_theme, "ScrollbarThemeData.mainAxisMargin"),
    minThumbLength: dart.privateName(scrollbar_theme, "ScrollbarThemeData.minThumbLength"),
    a$1: dart.privateName(scrollbar_theme, "_LerpProperties.a"),
    b$1: dart.privateName(scrollbar_theme, "_LerpProperties.b"),
    t$1: dart.privateName(scrollbar_theme, "_LerpProperties.t"),
    lerpFunction$1: dart.privateName(scrollbar_theme, "_LerpProperties.lerpFunction"),
    data$6: dart.privateName(scrollbar_theme, "ScrollbarTheme.data"),
    mouseCursor$8: dart.privateName(radio_theme, "RadioThemeData.mouseCursor"),
    fillColor$2: dart.privateName(radio_theme, "RadioThemeData.fillColor"),
    overlayColor$3: dart.privateName(radio_theme, "RadioThemeData.overlayColor"),
    splashRadius$2: dart.privateName(radio_theme, "RadioThemeData.splashRadius"),
    materialTapTargetSize$5: dart.privateName(radio_theme, "RadioThemeData.materialTapTargetSize"),
    visualDensity$6: dart.privateName(radio_theme, "RadioThemeData.visualDensity"),
    a$2: dart.privateName(radio_theme, "_LerpProperties.a"),
    b$2: dart.privateName(radio_theme, "_LerpProperties.b"),
    t$2: dart.privateName(radio_theme, "_LerpProperties.t"),
    lerpFunction$2: dart.privateName(radio_theme, "_LerpProperties.lerpFunction"),
    data$7: dart.privateName(radio_theme, "RadioTheme.data"),
    color$9: dart.privateName(popup_menu_theme, "PopupMenuThemeData.color"),
    shape$13: dart.privateName(popup_menu_theme, "PopupMenuThemeData.shape"),
    elevation$11: dart.privateName(popup_menu_theme, "PopupMenuThemeData.elevation"),
    textStyle$2: dart.privateName(popup_menu_theme, "PopupMenuThemeData.textStyle"),
    enableFeedback$6: dart.privateName(popup_menu_theme, "PopupMenuThemeData.enableFeedback"),
    data$8: dart.privateName(popup_menu_theme, "PopupMenuTheme.data"),
    _positionAnimation: dart.privateName(page_transitions_theme, "_positionAnimation"),
    _opacityAnimation: dart.privateName(page_transitions_theme, "_opacityAnimation"),
    animation$1: dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.animation"),
    secondaryAnimation: dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.secondaryAnimation"),
    child$11: dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.child"),
    animation$2: dart.privateName(page_transitions_theme, "_ZoomPageTransition.animation"),
    secondaryAnimation$1: dart.privateName(page_transitions_theme, "_ZoomPageTransition.secondaryAnimation"),
    child$12: dart.privateName(page_transitions_theme, "_ZoomPageTransition.child"),
    animation$3: dart.privateName(page_transitions_theme, "_ZoomEnterTransition.animation"),
    child$13: dart.privateName(page_transitions_theme, "_ZoomEnterTransition.child"),
    reverse: dart.privateName(page_transitions_theme, "_ZoomEnterTransition.reverse"),
    animation$4: dart.privateName(page_transitions_theme, "_ZoomExitTransition.animation"),
    reverse$1: dart.privateName(page_transitions_theme, "_ZoomExitTransition.reverse"),
    child$14: dart.privateName(page_transitions_theme, "_ZoomExitTransition.child"),
    _builders: dart.privateName(page_transitions_theme, "PageTransitionsTheme._builders"),
    _builders$1: dart.privateName(page_transitions_theme, "_builders"),
    _all: dart.privateName(page_transitions_theme, "_all"),
    style$3: dart.privateName(outlined_button_theme, "OutlinedButtonThemeData.style"),
    data$9: dart.privateName(outlined_button_theme, "OutlinedButtonTheme.data"),
    backgroundColor$8: dart.privateName(navigation_rail, "NavigationRail.backgroundColor"),
    extended: dart.privateName(navigation_rail, "NavigationRail.extended"),
    leading$2: dart.privateName(navigation_rail, "NavigationRail.leading"),
    trailing$2: dart.privateName(navigation_rail, "NavigationRail.trailing"),
    destinations: dart.privateName(navigation_rail, "NavigationRail.destinations"),
    selectedIndex: dart.privateName(navigation_rail, "NavigationRail.selectedIndex"),
    onDestinationSelected: dart.privateName(navigation_rail, "NavigationRail.onDestinationSelected"),
    elevation$12: dart.privateName(navigation_rail, "NavigationRail.elevation"),
    groupAlignment: dart.privateName(navigation_rail, "NavigationRail.groupAlignment"),
    labelType: dart.privateName(navigation_rail, "NavigationRail.labelType"),
    unselectedLabelTextStyle: dart.privateName(navigation_rail, "NavigationRail.unselectedLabelTextStyle"),
    selectedLabelTextStyle: dart.privateName(navigation_rail, "NavigationRail.selectedLabelTextStyle"),
    unselectedIconTheme: dart.privateName(navigation_rail, "NavigationRail.unselectedIconTheme"),
    selectedIconTheme: dart.privateName(navigation_rail, "NavigationRail.selectedIconTheme"),
    minWidth$1: dart.privateName(navigation_rail, "NavigationRail.minWidth"),
    minExtendedWidth: dart.privateName(navigation_rail, "NavigationRail.minExtendedWidth"),
    ___NavigationRailState__destinationControllers: dart.privateName(navigation_rail, "_#_NavigationRailState#_destinationControllers"),
    ___NavigationRailState__destinationControllers_isSet: dart.privateName(navigation_rail, "_#_NavigationRailState#_destinationControllers#isSet"),
    ___NavigationRailState__destinationAnimations: dart.privateName(navigation_rail, "_#_NavigationRailState#_destinationAnimations"),
    ___NavigationRailState__destinationAnimations_isSet: dart.privateName(navigation_rail, "_#_NavigationRailState#_destinationAnimations#isSet"),
    ___NavigationRailState__extendedController: dart.privateName(navigation_rail, "_#_NavigationRailState#_extendedController"),
    ___NavigationRailState__extendedController_isSet: dart.privateName(navigation_rail, "_#_NavigationRailState#_extendedController#isSet"),
    ___NavigationRailState__extendedAnimation: dart.privateName(navigation_rail, "_#_NavigationRailState#_extendedAnimation"),
    ___NavigationRailState__extendedAnimation_isSet: dart.privateName(navigation_rail, "_#_NavigationRailState#_extendedAnimation#isSet"),
    _destinationControllers: dart.privateName(navigation_rail, "_destinationControllers"),
    _destinationAnimations: dart.privateName(navigation_rail, "_destinationAnimations"),
    _extendedController: dart.privateName(navigation_rail, "_extendedController"),
    _extendedAnimation: dart.privateName(navigation_rail, "_extendedAnimation"),
    _initControllers: dart.privateName(navigation_rail, "_initControllers"),
    _disposeControllers: dart.privateName(navigation_rail, "_disposeControllers"),
    _resetState: dart.privateName(navigation_rail, "_resetState"),
    _rebuild: dart.privateName(navigation_rail, "_rebuild"),
    _positionAnimation$1: dart.privateName(navigation_rail, "_positionAnimation"),
    _extendedLabelFadeValue: dart.privateName(navigation_rail, "_extendedLabelFadeValue"),
    _name$14: dart.privateName(navigation_rail, "_name"),
    _normalLabelFadeInValue: dart.privateName(navigation_rail, "_normalLabelFadeInValue"),
    _normalLabelFadeOutValue: dart.privateName(navigation_rail, "_normalLabelFadeOutValue"),
    icon$3: dart.privateName(navigation_rail, "NavigationRailDestination.icon"),
    selectedIcon: dart.privateName(navigation_rail, "NavigationRailDestination.selectedIcon"),
    label$2: dart.privateName(navigation_rail, "NavigationRailDestination.label"),
    padding$6: dart.privateName(navigation_rail, "NavigationRailDestination.padding"),
    animation$5: dart.privateName(navigation_rail, "_ExtendedNavigationRailAnimation.animation"),
    backgroundColor$9: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.backgroundColor"),
    elevation$13: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.elevation"),
    unselectedLabelTextStyle$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.unselectedLabelTextStyle"),
    selectedLabelTextStyle$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.selectedLabelTextStyle"),
    unselectedIconTheme$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.unselectedIconTheme"),
    selectedIconTheme$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.selectedIconTheme"),
    groupAlignment$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.groupAlignment"),
    labelType$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.labelType"),
    data$10: dart.privateName(navigation_rail_theme, "NavigationRailTheme.data"),
    _start: dart.privateName(input_decorator, "_start"),
    _extent: dart.privateName(input_decorator, "_extent"),
    border: dart.privateName(input_decorator, "_BorderContainer.border"),
    gap: dart.privateName(input_decorator, "_BorderContainer.gap"),
    gapAnimation: dart.privateName(input_decorator, "_BorderContainer.gapAnimation"),
    fillColor$3: dart.privateName(input_decorator, "_BorderContainer.fillColor"),
    hoverColor$7: dart.privateName(input_decorator, "_BorderContainer.hoverColor"),
    isHovering: dart.privateName(input_decorator, "_BorderContainer.isHovering"),
    child$15: dart.privateName(input_decorator, "_BorderContainer.child"),
    ___BorderContainerState__controller: dart.privateName(input_decorator, "_#_BorderContainerState#_controller"),
    ___BorderContainerState__controller_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_controller#isSet"),
    ___BorderContainerState__hoverColorController: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverColorController"),
    ___BorderContainerState__hoverColorController_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverColorController#isSet"),
    ___BorderContainerState__borderAnimation: dart.privateName(input_decorator, "_#_BorderContainerState#_borderAnimation"),
    ___BorderContainerState__borderAnimation_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_borderAnimation#isSet"),
    ___BorderContainerState__border: dart.privateName(input_decorator, "_#_BorderContainerState#_border"),
    ___BorderContainerState__border_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_border#isSet"),
    ___BorderContainerState__hoverAnimation: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverAnimation"),
    ___BorderContainerState__hoverAnimation_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverAnimation#isSet"),
    ___BorderContainerState__hoverColorTween: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverColorTween"),
    ___BorderContainerState__hoverColorTween_isSet: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverColorTween#isSet"),
    _controller$5: dart.privateName(input_decorator, "_controller"),
    _hoverColorController: dart.privateName(input_decorator, "_hoverColorController"),
    _borderAnimation: dart.privateName(input_decorator, "_borderAnimation"),
    _border: dart.privateName(input_decorator, "_border"),
    _hoverAnimation: dart.privateName(input_decorator, "_hoverAnimation"),
    _hoverColorTween: dart.privateName(input_decorator, "_hoverColorTween"),
    child$16: dart.privateName(input_decorator, "_Shaker.child"),
    textAlign: dart.privateName(input_decorator, "_HelperError.textAlign"),
    helperText: dart.privateName(input_decorator, "_HelperError.helperText"),
    helperStyle: dart.privateName(input_decorator, "_HelperError.helperStyle"),
    helperMaxLines: dart.privateName(input_decorator, "_HelperError.helperMaxLines"),
    errorText: dart.privateName(input_decorator, "_HelperError.errorText"),
    errorStyle: dart.privateName(input_decorator, "_HelperError.errorStyle"),
    errorMaxLines: dart.privateName(input_decorator, "_HelperError.errorMaxLines"),
    ___HelperErrorState__controller: dart.privateName(input_decorator, "_#_HelperErrorState#_controller"),
    ___HelperErrorState__controller_isSet: dart.privateName(input_decorator, "_#_HelperErrorState#_controller#isSet"),
    _helper: dart.privateName(input_decorator, "_helper"),
    _error: dart.privateName(input_decorator, "_error"),
    _buildError: dart.privateName(input_decorator, "_buildError"),
    _buildHelper: dart.privateName(input_decorator, "_buildHelper"),
    _handleChange: dart.privateName(input_decorator, "_handleChange"),
    _name$15: dart.privateName(input_decorator, "_name"),
    contentPadding$4: dart.privateName(input_decorator, "_Decoration.contentPadding"),
    isCollapsed: dart.privateName(input_decorator, "_Decoration.isCollapsed"),
    floatingLabelHeight: dart.privateName(input_decorator, "_Decoration.floatingLabelHeight"),
    floatingLabelProgress: dart.privateName(input_decorator, "_Decoration.floatingLabelProgress"),
    border$1: dart.privateName(input_decorator, "_Decoration.border"),
    borderGap: dart.privateName(input_decorator, "_Decoration.borderGap"),
    alignLabelWithHint: dart.privateName(input_decorator, "_Decoration.alignLabelWithHint"),
    isDense$1: dart.privateName(input_decorator, "_Decoration.isDense"),
    visualDensity$7: dart.privateName(input_decorator, "_Decoration.visualDensity"),
    icon$4: dart.privateName(input_decorator, "_Decoration.icon"),
    input: dart.privateName(input_decorator, "_Decoration.input"),
    label$3: dart.privateName(input_decorator, "_Decoration.label"),
    hint: dart.privateName(input_decorator, "_Decoration.hint"),
    prefix: dart.privateName(input_decorator, "_Decoration.prefix"),
    suffix: dart.privateName(input_decorator, "_Decoration.suffix"),
    prefixIcon: dart.privateName(input_decorator, "_Decoration.prefixIcon"),
    suffixIcon: dart.privateName(input_decorator, "_Decoration.suffixIcon"),
    helperError: dart.privateName(input_decorator, "_Decoration.helperError"),
    counter: dart.privateName(input_decorator, "_Decoration.counter"),
    container: dart.privateName(input_decorator, "_Decoration.container"),
    fixTextFieldOutlineLabel: dart.privateName(input_decorator, "_Decoration.fixTextFieldOutlineLabel"),
    boxToBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.boxToBaseline"),
    inputBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.inputBaseline"),
    outlineBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.outlineBaseline"),
    subtextBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.subtextBaseline"),
    containerHeight: dart.privateName(input_decorator, "_RenderDecorationLayout.containerHeight"),
    subtextHeight: dart.privateName(input_decorator, "_RenderDecorationLayout.subtextHeight"),
    _icon: dart.privateName(input_decorator, "_icon"),
    _input: dart.privateName(input_decorator, "_input"),
    _label: dart.privateName(input_decorator, "_label"),
    _hint: dart.privateName(input_decorator, "_hint"),
    _prefix: dart.privateName(input_decorator, "_prefix"),
    _suffix: dart.privateName(input_decorator, "_suffix"),
    _prefixIcon: dart.privateName(input_decorator, "_prefixIcon"),
    _suffixIcon: dart.privateName(input_decorator, "_suffixIcon"),
    _helperError: dart.privateName(input_decorator, "_helperError"),
    _counter: dart.privateName(input_decorator, "_counter"),
    _container: dart.privateName(input_decorator, "_container"),
    _expands: dart.privateName(input_decorator, "_expands"),
    _labelTransform: dart.privateName(input_decorator, "_labelTransform"),
    _transformLayer: dart.privateName(input_decorator, "_transformLayer"),
    _decoration: dart.privateName(input_decorator, "_decoration"),
    _textDirection$2: dart.privateName(input_decorator, "_textDirection"),
    _textBaseline: dart.privateName(input_decorator, "_textBaseline"),
    _textAlignVertical: dart.privateName(input_decorator, "_textAlignVertical"),
    _isFocused: dart.privateName(input_decorator, "_isFocused"),
    _updateChild$1: dart.privateName(input_decorator, "_updateChild"),
    _children$2: dart.privateName(input_decorator, "_children"),
    _isOutlineAligned: dart.privateName(input_decorator, "_isOutlineAligned"),
    _defaultTextAlignVertical: dart.privateName(input_decorator, "_defaultTextAlignVertical"),
    _layoutLineBox: dart.privateName(input_decorator, "_layoutLineBox"),
    _interpolateThree: dart.privateName(input_decorator, "_interpolateThree"),
    _layout: dart.privateName(input_decorator, "_layout"),
    _lineHeight: dart.privateName(input_decorator, "_lineHeight"),
    _paintLabel: dart.privateName(input_decorator, "_paintLabel"),
    _mountChild$1: dart.privateName(input_decorator, "_mountChild"),
    _updateRenderObject$1: dart.privateName(input_decorator, "_updateRenderObject"),
    decoration: dart.privateName(input_decorator, "_Decorator.decoration"),
    textDirection$1: dart.privateName(input_decorator, "_Decorator.textDirection"),
    textBaseline: dart.privateName(input_decorator, "_Decorator.textBaseline"),
    textAlignVertical: dart.privateName(input_decorator, "_Decorator.textAlignVertical"),
    isFocused: dart.privateName(input_decorator, "_Decorator.isFocused"),
    expands: dart.privateName(input_decorator, "_Decorator.expands"),
    labelIsFloating: dart.privateName(input_decorator, "_AffixText.labelIsFloating"),
    text$1: dart.privateName(input_decorator, "_AffixText.text"),
    style$4: dart.privateName(input_decorator, "_AffixText.style"),
    child$17: dart.privateName(input_decorator, "_AffixText.child"),
    decoration$1: dart.privateName(input_decorator, "InputDecorator.decoration"),
    baseStyle: dart.privateName(input_decorator, "InputDecorator.baseStyle"),
    textAlign$1: dart.privateName(input_decorator, "InputDecorator.textAlign"),
    textAlignVertical$1: dart.privateName(input_decorator, "InputDecorator.textAlignVertical"),
    isFocused$1: dart.privateName(input_decorator, "InputDecorator.isFocused"),
    isHovering$1: dart.privateName(input_decorator, "InputDecorator.isHovering"),
    expands$1: dart.privateName(input_decorator, "InputDecorator.expands"),
    isEmpty: dart.privateName(input_decorator, "InputDecorator.isEmpty"),
    child$18: dart.privateName(input_decorator, "InputDecorator.child"),
    _labelShouldWithdraw: dart.privateName(input_decorator, "_labelShouldWithdraw"),
    ___InputDecoratorState__floatingLabelController: dart.privateName(input_decorator, "_#_InputDecoratorState#_floatingLabelController"),
    ___InputDecoratorState__floatingLabelController_isSet: dart.privateName(input_decorator, "_#_InputDecoratorState#_floatingLabelController#isSet"),
    ___InputDecoratorState__shakingLabelController: dart.privateName(input_decorator, "_#_InputDecoratorState#_shakingLabelController"),
    ___InputDecoratorState__shakingLabelController_isSet: dart.privateName(input_decorator, "_#_InputDecoratorState#_shakingLabelController#isSet"),
    _borderGap: dart.privateName(input_decorator, "_borderGap"),
    _effectiveDecoration: dart.privateName(input_decorator, "_effectiveDecoration"),
    _floatingLabelController: dart.privateName(input_decorator, "_floatingLabelController"),
    _shakingLabelController: dart.privateName(input_decorator, "_shakingLabelController"),
    _floatingLabelEnabled: dart.privateName(input_decorator, "_floatingLabelEnabled"),
    _getActiveColor: dart.privateName(input_decorator, "_getActiveColor"),
    _getDefaultBorderColor: dart.privateName(input_decorator, "_getDefaultBorderColor"),
    _getFillColor$1: dart.privateName(input_decorator, "_getFillColor"),
    _getHoverColor: dart.privateName(input_decorator, "_getHoverColor"),
    _getDefaultIconColor: dart.privateName(input_decorator, "_getDefaultIconColor"),
    _hasInlineLabel: dart.privateName(input_decorator, "_hasInlineLabel"),
    _shouldShowLabel: dart.privateName(input_decorator, "_shouldShowLabel"),
    _getInlineStyle: dart.privateName(input_decorator, "_getInlineStyle"),
    _getFloatingLabelStyle: dart.privateName(input_decorator, "_getFloatingLabelStyle"),
    _getHelperStyle: dart.privateName(input_decorator, "_getHelperStyle"),
    _getErrorStyle: dart.privateName(input_decorator, "_getErrorStyle"),
    InputBorder_borderSide: dart.privateName(input_border, "InputBorder.borderSide"),
    UnderlineInputBorder_borderRadius: dart.privateName(input_border, "UnderlineInputBorder.borderRadius"),
    _getDefaultBorder: dart.privateName(input_decorator, "_getDefaultBorder"),
    EdgeInsetsDirectional_bottom: dart.privateName(edge_insets, "EdgeInsetsDirectional.bottom"),
    EdgeInsetsDirectional_end: dart.privateName(edge_insets, "EdgeInsetsDirectional.end"),
    EdgeInsetsDirectional_top: dart.privateName(edge_insets, "EdgeInsetsDirectional.top"),
    EdgeInsetsDirectional_start: dart.privateName(edge_insets, "EdgeInsetsDirectional.start"),
    icon$5: dart.privateName(input_decorator, "InputDecoration.icon"),
    labelText: dart.privateName(input_decorator, "InputDecoration.labelText"),
    labelStyle$3: dart.privateName(input_decorator, "InputDecoration.labelStyle"),
    helperText$1: dart.privateName(input_decorator, "InputDecoration.helperText"),
    helperStyle$1: dart.privateName(input_decorator, "InputDecoration.helperStyle"),
    helperMaxLines$1: dart.privateName(input_decorator, "InputDecoration.helperMaxLines"),
    hintText: dart.privateName(input_decorator, "InputDecoration.hintText"),
    hintStyle: dart.privateName(input_decorator, "InputDecoration.hintStyle"),
    hintTextDirection: dart.privateName(input_decorator, "InputDecoration.hintTextDirection"),
    hintMaxLines: dart.privateName(input_decorator, "InputDecoration.hintMaxLines"),
    errorText$1: dart.privateName(input_decorator, "InputDecoration.errorText"),
    errorStyle$1: dart.privateName(input_decorator, "InputDecoration.errorStyle"),
    errorMaxLines$1: dart.privateName(input_decorator, "InputDecoration.errorMaxLines"),
    hasFloatingPlaceholder: dart.privateName(input_decorator, "InputDecoration.hasFloatingPlaceholder"),
    floatingLabelBehavior: dart.privateName(input_decorator, "InputDecoration.floatingLabelBehavior"),
    isDense$2: dart.privateName(input_decorator, "InputDecoration.isDense"),
    contentPadding$5: dart.privateName(input_decorator, "InputDecoration.contentPadding"),
    isCollapsed$1: dart.privateName(input_decorator, "InputDecoration.isCollapsed"),
    prefixIcon$1: dart.privateName(input_decorator, "InputDecoration.prefixIcon"),
    prefixIconConstraints: dart.privateName(input_decorator, "InputDecoration.prefixIconConstraints"),
    prefix$1: dart.privateName(input_decorator, "InputDecoration.prefix"),
    prefixText: dart.privateName(input_decorator, "InputDecoration.prefixText"),
    prefixStyle: dart.privateName(input_decorator, "InputDecoration.prefixStyle"),
    suffixIcon$1: dart.privateName(input_decorator, "InputDecoration.suffixIcon"),
    suffix$1: dart.privateName(input_decorator, "InputDecoration.suffix"),
    suffixText: dart.privateName(input_decorator, "InputDecoration.suffixText"),
    suffixStyle: dart.privateName(input_decorator, "InputDecoration.suffixStyle"),
    suffixIconConstraints: dart.privateName(input_decorator, "InputDecoration.suffixIconConstraints")
  };
  var S$0 = {
    counterText: dart.privateName(input_decorator, "InputDecoration.counterText"),
    counter$1: dart.privateName(input_decorator, "InputDecoration.counter"),
    counterStyle: dart.privateName(input_decorator, "InputDecoration.counterStyle"),
    filled: dart.privateName(input_decorator, "InputDecoration.filled"),
    fillColor$4: dart.privateName(input_decorator, "InputDecoration.fillColor"),
    focusColor$7: dart.privateName(input_decorator, "InputDecoration.focusColor"),
    hoverColor$8: dart.privateName(input_decorator, "InputDecoration.hoverColor"),
    errorBorder: dart.privateName(input_decorator, "InputDecoration.errorBorder"),
    focusedBorder: dart.privateName(input_decorator, "InputDecoration.focusedBorder"),
    focusedErrorBorder: dart.privateName(input_decorator, "InputDecoration.focusedErrorBorder"),
    disabledBorder: dart.privateName(input_decorator, "InputDecoration.disabledBorder"),
    enabledBorder: dart.privateName(input_decorator, "InputDecoration.enabledBorder"),
    border$2: dart.privateName(input_decorator, "InputDecoration.border"),
    enabled$1: dart.privateName(input_decorator, "InputDecoration.enabled"),
    semanticCounterText: dart.privateName(input_decorator, "InputDecoration.semanticCounterText"),
    alignLabelWithHint$1: dart.privateName(input_decorator, "InputDecoration.alignLabelWithHint"),
    $join: dartx.join,
    labelStyle$4: dart.privateName(input_decorator, "InputDecorationTheme.labelStyle"),
    helperStyle$2: dart.privateName(input_decorator, "InputDecorationTheme.helperStyle"),
    helperMaxLines$2: dart.privateName(input_decorator, "InputDecorationTheme.helperMaxLines"),
    hintStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.hintStyle"),
    errorStyle$2: dart.privateName(input_decorator, "InputDecorationTheme.errorStyle"),
    errorMaxLines$2: dart.privateName(input_decorator, "InputDecorationTheme.errorMaxLines"),
    hasFloatingPlaceholder$1: dart.privateName(input_decorator, "InputDecorationTheme.hasFloatingPlaceholder"),
    floatingLabelBehavior$1: dart.privateName(input_decorator, "InputDecorationTheme.floatingLabelBehavior"),
    isDense$3: dart.privateName(input_decorator, "InputDecorationTheme.isDense"),
    contentPadding$6: dart.privateName(input_decorator, "InputDecorationTheme.contentPadding"),
    isCollapsed$2: dart.privateName(input_decorator, "InputDecorationTheme.isCollapsed"),
    prefixStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.prefixStyle"),
    suffixStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.suffixStyle"),
    counterStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.counterStyle"),
    filled$1: dart.privateName(input_decorator, "InputDecorationTheme.filled"),
    fillColor$5: dart.privateName(input_decorator, "InputDecorationTheme.fillColor"),
    focusColor$8: dart.privateName(input_decorator, "InputDecorationTheme.focusColor"),
    hoverColor$9: dart.privateName(input_decorator, "InputDecorationTheme.hoverColor"),
    errorBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.errorBorder"),
    focusedBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.focusedBorder"),
    focusedErrorBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.focusedErrorBorder"),
    disabledBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.disabledBorder"),
    enabledBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.enabledBorder"),
    border$3: dart.privateName(input_decorator, "InputDecorationTheme.border"),
    alignLabelWithHint$2: dart.privateName(input_decorator, "InputDecorationTheme.alignLabelWithHint"),
    __InkSplash__radius: dart.privateName(ink_splash, "_#InkSplash#_radius"),
    __InkSplash__radius_isSet: dart.privateName(ink_splash, "_#InkSplash#_radius#isSet"),
    __InkSplash__radiusController: dart.privateName(ink_splash, "_#InkSplash#_radiusController"),
    __InkSplash__radiusController_isSet: dart.privateName(ink_splash, "_#InkSplash#_radiusController#isSet"),
    __InkSplash__alpha: dart.privateName(ink_splash, "_#InkSplash#_alpha"),
    __InkSplash__alpha_isSet: dart.privateName(ink_splash, "_#InkSplash#_alpha#isSet"),
    _alphaController: dart.privateName(ink_splash, "_alphaController"),
    _position$1: dart.privateName(ink_splash, "_position"),
    _borderRadius$1: dart.privateName(ink_splash, "_borderRadius"),
    _customBorder$1: dart.privateName(ink_splash, "_customBorder"),
    _targetRadius$1: dart.privateName(ink_splash, "_targetRadius"),
    _clipCallback$1: dart.privateName(ink_splash, "_clipCallback"),
    _repositionToReferenceBox: dart.privateName(ink_splash, "_repositionToReferenceBox"),
    _textDirection$3: dart.privateName(ink_splash, "_textDirection"),
    _radiusController$1: dart.privateName(ink_splash, "_radiusController"),
    _radius$1: dart.privateName(ink_splash, "_radius"),
    _handleAlphaStatusChanged$1: dart.privateName(ink_splash, "_handleAlphaStatusChanged"),
    _alpha: dart.privateName(ink_splash, "_alpha"),
    $ceilToDouble: dartx.ceilToDouble,
    textStyle$3: dart.privateName(button_style, "ButtonStyle.textStyle"),
    backgroundColor$10: dart.privateName(button_style, "ButtonStyle.backgroundColor"),
    foregroundColor$1: dart.privateName(button_style, "ButtonStyle.foregroundColor"),
    overlayColor$4: dart.privateName(button_style, "ButtonStyle.overlayColor"),
    shadowColor: dart.privateName(button_style, "ButtonStyle.shadowColor"),
    elevation$14: dart.privateName(button_style, "ButtonStyle.elevation"),
    padding$7: dart.privateName(button_style, "ButtonStyle.padding"),
    minimumSize: dart.privateName(button_style, "ButtonStyle.minimumSize"),
    side$1: dart.privateName(button_style, "ButtonStyle.side"),
    shape$14: dart.privateName(button_style, "ButtonStyle.shape"),
    mouseCursor$9: dart.privateName(button_style, "ButtonStyle.mouseCursor"),
    visualDensity$8: dart.privateName(button_style, "ButtonStyle.visualDensity"),
    tapTargetSize: dart.privateName(button_style, "ButtonStyle.tapTargetSize"),
    animationDuration$2: dart.privateName(button_style, "ButtonStyle.animationDuration"),
    enableFeedback$7: dart.privateName(button_style, "ButtonStyle.enableFeedback"),
    alignment$2: dart.privateName(button_style, "ButtonStyle.alignment"),
    a$3: dart.privateName(button_style, "_LerpProperties.a"),
    b$3: dart.privateName(button_style, "_LerpProperties.b"),
    t$3: dart.privateName(button_style, "_LerpProperties.t"),
    lerpFunction$3: dart.privateName(button_style, "_LerpProperties.lerpFunction"),
    a$4: dart.privateName(button_style, "_LerpSides.a"),
    b$4: dart.privateName(button_style, "_LerpSides.b"),
    t$4: dart.privateName(button_style, "_LerpSides.t"),
    a$5: dart.privateName(button_style, "_LerpShapes.a"),
    b$5: dart.privateName(button_style, "_LerpShapes.b"),
    t$5: dart.privateName(button_style, "_LerpShapes.t"),
    style$5: dart.privateName(elevated_button_theme, "ElevatedButtonThemeData.style"),
    data$11: dart.privateName(elevated_button_theme, "ElevatedButtonTheme.data"),
    color$10: dart.privateName(divider_theme, "DividerThemeData.color"),
    space: dart.privateName(divider_theme, "DividerThemeData.space"),
    thickness$3: dart.privateName(divider_theme, "DividerThemeData.thickness"),
    indent$2: dart.privateName(divider_theme, "DividerThemeData.indent"),
    endIndent$2: dart.privateName(divider_theme, "DividerThemeData.endIndent"),
    data$12: dart.privateName(divider_theme, "DividerTheme.data"),
    backgroundColor$11: dart.privateName(dialog_theme, "DialogTheme.backgroundColor"),
    elevation$15: dart.privateName(dialog_theme, "DialogTheme.elevation"),
    shape$15: dart.privateName(dialog_theme, "DialogTheme.shape"),
    titleTextStyle$2: dart.privateName(dialog_theme, "DialogTheme.titleTextStyle"),
    contentTextStyle$2: dart.privateName(dialog_theme, "DialogTheme.contentTextStyle"),
    decoration$2: dart.privateName(data_table_theme, "DataTableThemeData.decoration"),
    dataRowColor: dart.privateName(data_table_theme, "DataTableThemeData.dataRowColor"),
    dataRowHeight: dart.privateName(data_table_theme, "DataTableThemeData.dataRowHeight"),
    dataTextStyle: dart.privateName(data_table_theme, "DataTableThemeData.dataTextStyle"),
    headingRowColor: dart.privateName(data_table_theme, "DataTableThemeData.headingRowColor"),
    headingRowHeight: dart.privateName(data_table_theme, "DataTableThemeData.headingRowHeight"),
    headingTextStyle: dart.privateName(data_table_theme, "DataTableThemeData.headingTextStyle"),
    horizontalMargin: dart.privateName(data_table_theme, "DataTableThemeData.horizontalMargin"),
    columnSpacing: dart.privateName(data_table_theme, "DataTableThemeData.columnSpacing"),
    dividerThickness: dart.privateName(data_table_theme, "DataTableThemeData.dividerThickness"),
    a$6: dart.privateName(data_table_theme, "_LerpProperties.a"),
    b$6: dart.privateName(data_table_theme, "_LerpProperties.b"),
    t$6: dart.privateName(data_table_theme, "_LerpProperties.t"),
    lerpFunction$4: dart.privateName(data_table_theme, "_LerpProperties.lerpFunction"),
    data$13: dart.privateName(data_table_theme, "DataTableTheme.data"),
    data$14: dart.privateName(chip_theme, "ChipTheme.data"),
    backgroundColor$12: dart.privateName(chip_theme, "ChipThemeData.backgroundColor"),
    deleteIconColor: dart.privateName(chip_theme, "ChipThemeData.deleteIconColor"),
    disabledColor$3: dart.privateName(chip_theme, "ChipThemeData.disabledColor"),
    selectedColor$3: dart.privateName(chip_theme, "ChipThemeData.selectedColor"),
    secondarySelectedColor: dart.privateName(chip_theme, "ChipThemeData.secondarySelectedColor"),
    shadowColor$1: dart.privateName(chip_theme, "ChipThemeData.shadowColor"),
    selectedShadowColor: dart.privateName(chip_theme, "ChipThemeData.selectedShadowColor"),
    showCheckmark: dart.privateName(chip_theme, "ChipThemeData.showCheckmark"),
    checkmarkColor: dart.privateName(chip_theme, "ChipThemeData.checkmarkColor"),
    labelPadding$2: dart.privateName(chip_theme, "ChipThemeData.labelPadding"),
    padding$8: dart.privateName(chip_theme, "ChipThemeData.padding"),
    side$2: dart.privateName(chip_theme, "ChipThemeData.side"),
    shape$16: dart.privateName(chip_theme, "ChipThemeData.shape"),
    labelStyle$5: dart.privateName(chip_theme, "ChipThemeData.labelStyle"),
    secondaryLabelStyle: dart.privateName(chip_theme, "ChipThemeData.secondaryLabelStyle"),
    brightness$1: dart.privateName(chip_theme, "ChipThemeData.brightness"),
    elevation$16: dart.privateName(chip_theme, "ChipThemeData.elevation"),
    pressElevation: dart.privateName(chip_theme, "ChipThemeData.pressElevation"),
    mouseCursor$10: dart.privateName(checkbox_theme, "CheckboxThemeData.mouseCursor"),
    fillColor$6: dart.privateName(checkbox_theme, "CheckboxThemeData.fillColor"),
    checkColor: dart.privateName(checkbox_theme, "CheckboxThemeData.checkColor"),
    overlayColor$5: dart.privateName(checkbox_theme, "CheckboxThemeData.overlayColor"),
    splashRadius$3: dart.privateName(checkbox_theme, "CheckboxThemeData.splashRadius"),
    materialTapTargetSize$6: dart.privateName(checkbox_theme, "CheckboxThemeData.materialTapTargetSize"),
    visualDensity$9: dart.privateName(checkbox_theme, "CheckboxThemeData.visualDensity"),
    a$7: dart.privateName(checkbox_theme, "_LerpProperties.a"),
    b$7: dart.privateName(checkbox_theme, "_LerpProperties.b"),
    t$7: dart.privateName(checkbox_theme, "_LerpProperties.t"),
    lerpFunction$5: dart.privateName(checkbox_theme, "_LerpProperties.lerpFunction"),
    data$15: dart.privateName(checkbox_theme, "CheckboxTheme.data"),
    clipBehavior$8: dart.privateName(card_theme, "CardTheme.clipBehavior"),
    color$11: dart.privateName(card_theme, "CardTheme.color"),
    shadowColor$2: dart.privateName(card_theme, "CardTheme.shadowColor"),
    elevation$17: dart.privateName(card_theme, "CardTheme.elevation"),
    margin$1: dart.privateName(card_theme, "CardTheme.margin"),
    shape$17: dart.privateName(card_theme, "CardTheme.shape"),
    height$2: dart.privateName(tooltip_theme, "TooltipThemeData.height"),
    padding$9: dart.privateName(tooltip_theme, "TooltipThemeData.padding"),
    margin$2: dart.privateName(tooltip_theme, "TooltipThemeData.margin"),
    verticalOffset: dart.privateName(tooltip_theme, "TooltipThemeData.verticalOffset"),
    preferBelow: dart.privateName(tooltip_theme, "TooltipThemeData.preferBelow"),
    excludeFromSemantics: dart.privateName(tooltip_theme, "TooltipThemeData.excludeFromSemantics"),
    decoration$3: dart.privateName(tooltip_theme, "TooltipThemeData.decoration"),
    textStyle$4: dart.privateName(tooltip_theme, "TooltipThemeData.textStyle"),
    waitDuration: dart.privateName(tooltip_theme, "TooltipThemeData.waitDuration"),
    showDuration: dart.privateName(tooltip_theme, "TooltipThemeData.showDuration"),
    data$16: dart.privateName(tooltip_theme, "TooltipTheme.data"),
    message: dart.privateName(tooltip, "Tooltip.message"),
    height$3: dart.privateName(tooltip, "Tooltip.height"),
    padding$10: dart.privateName(tooltip, "Tooltip.padding"),
    margin$3: dart.privateName(tooltip, "Tooltip.margin"),
    verticalOffset$1: dart.privateName(tooltip, "Tooltip.verticalOffset"),
    preferBelow$1: dart.privateName(tooltip, "Tooltip.preferBelow"),
    excludeFromSemantics$1: dart.privateName(tooltip, "Tooltip.excludeFromSemantics"),
    child$19: dart.privateName(tooltip, "Tooltip.child"),
    decoration$4: dart.privateName(tooltip, "Tooltip.decoration"),
    textStyle$5: dart.privateName(tooltip, "Tooltip.textStyle"),
    waitDuration$1: dart.privateName(tooltip, "Tooltip.waitDuration"),
    showDuration$1: dart.privateName(tooltip, "Tooltip.showDuration"),
    ___TooltipState_height: dart.privateName(tooltip, "_#_TooltipState#height"),
    ___TooltipState_height_isSet: dart.privateName(tooltip, "_#_TooltipState#height#isSet"),
    ___TooltipState_padding: dart.privateName(tooltip, "_#_TooltipState#padding"),
    ___TooltipState_padding_isSet: dart.privateName(tooltip, "_#_TooltipState#padding#isSet"),
    ___TooltipState_margin: dart.privateName(tooltip, "_#_TooltipState#margin"),
    ___TooltipState_margin_isSet: dart.privateName(tooltip, "_#_TooltipState#margin#isSet"),
    ___TooltipState_decoration: dart.privateName(tooltip, "_#_TooltipState#decoration"),
    ___TooltipState_decoration_isSet: dart.privateName(tooltip, "_#_TooltipState#decoration#isSet"),
    ___TooltipState_textStyle: dart.privateName(tooltip, "_#_TooltipState#textStyle"),
    ___TooltipState_textStyle_isSet: dart.privateName(tooltip, "_#_TooltipState#textStyle#isSet"),
    ___TooltipState_verticalOffset: dart.privateName(tooltip, "_#_TooltipState#verticalOffset"),
    ___TooltipState_verticalOffset_isSet: dart.privateName(tooltip, "_#_TooltipState#verticalOffset#isSet"),
    ___TooltipState_preferBelow: dart.privateName(tooltip, "_#_TooltipState#preferBelow"),
    ___TooltipState_preferBelow_isSet: dart.privateName(tooltip, "_#_TooltipState#preferBelow#isSet"),
    ___TooltipState_excludeFromSemantics: dart.privateName(tooltip, "_#_TooltipState#excludeFromSemantics"),
    ___TooltipState_excludeFromSemantics_isSet: dart.privateName(tooltip, "_#_TooltipState#excludeFromSemantics#isSet"),
    ___TooltipState__controller: dart.privateName(tooltip, "_#_TooltipState#_controller"),
    ___TooltipState__controller_isSet: dart.privateName(tooltip, "_#_TooltipState#_controller#isSet"),
    _entry: dart.privateName(tooltip, "_entry"),
    _hideTimer: dart.privateName(tooltip, "_hideTimer"),
    _showTimer: dart.privateName(tooltip, "_showTimer"),
    ___TooltipState_showDuration: dart.privateName(tooltip, "_#_TooltipState#showDuration"),
    ___TooltipState_showDuration_isSet: dart.privateName(tooltip, "_#_TooltipState#showDuration#isSet"),
    ___TooltipState_waitDuration: dart.privateName(tooltip, "_#_TooltipState#waitDuration"),
    ___TooltipState_waitDuration_isSet: dart.privateName(tooltip, "_#_TooltipState#waitDuration#isSet"),
    ___TooltipState__mouseIsConnected: dart.privateName(tooltip, "_#_TooltipState#_mouseIsConnected"),
    ___TooltipState__mouseIsConnected_isSet: dart.privateName(tooltip, "_#_TooltipState#_mouseIsConnected#isSet"),
    _longPressActivated: dart.privateName(tooltip, "_longPressActivated"),
    _controller$6: dart.privateName(tooltip, "_controller"),
    _mouseIsConnected: dart.privateName(tooltip, "_mouseIsConnected"),
    _handleStatusChanged: dart.privateName(tooltip, "_handleStatusChanged"),
    _handleMouseTrackerChange: dart.privateName(tooltip, "_handleMouseTrackerChange"),
    _handlePointerEvent: dart.privateName(tooltip, "_handlePointerEvent"),
    _getDefaultTooltipHeight: dart.privateName(tooltip, "_getDefaultTooltipHeight"),
    _getDefaultPadding: dart.privateName(tooltip, "_getDefaultPadding"),
    _getDefaultFontSize: dart.privateName(tooltip, "_getDefaultFontSize"),
    _hideTooltip: dart.privateName(tooltip, "_hideTooltip"),
    _removeEntry: dart.privateName(tooltip, "_removeEntry"),
    _showTooltip: dart.privateName(tooltip, "_showTooltip"),
    _createNewEntry: dart.privateName(tooltip, "_createNewEntry"),
    _handleLongPress: dart.privateName(tooltip, "_handleLongPress"),
    message$1: dart.privateName(tooltip, "_TooltipOverlay.message"),
    height$4: dart.privateName(tooltip, "_TooltipOverlay.height"),
    padding$11: dart.privateName(tooltip, "_TooltipOverlay.padding"),
    margin$4: dart.privateName(tooltip, "_TooltipOverlay.margin"),
    decoration$5: dart.privateName(tooltip, "_TooltipOverlay.decoration"),
    textStyle$6: dart.privateName(tooltip, "_TooltipOverlay.textStyle"),
    animation$6: dart.privateName(tooltip, "_TooltipOverlay.animation"),
    target: dart.privateName(tooltip, "_TooltipOverlay.target"),
    verticalOffset$2: dart.privateName(tooltip, "_TooltipOverlay.verticalOffset"),
    preferBelow$2: dart.privateName(tooltip, "_TooltipOverlay.preferBelow"),
    _name$16: dart.privateName(box_border, "_name"),
    __InkHighlight__alpha: dart.privateName(ink_highlight, "_#InkHighlight#_alpha"),
    __InkHighlight__alpha_isSet: dart.privateName(ink_highlight, "_#InkHighlight#_alpha#isSet"),
    __InkHighlight__alphaController: dart.privateName(ink_highlight, "_#InkHighlight#_alphaController"),
    __InkHighlight__alphaController_isSet: dart.privateName(ink_highlight, "_#InkHighlight#_alphaController#isSet"),
    _active: dart.privateName(ink_highlight, "_active"),
    _shape: dart.privateName(ink_highlight, "_shape"),
    _radius$2: dart.privateName(ink_highlight, "_radius"),
    _borderRadius$2: dart.privateName(ink_highlight, "_borderRadius"),
    _customBorder$2: dart.privateName(ink_highlight, "_customBorder"),
    _textDirection$4: dart.privateName(ink_highlight, "_textDirection"),
    _rectCallback: dart.privateName(ink_highlight, "_rectCallback"),
    _alphaController$1: dart.privateName(ink_highlight, "_alphaController"),
    _handleAlphaStatusChanged$2: dart.privateName(ink_highlight, "_handleAlphaStatusChanged"),
    _alpha$1: dart.privateName(ink_highlight, "_alpha"),
    _paintHighlight: dart.privateName(ink_highlight, "_paintHighlight"),
    SemanticsEvent_type: dart.privateName(semantics_event, "SemanticsEvent.type"),
    state: dart.privateName(ink_well, "_ParentInkResponseProvider.state"),
    child$20: dart.privateName(ink_well, "InkResponse.child"),
    onTap$2: dart.privateName(ink_well, "InkResponse.onTap"),
    onTapDown: dart.privateName(ink_well, "InkResponse.onTapDown"),
    onTapCancel: dart.privateName(ink_well, "InkResponse.onTapCancel"),
    onDoubleTap: dart.privateName(ink_well, "InkResponse.onDoubleTap"),
    onLongPress$5: dart.privateName(ink_well, "InkResponse.onLongPress"),
    onHighlightChanged$2: dart.privateName(ink_well, "InkResponse.onHighlightChanged"),
    onHover: dart.privateName(ink_well, "InkResponse.onHover"),
    mouseCursor$11: dart.privateName(ink_well, "InkResponse.mouseCursor"),
    containedInkWell: dart.privateName(ink_well, "InkResponse.containedInkWell"),
    highlightShape: dart.privateName(ink_well, "InkResponse.highlightShape"),
    radius$1: dart.privateName(ink_well, "InkResponse.radius"),
    borderRadius$1: dart.privateName(ink_well, "InkResponse.borderRadius"),
    customBorder: dart.privateName(ink_well, "InkResponse.customBorder"),
    focusColor$9: dart.privateName(ink_well, "InkResponse.focusColor"),
    hoverColor$10: dart.privateName(ink_well, "InkResponse.hoverColor"),
    highlightColor$5: dart.privateName(ink_well, "InkResponse.highlightColor"),
    overlayColor$6: dart.privateName(ink_well, "InkResponse.overlayColor"),
    splashColor$6: dart.privateName(ink_well, "InkResponse.splashColor"),
    splashFactory: dart.privateName(ink_well, "InkResponse.splashFactory"),
    enableFeedback$8: dart.privateName(ink_well, "InkResponse.enableFeedback"),
    excludeFromSemantics$2: dart.privateName(ink_well, "InkResponse.excludeFromSemantics"),
    onFocusChange: dart.privateName(ink_well, "InkResponse.onFocusChange"),
    autofocus$7: dart.privateName(ink_well, "InkResponse.autofocus"),
    focusNode$7: dart.privateName(ink_well, "InkResponse.focusNode"),
    canRequestFocus: dart.privateName(ink_well, "InkResponse.canRequestFocus"),
    child$21: dart.privateName(ink_well, "_InkResponseStateWidget.child"),
    onTap$3: dart.privateName(ink_well, "_InkResponseStateWidget.onTap"),
    onTapDown$1: dart.privateName(ink_well, "_InkResponseStateWidget.onTapDown"),
    onTapCancel$1: dart.privateName(ink_well, "_InkResponseStateWidget.onTapCancel"),
    onDoubleTap$1: dart.privateName(ink_well, "_InkResponseStateWidget.onDoubleTap"),
    onLongPress$6: dart.privateName(ink_well, "_InkResponseStateWidget.onLongPress"),
    onHighlightChanged$3: dart.privateName(ink_well, "_InkResponseStateWidget.onHighlightChanged"),
    onHover$1: dart.privateName(ink_well, "_InkResponseStateWidget.onHover"),
    mouseCursor$12: dart.privateName(ink_well, "_InkResponseStateWidget.mouseCursor"),
    containedInkWell$1: dart.privateName(ink_well, "_InkResponseStateWidget.containedInkWell"),
    highlightShape$1: dart.privateName(ink_well, "_InkResponseStateWidget.highlightShape"),
    radius$2: dart.privateName(ink_well, "_InkResponseStateWidget.radius"),
    borderRadius$2: dart.privateName(ink_well, "_InkResponseStateWidget.borderRadius"),
    customBorder$1: dart.privateName(ink_well, "_InkResponseStateWidget.customBorder"),
    focusColor$10: dart.privateName(ink_well, "_InkResponseStateWidget.focusColor"),
    hoverColor$11: dart.privateName(ink_well, "_InkResponseStateWidget.hoverColor"),
    highlightColor$6: dart.privateName(ink_well, "_InkResponseStateWidget.highlightColor"),
    overlayColor$7: dart.privateName(ink_well, "_InkResponseStateWidget.overlayColor"),
    splashColor$7: dart.privateName(ink_well, "_InkResponseStateWidget.splashColor"),
    splashFactory$1: dart.privateName(ink_well, "_InkResponseStateWidget.splashFactory"),
    enableFeedback$9: dart.privateName(ink_well, "_InkResponseStateWidget.enableFeedback"),
    excludeFromSemantics$3: dart.privateName(ink_well, "_InkResponseStateWidget.excludeFromSemantics"),
    onFocusChange$1: dart.privateName(ink_well, "_InkResponseStateWidget.onFocusChange"),
    autofocus$8: dart.privateName(ink_well, "_InkResponseStateWidget.autofocus"),
    focusNode$8: dart.privateName(ink_well, "_InkResponseStateWidget.focusNode"),
    canRequestFocus$1: dart.privateName(ink_well, "_InkResponseStateWidget.canRequestFocus"),
    parentState: dart.privateName(ink_well, "_InkResponseStateWidget.parentState"),
    getRectCallback: dart.privateName(ink_well, "_InkResponseStateWidget.getRectCallback"),
    debugCheckContext: dart.privateName(ink_well, "_InkResponseStateWidget.debugCheckContext"),
    _name$17: dart.privateName(ink_well, "_name"),
    _splashes: dart.privateName(ink_well, "_splashes"),
    _currentSplash: dart.privateName(ink_well, "_currentSplash"),
    _hovering: dart.privateName(ink_well, "_hovering"),
    _highlights: dart.privateName(ink_well, "_highlights"),
    ___InkResponseState__actionMap: dart.privateName(ink_well, "_#_InkResponseState#_actionMap"),
    ___InkResponseState__actionMap_isSet: dart.privateName(ink_well, "_#_InkResponseState#_actionMap#isSet"),
    _activeChildren: dart.privateName(ink_well, "_activeChildren"),
    _hasFocus: dart.privateName(ink_well, "_hasFocus"),
    _simulateTap: dart.privateName(ink_well, "_simulateTap"),
    _actionMap: dart.privateName(ink_well, "_actionMap"),
    $where: dartx.where,
    _anyChildInkResponsePressed: dart.privateName(ink_well, "_anyChildInkResponsePressed"),
    _startSplash: dart.privateName(ink_well, "_startSplash"),
    _handleTap$1: dart.privateName(ink_well, "_handleTap"),
    _handleLongPress$1: dart.privateName(ink_well, "_handleLongPress"),
    _simulateLongPress: dart.privateName(ink_well, "_simulateLongPress"),
    _handleFocusHighlightModeChange: dart.privateName(ink_well, "_handleFocusHighlightModeChange"),
    _isWidgetEnabled: dart.privateName(ink_well, "_isWidgetEnabled"),
    _updateFocusHighlights: dart.privateName(ink_well, "_updateFocusHighlights"),
    _name$18: dart.privateName(material_state, "_name"),
    _createInkFeature: dart.privateName(ink_well, "_createInkFeature"),
    _name$19: dart.privateName(media_query, "_name"),
    _shouldShowFocus: dart.privateName(ink_well, "_shouldShowFocus"),
    _name$20: dart.privateName(focus_manager, "_name"),
    _handleFocusUpdate: dart.privateName(ink_well, "_handleFocusUpdate"),
    _handleTapDown: dart.privateName(ink_well, "_handleTapDown"),
    _handleTapCancel: dart.privateName(ink_well, "_handleTapCancel"),
    _handleDoubleTap: dart.privateName(ink_well, "_handleDoubleTap"),
    _handleHoverChange: dart.privateName(ink_well, "_handleHoverChange"),
    _handleMouseEnter: dart.privateName(ink_well, "_handleMouseEnter"),
    _handleMouseExit: dart.privateName(ink_well, "_handleMouseExit"),
    _canRequestFocus: dart.privateName(ink_well, "_canRequestFocus"),
    _name$21: dart.privateName(bottom_navigation_bar, "_name"),
    items: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.items"),
    onTap$4: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.onTap"),
    currentIndex: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.currentIndex"),
    elevation$18: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.elevation"),
    type: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.type"),
    backgroundColor$13: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.backgroundColor"),
    iconSize$1: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.iconSize"),
    selectedItemColor: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedItemColor"),
    unselectedItemColor: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedItemColor"),
    selectedIconTheme$2: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedIconTheme"),
    unselectedIconTheme$2: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedIconTheme"),
    selectedLabelStyle: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedLabelStyle"),
    unselectedLabelStyle$3: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedLabelStyle"),
    selectedFontSize: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedFontSize"),
    unselectedFontSize: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedFontSize"),
    showUnselectedLabels: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.showUnselectedLabels"),
    showSelectedLabels: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.showSelectedLabels"),
    mouseCursor$13: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.mouseCursor"),
    $every: dartx.every,
    type$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.type"),
    item: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.item"),
    animation$7: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.animation"),
    iconSize$2: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.iconSize"),
    onTap$5: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.onTap"),
    colorTween: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.colorTween"),
    flex: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.flex"),
    selected$2: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selected"),
    selectedIconTheme$3: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selectedIconTheme"),
    unselectedIconTheme$3: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.unselectedIconTheme"),
    selectedLabelStyle$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selectedLabelStyle"),
    unselectedLabelStyle$4: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.unselectedLabelStyle"),
    indexLabel: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.indexLabel"),
    showSelectedLabels$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.showSelectedLabels"),
    showUnselectedLabels$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.showUnselectedLabels"),
    mouseCursor$14: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.mouseCursor"),
    colorTween$1: dart.privateName(bottom_navigation_bar, "_TileIcon.colorTween"),
    animation$8: dart.privateName(bottom_navigation_bar, "_TileIcon.animation"),
    iconSize$3: dart.privateName(bottom_navigation_bar, "_TileIcon.iconSize"),
    selected$3: dart.privateName(bottom_navigation_bar, "_TileIcon.selected"),
    item$1: dart.privateName(bottom_navigation_bar, "_TileIcon.item"),
    selectedIconTheme$4: dart.privateName(bottom_navigation_bar, "_TileIcon.selectedIconTheme"),
    unselectedIconTheme$4: dart.privateName(bottom_navigation_bar, "_TileIcon.unselectedIconTheme"),
    colorTween$2: dart.privateName(bottom_navigation_bar, "_Label.colorTween"),
    animation$9: dart.privateName(bottom_navigation_bar, "_Label.animation"),
    item$2: dart.privateName(bottom_navigation_bar, "_Label.item"),
    selectedLabelStyle$2: dart.privateName(bottom_navigation_bar, "_Label.selectedLabelStyle"),
    unselectedLabelStyle$5: dart.privateName(bottom_navigation_bar, "_Label.unselectedLabelStyle"),
    showSelectedLabels$2: dart.privateName(bottom_navigation_bar, "_Label.showSelectedLabels"),
    showUnselectedLabels$2: dart.privateName(bottom_navigation_bar, "_Label.showUnselectedLabels"),
    _controllers: dart.privateName(bottom_navigation_bar, "_controllers"),
    ___BottomNavigationBarState__animations: dart.privateName(bottom_navigation_bar, "_#_BottomNavigationBarState#_animations"),
    ___BottomNavigationBarState__animations_isSet: dart.privateName(bottom_navigation_bar, "_#_BottomNavigationBarState#_animations#isSet"),
    _circles: dart.privateName(bottom_navigation_bar, "_circles"),
    _backgroundColor$1: dart.privateName(bottom_navigation_bar, "_backgroundColor"),
    _animations: dart.privateName(bottom_navigation_bar, "_animations"),
    _rebuild$1: dart.privateName(bottom_navigation_bar, "_rebuild"),
    _resetState$1: dart.privateName(bottom_navigation_bar, "_resetState"),
    _effectiveType: dart.privateName(bottom_navigation_bar, "_effectiveType"),
    _defaultShowUnselected: dart.privateName(bottom_navigation_bar, "_defaultShowUnselected"),
    _evaluateFlex: dart.privateName(bottom_navigation_bar, "_evaluateFlex"),
    _pushCircle: dart.privateName(bottom_navigation_bar, "_pushCircle"),
    TextStyle_fontFeatures: dart.privateName(text_style, "TextStyle.fontFeatures"),
    TextStyle_shadows: dart.privateName(text_style, "TextStyle.shadows"),
    TextStyle_debugLabel: dart.privateName(text_style, "TextStyle.debugLabel"),
    TextStyle_decorationThickness: dart.privateName(text_style, "TextStyle.decorationThickness"),
    TextStyle_decorationStyle: dart.privateName(text_style, "TextStyle.decorationStyle"),
    TextStyle_decorationColor: dart.privateName(text_style, "TextStyle.decorationColor"),
    TextStyle_decoration: dart.privateName(text_style, "TextStyle.decoration"),
    TextStyle_background: dart.privateName(text_style, "TextStyle.background"),
    TextStyle_foreground: dart.privateName(text_style, "TextStyle.foreground"),
    TextStyle_locale: dart.privateName(text_style, "TextStyle.locale"),
    TextStyle_height: dart.privateName(text_style, "TextStyle.height"),
    TextStyle_textBaseline: dart.privateName(text_style, "TextStyle.textBaseline"),
    TextStyle_wordSpacing: dart.privateName(text_style, "TextStyle.wordSpacing"),
    TextStyle_letterSpacing: dart.privateName(text_style, "TextStyle.letterSpacing"),
    TextStyle_fontStyle: dart.privateName(text_style, "TextStyle.fontStyle"),
    TextStyle_fontWeight: dart.privateName(text_style, "TextStyle.fontWeight"),
    TextStyle_fontSize: dart.privateName(text_style, "TextStyle.fontSize"),
    TextStyle__package: dart.privateName(text_style, "TextStyle._package"),
    TextStyle__fontFamilyFallback: dart.privateName(text_style, "TextStyle._fontFamilyFallback"),
    TextStyle_fontFamily: dart.privateName(text_style, "TextStyle.fontFamily"),
    TextStyle_backgroundColor: dart.privateName(text_style, "TextStyle.backgroundColor"),
    TextStyle_color: dart.privateName(text_style, "TextStyle.color"),
    TextStyle_inherit: dart.privateName(text_style, "TextStyle.inherit"),
    _createTiles: dart.privateName(bottom_navigation_bar, "_createTiles"),
    _createContainer: dart.privateName(bottom_navigation_bar, "_createContainer"),
    ___Circle_controller: dart.privateName(bottom_navigation_bar, "_#_Circle#controller"),
    ___Circle_controller_isSet: dart.privateName(bottom_navigation_bar, "_#_Circle#controller#isSet"),
    ___Circle_animation: dart.privateName(bottom_navigation_bar, "_#_Circle#animation"),
    ___Circle_animation_isSet: dart.privateName(bottom_navigation_bar, "_#_Circle#animation#isSet"),
    $fold: dartx.fold,
    $sublist: dartx.sublist,
    backgroundColor$14: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.backgroundColor"),
    elevation$19: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.elevation"),
    selectedIconTheme$5: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedIconTheme"),
    unselectedIconTheme$5: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedIconTheme"),
    selectedItemColor$1: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedItemColor"),
    unselectedItemColor$1: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedItemColor"),
    selectedLabelStyle$3: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedLabelStyle"),
    unselectedLabelStyle$6: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedLabelStyle"),
    showSelectedLabels$3: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.showSelectedLabels"),
    showUnselectedLabels$3: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.showUnselectedLabels"),
    type$2: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.type"),
    data$17: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarTheme.data"),
    color$12: dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.color"),
    elevation$20: dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.elevation"),
    shape$18: dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.shape"),
    backgroundColor$15: dart.privateName(banner_theme, "MaterialBannerThemeData.backgroundColor"),
    contentTextStyle$3: dart.privateName(banner_theme, "MaterialBannerThemeData.contentTextStyle"),
    padding$12: dart.privateName(banner_theme, "MaterialBannerThemeData.padding"),
    leadingPadding: dart.privateName(banner_theme, "MaterialBannerThemeData.leadingPadding"),
    data$18: dart.privateName(banner_theme, "MaterialBannerTheme.data"),
    visualDensity$10: dart.privateName(theme_data, "ThemeData.visualDensity"),
    primaryColor: dart.privateName(theme_data, "ThemeData.primaryColor"),
    primaryColorBrightness: dart.privateName(theme_data, "ThemeData.primaryColorBrightness"),
    primaryColorLight: dart.privateName(theme_data, "ThemeData.primaryColorLight"),
    primaryColorDark: dart.privateName(theme_data, "ThemeData.primaryColorDark"),
    canvasColor: dart.privateName(theme_data, "ThemeData.canvasColor"),
    shadowColor$3: dart.privateName(theme_data, "ThemeData.shadowColor"),
    accentColor: dart.privateName(theme_data, "ThemeData.accentColor"),
    accentColorBrightness: dart.privateName(theme_data, "ThemeData.accentColorBrightness"),
    scaffoldBackgroundColor: dart.privateName(theme_data, "ThemeData.scaffoldBackgroundColor"),
    bottomAppBarColor: dart.privateName(theme_data, "ThemeData.bottomAppBarColor"),
    cardColor: dart.privateName(theme_data, "ThemeData.cardColor"),
    dividerColor: dart.privateName(theme_data, "ThemeData.dividerColor"),
    focusColor$11: dart.privateName(theme_data, "ThemeData.focusColor"),
    hoverColor$12: dart.privateName(theme_data, "ThemeData.hoverColor"),
    highlightColor$7: dart.privateName(theme_data, "ThemeData.highlightColor"),
    splashColor$8: dart.privateName(theme_data, "ThemeData.splashColor"),
    splashFactory$2: dart.privateName(theme_data, "ThemeData.splashFactory"),
    selectedRowColor: dart.privateName(theme_data, "ThemeData.selectedRowColor"),
    unselectedWidgetColor: dart.privateName(theme_data, "ThemeData.unselectedWidgetColor"),
    disabledColor$4: dart.privateName(theme_data, "ThemeData.disabledColor"),
    buttonTheme: dart.privateName(theme_data, "ThemeData.buttonTheme"),
    toggleButtonsTheme: dart.privateName(theme_data, "ThemeData.toggleButtonsTheme"),
    buttonColor: dart.privateName(theme_data, "ThemeData.buttonColor"),
    secondaryHeaderColor: dart.privateName(theme_data, "ThemeData.secondaryHeaderColor"),
    textSelectionColor: dart.privateName(theme_data, "ThemeData.textSelectionColor"),
    cursorColor$1: dart.privateName(theme_data, "ThemeData.cursorColor"),
    textSelectionHandleColor: dart.privateName(theme_data, "ThemeData.textSelectionHandleColor"),
    backgroundColor$16: dart.privateName(theme_data, "ThemeData.backgroundColor"),
    dialogBackgroundColor: dart.privateName(theme_data, "ThemeData.dialogBackgroundColor"),
    indicatorColor$1: dart.privateName(theme_data, "ThemeData.indicatorColor"),
    hintColor: dart.privateName(theme_data, "ThemeData.hintColor"),
    errorColor: dart.privateName(theme_data, "ThemeData.errorColor"),
    toggleableActiveColor: dart.privateName(theme_data, "ThemeData.toggleableActiveColor"),
    textTheme$2: dart.privateName(theme_data, "ThemeData.textTheme"),
    primaryTextTheme: dart.privateName(theme_data, "ThemeData.primaryTextTheme"),
    accentTextTheme: dart.privateName(theme_data, "ThemeData.accentTextTheme"),
    inputDecorationTheme$1: dart.privateName(theme_data, "ThemeData.inputDecorationTheme"),
    iconTheme: dart.privateName(theme_data, "ThemeData.iconTheme"),
    primaryIconTheme: dart.privateName(theme_data, "ThemeData.primaryIconTheme"),
    accentIconTheme: dart.privateName(theme_data, "ThemeData.accentIconTheme"),
    sliderTheme: dart.privateName(theme_data, "ThemeData.sliderTheme"),
    tabBarTheme: dart.privateName(theme_data, "ThemeData.tabBarTheme"),
    tooltipTheme: dart.privateName(theme_data, "ThemeData.tooltipTheme"),
    cardTheme: dart.privateName(theme_data, "ThemeData.cardTheme"),
    chipTheme: dart.privateName(theme_data, "ThemeData.chipTheme"),
    platform: dart.privateName(theme_data, "ThemeData.platform"),
    materialTapTargetSize$7: dart.privateName(theme_data, "ThemeData.materialTapTargetSize"),
    applyElevationOverlayColor: dart.privateName(theme_data, "ThemeData.applyElevationOverlayColor"),
    pageTransitionsTheme: dart.privateName(theme_data, "ThemeData.pageTransitionsTheme"),
    appBarTheme: dart.privateName(theme_data, "ThemeData.appBarTheme"),
    scrollbarTheme: dart.privateName(theme_data, "ThemeData.scrollbarTheme"),
    bottomAppBarTheme: dart.privateName(theme_data, "ThemeData.bottomAppBarTheme"),
    colorScheme: dart.privateName(theme_data, "ThemeData.colorScheme"),
    snackBarTheme: dart.privateName(theme_data, "ThemeData.snackBarTheme")
  };
  var S$1 = {
    dialogTheme: dart.privateName(theme_data, "ThemeData.dialogTheme"),
    floatingActionButtonTheme: dart.privateName(theme_data, "ThemeData.floatingActionButtonTheme"),
    navigationRailTheme: dart.privateName(theme_data, "ThemeData.navigationRailTheme"),
    typography: dart.privateName(theme_data, "ThemeData.typography"),
    cupertinoOverrideTheme: dart.privateName(theme_data, "ThemeData.cupertinoOverrideTheme"),
    bottomSheetTheme: dart.privateName(theme_data, "ThemeData.bottomSheetTheme"),
    popupMenuTheme: dart.privateName(theme_data, "ThemeData.popupMenuTheme"),
    bannerTheme: dart.privateName(theme_data, "ThemeData.bannerTheme"),
    dividerTheme: dart.privateName(theme_data, "ThemeData.dividerTheme"),
    buttonBarTheme: dart.privateName(theme_data, "ThemeData.buttonBarTheme"),
    bottomNavigationBarTheme: dart.privateName(theme_data, "ThemeData.bottomNavigationBarTheme"),
    timePickerTheme: dart.privateName(theme_data, "ThemeData.timePickerTheme"),
    textButtonTheme: dart.privateName(theme_data, "ThemeData.textButtonTheme"),
    elevatedButtonTheme: dart.privateName(theme_data, "ThemeData.elevatedButtonTheme"),
    outlinedButtonTheme: dart.privateName(theme_data, "ThemeData.outlinedButtonTheme"),
    textSelectionTheme: dart.privateName(theme_data, "ThemeData.textSelectionTheme"),
    dataTableTheme: dart.privateName(theme_data, "ThemeData.dataTableTheme"),
    checkboxTheme: dart.privateName(theme_data, "ThemeData.checkboxTheme"),
    radioTheme: dart.privateName(theme_data, "ThemeData.radioTheme"),
    switchTheme: dart.privateName(theme_data, "ThemeData.switchTheme"),
    fixTextFieldOutlineLabel$1: dart.privateName(theme_data, "ThemeData.fixTextFieldOutlineLabel"),
    useTextSelectionTheme: dart.privateName(theme_data, "ThemeData.useTextSelectionTheme"),
    IconThemeData_size: dart.privateName(icon_theme_data, "IconThemeData.size"),
    IconThemeData__opacity: dart.privateName(icon_theme_data, "IconThemeData._opacity"),
    IconThemeData_color: dart.privateName(icon_theme_data, "IconThemeData.color"),
    AppBarTheme_backwardsCompatibility: dart.privateName(app_bar_theme, "AppBarTheme.backwardsCompatibility"),
    AppBarTheme_systemOverlayStyle: dart.privateName(app_bar_theme, "AppBarTheme.systemOverlayStyle"),
    AppBarTheme_titleTextStyle: dart.privateName(app_bar_theme, "AppBarTheme.titleTextStyle"),
    AppBarTheme_toolbarTextStyle: dart.privateName(app_bar_theme, "AppBarTheme.toolbarTextStyle"),
    AppBarTheme_titleSpacing: dart.privateName(app_bar_theme, "AppBarTheme.titleSpacing"),
    AppBarTheme_centerTitle: dart.privateName(app_bar_theme, "AppBarTheme.centerTitle"),
    AppBarTheme_textTheme: dart.privateName(app_bar_theme, "AppBarTheme.textTheme"),
    AppBarTheme_actionsIconTheme: dart.privateName(app_bar_theme, "AppBarTheme.actionsIconTheme"),
    AppBarTheme_iconTheme: dart.privateName(app_bar_theme, "AppBarTheme.iconTheme"),
    AppBarTheme_shadowColor: dart.privateName(app_bar_theme, "AppBarTheme.shadowColor"),
    AppBarTheme_elevation: dart.privateName(app_bar_theme, "AppBarTheme.elevation"),
    AppBarTheme_foregroundColor: dart.privateName(app_bar_theme, "AppBarTheme.foregroundColor"),
    AppBarTheme_backgroundColor: dart.privateName(app_bar_theme, "AppBarTheme.backgroundColor"),
    AppBarTheme_brightness: dart.privateName(app_bar_theme, "AppBarTheme.brightness"),
    FloatingActionButtonThemeData_shape: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.shape"),
    FloatingActionButtonThemeData_highlightElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.highlightElevation"),
    FloatingActionButtonThemeData_disabledElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.disabledElevation"),
    FloatingActionButtonThemeData_hoverElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.hoverElevation"),
    FloatingActionButtonThemeData_focusElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.focusElevation"),
    FloatingActionButtonThemeData_elevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.elevation"),
    FloatingActionButtonThemeData_splashColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.splashColor"),
    FloatingActionButtonThemeData_hoverColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.hoverColor"),
    FloatingActionButtonThemeData_focusColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.focusColor"),
    FloatingActionButtonThemeData_backgroundColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.backgroundColor"),
    FloatingActionButtonThemeData_foregroundColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.foregroundColor"),
    BottomSheetThemeData_clipBehavior: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.clipBehavior"),
    BottomSheetThemeData_shape: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.shape"),
    BottomSheetThemeData_modalElevation: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalElevation"),
    BottomSheetThemeData_modalBackgroundColor: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalBackgroundColor"),
    BottomSheetThemeData_elevation: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.elevation"),
    BottomSheetThemeData_backgroundColor: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.backgroundColor"),
    ButtonBarThemeData_overflowDirection: dart.privateName(button_bar_theme, "ButtonBarThemeData.overflowDirection"),
    ButtonBarThemeData_layoutBehavior: dart.privateName(button_bar_theme, "ButtonBarThemeData.layoutBehavior"),
    ButtonBarThemeData_buttonAlignedDropdown: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonAlignedDropdown"),
    ButtonBarThemeData_buttonPadding: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonPadding"),
    ButtonBarThemeData_buttonHeight: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonHeight"),
    ButtonBarThemeData_buttonMinWidth: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonMinWidth"),
    ButtonBarThemeData_buttonTextTheme: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonTextTheme"),
    ButtonBarThemeData_mainAxisSize: dart.privateName(button_bar_theme, "ButtonBarThemeData.mainAxisSize"),
    ButtonBarThemeData_alignment: dart.privateName(button_bar_theme, "ButtonBarThemeData.alignment"),
    NoDefaultCupertinoThemeData_scaffoldBackgroundColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.scaffoldBackgroundColor"),
    NoDefaultCupertinoThemeData_barBackgroundColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.barBackgroundColor"),
    NoDefaultCupertinoThemeData_textTheme: dart.privateName(theme, "NoDefaultCupertinoThemeData.textTheme"),
    NoDefaultCupertinoThemeData_primaryContrastingColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.primaryContrastingColor"),
    NoDefaultCupertinoThemeData_primaryColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.primaryColor"),
    NoDefaultCupertinoThemeData_brightness: dart.privateName(theme, "NoDefaultCupertinoThemeData.brightness"),
    CupertinoDynamicColor_darkHighContrastElevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkHighContrastElevatedColor"),
    CupertinoDynamicColor_highContrastElevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.highContrastElevatedColor"),
    CupertinoDynamicColor_darkElevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkElevatedColor"),
    CupertinoDynamicColor_elevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.elevatedColor"),
    CupertinoDynamicColor_darkHighContrastColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkHighContrastColor"),
    CupertinoDynamicColor_highContrastColor: dart.privateName(colors$0, "CupertinoDynamicColor.highContrastColor"),
    CupertinoDynamicColor_darkColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkColor"),
    CupertinoDynamicColor_color: dart.privateName(colors$0, "CupertinoDynamicColor.color"),
    CupertinoDynamicColor__debugResolveContext: dart.privateName(colors$0, "CupertinoDynamicColor._debugResolveContext"),
    CupertinoDynamicColor__debugLabel: dart.privateName(colors$0, "CupertinoDynamicColor._debugLabel"),
    CupertinoDynamicColor__effectiveColor: dart.privateName(colors$0, "CupertinoDynamicColor._effectiveColor"),
    _CupertinoTextThemeDefaults_inactiveGray: dart.privateName(theme, "_CupertinoTextThemeDefaults.inactiveGray"),
    _CupertinoTextThemeDefaults_labelColor: dart.privateName(theme, "_CupertinoTextThemeDefaults.labelColor"),
    _CupertinoThemeDefaults_textThemeDefaults: dart.privateName(theme, "_CupertinoThemeDefaults.textThemeDefaults"),
    _CupertinoThemeDefaults_scaffoldBackgroundColor: dart.privateName(theme, "_CupertinoThemeDefaults.scaffoldBackgroundColor"),
    _CupertinoThemeDefaults_barBackgroundColor: dart.privateName(theme, "_CupertinoThemeDefaults.barBackgroundColor"),
    _CupertinoThemeDefaults_primaryContrastingColor: dart.privateName(theme, "_CupertinoThemeDefaults.primaryContrastingColor"),
    _CupertinoThemeDefaults_primaryColor: dart.privateName(theme, "_CupertinoThemeDefaults.primaryColor"),
    _CupertinoThemeDefaults_brightness: dart.privateName(theme, "_CupertinoThemeDefaults.brightness"),
    CupertinoThemeData__defaults: dart.privateName(theme, "CupertinoThemeData._defaults"),
    _materialTheme: dart.privateName(theme_data, "_materialTheme"),
    _cupertinoOverrideTheme: dart.privateName(theme_data, "_cupertinoOverrideTheme"),
    baseTheme: dart.privateName(theme_data, "_IdentityThemeDataCacheKey.baseTheme"),
    localTextGeometry: dart.privateName(theme_data, "_IdentityThemeDataCacheKey.localTextGeometry"),
    _cache: dart.privateName(theme_data, "_cache"),
    _maximumSize: dart.privateName(theme_data, "_maximumSize"),
    $first: dartx.first,
    horizontal: dart.privateName(theme_data, "VisualDensity.horizontal"),
    vertical: dart.privateName(theme_data, "VisualDensity.vertical"),
    primary: dart.privateName(color_scheme, "ColorScheme.primary"),
    primaryVariant: dart.privateName(color_scheme, "ColorScheme.primaryVariant"),
    secondary: dart.privateName(color_scheme, "ColorScheme.secondary"),
    secondaryVariant: dart.privateName(color_scheme, "ColorScheme.secondaryVariant"),
    surface: dart.privateName(color_scheme, "ColorScheme.surface"),
    background$1: dart.privateName(color_scheme, "ColorScheme.background"),
    error: dart.privateName(color_scheme, "ColorScheme.error"),
    onPrimary: dart.privateName(color_scheme, "ColorScheme.onPrimary"),
    onSecondary: dart.privateName(color_scheme, "ColorScheme.onSecondary"),
    onSurface: dart.privateName(color_scheme, "ColorScheme.onSurface"),
    onBackground: dart.privateName(color_scheme, "ColorScheme.onBackground"),
    onError: dart.privateName(color_scheme, "ColorScheme.onError"),
    brightness$2: dart.privateName(color_scheme, "ColorScheme.brightness"),
    ColorSwatch__swatch: dart.privateName(colors, "ColorSwatch._swatch"),
    _name$22: dart.privateName(button_theme, "_name"),
    data$19: dart.privateName(button_theme, "ButtonTheme.data"),
    minWidth$2: dart.privateName(button_theme, "ButtonThemeData.minWidth"),
    height$5: dart.privateName(button_theme, "ButtonThemeData.height"),
    textTheme$3: dart.privateName(button_theme, "ButtonThemeData.textTheme"),
    layoutBehavior: dart.privateName(button_theme, "ButtonThemeData.layoutBehavior"),
    _padding: dart.privateName(button_theme, "ButtonThemeData._padding"),
    _shape$1: dart.privateName(button_theme, "ButtonThemeData._shape"),
    alignedDropdown: dart.privateName(button_theme, "ButtonThemeData.alignedDropdown"),
    _buttonColor: dart.privateName(button_theme, "ButtonThemeData._buttonColor"),
    _disabledColor: dart.privateName(button_theme, "ButtonThemeData._disabledColor"),
    _focusColor: dart.privateName(button_theme, "ButtonThemeData._focusColor"),
    _hoverColor: dart.privateName(button_theme, "ButtonThemeData._hoverColor"),
    _highlightColor: dart.privateName(button_theme, "ButtonThemeData._highlightColor"),
    _splashColor: dart.privateName(button_theme, "ButtonThemeData._splashColor"),
    colorScheme$1: dart.privateName(button_theme, "ButtonThemeData.colorScheme"),
    _materialTapTargetSize: dart.privateName(button_theme, "ButtonThemeData._materialTapTargetSize"),
    _padding$1: dart.privateName(button_theme, "_padding"),
    _shape$2: dart.privateName(button_theme, "_shape"),
    _buttonColor$1: dart.privateName(button_theme, "_buttonColor"),
    _disabledColor$1: dart.privateName(button_theme, "_disabledColor"),
    _focusColor$1: dart.privateName(button_theme, "_focusColor"),
    _hoverColor$1: dart.privateName(button_theme, "_hoverColor"),
    _highlightColor$1: dart.privateName(button_theme, "_highlightColor"),
    _splashColor$1: dart.privateName(button_theme, "_splashColor"),
    _materialTapTargetSize$1: dart.privateName(button_theme, "_materialTapTargetSize"),
    alignment$3: dart.privateName(button_bar_theme, "ButtonBarThemeData.alignment"),
    mainAxisSize: dart.privateName(button_bar_theme, "ButtonBarThemeData.mainAxisSize"),
    buttonTextTheme: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonTextTheme"),
    buttonMinWidth: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonMinWidth"),
    buttonHeight: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonHeight"),
    buttonPadding$1: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonPadding"),
    buttonAlignedDropdown: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonAlignedDropdown"),
    layoutBehavior$1: dart.privateName(button_bar_theme, "ButtonBarThemeData.layoutBehavior"),
    overflowDirection: dart.privateName(button_bar_theme, "ButtonBarThemeData.overflowDirection"),
    data$20: dart.privateName(button_bar_theme, "ButtonBarTheme.data"),
    alignment$4: dart.privateName(button_bar, "ButtonBar.alignment"),
    mainAxisSize$1: dart.privateName(button_bar, "ButtonBar.mainAxisSize"),
    buttonTextTheme$1: dart.privateName(button_bar, "ButtonBar.buttonTextTheme"),
    buttonMinWidth$1: dart.privateName(button_bar, "ButtonBar.buttonMinWidth"),
    buttonHeight$1: dart.privateName(button_bar, "ButtonBar.buttonHeight"),
    buttonPadding$2: dart.privateName(button_bar, "ButtonBar.buttonPadding"),
    buttonAlignedDropdown$1: dart.privateName(button_bar, "ButtonBar.buttonAlignedDropdown"),
    layoutBehavior$2: dart.privateName(button_bar, "ButtonBar.layoutBehavior"),
    overflowDirection$1: dart.privateName(button_bar, "ButtonBar.overflowDirection"),
    overflowButtonSpacing: dart.privateName(button_bar, "ButtonBar.overflowButtonSpacing"),
    children$2: dart.privateName(button_bar, "ButtonBar.children"),
    _name$23: dart.privateName(basic_types, "_name"),
    _name$24: dart.privateName(flex, "_name"),
    _hasCheckedLayoutWidth: dart.privateName(button_bar, "_hasCheckedLayoutWidth"),
    animationController: dart.privateName(bottom_sheet, "BottomSheet.animationController"),
    onClosing: dart.privateName(bottom_sheet, "BottomSheet.onClosing"),
    builder: dart.privateName(bottom_sheet, "BottomSheet.builder"),
    enableDrag: dart.privateName(bottom_sheet, "BottomSheet.enableDrag"),
    onDragStart: dart.privateName(bottom_sheet, "BottomSheet.onDragStart"),
    onDragEnd: dart.privateName(bottom_sheet, "BottomSheet.onDragEnd"),
    backgroundColor$17: dart.privateName(bottom_sheet, "BottomSheet.backgroundColor"),
    elevation$21: dart.privateName(bottom_sheet, "BottomSheet.elevation"),
    shape$19: dart.privateName(bottom_sheet, "BottomSheet.shape"),
    clipBehavior$9: dart.privateName(bottom_sheet, "BottomSheet.clipBehavior"),
    _childKey: dart.privateName(bottom_sheet, "_childKey"),
    _childHeight: dart.privateName(bottom_sheet, "_childHeight"),
    _dismissUnderway: dart.privateName(bottom_sheet, "_dismissUnderway"),
    _handleDragStart: dart.privateName(bottom_sheet, "_handleDragStart"),
    _handleDragUpdate: dart.privateName(bottom_sheet, "_handleDragUpdate"),
    _handleDragEnd: dart.privateName(bottom_sheet, "_handleDragEnd"),
    route: dart.privateName(bottom_sheet, "_ModalBottomSheet.route"),
    isScrollControlled: dart.privateName(bottom_sheet, "_ModalBottomSheet.isScrollControlled"),
    backgroundColor$18: dart.privateName(bottom_sheet, "_ModalBottomSheet.backgroundColor"),
    elevation$22: dart.privateName(bottom_sheet, "_ModalBottomSheet.elevation"),
    shape$20: dart.privateName(bottom_sheet, "_ModalBottomSheet.shape"),
    clipBehavior$10: dart.privateName(bottom_sheet, "_ModalBottomSheet.clipBehavior"),
    enableDrag$1: dart.privateName(bottom_sheet, "_ModalBottomSheet.enableDrag"),
    _getRouteLabel: dart.privateName(bottom_sheet, "_getRouteLabel"),
    _animationController: dart.privateName(bottom_sheet, "_animationController"),
    barrierLabel: dart.privateName(bottom_sheet, "_ModalBottomSheetRoute.barrierLabel"),
    startingPoint: dart.privateName(bottom_sheet, "_BottomSheetSuspendedCurve.startingPoint"),
    curve: dart.privateName(bottom_sheet, "_BottomSheetSuspendedCurve.curve"),
    _name$25: dart.privateName(scaffold$, "_name"),
    child$22: dart.privateName(scaffold$, "ScaffoldMessenger.child"),
    _scaffoldMessengerState: dart.privateName(scaffold$, "_scaffoldMessengerState"),
    _scaffolds: dart.privateName(scaffold$, "_scaffolds"),
    _snackBars: dart.privateName(scaffold$, "_snackBars"),
    _snackBarController: dart.privateName(scaffold$, "_snackBarController"),
    _snackBarTimer: dart.privateName(scaffold$, "_snackBarTimer"),
    _accessibleNavigation: dart.privateName(scaffold$, "_accessibleNavigation"),
    _updateSnackBar: dart.privateName(scaffold$, "_updateSnackBar"),
    _register: dart.privateName(scaffold$, "_register"),
    _unregister: dart.privateName(scaffold$, "_unregister"),
    _handleStatusChanged$1: dart.privateName(scaffold$, "_handleStatusChanged"),
    $isEmpty: dartx.isEmpty,
    _updateScaffolds: dart.privateName(scaffold$, "_updateScaffolds"),
    _isRoot: dart.privateName(scaffold$, "_isRoot"),
    _completer: dart.privateName(scaffold$, "_completer"),
    _widget: dart.privateName(scaffold$, "_widget"),
    _scaffoldMessengerState$1: dart.privateName(scaffold$, "_ScaffoldMessengerScope._scaffoldMessengerState"),
    floatingActionButtonSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.floatingActionButtonSize"),
    bottomSheetSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.bottomSheetSize"),
    contentBottom: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.contentBottom"),
    contentTop: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.contentTop"),
    minInsets: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.minInsets"),
    minViewPadding: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.minViewPadding"),
    scaffoldSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.scaffoldSize"),
    snackBarSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.snackBarSize"),
    textDirection$2: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.textDirection"),
    begin: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.begin"),
    end$2: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.end"),
    animator: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.animator"),
    progress: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.progress"),
    bottomNavigationBarTop: dart.privateName(scaffold$, "ScaffoldGeometry.bottomNavigationBarTop"),
    floatingActionButtonArea: dart.privateName(scaffold$, "ScaffoldGeometry.floatingActionButtonArea"),
    _scaleFloatingActionButton: dart.privateName(scaffold$, "_scaleFloatingActionButton"),
    _updateWith: dart.privateName(scaffold$, "_updateWith"),
    bottomWidgetsHeight: dart.privateName(scaffold$, "_BodyBoxConstraints.bottomWidgetsHeight"),
    appBarHeight: dart.privateName(scaffold$, "_BodyBoxConstraints.appBarHeight"),
    body: dart.privateName(scaffold$, "_BodyBuilder.body"),
    extendBody: dart.privateName(scaffold$, "_BodyBuilder.extendBody"),
    extendBodyBehindAppBar: dart.privateName(scaffold$, "_BodyBuilder.extendBodyBehindAppBar"),
    child$23: dart.privateName(scaffold$, "_FloatingActionButtonTransition.child"),
    fabMoveAnimation: dart.privateName(scaffold$, "_FloatingActionButtonTransition.fabMoveAnimation"),
    fabMotionAnimator: dart.privateName(scaffold$, "_FloatingActionButtonTransition.fabMotionAnimator"),
    geometryNotifier: dart.privateName(scaffold$, "_FloatingActionButtonTransition.geometryNotifier"),
    currentController: dart.privateName(scaffold$, "_FloatingActionButtonTransition.currentController"),
    ___FloatingActionButtonTransitionState__previousController: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousController"),
    ___FloatingActionButtonTransitionState__previousController_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousController#isSet"),
    ___FloatingActionButtonTransitionState__previousScaleAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousScaleAnimation"),
    ___FloatingActionButtonTransitionState__previousScaleAnimation_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousScaleAnimation#isSet"),
    ___FloatingActionButtonTransitionState__previousRotationAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousRotationAnimation"),
    ___FloatingActionButtonTransitionState__previousRotationAnimation_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousRotationAnimation#isSet"),
    ___FloatingActionButtonTransitionState__currentScaleAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_currentScaleAnimation"),
    ___FloatingActionButtonTransitionState__currentScaleAnimation_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_currentScaleAnimation#isSet"),
    ___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_extendedCurrentScaleAnimation"),
    ___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_extendedCurrentScaleAnimation#isSet"),
    ___FloatingActionButtonTransitionState__currentRotationAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_currentRotationAnimation"),
    ___FloatingActionButtonTransitionState__currentRotationAnimation_isSet: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_currentRotationAnimation#isSet"),
    _previousChild: dart.privateName(scaffold$, "_previousChild"),
    _previousController: dart.privateName(scaffold$, "_previousController"),
    _previousScaleAnimation: dart.privateName(scaffold$, "_previousScaleAnimation"),
    _previousRotationAnimation: dart.privateName(scaffold$, "_previousRotationAnimation"),
    _currentScaleAnimation: dart.privateName(scaffold$, "_currentScaleAnimation"),
    _extendedCurrentScaleAnimation: dart.privateName(scaffold$, "_extendedCurrentScaleAnimation"),
    _currentRotationAnimation: dart.privateName(scaffold$, "_currentRotationAnimation"),
    _handlePreviousAnimationStatusChanged: dart.privateName(scaffold$, "_handlePreviousAnimationStatusChanged"),
    _updateAnimations: dart.privateName(scaffold$, "_updateAnimations"),
    _updateGeometryScale: dart.privateName(scaffold$, "_updateGeometryScale"),
    _onProgressChanged: dart.privateName(scaffold$, "_onProgressChanged"),
    _isExtendedFloatingActionButton: dart.privateName(scaffold$, "_isExtendedFloatingActionButton"),
    extendBody$1: dart.privateName(scaffold$, "Scaffold.extendBody"),
    extendBodyBehindAppBar$1: dart.privateName(scaffold$, "Scaffold.extendBodyBehindAppBar"),
    appBar: dart.privateName(scaffold$, "Scaffold.appBar"),
    body$1: dart.privateName(scaffold$, "Scaffold.body"),
    floatingActionButton: dart.privateName(scaffold$, "Scaffold.floatingActionButton"),
    floatingActionButtonLocation: dart.privateName(scaffold$, "Scaffold.floatingActionButtonLocation"),
    floatingActionButtonAnimator: dart.privateName(scaffold$, "Scaffold.floatingActionButtonAnimator"),
    persistentFooterButtons: dart.privateName(scaffold$, "Scaffold.persistentFooterButtons"),
    drawer: dart.privateName(scaffold$, "Scaffold.drawer"),
    onDrawerChanged: dart.privateName(scaffold$, "Scaffold.onDrawerChanged"),
    endDrawer: dart.privateName(scaffold$, "Scaffold.endDrawer"),
    onEndDrawerChanged: dart.privateName(scaffold$, "Scaffold.onEndDrawerChanged"),
    drawerScrimColor: dart.privateName(scaffold$, "Scaffold.drawerScrimColor"),
    backgroundColor$19: dart.privateName(scaffold$, "Scaffold.backgroundColor"),
    bottomNavigationBar: dart.privateName(scaffold$, "Scaffold.bottomNavigationBar"),
    bottomSheet: dart.privateName(scaffold$, "Scaffold.bottomSheet"),
    resizeToAvoidBottomInset: dart.privateName(scaffold$, "Scaffold.resizeToAvoidBottomInset"),
    primary$1: dart.privateName(scaffold$, "Scaffold.primary"),
    drawerDragStartBehavior: dart.privateName(scaffold$, "Scaffold.drawerDragStartBehavior"),
    drawerEdgeDragWidth: dart.privateName(scaffold$, "Scaffold.drawerEdgeDragWidth"),
    drawerEnableOpenDragGesture: dart.privateName(scaffold$, "Scaffold.drawerEnableOpenDragGesture"),
    endDrawerEnableOpenDragGesture: dart.privateName(scaffold$, "Scaffold.endDrawerEnableOpenDragGesture"),
    restorationId: dart.privateName(scaffold$, "Scaffold.restorationId"),
    _drawerKey$1: dart.privateName(scaffold$, "_drawerKey"),
    _endDrawerKey: dart.privateName(scaffold$, "_endDrawerKey"),
    _appBarMaxHeight: dart.privateName(scaffold$, "_appBarMaxHeight"),
    _drawerOpened: dart.privateName(scaffold$, "_drawerOpened"),
    _endDrawerOpened: dart.privateName(scaffold$, "_endDrawerOpened"),
    _scaffoldMessenger: dart.privateName(scaffold$, "_scaffoldMessenger"),
    _messengerSnackBar: dart.privateName(scaffold$, "_messengerSnackBar"),
    _dismissedBottomSheets: dart.privateName(scaffold$, "_dismissedBottomSheets"),
    _currentBottomSheet: dart.privateName(scaffold$, "_currentBottomSheet"),
    _currentBottomSheetKey: dart.privateName(scaffold$, "_currentBottomSheetKey"),
    __ScaffoldState__floatingActionButtonMoveController: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonMoveController"),
    __ScaffoldState__floatingActionButtonMoveController_isSet: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonMoveController#isSet"),
    __ScaffoldState__floatingActionButtonAnimator: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonAnimator"),
    __ScaffoldState__floatingActionButtonAnimator_isSet: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonAnimator#isSet"),
    _previousFloatingActionButtonLocation: dart.privateName(scaffold$, "_previousFloatingActionButtonLocation"),
    _floatingActionButtonLocation: dart.privateName(scaffold$, "_floatingActionButtonLocation"),
    __ScaffoldState__floatingActionButtonVisibilityController: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonVisibilityController"),
    __ScaffoldState__floatingActionButtonVisibilityController_isSet: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonVisibilityController#isSet"),
    __ScaffoldState__geometryNotifier: dart.privateName(scaffold$, "_#ScaffoldState#_geometryNotifier"),
    __ScaffoldState__geometryNotifier_isSet: dart.privateName(scaffold$, "_#ScaffoldState#_geometryNotifier#isSet"),
    _showBodyScrim: dart.privateName(scaffold$, "_showBodyScrim"),
    _bodyScrimColor: dart.privateName(scaffold$, "_bodyScrimColor"),
    _drawerOpenedCallback: dart.privateName(scaffold$, "_drawerOpenedCallback"),
    _endDrawerOpenedCallback: dart.privateName(scaffold$, "_endDrawerOpenedCallback"),
    _handleSnackBarStatusChange: dart.privateName(scaffold$, "_handleSnackBarStatusChange"),
    _floatingActionButtonVisibilityValue: dart.privateName(scaffold$, "_floatingActionButtonVisibilityValue"),
    _buildBottomSheet: dart.privateName(scaffold$, "_buildBottomSheet"),
    _maybeBuildPersistentBottomSheet: dart.privateName(scaffold$, "_maybeBuildPersistentBottomSheet"),
    _isLocalHistoryEntry: dart.privateName(scaffold$, "_isLocalHistoryEntry"),
    _closeCurrentBottomSheet: dart.privateName(scaffold$, "_closeCurrentBottomSheet"),
    _updatePersistentBottomSheet: dart.privateName(scaffold$, "_updatePersistentBottomSheet"),
    _showFloatingActionButton: dart.privateName(scaffold$, "_showFloatingActionButton"),
    _floatingActionButtonMoveController: dart.privateName(scaffold$, "_floatingActionButtonMoveController"),
    _floatingActionButtonAnimator: dart.privateName(scaffold$, "_floatingActionButtonAnimator"),
    _floatingActionButtonVisibilityController: dart.privateName(scaffold$, "_floatingActionButtonVisibilityController"),
    _moveFloatingActionButton: dart.privateName(scaffold$, "_moveFloatingActionButton"),
    _handleStatusBarTap: dart.privateName(scaffold$, "_handleStatusBarTap"),
    _geometryNotifier: dart.privateName(scaffold$, "_geometryNotifier"),
    _resizeToAvoidBottomInset: dart.privateName(scaffold$, "_resizeToAvoidBottomInset"),
    _addIfNonNull: dart.privateName(scaffold$, "_addIfNonNull"),
    _buildEndDrawer: dart.privateName(scaffold$, "_buildEndDrawer"),
    _buildDrawer$1: dart.privateName(scaffold$, "_buildDrawer"),
    $isFinite: dartx.isFinite,
    _widget$1: dart.privateName(scaffold$, "ScaffoldFeatureController._widget"),
    _completer$1: dart.privateName(scaffold$, "ScaffoldFeatureController._completer"),
    close: dart.privateName(scaffold$, "ScaffoldFeatureController.close"),
    setState: dart.privateName(scaffold$, "ScaffoldFeatureController.setState"),
    startingPoint$1: dart.privateName(scaffold$, "_BottomSheetSuspendedCurve.startingPoint"),
    curve$1: dart.privateName(scaffold$, "_BottomSheetSuspendedCurve.curve"),
    animationController$1: dart.privateName(scaffold$, "_StandardBottomSheet.animationController"),
    enableDrag$2: dart.privateName(scaffold$, "_StandardBottomSheet.enableDrag"),
    onClosing$1: dart.privateName(scaffold$, "_StandardBottomSheet.onClosing"),
    onDismissed: dart.privateName(scaffold$, "_StandardBottomSheet.onDismissed"),
    builder$1: dart.privateName(scaffold$, "_StandardBottomSheet.builder"),
    isPersistent: dart.privateName(scaffold$, "_StandardBottomSheet.isPersistent"),
    backgroundColor$20: dart.privateName(scaffold$, "_StandardBottomSheet.backgroundColor"),
    elevation$23: dart.privateName(scaffold$, "_StandardBottomSheet.elevation"),
    shape$21: dart.privateName(scaffold$, "_StandardBottomSheet.shape"),
    clipBehavior$11: dart.privateName(scaffold$, "_StandardBottomSheet.clipBehavior"),
    _handleStatusChange: dart.privateName(scaffold$, "_handleStatusChange"),
    _handleDragStart$1: dart.privateName(scaffold$, "_handleDragStart"),
    _handleDragEnd$1: dart.privateName(scaffold$, "_handleDragEnd"),
    _wrapBottomSheet: dart.privateName(scaffold$, "_wrapBottomSheet"),
    _isLocalHistoryEntry$1: dart.privateName(scaffold$, "PersistentBottomSheetController._isLocalHistoryEntry"),
    hasDrawer: dart.privateName(scaffold$, "_ScaffoldScope.hasDrawer"),
    geometryNotifier$1: dart.privateName(scaffold$, "_ScaffoldScope.geometryNotifier"),
    _name$26: dart.privateName(material, "_name"),
    child$24: dart.privateName(material, "Material.child"),
    type$3: dart.privateName(material, "Material.type"),
    elevation$24: dart.privateName(material, "Material.elevation"),
    color$13: dart.privateName(material, "Material.color"),
    shadowColor$4: dart.privateName(material, "Material.shadowColor"),
    textStyle$7: dart.privateName(material, "Material.textStyle"),
    shape$22: dart.privateName(material, "Material.shape"),
    borderOnForeground: dart.privateName(material, "Material.borderOnForeground"),
    clipBehavior$12: dart.privateName(material, "Material.clipBehavior"),
    animationDuration$3: dart.privateName(material, "Material.animationDuration"),
    borderRadius$3: dart.privateName(material, "Material.borderRadius"),
    _inkFeatureRenderer: dart.privateName(material, "_inkFeatureRenderer"),
    _getBackgroundColor: dart.privateName(material, "_getBackgroundColor"),
    _didChangeLayout: dart.privateName(material, "_didChangeLayout"),
    _getShape: dart.privateName(material, "_getShape"),
    _inkFeatures: dart.privateName(material, "_inkFeatures"),
    color$14: dart.privateName(material, "_InkFeatures.color"),
    vsync: dart.privateName(material, "_InkFeatures.vsync"),
    absorbHitTest: dart.privateName(material, "_InkFeatures.absorbHitTest"),
    child$25: dart.privateName(material, "_MaterialInterior.child"),
    shape$23: dart.privateName(material, "_MaterialInterior.shape"),
    borderOnForeground$1: dart.privateName(material, "_MaterialInterior.borderOnForeground"),
    clipBehavior$13: dart.privateName(material, "_MaterialInterior.clipBehavior"),
    elevation$25: dart.privateName(material, "_MaterialInterior.elevation"),
    color$15: dart.privateName(material, "_MaterialInterior.color"),
    shadowColor$5: dart.privateName(material, "_MaterialInterior.shadowColor"),
    _elevation$1: dart.privateName(material, "_elevation"),
    _shadowColor: dart.privateName(material, "_shadowColor"),
    _border$1: dart.privateName(material, "_border"),
    child$26: dart.privateName(material, "_ShapeBorderPaint.child"),
    shape$24: dart.privateName(material, "_ShapeBorderPaint.shape"),
    borderOnForeground$2: dart.privateName(material, "_ShapeBorderPaint.borderOnForeground"),
    $modulo: dartx['%'],
    _getDaysInMonth: dart.privateName(material_localizations, "_getDaysInMonth"),
    _formatTwoDigitZeroPad: dart.privateName(material_localizations, "_formatTwoDigitZeroPad"),
    $padLeft: dartx.padLeft,
    $split: dartx.split,
    _formatDayPeriod: dart.privateName(material_localizations, "_formatDayPeriod"),
    data$21: dart.privateName(theme$, "Theme.data"),
    child$27: dart.privateName(theme$, "Theme.child"),
    theme: dart.privateName(theme$, "_InheritedTheme.theme"),
    data$22: dart.privateName(theme$, "AnimatedTheme.data"),
    child$28: dart.privateName(theme$, "AnimatedTheme.child"),
    _data: dart.privateName(theme$, "_data"),
    brightness$3: dart.privateName(app_bar_theme, "AppBarTheme.brightness"),
    backgroundColor$21: dart.privateName(app_bar_theme, "AppBarTheme.backgroundColor"),
    foregroundColor$2: dart.privateName(app_bar_theme, "AppBarTheme.foregroundColor"),
    elevation$26: dart.privateName(app_bar_theme, "AppBarTheme.elevation"),
    shadowColor$6: dart.privateName(app_bar_theme, "AppBarTheme.shadowColor"),
    iconTheme$1: dart.privateName(app_bar_theme, "AppBarTheme.iconTheme"),
    actionsIconTheme: dart.privateName(app_bar_theme, "AppBarTheme.actionsIconTheme"),
    textTheme$4: dart.privateName(app_bar_theme, "AppBarTheme.textTheme"),
    centerTitle$1: dart.privateName(app_bar_theme, "AppBarTheme.centerTitle"),
    titleSpacing: dart.privateName(app_bar_theme, "AppBarTheme.titleSpacing"),
    toolbarTextStyle: dart.privateName(app_bar_theme, "AppBarTheme.toolbarTextStyle"),
    titleTextStyle$3: dart.privateName(app_bar_theme, "AppBarTheme.titleTextStyle"),
    systemOverlayStyle: dart.privateName(app_bar_theme, "AppBarTheme.systemOverlayStyle"),
    backwardsCompatibility: dart.privateName(app_bar_theme, "AppBarTheme.backwardsCompatibility"),
    toolbarHeight: dart.privateName(app_bar, "_ToolbarContainerLayout.toolbarHeight"),
    leading$3: dart.privateName(app_bar, "AppBar.leading"),
    automaticallyImplyLeading: dart.privateName(app_bar, "AppBar.automaticallyImplyLeading"),
    title$5: dart.privateName(app_bar, "AppBar.title"),
    actions$1: dart.privateName(app_bar, "AppBar.actions"),
    flexibleSpace: dart.privateName(app_bar, "AppBar.flexibleSpace"),
    bottom: dart.privateName(app_bar, "AppBar.bottom"),
    elevation$27: dart.privateName(app_bar, "AppBar.elevation"),
    shadowColor$7: dart.privateName(app_bar, "AppBar.shadowColor"),
    shape$25: dart.privateName(app_bar, "AppBar.shape"),
    backgroundColor$22: dart.privateName(app_bar, "AppBar.backgroundColor"),
    foregroundColor$3: dart.privateName(app_bar, "AppBar.foregroundColor"),
    brightness$4: dart.privateName(app_bar, "AppBar.brightness"),
    iconTheme$2: dart.privateName(app_bar, "AppBar.iconTheme"),
    actionsIconTheme$1: dart.privateName(app_bar, "AppBar.actionsIconTheme"),
    textTheme$5: dart.privateName(app_bar, "AppBar.textTheme"),
    primary$2: dart.privateName(app_bar, "AppBar.primary"),
    centerTitle$2: dart.privateName(app_bar, "AppBar.centerTitle"),
    excludeHeaderSemantics: dart.privateName(app_bar, "AppBar.excludeHeaderSemantics"),
    titleSpacing$1: dart.privateName(app_bar, "AppBar.titleSpacing"),
    toolbarOpacity$1: dart.privateName(app_bar, "AppBar.toolbarOpacity"),
    bottomOpacity: dart.privateName(app_bar, "AppBar.bottomOpacity"),
    preferredSize: dart.privateName(app_bar, "AppBar.preferredSize"),
    toolbarHeight$1: dart.privateName(app_bar, "AppBar.toolbarHeight"),
    leadingWidth: dart.privateName(app_bar, "AppBar.leadingWidth"),
    backwardsCompatibility$1: dart.privateName(app_bar, "AppBar.backwardsCompatibility"),
    toolbarTextStyle$1: dart.privateName(app_bar, "AppBar.toolbarTextStyle"),
    titleTextStyle$4: dart.privateName(app_bar, "AppBar.titleTextStyle"),
    systemOverlayStyle$1: dart.privateName(app_bar, "AppBar.systemOverlayStyle"),
    _getEffectiveCenterTitle$1: dart.privateName(app_bar, "_getEffectiveCenterTitle"),
    _handleDrawerButton: dart.privateName(app_bar, "_handleDrawerButton"),
    _handleDrawerButtonEnd: dart.privateName(app_bar, "_handleDrawerButtonEnd"),
    SemanticsSortKey_name: dart.privateName(semantics, "SemanticsSortKey.name"),
    OrdinalSortKey_order: dart.privateName(semantics, "OrdinalSortKey.order"),
    child$29: dart.privateName(app_bar, "_FloatingAppBar.child"),
    _position$2: dart.privateName(app_bar, "_position"),
    _isScrollingListener: dart.privateName(app_bar, "_isScrollingListener"),
    _headerRenderer: dart.privateName(app_bar, "_headerRenderer"),
    vsync$1: dart.privateName(app_bar, "_SliverAppBarDelegate.vsync"),
    snapConfiguration: dart.privateName(app_bar, "_SliverAppBarDelegate.snapConfiguration"),
    stretchConfiguration: dart.privateName(app_bar, "_SliverAppBarDelegate.stretchConfiguration"),
    showOnScreenConfiguration: dart.privateName(app_bar, "_SliverAppBarDelegate.showOnScreenConfiguration"),
    _bottomHeight: dart.privateName(app_bar, "_bottomHeight"),
    $toStringAsFixed: dartx.toStringAsFixed,
    leading$4: dart.privateName(app_bar, "SliverAppBar.leading"),
    automaticallyImplyLeading$1: dart.privateName(app_bar, "SliverAppBar.automaticallyImplyLeading"),
    title$6: dart.privateName(app_bar, "SliverAppBar.title"),
    actions$2: dart.privateName(app_bar, "SliverAppBar.actions"),
    flexibleSpace$1: dart.privateName(app_bar, "SliverAppBar.flexibleSpace"),
    bottom$1: dart.privateName(app_bar, "SliverAppBar.bottom"),
    elevation$28: dart.privateName(app_bar, "SliverAppBar.elevation"),
    shadowColor$8: dart.privateName(app_bar, "SliverAppBar.shadowColor"),
    forceElevated: dart.privateName(app_bar, "SliverAppBar.forceElevated"),
    backgroundColor$23: dart.privateName(app_bar, "SliverAppBar.backgroundColor"),
    foregroundColor$4: dart.privateName(app_bar, "SliverAppBar.foregroundColor"),
    brightness$5: dart.privateName(app_bar, "SliverAppBar.brightness"),
    iconTheme$3: dart.privateName(app_bar, "SliverAppBar.iconTheme"),
    actionsIconTheme$2: dart.privateName(app_bar, "SliverAppBar.actionsIconTheme"),
    textTheme$6: dart.privateName(app_bar, "SliverAppBar.textTheme"),
    primary$3: dart.privateName(app_bar, "SliverAppBar.primary"),
    centerTitle$3: dart.privateName(app_bar, "SliverAppBar.centerTitle"),
    excludeHeaderSemantics$1: dart.privateName(app_bar, "SliverAppBar.excludeHeaderSemantics"),
    titleSpacing$2: dart.privateName(app_bar, "SliverAppBar.titleSpacing"),
    collapsedHeight: dart.privateName(app_bar, "SliverAppBar.collapsedHeight"),
    expandedHeight: dart.privateName(app_bar, "SliverAppBar.expandedHeight"),
    floating: dart.privateName(app_bar, "SliverAppBar.floating"),
    pinned: dart.privateName(app_bar, "SliverAppBar.pinned"),
    shape$26: dart.privateName(app_bar, "SliverAppBar.shape"),
    snap: dart.privateName(app_bar, "SliverAppBar.snap"),
    stretch: dart.privateName(app_bar, "SliverAppBar.stretch"),
    stretchTriggerOffset: dart.privateName(app_bar, "SliverAppBar.stretchTriggerOffset"),
    onStretchTrigger: dart.privateName(app_bar, "SliverAppBar.onStretchTrigger"),
    toolbarHeight$2: dart.privateName(app_bar, "SliverAppBar.toolbarHeight"),
    leadingWidth$1: dart.privateName(app_bar, "SliverAppBar.leadingWidth"),
    backwardsCompatibility$2: dart.privateName(app_bar, "SliverAppBar.backwardsCompatibility"),
    toolbarTextStyle$2: dart.privateName(app_bar, "SliverAppBar.toolbarTextStyle"),
    titleTextStyle$5: dart.privateName(app_bar, "SliverAppBar.titleTextStyle"),
    systemOverlayStyle$2: dart.privateName(app_bar, "SliverAppBar.systemOverlayStyle"),
    _snapConfiguration: dart.privateName(app_bar, "_snapConfiguration"),
    _stretchConfiguration: dart.privateName(app_bar, "_stretchConfiguration"),
    _showOnScreenConfiguration: dart.privateName(app_bar, "_showOnScreenConfiguration"),
    PersistentHeaderShowOnScreenConfiguration_maxShowOnScreenExtent: dart.privateName(sliver_persistent_header, "PersistentHeaderShowOnScreenConfiguration.maxShowOnScreenExtent"),
    PersistentHeaderShowOnScreenConfiguration_minShowOnScreenExtent: dart.privateName(sliver_persistent_header, "PersistentHeaderShowOnScreenConfiguration.minShowOnScreenExtent"),
    _updateSnapConfiguration: dart.privateName(app_bar, "_updateSnapConfiguration"),
    _updateStretchConfiguration: dart.privateName(app_bar, "_updateStretchConfiguration")
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S, S$, S$0, S$1);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 8,
        [S.EdgeInsets_right]: 8,
        [S.EdgeInsets_top]: 8,
        [S.EdgeInsets_left]: 8
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [S.Alignment_y]: 0,
        [S.Alignment_x]: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: mouse_cursor.SystemMouseCursor.prototype,
        [S.SystemMouseCursor_kind]: "click"
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 48,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 48
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 13,
        [S._Location_line]: 352,
        [S._Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 353,
        [S._Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6, C[7] || CT.C7], T$._LocationL());
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[5] || CT.C5,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 351,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 11,
        [S._Location_line]: 349,
        [S._Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 11,
        [S._Location_line]: 350,
        [S._Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 351,
        [S._Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.constList([C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12], T$._LocationL());
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[9] || CT.C9,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 348,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 347,
        [S._Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 348,
        [S._Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.constList([C[15] || CT.C15, C[16] || CT.C16], T$._LocationL());
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[14] || CT.C14,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 346,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 7,
        [S._Location_line]: 345,
        [S._Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 346,
        [S._Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.constList([C[19] || CT.C19, C[20] || CT.C20], T$._LocationL());
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[18] || CT.C18,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 344,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "message",
        [S._Location_column]: 9,
        [S._Location_line]: 367,
        [S._Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 368,
        [S._Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.constList([C[23] || CT.C23, C[24] || CT.C24], T$._LocationL());
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[22] || CT.C22,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 366,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 9,
        [S._Location_line]: 376,
        [S._Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 9,
        [S._Location_line]: 377,
        [S._Location_file]: null
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "canRequestFocus",
        [S._Location_column]: 9,
        [S._Location_line]: 378,
        [S._Location_file]: null
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 9,
        [S._Location_line]: 379,
        [S._Location_file]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 9,
        [S._Location_line]: 380,
        [S._Location_file]: null
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableFeedback",
        [S._Location_column]: 9,
        [S._Location_line]: 381,
        [S._Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 382,
        [S._Location_file]: null
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusColor",
        [S._Location_column]: 9,
        [S._Location_line]: 383,
        [S._Location_file]: null
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 9,
        [S._Location_line]: 384,
        [S._Location_file]: null
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightColor",
        [S._Location_column]: 9,
        [S._Location_line]: 385,
        [S._Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashColor",
        [S._Location_column]: 9,
        [S._Location_line]: 386,
        [S._Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "radius",
        [S._Location_column]: 9,
        [S._Location_line]: 387,
        [S._Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.constList([C[27] || CT.C27, C[28] || CT.C28, C[29] || CT.C29, C[30] || CT.C30, C[31] || CT.C31, C[32] || CT.C32, C[33] || CT.C33, C[34] || CT.C34, C[35] || CT.C35, C[36] || CT.C36, C[37] || CT.C37, C[38] || CT.C38], T$._LocationL());
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[26] || CT.C26,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 375,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "button",
        [S._Location_column]: 7,
        [S._Location_line]: 373,
        [S._Location_file]: null
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enabled",
        [S._Location_column]: 7,
        [S._Location_line]: 374,
        [S._Location_file]: null
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 375,
        [S._Location_file]: null
      });
    },
    get C40() {
      return C[40] = dart.constList([C[41] || CT.C41, C[42] || CT.C42, C[43] || CT.C43], T$._LocationL());
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[40] || CT.C40,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 372,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.android",
        index: 0
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.linux",
        index: 3
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.windows",
        index: 5
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._name]: "TargetPlatform.macOS",
        index: 4
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "icon",
        [S._Location_column]: 46,
        [S._Location_line]: 45,
        [S._Location_file]: null
      });
    },
    get C51() {
      return C[51] = dart.constList([C[52] || CT.C52], T$._LocationL());
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[51] || CT.C51,
        [S._Location_name]: null,
        [S._Location_column]: 41,
        [S._Location_line]: 45,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C55() {
      return C[55] = dart.constList([], T$._LocationL());
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[55] || CT.C55,
        [S._Location_name]: null,
        [S._Location_column]: 19,
        [S._Location_line]: 99,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: back_button.BackButtonIcon.prototype,
        [S.Widget__location]: C[54] || CT.C54,
        [S.Widget_key]: null
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "icon",
        [S._Location_column]: 7,
        [S._Location_line]: 99,
        [S._Location_file]: null
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 7,
        [S._Location_line]: 100,
        [S._Location_file]: null
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "tooltip",
        [S._Location_column]: 7,
        [S._Location_line]: 101,
        [S._Location_file]: null
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 7,
        [S._Location_line]: 102,
        [S._Location_file]: null
      });
    },
    get C57() {
      return C[57] = dart.constList([C[58] || CT.C58, C[59] || CT.C59, C[60] || CT.C60, C[61] || CT.C61], T$._LocationL());
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[57] || CT.C57,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 98,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "icon",
        [S._Location_column]: 30,
        [S._Location_line]: 153,
        [S._Location_file]: null
      });
    },
    get C64() {
      return C[64] = dart.constList([C[65] || CT.C65], T$._LocationL());
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[64] || CT.C64,
        [S._Location_name]: null,
        [S._Location_column]: 19,
        [S._Location_line]: 153,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S.IconData_matchTextDirection]: false,
        [S.IconData_fontPackage]: null,
        [S.IconData_fontFamily]: "MaterialIcons",
        [S.IconData_codePoint]: 58974
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: icon.Icon.prototype,
        [S.Widget__location]: C[63] || CT.C63,
        [S.Widget_key]: null,
        [S.Icon_textDirection]: null,
        [S.Icon_semanticLabel]: null,
        [S.Icon_color]: null,
        [S.Icon_size]: null,
        [S.Icon_icon]: C[66] || CT.C66
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "icon",
        [S._Location_column]: 7,
        [S._Location_line]: 153,
        [S._Location_file]: null
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 7,
        [S._Location_line]: 154,
        [S._Location_file]: null
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "tooltip",
        [S._Location_column]: 7,
        [S._Location_line]: 155,
        [S._Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 7,
        [S._Location_line]: 156,
        [S._Location_file]: null
      });
    },
    get C68() {
      return C[68] = dart.constList([C[69] || CT.C69, C[70] || CT.C70, C[71] || CT.C71, C[72] || CT.C72], T$._LocationL());
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[68] || CT.C68,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 152,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: time.DayPeriod.prototype,
        [S._name$1]: "DayPeriod.am",
        index: 0
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: time.DayPeriod.prototype,
        [S._name$1]: "DayPeriod.pm",
        index: 1
      });
    },
    get C75() {
      return C[75] = dart.constList([C[73] || CT.C73, C[74] || CT.C74], T$.DayPeriodL());
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.HH_colon_mm",
        index: 0
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.HH_dot_mm",
        index: 1
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.frenchCanadian",
        index: 2
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.H_colon_mm",
        index: 3
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.h_colon_mm_space_a",
        index: 4
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [S._name$1]: "TimeOfDayFormat.a_space_h_colon_mm",
        index: 5
      });
    },
    get C82() {
      return C[82] = dart.constList([C[76] || CT.C76, C[77] || CT.C77, C[78] || CT.C78, C[79] || CT.C79, C[80] || CT.C80, C[81] || CT.C81], T$.TimeOfDayFormatL());
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: time.HourFormat.prototype,
        [S._name$1]: "HourFormat.HH",
        index: 0
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: time.HourFormat.prototype,
        [S._name$1]: "HourFormat.H",
        index: 1
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: time.HourFormat.prototype,
        [S._name$1]: "HourFormat.h",
        index: 2
      });
    },
    get C86() {
      return C[86] = dart.constList([C[83] || CT.C83, C[84] || CT.C84, C[85] || CT.C85], T$.HourFormatL());
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 0,
        [S.Radius_x]: 0
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[88] || CT.C88,
        [S.BorderRadius_bottomLeft]: C[88] || CT.C88,
        [S.BorderRadius_topRight]: C[88] || CT.C88,
        [S.BorderRadius_topLeft]: C[88] || CT.C88
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: ink_ripple._InkRippleFactory.prototype
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: curves._Linear.prototype
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[91] || CT.C91,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.6
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 1000000
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 75000
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 225000
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 375000
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 17,
        [S._Location_line]: 365,
        [S._Location_file]: null
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "widthFactor",
        [S._Location_column]: 17,
        [S._Location_line]: 366,
        [S._Location_file]: null
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 17,
        [S._Location_line]: 367,
        [S._Location_file]: null
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 368,
        [S._Location_file]: null
      });
    },
    get C97() {
      return C[97] = dart.constList([C[98] || CT.C98, C[99] || CT.C99, C[100] || CT.C100, C[101] || CT.C101], T$._LocationL());
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[97] || CT.C97,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 364,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 15,
        [S._Location_line]: 363,
        [S._Location_file]: null
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 364,
        [S._Location_file]: null
      });
    },
    get C103() {
      return C[103] = dart.constList([C[104] || CT.C104, C[105] || CT.C105], T$._LocationL());
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[103] || CT.C103,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 362,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 11,
        [S._Location_line]: 346,
        [S._Location_file]: null
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 11,
        [S._Location_line]: 347,
        [S._Location_file]: null
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHighlightChanged",
        [S._Location_column]: 11,
        [S._Location_line]: 348,
        [S._Location_file]: null
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHover",
        [S._Location_column]: 11,
        [S._Location_line]: 349,
        [S._Location_file]: null
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 11,
        [S._Location_line]: 350,
        [S._Location_file]: null
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableFeedback",
        [S._Location_column]: 11,
        [S._Location_line]: 351,
        [S._Location_file]: null
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 11,
        [S._Location_line]: 352,
        [S._Location_file]: null
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "canRequestFocus",
        [S._Location_column]: 11,
        [S._Location_line]: 353,
        [S._Location_file]: null
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onFocusChange",
        [S._Location_column]: 11,
        [S._Location_line]: 354,
        [S._Location_file]: null
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 11,
        [S._Location_line]: 355,
        [S._Location_file]: null
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashFactory",
        [S._Location_column]: 11,
        [S._Location_line]: 356,
        [S._Location_file]: null
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overlayColor",
        [S._Location_column]: 11,
        [S._Location_line]: 357,
        [S._Location_file]: null
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightColor",
        [S._Location_column]: 11,
        [S._Location_line]: 358,
        [S._Location_file]: null
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "customBorder",
        [S._Location_column]: 11,
        [S._Location_line]: 359,
        [S._Location_file]: null
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 360,
        [S._Location_file]: null
      });
    },
    get C107() {
      return C[107] = dart.constList([C[108] || CT.C108, C[109] || CT.C109, C[110] || CT.C110, C[111] || CT.C111, C[112] || CT.C112, C[113] || CT.C113, C[114] || CT.C114, C[115] || CT.C115, C[116] || CT.C116, C[117] || CT.C117, C[118] || CT.C118, C[119] || CT.C119, C[120] || CT.C120, C[121] || CT.C121, C[122] || CT.C122], T$._LocationL());
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[107] || CT.C107,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 345,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 9,
        [S._Location_line]: 337,
        [S._Location_file]: null
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 338,
        [S._Location_file]: null
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 9,
        [S._Location_line]: 339,
        [S._Location_file]: null
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 9,
        [S._Location_line]: 340,
        [S._Location_file]: null
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shadowColor",
        [S._Location_column]: 9,
        [S._Location_line]: 341,
        [S._Location_file]: null
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "type",
        [S._Location_column]: 9,
        [S._Location_line]: 342,
        [S._Location_file]: null
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animationDuration",
        [S._Location_column]: 9,
        [S._Location_line]: 343,
        [S._Location_file]: null
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 9,
        [S._Location_line]: 344,
        [S._Location_file]: null
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 345,
        [S._Location_file]: null
      });
    },
    get C124() {
      return C[124] = dart.constList([C[125] || CT.C125, C[126] || CT.C126, C[127] || CT.C127, C[128] || CT.C128, C[129] || CT.C129, C[130] || CT.C130, C[131] || CT.C131, C[132] || CT.C132, C[133] || CT.C133], T$._LocationL());
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[124] || CT.C124,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 336,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 7,
        [S._Location_line]: 335,
        [S._Location_file]: null
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 336,
        [S._Location_file]: null
      });
    },
    get C135() {
      return C[135] = dart.constList([C[136] || CT.C136, C[137] || CT.C137], T$._LocationL());
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[135] || CT.C135,
        [S._Location_name]: null,
        [S._Location_column]: 27,
        [S._Location_line]: 334,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: theme_data.MaterialTapTargetSize.prototype,
        [S._name$2]: "MaterialTapTargetSize.padded",
        index: 0
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: theme_data.MaterialTapTargetSize.prototype,
        [S._name$2]: "MaterialTapTargetSize.shrinkWrap",
        index: 1
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minSize",
        [S._Location_column]: 9,
        [S._Location_line]: 396,
        [S._Location_file]: null
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 397,
        [S._Location_file]: null
      });
    },
    get C141() {
      return C[141] = dart.constList([C[142] || CT.C142, C[143] || CT.C143], T$._LocationL());
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[141] || CT.C141,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 395,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "container",
        [S._Location_column]: 7,
        [S._Location_line]: 392,
        [S._Location_file]: null
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "button",
        [S._Location_column]: 7,
        [S._Location_line]: 393,
        [S._Location_file]: null
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enabled",
        [S._Location_column]: 7,
        [S._Location_line]: 394,
        [S._Location_file]: null
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 395,
        [S._Location_file]: null
      });
    },
    get C145() {
      return C[145] = dart.constList([C[146] || CT.C146, C[147] || CT.C147, C[148] || CT.C148, C[149] || CT.C149], T$._LocationL());
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[145] || CT.C145,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 391,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C150() {
      return C[150] = dart.fn(layout_helper.ChildLayoutHelper.dryLayoutChild, T$.RenderBoxAndBoxConstraintsToSize());
    },
    get C151() {
      return C[151] = dart.fn(layout_helper.ChildLayoutHelper.layoutChild, T$.RenderBoxAndBoxConstraintsToSize());
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: ui.Clip.prototype,
        [S._name$3]: "Clip.none",
        index: 0
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 8,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 8
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 4,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 4
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: ui.Size.prototype,
        [S.OffsetBase__dy]: 36,
        [S.OffsetBase__dx]: 64
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [S._name$4]: "BorderStyle.none",
        index: 0
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278190080.0
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [S.BorderSide_style]: C[158] || CT.C158,
        [S.BorderSide_width]: 0,
        [S.BorderSide_color]: C[159] || CT.C159
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 4,
        [S.Radius_x]: 4
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[161] || CT.C161,
        [S.BorderRadius_bottomLeft]: C[161] || CT.C161,
        [S.BorderRadius_topRight]: C[161] || CT.C161,
        [S.BorderRadius_topLeft]: C[161] || CT.C161
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[157] || CT.C157,
        [S.RoundedRectangleBorder_borderRadius]: C[160] || CT.C160
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "icon",
        [S._Location_column]: 42,
        [S._Location_line]: 362,
        [S._Location_file]: null
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 54,
        [S._Location_line]: 362,
        [S._Location_file]: null
      });
    },
    get C163() {
      return C[163] = dart.constList([C[164] || CT.C164, C[165] || CT.C165], T$._LocationL());
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[163] || CT.C163,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 362,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 41,
        [S._Location_line]: 395,
        [S._Location_file]: null
      });
    },
    get C167() {
      return C[167] = dart.constList([C[168] || CT.C168], T$._LocationL());
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[167] || CT.C167,
        [S._Location_name]: null,
        [S._Location_column]: 32,
        [S._Location_line]: 395,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 7,
        [S._Location_line]: 394,
        [S._Location_file]: null
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 7,
        [S._Location_line]: 395,
        [S._Location_file]: null
      });
    },
    get C170() {
      return C[170] = dart.constList([C[171] || CT.C171, C[172] || CT.C172], T$._LocationL());
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[170] || CT.C170,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 393,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.action",
        index: 0
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.dismiss",
        index: 1
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.swipe",
        index: 2
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.hide",
        index: 3
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.remove",
        index: 4
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._name$5]: "SnackBarClosedReason.timeout",
        index: 5
      });
    },
    get C179() {
      return C[179] = dart.constList([C[173] || CT.C173, C[174] || CT.C174, C[175] || CT.C175, C[176] || CT.C176, C[177] || CT.C177, C[178] || CT.C178], T$.SnackBarClosedReasonL());
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 26,
        [S._Location_line]: 143,
        [S._Location_file]: null
      });
    },
    get C181() {
      return C[181] = dart.constList([C[182] || CT.C182], T$._LocationL());
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[181] || CT.C181,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 143,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 7,
        [S._Location_line]: 139,
        [S._Location_file]: null
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 7,
        [S._Location_line]: 142,
        [S._Location_file]: null
      });
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 143,
        [S._Location_file]: null
      });
    },
    get C184() {
      return C[184] = dart.constList([C[185] || CT.C185, C[186] || CT.C186, C[187] || CT.C187], T$._LocationL());
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[184] || CT.C184,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 138,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 4000000
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 7,
        [S._Location_line]: 388,
        [S._Location_file]: null
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "content",
        [S._Location_column]: 7,
        [S._Location_line]: 389,
        [S._Location_file]: null
      });
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "backgroundColor",
        [S._Location_column]: 7,
        [S._Location_line]: 390,
        [S._Location_file]: null
      });
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 391,
        [S._Location_file]: null
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "margin",
        [S._Location_column]: 7,
        [S._Location_line]: 392,
        [S._Location_file]: null
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 7,
        [S._Location_line]: 393,
        [S._Location_file]: null
      });
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 7,
        [S._Location_line]: 394,
        [S._Location_file]: null
      });
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 395,
        [S._Location_file]: null
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "behavior",
        [S._Location_column]: 7,
        [S._Location_line]: 396,
        [S._Location_file]: null
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "action",
        [S._Location_column]: 7,
        [S._Location_line]: 397,
        [S._Location_file]: null
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 7,
        [S._Location_line]: 398,
        [S._Location_file]: null
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 399,
        [S._Location_file]: null
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onVisible",
        [S._Location_column]: 7,
        [S._Location_line]: 400,
        [S._Location_file]: null
      });
    },
    get C190() {
      return C[190] = dart.constList([C[191] || CT.C191, C[192] || CT.C192, C[193] || CT.C193, C[194] || CT.C194, C[195] || CT.C195, C[196] || CT.C196, C[197] || CT.C197, C[198] || CT.C198, C[199] || CT.C199, C[200] || CT.C200, C[201] || CT.C201, C[202] || CT.C202, C[203] || CT.C203], T$._LocationL());
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[190] || CT.C190,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 387,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [S._name$6]: "AnimationStatus.dismissed",
        index: 0
      });
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [S._name$6]: "AnimationStatus.forward",
        index: 1
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [S._name$6]: "AnimationStatus.reverse",
        index: 2
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [S._name$6]: "AnimationStatus.completed",
        index: 3
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: curves.Threshold.prototype,
        [S.Threshold_threshold]: 0
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 14,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 14,
        [S.EdgeInsets_left]: 0
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 17,
        [S._Location_line]: 509,
        [S._Location_file]: null
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 510,
        [S._Location_file]: null
      });
    },
    get C211() {
      return C[211] = dart.constList([C[212] || CT.C212, C[213] || CT.C213], T$._LocationL());
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[211] || CT.C211,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 508,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 15,
        [S._Location_line]: 507,
        [S._Location_file]: null
      });
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 508,
        [S._Location_file]: null
      });
    },
    get C215() {
      return C[215] = dart.constList([C[216] || CT.C216, C[217] || CT.C217], T$._LocationL());
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[215] || CT.C215,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 506,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 506,
        [S._Location_file]: null
      });
    },
    get C219() {
      return C[219] = dart.constList([C[220] || CT.C220], T$._LocationL());
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[219] || CT.C219,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 505,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 17,
        [S._Location_line]: 518,
        [S._Location_file]: null
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 524,
        [S._Location_file]: null
      });
    },
    get C222() {
      return C[222] = dart.constList([C[223] || CT.C223, C[224] || CT.C224], T$._LocationL());
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[222] || CT.C222,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 517,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 15,
        [S._Location_line]: 516,
        [S._Location_file]: null
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 517,
        [S._Location_file]: null
      });
    },
    get C226() {
      return C[226] = dart.constList([C[227] || CT.C227, C[228] || CT.C228], T$._LocationL());
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[226] || CT.C226,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 515,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 9,
        [S._Location_line]: 503,
        [S._Location_file]: null
      });
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 504,
        [S._Location_file]: null
      });
    },
    get C230() {
      return C[230] = dart.constList([C[231] || CT.C231, C[232] || CT.C232], T$._LocationL());
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[230] || CT.C230,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 502,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 7,
        [S._Location_line]: 501,
        [S._Location_file]: null
      });
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 502,
        [S._Location_file]: null
      });
    },
    get C234() {
      return C[234] = dart.constList([C[235] || CT.C235, C[236] || CT.C236], T$._LocationL());
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[234] || CT.C234,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 500,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "top",
        [S._Location_column]: 9,
        [S._Location_line]: 533,
        [S._Location_file]: null
      });
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 534,
        [S._Location_file]: null
      });
    },
    get C238() {
      return C[238] = dart.constList([C[239] || CT.C239, C[240] || CT.C240], T$._LocationL());
    },
    get C237() {
      return C[237] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[238] || CT.C238,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 532,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 17,
        [S._Location_line]: 553,
        [S._Location_file]: null
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 554,
        [S._Location_file]: null
      });
    },
    get C242() {
      return C[242] = dart.constList([C[243] || CT.C243, C[244] || CT.C244], T$._LocationL());
    },
    get C241() {
      return C[241] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[242] || CT.C242,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 552,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 9,
        [S._Location_line]: 549,
        [S._Location_file]: null
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 550,
        [S._Location_file]: null
      });
    },
    get C246() {
      return C[246] = dart.constList([C[247] || CT.C247, C[248] || CT.C248], T$._LocationL());
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[246] || CT.C246,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 548,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 545,
        [S._Location_file]: null
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 546,
        [S._Location_file]: null
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 7,
        [S._Location_line]: 547,
        [S._Location_file]: null
      });
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 548,
        [S._Location_file]: null
      });
    },
    get C250() {
      return C[250] = dart.constList([C[251] || CT.C251, C[252] || CT.C252, C[253] || CT.C253, C[254] || CT.C254], T$._LocationL());
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[250] || CT.C250,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 544,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 10,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 5,
        [S.EdgeInsets_left]: 0
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "margin",
        [S._Location_column]: 11,
        [S._Location_line]: 565,
        [S._Location_file]: null
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 11,
        [S._Location_line]: 566,
        [S._Location_file]: null
      });
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 567,
        [S._Location_file]: null
      });
    },
    get C257() {
      return C[257] = dart.constList([C[258] || CT.C258, C[259] || CT.C259, C[260] || CT.C260], T$._LocationL());
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[257] || CT.C257,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 564,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C261() {
      return C[261] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 10,
        [S.EdgeInsets_right]: 15,
        [S.EdgeInsets_top]: 5,
        [S.EdgeInsets_left]: 15
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 11,
        [S._Location_line]: 572,
        [S._Location_file]: null
      });
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 578,
        [S._Location_file]: null
      });
    },
    get C263() {
      return C[263] = dart.constList([C[264] || CT.C264, C[265] || CT.C265], T$._LocationL());
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[263] || CT.C263,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 571,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "top",
        [S._Location_column]: 9,
        [S._Location_line]: 582,
        [S._Location_file]: null
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "bottom",
        [S._Location_column]: 9,
        [S._Location_line]: 583,
        [S._Location_file]: null
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 584,
        [S._Location_file]: null
      });
    },
    get C267() {
      return C[267] = dart.constList([C[268] || CT.C268, C[269] || CT.C269, C[270] || CT.C270], T$._LocationL());
    },
    get C266() {
      return C[266] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[267] || CT.C267,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 581,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: T$.ValueKeyOfStringL().prototype,
        [S.ValueKey_value]: "dismissible"
      });
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 9,
        [S._Location_line]: 595,
        [S._Location_file]: null
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "direction",
        [S._Location_column]: 9,
        [S._Location_line]: 596,
        [S._Location_file]: null
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "resizeDuration",
        [S._Location_column]: 9,
        [S._Location_line]: 597,
        [S._Location_file]: null
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDismissed",
        [S._Location_column]: 9,
        [S._Location_line]: 598,
        [S._Location_file]: null
      });
    },
    get C278() {
      return C[278] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 601,
        [S._Location_file]: null
      });
    },
    get C273() {
      return C[273] = dart.constList([C[274] || CT.C274, C[275] || CT.C275, C[276] || CT.C276, C[277] || CT.C277, C[278] || CT.C278], T$._LocationL());
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[273] || CT.C273,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 594,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "container",
        [S._Location_column]: 7,
        [S._Location_line]: 589,
        [S._Location_file]: null
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "liveRegion",
        [S._Location_column]: 7,
        [S._Location_line]: 590,
        [S._Location_file]: null
      });
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDismiss",
        [S._Location_column]: 7,
        [S._Location_line]: 591,
        [S._Location_file]: null
      });
    },
    get C284() {
      return C[284] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 594,
        [S._Location_file]: null
      });
    },
    get C280() {
      return C[280] = dart.constList([C[281] || CT.C281, C[282] || CT.C282, C[283] || CT.C283, C[284] || CT.C284], T$._LocationL());
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[280] || CT.C280,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 588,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 610,
        [S._Location_file]: null
      });
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 611,
        [S._Location_file]: null
      });
    },
    get C286() {
      return C[286] = dart.constList([C[287] || CT.C287, C[288] || CT.C288], T$._LocationL());
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[286] || CT.C286,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 609,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 13,
        [S._Location_line]: 618,
        [S._Location_file]: null
      });
    },
    get C292() {
      return C[292] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 13,
        [S._Location_line]: 619,
        [S._Location_file]: null
      });
    },
    get C293() {
      return C[293] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 620,
        [S._Location_file]: null
      });
    },
    get C290() {
      return C[290] = dart.constList([C[291] || CT.C291, C[292] || CT.C292, C[293] || CT.C293], T$._LocationL());
    },
    get C289() {
      return C[289] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[290] || CT.C290,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 617,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 9,
        [S._Location_line]: 615,
        [S._Location_file]: null
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 9,
        [S._Location_line]: 616,
        [S._Location_file]: null
      });
    },
    get C298() {
      return C[298] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 623,
        [S._Location_file]: null
      });
    },
    get C295() {
      return C[295] = dart.constList([C[296] || CT.C296, C[297] || CT.C297, C[298] || CT.C298], T$._LocationL());
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[295] || CT.C295,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 614,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 23,
        [S._Location_line]: 628,
        [S._Location_file]: null
      });
    },
    get C300() {
      return C[300] = dart.constList([C[301] || CT.C301], T$._LocationL());
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[300] || CT.C300,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 628,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 628,
        [S._Location_file]: null
      });
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "tag",
        [S._Location_column]: 7,
        [S._Location_line]: 629,
        [S._Location_file]: null
      });
    },
    get C303() {
      return C[303] = dart.constList([C[304] || CT.C304, C[305] || CT.C305], T$._LocationL());
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[303] || CT.C303,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 627,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 250000
      });
    },
    get C307() {
      return C[307] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.2,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0.4
      });
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[307] || CT.C307,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.45
      });
    },
    get C309() {
      return C[309] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[307] || CT.C307,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.72
      });
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: floating_action_button_location._StartTopFabLocation.prototype
      });
    },
    get C311() {
      return C[311] = dart.const({
        __proto__: floating_action_button_location._MiniStartTopFabLocation.prototype
      });
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: floating_action_button_location._CenterTopFabLocation.prototype
      });
    },
    get C313() {
      return C[313] = dart.const({
        __proto__: floating_action_button_location._MiniCenterTopFabLocation.prototype
      });
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: floating_action_button_location._EndTopFabLocation.prototype
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: floating_action_button_location._MiniEndTopFabLocation.prototype
      });
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: floating_action_button_location._StartFloatFabLocation.prototype
      });
    },
    get C317() {
      return C[317] = dart.const({
        __proto__: floating_action_button_location._MiniStartFloatFabLocation.prototype
      });
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: floating_action_button_location._CenterFloatFabLocation.prototype
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: floating_action_button_location._MiniCenterFloatFabLocation.prototype
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: floating_action_button_location._EndFloatFabLocation.prototype
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: floating_action_button_location._MiniEndFloatFabLocation.prototype
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: floating_action_button_location._StartDockedFabLocation.prototype
      });
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: floating_action_button_location._MiniStartDockedFabLocation.prototype
      });
    },
    get C324() {
      return C[324] = dart.const({
        __proto__: floating_action_button_location._CenterDockedFabLocation.prototype
      });
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: floating_action_button_location._MiniCenterDockedFabLocation.prototype
      });
    },
    get C326() {
      return C[326] = dart.const({
        __proto__: floating_action_button_location._EndDockedFabLocation.prototype
      });
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: floating_action_button_location._MiniEndDockedFabLocation.prototype
      });
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [S._name$3]: "TextDirection.rtl",
        index: 0
      });
    },
    get C329() {
      return C[329] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [S._name$3]: "TextDirection.ltr",
        index: 1
      });
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: floating_action_button_location._ScalingFabMotionAnimator.prototype
      });
    },
    get C332() {
      return C[332] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.25,
        [S.Cubic_b]: 0.1,
        [S.Cubic_a]: 0.25
      });
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[332] || CT.C332,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.5
      });
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: curves.Threshold.prototype,
        [S.Threshold_threshold]: 0.5
      });
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 200000
      });
    },
    get C335() {
      return C[335] = dart.const({
        __proto__: floating_action_button._DefaultHeroTag.prototype
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 33,
        [S._Location_line]: 209,
        [S._Location_file]: null
      });
    },
    get C338() {
      return C[338] = dart.constList([C[339] || CT.C339], T$._LocationL());
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[338] || CT.C338,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 209,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[337] || CT.C337,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 20
      });
    },
    get C343() {
      return C[343] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 33,
        [S._Location_line]: 211,
        [S._Location_file]: null
      });
    },
    get C342() {
      return C[342] = dart.constList([C[343] || CT.C343], T$._LocationL());
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[342] || CT.C342,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 211,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[341] || CT.C341,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 20
      });
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 31,
        [S._Location_line]: 214,
        [S._Location_file]: null
      });
    },
    get C346() {
      return C[346] = dart.constList([C[347] || CT.C347], T$._LocationL());
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[346] || CT.C346,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 214,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[345] || CT.C345,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 20
      });
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 31,
        [S._Location_line]: 216,
        [S._Location_file]: null
      });
    },
    get C350() {
      return C[350] = dart.constList([C[351] || CT.C351], T$._LocationL());
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[350] || CT.C350,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 216,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C348() {
      return C[348] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[349] || CT.C349,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 20
      });
    },
    get C355() {
      return C[355] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 33,
        [S._Location_line]: 218,
        [S._Location_file]: null
      });
    },
    get C354() {
      return C[354] = dart.constList([C[355] || CT.C355], T$._LocationL());
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[354] || CT.C354,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 218,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C352() {
      return C[352] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[353] || CT.C353,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 16
      });
    },
    get C359() {
      return C[359] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 33,
        [S._Location_line]: 220,
        [S._Location_file]: null
      });
    },
    get C358() {
      return C[358] = dart.constList([C[359] || CT.C359], T$._LocationL());
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[358] || CT.C358,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 220,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C356() {
      return C[356] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[357] || CT.C357,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 8
      });
    },
    get C363() {
      return C[363] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 33,
        [S._Location_line]: 222,
        [S._Location_file]: null
      });
    },
    get C362() {
      return C[362] = dart.constList([C[363] || CT.C363], T$._LocationL());
    },
    get C361() {
      return C[361] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[362] || CT.C362,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 222,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C360() {
      return C[360] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[361] || CT.C361,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 20
      });
    },
    get C366() {
      return C[366] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 12,
        [S._Location_line]: 206,
        [S._Location_file]: null
      });
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 12,
        [S._Location_line]: 207,
        [S._Location_file]: null
      });
    },
    get C365() {
      return C[365] = dart.constList([C[366] || CT.C366, C[367] || CT.C367], T$._LocationL());
    },
    get C364() {
      return C[364] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[365] || CT.C365,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 205,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C370() {
      return C[370] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 10,
        [S._Location_line]: 205,
        [S._Location_file]: null
      });
    },
    get C369() {
      return C[369] = dart.constList([C[370] || CT.C370], T$._LocationL());
    },
    get C368() {
      return C[368] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[369] || CT.C369,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 204,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 7,
        [S._Location_line]: 493,
        [S._Location_file]: null
      });
    },
    get C374() {
      return C[374] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 7,
        [S._Location_line]: 494,
        [S._Location_file]: null
      });
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 495,
        [S._Location_file]: null
      });
    },
    get C376() {
      return C[376] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 496,
        [S._Location_file]: null
      });
    },
    get C377() {
      return C[377] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 497,
        [S._Location_file]: null
      });
    },
    get C378() {
      return C[378] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 498,
        [S._Location_file]: null
      });
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "disabledElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 499,
        [S._Location_file]: null
      });
    },
    get C380() {
      return C[380] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 7,
        [S._Location_line]: 500,
        [S._Location_file]: null
      });
    },
    get C381() {
      return C[381] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "materialTapTargetSize",
        [S._Location_column]: 7,
        [S._Location_line]: 501,
        [S._Location_file]: null
      });
    },
    get C382() {
      return C[382] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "fillColor",
        [S._Location_column]: 7,
        [S._Location_line]: 502,
        [S._Location_file]: null
      });
    },
    get C383() {
      return C[383] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusColor",
        [S._Location_column]: 7,
        [S._Location_line]: 503,
        [S._Location_file]: null
      });
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 7,
        [S._Location_line]: 504,
        [S._Location_file]: null
      });
    },
    get C385() {
      return C[385] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashColor",
        [S._Location_column]: 7,
        [S._Location_line]: 505,
        [S._Location_file]: null
      });
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textStyle",
        [S._Location_column]: 7,
        [S._Location_line]: 506,
        [S._Location_file]: null
      });
    },
    get C387() {
      return C[387] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 507,
        [S._Location_file]: null
      });
    },
    get C388() {
      return C[388] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 508,
        [S._Location_file]: null
      });
    },
    get C389() {
      return C[389] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 7,
        [S._Location_line]: 509,
        [S._Location_file]: null
      });
    },
    get C390() {
      return C[390] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 7,
        [S._Location_line]: 510,
        [S._Location_file]: null
      });
    },
    get C391() {
      return C[391] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 511,
        [S._Location_file]: null
      });
    },
    get C372() {
      return C[372] = dart.constList([C[373] || CT.C373, C[374] || CT.C374, C[375] || CT.C375, C[376] || CT.C376, C[377] || CT.C377, C[378] || CT.C378, C[379] || CT.C379, C[380] || CT.C380, C[381] || CT.C381, C[382] || CT.C382, C[383] || CT.C383, C[384] || CT.C384, C[385] || CT.C385, C[386] || CT.C386, C[387] || CT.C387, C[388] || CT.C388, C[389] || CT.C389, C[390] || CT.C390, C[391] || CT.C391], T$._LocationL());
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[372] || CT.C372,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 492,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "message",
        [S._Location_column]: 9,
        [S._Location_line]: 516,
        [S._Location_file]: null
      });
    },
    get C395() {
      return C[395] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 517,
        [S._Location_file]: null
      });
    },
    get C393() {
      return C[393] = dart.constList([C[394] || CT.C394, C[395] || CT.C395], T$._LocationL());
    },
    get C392() {
      return C[392] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[393] || CT.C393,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 515,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "tag",
        [S._Location_column]: 9,
        [S._Location_line]: 523,
        [S._Location_file]: null
      });
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 524,
        [S._Location_file]: null
      });
    },
    get C397() {
      return C[397] = dart.constList([C[398] || CT.C398, C[399] || CT.C399], T$._LocationL());
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[397] || CT.C397,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 522,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 27,
        [S._Location_line]: 528,
        [S._Location_file]: null
      });
    },
    get C401() {
      return C[401] = dart.constList([C[402] || CT.C402], T$._LocationL());
    },
    get C400() {
      return C[400] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[401] || CT.C401,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 528,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: circle_border.CircleBorder.prototype,
        [S.OutlinedBorder_side]: C[157] || CT.C157
      });
    },
    get C404() {
      return C[404] = dart.const({
        __proto__: stadium_border.StadiumBorder.prototype,
        [S.OutlinedBorder_side]: C[157] || CT.C157
      });
    },
    get C405() {
      return C[405] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 0,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 0
      });
    },
    get C406() {
      return C[406] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 56,
        [S.BoxConstraints_minHeight]: 56,
        [S.BoxConstraints_maxWidth]: 56,
        [S.BoxConstraints_minWidth]: 56
      });
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 40,
        [S.BoxConstraints_minHeight]: 40,
        [S.BoxConstraints_maxWidth]: 40,
        [S.BoxConstraints_minWidth]: 40
      });
    },
    get C408() {
      return C[408] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 48,
        [S.BoxConstraints_minHeight]: 48,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 0
      });
    },
    get C409() {
      return C[409] = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [S._name$7]: "CollapseMode.parallax",
        index: 0
      });
    },
    get C410() {
      return C[410] = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [S._name$7]: "CollapseMode.pin",
        index: 1
      });
    },
    get C411() {
      return C[411] = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [S._name$7]: "CollapseMode.none",
        index: 2
      });
    },
    get C412() {
      return C[412] = dart.constList([C[409] || CT.C409, C[410] || CT.C410, C[411] || CT.C411], T$.CollapseModeL());
    },
    get C413() {
      return C[413] = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [S._name$7]: "StretchMode.zoomBackground",
        index: 0
      });
    },
    get C414() {
      return C[414] = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [S._name$7]: "StretchMode.blurBackground",
        index: 1
      });
    },
    get C415() {
      return C[415] = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [S._name$7]: "StretchMode.fadeTitle",
        index: 2
      });
    },
    get C416() {
      return C[416] = dart.constList([C[413] || CT.C413, C[414] || CT.C414, C[415] || CT.C415], T$.StretchModeL());
    },
    get C417() {
      return C[417] = dart.constList([C[413] || CT.C413], T$.StretchModeL());
    },
    get C420() {
      return C[420] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "toolbarOpacity",
        [S._Location_column]: 7,
        [S._Location_line]: 223,
        [S._Location_file]: null
      });
    },
    get C421() {
      return C[421] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minExtent",
        [S._Location_column]: 7,
        [S._Location_line]: 224,
        [S._Location_file]: null
      });
    },
    get C422() {
      return C[422] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "maxExtent",
        [S._Location_column]: 7,
        [S._Location_line]: 225,
        [S._Location_file]: null
      });
    },
    get C423() {
      return C[423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "currentExtent",
        [S._Location_column]: 7,
        [S._Location_line]: 226,
        [S._Location_file]: null
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 227,
        [S._Location_file]: null
      });
    },
    get C419() {
      return C[419] = dart.constList([C[420] || CT.C420, C[421] || CT.C421, C[422] || CT.C422, C[423] || CT.C423, C[424] || CT.C424], T$._LocationL());
    },
    get C418() {
      return C[418] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[419] || CT.C419,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 222,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alwaysIncludeSemantics",
        [S._Location_column]: 15,
        [S._Location_line]: 316,
        [S._Location_file]: null
      });
    },
    get C428() {
      return C[428] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 15,
        [S._Location_line]: 317,
        [S._Location_file]: null
      });
    },
    get C429() {
      return C[429] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 318,
        [S._Location_file]: null
      });
    },
    get C426() {
      return C[426] = dart.constList([C[427] || CT.C427, C[428] || CT.C428, C[429] || CT.C429], T$._LocationL());
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[426] || CT.C426,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 313,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "top",
        [S._Location_column]: 13,
        [S._Location_line]: 309,
        [S._Location_file]: null
      });
    },
    get C433() {
      return C[433] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "left",
        [S._Location_column]: 13,
        [S._Location_line]: 310,
        [S._Location_file]: null
      });
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "right",
        [S._Location_column]: 13,
        [S._Location_line]: 311,
        [S._Location_file]: null
      });
    },
    get C435() {
      return C[435] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 13,
        [S._Location_line]: 312,
        [S._Location_file]: null
      });
    },
    get C436() {
      return C[436] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 313,
        [S._Location_file]: null
      });
    },
    get C431() {
      return C[431] = dart.constList([C[432] || CT.C432, C[433] || CT.C433, C[434] || CT.C434, C[435] || CT.C435, C[436] || CT.C436], T$._LocationL());
    },
    get C430() {
      return C[430] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[431] || CT.C431,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 308,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C439() {
      return C[439] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 19,
        [S._Location_line]: 329,
        [S._Location_file]: null
      });
    },
    get C438() {
      return C[438] = dart.constList([C[439] || CT.C439], T$._LocationL());
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[438] || CT.C438,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 328,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C442() {
      return C[442] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 328,
        [S._Location_file]: null
      });
    },
    get C443() {
      return C[443] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "filter",
        [S._Location_column]: 17,
        [S._Location_line]: 331,
        [S._Location_file]: null
      });
    },
    get C441() {
      return C[441] = dart.constList([C[442] || CT.C442, C[443] || CT.C443], T$._LocationL());
    },
    get C440() {
      return C[440] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[441] || CT.C441,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 327,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C446() {
      return C[446] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 327,
        [S._Location_file]: null
      });
    },
    get C445() {
      return C[445] = dart.constList([C[446] || CT.C446], T$._LocationL());
    },
    get C444() {
      return C[444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[445] || CT.C445,
        [S._Location_name]: null,
        [S._Location_column]: 37,
        [S._Location_line]: 326,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C449() {
      return C[449] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "namesRoute",
        [S._Location_column]: 17,
        [S._Location_line]: 355,
        [S._Location_file]: null
      });
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 356,
        [S._Location_file]: null
      });
    },
    get C448() {
      return C[448] = dart.constList([C[449] || CT.C449, C[450] || CT.C450], T$._LocationL());
    },
    get C447() {
      return C[447] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[448] || CT.C448,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 354,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C453() {
      return C[453] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 15,
        [S._Location_line]: 367,
        [S._Location_file]: null
      });
    },
    get C454() {
      return C[454] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 368,
        [S._Location_file]: null
      });
    },
    get C452() {
      return C[452] = dart.constList([C[453] || CT.C453, C[454] || CT.C454], T$._LocationL());
    },
    get C451() {
      return C[451] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[452] || CT.C452,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 366,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C457() {
      return C[457] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 27,
        [S._Location_line]: 400,
        [S._Location_file]: null
      });
    },
    get C458() {
      return C[458] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 27,
        [S._Location_line]: 401,
        [S._Location_file]: null
      });
    },
    get C459() {
      return C[459] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 27,
        [S._Location_line]: 402,
        [S._Location_file]: null
      });
    },
    get C456() {
      return C[456] = dart.constList([C[457] || CT.C457, C[458] || CT.C458, C[459] || CT.C459], T$._LocationL());
    },
    get C455() {
      return C[455] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[456] || CT.C456,
        [S._Location_name]: null,
        [S._Location_column]: 32,
        [S._Location_line]: 399,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C462() {
      return C[462] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 23,
        [S._Location_line]: 398,
        [S._Location_file]: null
      });
    },
    get C461() {
      return C[461] = dart.constList([C[462] || CT.C462], T$._LocationL());
    },
    get C460() {
      return C[460] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[461] || CT.C461,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 397,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C465() {
      return C[465] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 21,
        [S._Location_line]: 396,
        [S._Location_file]: null
      });
    },
    get C466() {
      return C[466] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 397,
        [S._Location_file]: null
      });
    },
    get C464() {
      return C[464] = dart.constList([C[465] || CT.C465, C[466] || CT.C466], T$._LocationL());
    },
    get C463() {
      return C[463] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[464] || CT.C464,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 395,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C469() {
      return C[469] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 19,
        [S._Location_line]: 394,
        [S._Location_file]: null
      });
    },
    get C470() {
      return C[470] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 395,
        [S._Location_file]: null
      });
    },
    get C468() {
      return C[468] = dart.constList([C[469] || CT.C469, C[470] || CT.C470], T$._LocationL());
    },
    get C467() {
      return C[467] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[468] || CT.C468,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 393,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C473() {
      return C[473] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 17,
        [S._Location_line]: 391,
        [S._Location_file]: null
      });
    },
    get C474() {
      return C[474] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "transform",
        [S._Location_column]: 17,
        [S._Location_line]: 392,
        [S._Location_file]: null
      });
    },
    get C475() {
      return C[475] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 393,
        [S._Location_file]: null
      });
    },
    get C472() {
      return C[472] = dart.constList([C[473] || CT.C473, C[474] || CT.C474, C[475] || CT.C475], T$._LocationL());
    },
    get C471() {
      return C[471] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[472] || CT.C472,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 390,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C478() {
      return C[478] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 15,
        [S._Location_line]: 389,
        [S._Location_file]: null
      });
    },
    get C479() {
      return C[479] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 390,
        [S._Location_file]: null
      });
    },
    get C477() {
      return C[477] = dart.constList([C[478] || CT.C478, C[479] || CT.C479], T$._LocationL());
    },
    get C476() {
      return C[476] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[477] || CT.C477,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 388,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C482() {
      return C[482] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 38,
        [S._Location_line]: 413,
        [S._Location_file]: null
      });
    },
    get C481() {
      return C[481] = dart.constList([C[482] || CT.C482], T$._LocationL());
    },
    get C480() {
      return C[480] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[481] || CT.C481,
        [S._Location_name]: null,
        [S._Location_column]: 32,
        [S._Location_line]: 413,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C485() {
      return C[485] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 25,
        [S._Location_line]: 413,
        [S._Location_file]: null
      });
    },
    get C484() {
      return C[484] = dart.constList([C[485] || CT.C485], T$._LocationL());
    },
    get C483() {
      return C[483] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[484] || CT.C484,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 413,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C488() {
      return C[488] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 7,
        [S._Location_line]: 280,
        [S._Location_file]: null
      });
    },
    get C487() {
      return C[487] = dart.constList([C[488] || CT.C488], T$._LocationL());
    },
    get C486() {
      return C[486] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[487] || CT.C487,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 279,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C489() {
      return C[489] = dart.const({
        __proto__: list_tile.ListTileStyle.prototype,
        [S._name$8]: "ListTileStyle.list",
        index: 0
      });
    },
    get C490() {
      return C[490] = dart.const({
        __proto__: list_tile.ListTileStyle.prototype,
        [S._name$8]: "ListTileStyle.drawer",
        index: 1
      });
    },
    get C491() {
      return C[491] = dart.constList([C[489] || CT.C489, C[490] || CT.C490], T$.ListTileStyleL());
    },
    get C494() {
      return C[494] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 11,
        [S._Location_line]: 88,
        [S._Location_file]: null
      });
    },
    get C495() {
      return C[495] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dense",
        [S._Location_column]: 11,
        [S._Location_line]: 89,
        [S._Location_file]: null
      });
    },
    get C496() {
      return C[496] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 11,
        [S._Location_line]: 90,
        [S._Location_file]: null
      });
    },
    get C497() {
      return C[497] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 11,
        [S._Location_line]: 91,
        [S._Location_file]: null
      });
    },
    get C498() {
      return C[498] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectedColor",
        [S._Location_column]: 11,
        [S._Location_line]: 92,
        [S._Location_file]: null
      });
    },
    get C499() {
      return C[499] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "iconColor",
        [S._Location_column]: 11,
        [S._Location_line]: 93,
        [S._Location_file]: null
      });
    },
    get C500() {
      return C[500] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textColor",
        [S._Location_column]: 11,
        [S._Location_line]: 94,
        [S._Location_file]: null
      });
    },
    get C501() {
      return C[501] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "contentPadding",
        [S._Location_column]: 11,
        [S._Location_line]: 95,
        [S._Location_file]: null
      });
    },
    get C502() {
      return C[502] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "tileColor",
        [S._Location_column]: 11,
        [S._Location_line]: 96,
        [S._Location_file]: null
      });
    },
    get C503() {
      return C[503] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectedTileColor",
        [S._Location_column]: 11,
        [S._Location_line]: 97,
        [S._Location_file]: null
      });
    },
    get C504() {
      return C[504] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableFeedback",
        [S._Location_column]: 11,
        [S._Location_line]: 98,
        [S._Location_file]: null
      });
    },
    get C505() {
      return C[505] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "horizontalTitleGap",
        [S._Location_column]: 11,
        [S._Location_line]: 99,
        [S._Location_file]: null
      });
    },
    get C506() {
      return C[506] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minVerticalPadding",
        [S._Location_column]: 11,
        [S._Location_line]: 100,
        [S._Location_file]: null
      });
    },
    get C507() {
      return C[507] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minLeadingWidth",
        [S._Location_column]: 11,
        [S._Location_line]: 101,
        [S._Location_file]: null
      });
    },
    get C508() {
      return C[508] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 102,
        [S._Location_file]: null
      });
    },
    get C493() {
      return C[493] = dart.constList([C[494] || CT.C494, C[495] || CT.C495, C[496] || CT.C496, C[497] || CT.C497, C[498] || CT.C498, C[499] || CT.C499, C[500] || CT.C500, C[501] || CT.C501, C[502] || CT.C502, C[503] || CT.C503, C[504] || CT.C504, C[505] || CT.C505, C[506] || CT.C506, C[507] || CT.C507, C[508] || CT.C508], T$._LocationL());
    },
    get C492() {
      return C[492] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[493] || CT.C493,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 87,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C511() {
      return C[511] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 7,
        [S._Location_line]: 85,
        [S._Location_file]: null
      });
    },
    get C510() {
      return C[510] = dart.constList([C[511] || CT.C511], T$._LocationL());
    },
    get C509() {
      return C[509] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[510] || CT.C510,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 84,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C515() {
      return C[515] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 42,
        [S._Location_line]: 175,
        [S._Location_file]: null
      });
    },
    get C514() {
      return C[514] = dart.constList([C[515] || CT.C515], T$._LocationL());
    },
    get C513() {
      return C[513] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[514] || CT.C514,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 175,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C517() {
      return C[517] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[55] || CT.C55,
        [S._Location_name]: null,
        [S._Location_column]: 49,
        [S._Location_line]: 175,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C516() {
      return C[516] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[517] || CT.C517,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: null
      });
    },
    get C512() {
      return C[512] = dart.const({
        __proto__: list_tile.ListTileTheme.prototype,
        [S.Widget__location]: C[513] || CT.C513,
        [S.Widget_key]: null,
        [S.ProxyWidget_child]: C[516] || CT.C516,
        [S.enableFeedback$1]: null,
        [S.minLeadingWidth]: null,
        [S.minVerticalPadding]: null,
        [S.horizontalTitleGap]: null,
        [S.selectedTileColor]: null,
        [S.tileColor]: null,
        [S.contentPadding]: null,
        [S.textColor$1]: null,
        [S.iconColor]: null,
        [S.selectedColor]: null,
        [S.style$1]: C[489] || CT.C489,
        [S.shape$2]: null,
        [S.dense]: false
      });
    },
    get C520() {
      return C[520] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dense",
        [S._Location_column]: 7,
        [S._Location_line]: 181,
        [S._Location_file]: null
      });
    },
    get C521() {
      return C[521] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 182,
        [S._Location_file]: null
      });
    },
    get C522() {
      return C[522] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 7,
        [S._Location_line]: 183,
        [S._Location_file]: null
      });
    },
    get C523() {
      return C[523] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectedColor",
        [S._Location_column]: 7,
        [S._Location_line]: 184,
        [S._Location_file]: null
      });
    },
    get C524() {
      return C[524] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "iconColor",
        [S._Location_column]: 7,
        [S._Location_line]: 185,
        [S._Location_file]: null
      });
    },
    get C525() {
      return C[525] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textColor",
        [S._Location_column]: 7,
        [S._Location_line]: 186,
        [S._Location_file]: null
      });
    },
    get C526() {
      return C[526] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "contentPadding",
        [S._Location_column]: 7,
        [S._Location_line]: 187,
        [S._Location_file]: null
      });
    },
    get C527() {
      return C[527] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "tileColor",
        [S._Location_column]: 7,
        [S._Location_line]: 188,
        [S._Location_file]: null
      });
    },
    get C528() {
      return C[528] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectedTileColor",
        [S._Location_column]: 7,
        [S._Location_line]: 189,
        [S._Location_file]: null
      });
    },
    get C529() {
      return C[529] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableFeedback",
        [S._Location_column]: 7,
        [S._Location_line]: 190,
        [S._Location_file]: null
      });
    },
    get C530() {
      return C[530] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "horizontalTitleGap",
        [S._Location_column]: 7,
        [S._Location_line]: 191,
        [S._Location_file]: null
      });
    },
    get C531() {
      return C[531] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minVerticalPadding",
        [S._Location_column]: 7,
        [S._Location_line]: 192,
        [S._Location_file]: null
      });
    },
    get C532() {
      return C[532] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minLeadingWidth",
        [S._Location_column]: 7,
        [S._Location_line]: 193,
        [S._Location_file]: null
      });
    },
    get C533() {
      return C[533] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 194,
        [S._Location_file]: null
      });
    },
    get C519() {
      return C[519] = dart.constList([C[520] || CT.C520, C[521] || CT.C521, C[522] || CT.C522, C[523] || CT.C523, C[524] || CT.C524, C[525] || CT.C525, C[526] || CT.C526, C[527] || CT.C527, C[528] || CT.C528, C[529] || CT.C529, C[530] || CT.C530, C[531] || CT.C531, C[532] || CT.C532, C[533] || CT.C533], T$._LocationL());
    },
    get C518() {
      return C[518] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[519] || CT.C519,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 180,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C534() {
      return C[534] = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [S._name$8]: "ListTileControlAffinity.leading",
        index: 0
      });
    },
    get C535() {
      return C[535] = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [S._name$8]: "ListTileControlAffinity.trailing",
        index: 1
      });
    },
    get C536() {
      return C[536] = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [S._name$8]: "ListTileControlAffinity.platform",
        index: 2
      });
    },
    get C537() {
      return C[537] = dart.constList([C[534] || CT.C534, C[535] || CT.C535, C[536] || CT.C536], T$.ListTileControlAffinityL());
    },
    get C540() {
      return C[540] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "position",
        [S._Location_column]: 9,
        [S._Location_line]: 998,
        [S._Location_file]: null
      });
    },
    get C541() {
      return C[541] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "decoration",
        [S._Location_column]: 9,
        [S._Location_line]: 999,
        [S._Location_file]: null
      });
    },
    get C542() {
      return C[542] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1000,
        [S._Location_file]: null
      });
    },
    get C539() {
      return C[539] = dart.constList([C[540] || CT.C540, C[541] || CT.C541, C[542] || CT.C542], T$._LocationL());
    },
    get C538() {
      return C[538] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[539] || CT.C539,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 997,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C543() {
      return C[543] = dart.const({
        __proto__: ui.Brightness.prototype,
        [S._name$3]: "Brightness.light",
        index: 1
      });
    },
    get C544() {
      return C[544] = dart.const({
        __proto__: ui.Brightness.prototype,
        [S._name$3]: "Brightness.dark",
        index: 0
      });
    },
    get C547() {
      return C[547] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 9,
        [S._Location_line]: 1119,
        [S._Location_file]: null
      });
    },
    get C548() {
      return C[548] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 9,
        [S._Location_line]: 1120,
        [S._Location_file]: null
      });
    },
    get C549() {
      return C[549] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1121,
        [S._Location_file]: null
      });
    },
    get C546() {
      return C[546] = dart.constList([C[547] || CT.C547, C[548] || CT.C548, C[549] || CT.C549], T$._LocationL());
    },
    get C545() {
      return C[545] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[546] || CT.C546,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 1118,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C551() {
      return C[551] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[55] || CT.C55,
        [S._Location_name]: null,
        [S._Location_column]: 29,
        [S._Location_line]: 1132,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C550() {
      return C[550] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[551] || CT.C551,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: null
      });
    },
    get C554() {
      return C[554] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 7,
        [S._Location_line]: 1130,
        [S._Location_file]: null
      });
    },
    get C555() {
      return C[555] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 7,
        [S._Location_line]: 1131,
        [S._Location_file]: null
      });
    },
    get C556() {
      return C[556] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 1132,
        [S._Location_file]: null
      });
    },
    get C553() {
      return C[553] = dart.constList([C[554] || CT.C554, C[555] || CT.C555, C[556] || CT.C556], T$._LocationL());
    },
    get C552() {
      return C[552] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[553] || CT.C553,
        [S._Location_name]: null,
        [S._Location_column]: 30,
        [S._Location_line]: 1129,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C559() {
      return C[559] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 9,
        [S._Location_line]: 1140,
        [S._Location_file]: null
      });
    },
    get C560() {
      return C[560] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 9,
        [S._Location_line]: 1141,
        [S._Location_file]: null
      });
    },
    get C561() {
      return C[561] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1142,
        [S._Location_file]: null
      });
    },
    get C558() {
      return C[558] = dart.constList([C[559] || CT.C559, C[560] || CT.C560, C[561] || CT.C561], T$._LocationL());
    },
    get C557() {
      return C[557] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[558] || CT.C558,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 1139,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C564() {
      return C[564] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 9,
        [S._Location_line]: 1149,
        [S._Location_file]: null
      });
    },
    get C565() {
      return C[565] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 9,
        [S._Location_line]: 1150,
        [S._Location_file]: null
      });
    },
    get C566() {
      return C[566] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1151,
        [S._Location_file]: null
      });
    },
    get C563() {
      return C[563] = dart.constList([C[564] || CT.C564, C[565] || CT.C565, C[566] || CT.C566], T$._LocationL());
    },
    get C562() {
      return C[562] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[563] || CT.C563,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 1148,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C567() {
      return C[567] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 16,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 16
      });
    },
    get C570() {
      return C[570] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "leading",
        [S._Location_column]: 15,
        [S._Location_line]: 1193,
        [S._Location_file]: null
      });
    },
    get C571() {
      return C[571] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "title",
        [S._Location_column]: 15,
        [S._Location_line]: 1194,
        [S._Location_file]: null
      });
    },
    get C572() {
      return C[572] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "subtitle",
        [S._Location_column]: 15,
        [S._Location_line]: 1195,
        [S._Location_file]: null
      });
    },
    get C573() {
      return C[573] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailing",
        [S._Location_column]: 15,
        [S._Location_line]: 1196,
        [S._Location_file]: null
      });
    },
    get C574() {
      return C[574] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "isDense",
        [S._Location_column]: 15,
        [S._Location_line]: 1197,
        [S._Location_file]: null
      });
    },
    get C575() {
      return C[575] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "visualDensity",
        [S._Location_column]: 15,
        [S._Location_line]: 1198,
        [S._Location_file]: null
      });
    },
    get C576() {
      return C[576] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "isThreeLine",
        [S._Location_column]: 15,
        [S._Location_line]: 1199,
        [S._Location_file]: null
      });
    },
    get C577() {
      return C[577] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textDirection",
        [S._Location_column]: 15,
        [S._Location_line]: 1200,
        [S._Location_file]: null
      });
    },
    get C578() {
      return C[578] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "titleBaselineType",
        [S._Location_column]: 15,
        [S._Location_line]: 1201,
        [S._Location_file]: null
      });
    },
    get C579() {
      return C[579] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "subtitleBaselineType",
        [S._Location_column]: 15,
        [S._Location_line]: 1202,
        [S._Location_file]: null
      });
    },
    get C580() {
      return C[580] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "horizontalTitleGap",
        [S._Location_column]: 15,
        [S._Location_line]: 1203,
        [S._Location_file]: null
      });
    },
    get C581() {
      return C[581] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minVerticalPadding",
        [S._Location_column]: 15,
        [S._Location_line]: 1204,
        [S._Location_file]: null
      });
    },
    get C582() {
      return C[582] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minLeadingWidth",
        [S._Location_column]: 15,
        [S._Location_line]: 1205,
        [S._Location_file]: null
      });
    },
    get C569() {
      return C[569] = dart.constList([C[570] || CT.C570, C[571] || CT.C571, C[572] || CT.C572, C[573] || CT.C573, C[574] || CT.C574, C[575] || CT.C575, C[576] || CT.C576, C[577] || CT.C577, C[578] || CT.C578, C[579] || CT.C579, C[580] || CT.C580, C[581] || CT.C581, C[582] || CT.C582], T$._LocationL());
    },
    get C568() {
      return C[568] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[569] || CT.C569,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 1192,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C585() {
      return C[585] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "top",
        [S._Location_column]: 13,
        [S._Location_line]: 1189,
        [S._Location_file]: null
      });
    },
    get C586() {
      return C[586] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "bottom",
        [S._Location_column]: 13,
        [S._Location_line]: 1190,
        [S._Location_file]: null
      });
    },
    get C587() {
      return C[587] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minimum",
        [S._Location_column]: 13,
        [S._Location_line]: 1191,
        [S._Location_file]: null
      });
    },
    get C588() {
      return C[588] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 1192,
        [S._Location_file]: null
      });
    },
    get C584() {
      return C[584] = dart.constList([C[585] || CT.C585, C[586] || CT.C586, C[587] || CT.C587, C[588] || CT.C588], T$._LocationL());
    },
    get C583() {
      return C[583] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[584] || CT.C584,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 1188,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C591() {
      return C[591] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 11,
        [S._Location_line]: 1187,
        [S._Location_file]: null
      });
    },
    get C592() {
      return C[592] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 1188,
        [S._Location_file]: null
      });
    },
    get C590() {
      return C[590] = dart.constList([C[591] || CT.C591, C[592] || CT.C592], T$._LocationL());
    },
    get C589() {
      return C[589] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[590] || CT.C590,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 1186,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C595() {
      return C[595] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selected",
        [S._Location_column]: 9,
        [S._Location_line]: 1184,
        [S._Location_file]: null
      });
    },
    get C596() {
      return C[596] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enabled",
        [S._Location_column]: 9,
        [S._Location_line]: 1185,
        [S._Location_file]: null
      });
    },
    get C597() {
      return C[597] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1186,
        [S._Location_file]: null
      });
    },
    get C594() {
      return C[594] = dart.constList([C[595] || CT.C595, C[596] || CT.C596, C[597] || CT.C597], T$._LocationL());
    },
    get C593() {
      return C[593] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[594] || CT.C594,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 1183,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C600() {
      return C[600] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "customBorder",
        [S._Location_column]: 7,
        [S._Location_line]: 1173,
        [S._Location_file]: null
      });
    },
    get C601() {
      return C[601] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 7,
        [S._Location_line]: 1174,
        [S._Location_file]: null
      });
    },
    get C602() {
      return C[602] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 7,
        [S._Location_line]: 1175,
        [S._Location_file]: null
      });
    },
    get C603() {
      return C[603] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 7,
        [S._Location_line]: 1176,
        [S._Location_file]: null
      });
    },
    get C604() {
      return C[604] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "canRequestFocus",
        [S._Location_column]: 7,
        [S._Location_line]: 1177,
        [S._Location_file]: null
      });
    },
    get C605() {
      return C[605] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 7,
        [S._Location_line]: 1178,
        [S._Location_file]: null
      });
    },
    get C606() {
      return C[606] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusColor",
        [S._Location_column]: 7,
        [S._Location_line]: 1179,
        [S._Location_file]: null
      });
    },
    get C607() {
      return C[607] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 7,
        [S._Location_line]: 1180,
        [S._Location_file]: null
      });
    },
    get C608() {
      return C[608] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 7,
        [S._Location_line]: 1181,
        [S._Location_file]: null
      });
    },
    get C609() {
      return C[609] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableFeedback",
        [S._Location_column]: 7,
        [S._Location_line]: 1182,
        [S._Location_file]: null
      });
    },
    get C610() {
      return C[610] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 1183,
        [S._Location_file]: null
      });
    },
    get C599() {
      return C[599] = dart.constList([C[600] || CT.C600, C[601] || CT.C601, C[602] || CT.C602, C[603] || CT.C603, C[604] || CT.C604, C[605] || CT.C605, C[606] || CT.C606, C[607] || CT.C607, C[608] || CT.C608, C[609] || CT.C609, C[610] || CT.C610], T$._LocationL());
    },
    get C598() {
      return C[598] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[599] || CT.C599,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 1172,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C611() {
      return C[611] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S._name$8]: "_ListTileSlot.leading",
        index: 0
      });
    },
    get C612() {
      return C[612] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S._name$8]: "_ListTileSlot.title",
        index: 1
      });
    },
    get C613() {
      return C[613] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S._name$8]: "_ListTileSlot.subtitle",
        index: 2
      });
    },
    get C614() {
      return C[614] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S._name$8]: "_ListTileSlot.trailing",
        index: 3
      });
    },
    get C615() {
      return C[615] = dart.constList([C[611] || CT.C611, C[612] || CT.C612, C[613] || CT.C613, C[614] || CT.C614], T$._ListTileSlotL());
    },
    get C616() {
      return C[616] = dart.const({
        __proto__: drawer.DrawerAlignment.prototype,
        [S._name$9]: "DrawerAlignment.start",
        index: 0
      });
    },
    get C617() {
      return C[617] = dart.const({
        __proto__: drawer.DrawerAlignment.prototype,
        [S._name$9]: "DrawerAlignment.end",
        index: 1
      });
    },
    get C618() {
      return C[618] = dart.constList([C[616] || CT.C616, C[617] || CT.C617], T$.DrawerAlignmentL());
    },
    get C619() {
      return C[619] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 1 / 0,
        [S.BoxConstraints_maxWidth]: 304,
        [S.BoxConstraints_minWidth]: 304
      });
    },
    get C622() {
      return C[622] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 11,
        [S._Location_line]: 198,
        [S._Location_file]: null
      });
    },
    get C623() {
      return C[623] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 199,
        [S._Location_file]: null
      });
    },
    get C621() {
      return C[621] = dart.constList([C[622] || CT.C622, C[623] || CT.C623], T$._LocationL());
    },
    get C620() {
      return C[620] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[621] || CT.C621,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 197,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C626() {
      return C[626] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 9,
        [S._Location_line]: 196,
        [S._Location_file]: null
      });
    },
    get C627() {
      return C[627] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 197,
        [S._Location_file]: null
      });
    },
    get C625() {
      return C[625] = dart.constList([C[626] || CT.C626, C[627] || CT.C627], T$._LocationL());
    },
    get C624() {
      return C[624] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[625] || CT.C625,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 195,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C630() {
      return C[630] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scopesRoute",
        [S._Location_column]: 7,
        [S._Location_line]: 191,
        [S._Location_file]: null
      });
    },
    get C631() {
      return C[631] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "namesRoute",
        [S._Location_column]: 7,
        [S._Location_line]: 192,
        [S._Location_file]: null
      });
    },
    get C632() {
      return C[632] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "explicitChildNodes",
        [S._Location_column]: 7,
        [S._Location_line]: 193,
        [S._Location_file]: null
      });
    },
    get C633() {
      return C[633] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 7,
        [S._Location_line]: 194,
        [S._Location_file]: null
      });
    },
    get C634() {
      return C[634] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 195,
        [S._Location_file]: null
      });
    },
    get C629() {
      return C[629] = dart.constList([C[630] || CT.C630, C[631] || CT.C631, C[632] || CT.C632, C[633] || CT.C633, C[634] || CT.C634], T$._LocationL());
    },
    get C628() {
      return C[628] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[629] || CT.C629,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 190,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C635() {
      return C[635] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [S._name$10]: "DragStartBehavior.start",
        index: 1
      });
    },
    get C638() {
      return C[638] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 30,
        [S._Location_line]: 553,
        [S._Location_file]: null
      });
    },
    get C637() {
      return C[637] = dart.constList([C[638] || CT.C638], T$._LocationL());
    },
    get C636() {
      return C[636] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[637] || CT.C637,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 553,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C641() {
      return C[641] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 13,
        [S._Location_line]: 547,
        [S._Location_file]: null
      });
    },
    get C642() {
      return C[642] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHorizontalDragUpdate",
        [S._Location_column]: 13,
        [S._Location_line]: 548,
        [S._Location_file]: null
      });
    },
    get C643() {
      return C[643] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHorizontalDragEnd",
        [S._Location_column]: 13,
        [S._Location_line]: 549,
        [S._Location_file]: null
      });
    },
    get C644() {
      return C[644] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "behavior",
        [S._Location_column]: 13,
        [S._Location_line]: 550,
        [S._Location_file]: null
      });
    },
    get C645() {
      return C[645] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "excludeFromSemantics",
        [S._Location_column]: 13,
        [S._Location_line]: 551,
        [S._Location_file]: null
      });
    },
    get C646() {
      return C[646] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dragStartBehavior",
        [S._Location_column]: 13,
        [S._Location_line]: 552,
        [S._Location_file]: null
      });
    },
    get C647() {
      return C[647] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 553,
        [S._Location_file]: null
      });
    },
    get C640() {
      return C[640] = dart.constList([C[641] || CT.C641, C[642] || CT.C642, C[643] || CT.C643, C[644] || CT.C644, C[645] || CT.C645, C[646] || CT.C646, C[647] || CT.C647], T$._LocationL());
    },
    get C639() {
      return C[639] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[640] || CT.C640,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 546,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C650() {
      return C[650] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 11,
        [S._Location_line]: 545,
        [S._Location_file]: null
      });
    },
    get C651() {
      return C[651] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 546,
        [S._Location_file]: null
      });
    },
    get C649() {
      return C[649] = dart.constList([C[650] || CT.C650, C[651] || CT.C651], T$._LocationL());
    },
    get C648() {
      return C[648] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[649] || CT.C649,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 544,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C653() {
      return C[653] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[55] || CT.C55,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 557,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C652() {
      return C[652] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[653] || CT.C653,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: 0,
        [S.SizedBox_width]: 0
      });
    },
    get C656() {
      return C[656] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 27,
        [S._Location_line]: 596,
        [S._Location_file]: null
      });
    },
    get C655() {
      return C[655] = dart.constList([C[656] || CT.C656], T$._LocationL());
    },
    get C654() {
      return C[654] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[655] || CT.C655,
        [S._Location_name]: null,
        [S._Location_column]: 32,
        [S._Location_line]: 595,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C659() {
      return C[659] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opaque",
        [S._Location_column]: 25,
        [S._Location_line]: 594,
        [S._Location_file]: null
      });
    },
    get C660() {
      return C[660] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 25,
        [S._Location_line]: 595,
        [S._Location_file]: null
      });
    },
    get C658() {
      return C[658] = dart.constList([C[659] || CT.C659, C[660] || CT.C660], T$._LocationL());
    },
    get C657() {
      return C[657] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[658] || CT.C658,
        [S._Location_name]: null,
        [S._Location_column]: 30,
        [S._Location_line]: 593,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C663() {
      return C[663] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 23,
        [S._Location_line]: 592,
        [S._Location_file]: null
      });
    },
    get C664() {
      return C[664] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 23,
        [S._Location_line]: 593,
        [S._Location_file]: null
      });
    },
    get C662() {
      return C[662] = dart.constList([C[663] || CT.C663, C[664] || CT.C664], T$._LocationL());
    },
    get C661() {
      return C[661] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[662] || CT.C662,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 591,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C667() {
      return C[667] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 21,
        [S._Location_line]: 590,
        [S._Location_file]: null
      });
    },
    get C668() {
      return C[668] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 591,
        [S._Location_file]: null
      });
    },
    get C666() {
      return C[666] = dart.constList([C[667] || CT.C667, C[668] || CT.C668], T$._LocationL());
    },
    get C665() {
      return C[665] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[666] || CT.C666,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 589,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C671() {
      return C[671] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "excluding",
        [S._Location_column]: 19,
        [S._Location_line]: 588,
        [S._Location_file]: null
      });
    },
    get C672() {
      return C[672] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 589,
        [S._Location_file]: null
      });
    },
    get C670() {
      return C[670] = dart.constList([C[671] || CT.C671, C[672] || CT.C672], T$._LocationL());
    },
    get C669() {
      return C[669] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[670] || CT.C670,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 586,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C675() {
      return C[675] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 586,
        [S._Location_file]: null
      });
    },
    get C674() {
      return C[674] = dart.constList([C[675] || CT.C675], T$._LocationL());
    },
    get C673() {
      return C[673] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[674] || CT.C674,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 585,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C678() {
      return C[678] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 23,
        [S._Location_line]: 610,
        [S._Location_file]: null
      });
    },
    get C679() {
      return C[679] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "node",
        [S._Location_column]: 23,
        [S._Location_line]: 611,
        [S._Location_file]: null
      });
    },
    get C680() {
      return C[680] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 23,
        [S._Location_line]: 612,
        [S._Location_file]: null
      });
    },
    get C677() {
      return C[677] = dart.constList([C[678] || CT.C678, C[679] || CT.C679, C[680] || CT.C680], T$._LocationL());
    },
    get C676() {
      return C[676] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[677] || CT.C677,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 609,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C683() {
      return C[683] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 609,
        [S._Location_file]: null
      });
    },
    get C682() {
      return C[682] = dart.constList([C[683] || CT.C683], T$._LocationL());
    },
    get C681() {
      return C[681] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[682] || CT.C682,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 608,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C686() {
      return C[686] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 19,
        [S._Location_line]: 606,
        [S._Location_file]: null
      });
    },
    get C687() {
      return C[687] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "widthFactor",
        [S._Location_column]: 19,
        [S._Location_line]: 607,
        [S._Location_file]: null
      });
    },
    get C688() {
      return C[688] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 608,
        [S._Location_file]: null
      });
    },
    get C685() {
      return C[685] = dart.constList([C[686] || CT.C686, C[687] || CT.C687, C[688] || CT.C688], T$._LocationL());
    },
    get C684() {
      return C[684] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[685] || CT.C685,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 605,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C691() {
      return C[691] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 17,
        [S._Location_line]: 604,
        [S._Location_file]: null
      });
    },
    get C692() {
      return C[692] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 605,
        [S._Location_file]: null
      });
    },
    get C690() {
      return C[690] = dart.constList([C[691] || CT.C691, C[692] || CT.C692], T$._LocationL());
    },
    get C689() {
      return C[689] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[690] || CT.C690,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 603,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C695() {
      return C[695] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 13,
        [S._Location_line]: 584,
        [S._Location_file]: null
      });
    },
    get C694() {
      return C[694] = dart.constList([C[695] || CT.C695], T$._LocationL());
    },
    get C693() {
      return C[693] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[694] || CT.C694,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 583,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C698() {
      return C[698] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 583,
        [S._Location_file]: null
      });
    },
    get C697() {
      return C[697] = dart.constList([C[698] || CT.C698], T$._LocationL());
    },
    get C696() {
      return C[696] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[697] || CT.C697,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 582,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C701() {
      return C[701] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 9,
        [S._Location_line]: 575,
        [S._Location_file]: null
      });
    },
    get C702() {
      return C[702] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHorizontalDragDown",
        [S._Location_column]: 9,
        [S._Location_line]: 576,
        [S._Location_file]: null
      });
    },
    get C703() {
      return C[703] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHorizontalDragUpdate",
        [S._Location_column]: 9,
        [S._Location_line]: 577,
        [S._Location_file]: null
      });
    },
    get C704() {
      return C[704] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHorizontalDragEnd",
        [S._Location_column]: 9,
        [S._Location_line]: 578,
        [S._Location_file]: null
      });
    },
    get C705() {
      return C[705] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHorizontalDragCancel",
        [S._Location_column]: 9,
        [S._Location_line]: 579,
        [S._Location_file]: null
      });
    },
    get C706() {
      return C[706] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "excludeFromSemantics",
        [S._Location_column]: 9,
        [S._Location_line]: 580,
        [S._Location_file]: null
      });
    },
    get C707() {
      return C[707] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dragStartBehavior",
        [S._Location_column]: 9,
        [S._Location_line]: 581,
        [S._Location_file]: null
      });
    },
    get C708() {
      return C[708] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 582,
        [S._Location_file]: null
      });
    },
    get C700() {
      return C[700] = dart.constList([C[701] || CT.C701, C[702] || CT.C702, C[703] || CT.C703, C[704] || CT.C704, C[705] || CT.C705, C[706] || CT.C706, C[707] || CT.C707, C[708] || CT.C708], T$._LocationL());
    },
    get C699() {
      return C[699] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[700] || CT.C700,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 574,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C711() {
      return C[711] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 7,
        [S._Location_line]: 628,
        [S._Location_file]: null
      });
    },
    get C712() {
      return C[712] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 629,
        [S._Location_file]: null
      });
    },
    get C710() {
      return C[710] = dart.constList([C[711] || CT.C711, C[712] || CT.C712], T$._LocationL());
    },
    get C709() {
      return C[709] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[710] || CT.C710,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 627,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C713() {
      return C[713] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 246000
      });
    },
    get C716() {
      return C[716] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 11,
        [S._Location_line]: 212,
        [S._Location_file]: null
      });
    },
    get C717() {
      return C[717] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "margin",
        [S._Location_column]: 11,
        [S._Location_line]: 213,
        [S._Location_file]: null
      });
    },
    get C718() {
      return C[718] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "decoration",
        [S._Location_column]: 11,
        [S._Location_line]: 214,
        [S._Location_file]: null
      });
    },
    get C715() {
      return C[715] = dart.constList([C[716] || CT.C716, C[717] || CT.C717, C[718] || CT.C718], T$._LocationL());
    },
    get C714() {
      return C[714] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[715] || CT.C715,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 211,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C721() {
      return C[721] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 211,
        [S._Location_file]: null
      });
    },
    get C720() {
      return C[720] = dart.constList([C[721] || CT.C721], T$._LocationL());
    },
    get C719() {
      return C[719] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[720] || CT.C720,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 210,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C724() {
      return C[724] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 7,
        [S._Location_line]: 209,
        [S._Location_file]: null
      });
    },
    get C725() {
      return C[725] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 210,
        [S._Location_file]: null
      });
    },
    get C723() {
      return C[723] = dart.constList([C[724] || CT.C724, C[725] || CT.C725], T$._LocationL());
    },
    get C722() {
      return C[722] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[723] || CT.C723,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 208,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C728() {
      return C[728] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 11,
        [S._Location_line]: 313,
        [S._Location_file]: null
      });
    },
    get C729() {
      return C[729] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "margin",
        [S._Location_column]: 11,
        [S._Location_line]: 314,
        [S._Location_file]: null
      });
    },
    get C730() {
      return C[730] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "decoration",
        [S._Location_column]: 11,
        [S._Location_line]: 315,
        [S._Location_file]: null
      });
    },
    get C727() {
      return C[727] = dart.constList([C[728] || CT.C728, C[729] || CT.C729, C[730] || CT.C730], T$._LocationL());
    },
    get C726() {
      return C[726] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[727] || CT.C727,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 312,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C733() {
      return C[733] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 312,
        [S._Location_file]: null
      });
    },
    get C732() {
      return C[732] = dart.constList([C[733] || CT.C733], T$._LocationL());
    },
    get C731() {
      return C[731] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[732] || CT.C732,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 311,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C736() {
      return C[736] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 7,
        [S._Location_line]: 310,
        [S._Location_file]: null
      });
    },
    get C737() {
      return C[737] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 311,
        [S._Location_file]: null
      });
    },
    get C735() {
      return C[735] = dart.constList([C[736] || CT.C736, C[737] || CT.C737], T$._LocationL());
    },
    get C734() {
      return C[734] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[735] || CT.C735,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 309,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C738() {
      return C[738] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 100000
      });
    },
    get C739() {
      return C[739] = dart.const({
        __proto__: curves._DecelerateCurve.prototype
      });
    },
    get C740() {
      return C[740] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 24,
        [S.EdgeInsets_right]: 40,
        [S.EdgeInsets_top]: 24,
        [S.EdgeInsets_left]: 40
      });
    },
    get C741() {
      return C[741] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 0,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 280
      });
    },
    get C744() {
      return C[744] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 15,
        [S._Location_line]: 146,
        [S._Location_file]: null
      });
    },
    get C745() {
      return C[745] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 15,
        [S._Location_line]: 147,
        [S._Location_file]: null
      });
    },
    get C746() {
      return C[746] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 15,
        [S._Location_line]: 148,
        [S._Location_file]: null
      });
    },
    get C747() {
      return C[747] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "type",
        [S._Location_column]: 15,
        [S._Location_line]: 149,
        [S._Location_file]: null
      });
    },
    get C748() {
      return C[748] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 15,
        [S._Location_line]: 150,
        [S._Location_file]: null
      });
    },
    get C749() {
      return C[749] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 151,
        [S._Location_file]: null
      });
    },
    get C743() {
      return C[743] = dart.constList([C[744] || CT.C744, C[745] || CT.C745, C[746] || CT.C746, C[747] || CT.C747, C[748] || CT.C748, C[749] || CT.C749], T$._LocationL());
    },
    get C742() {
      return C[742] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[743] || CT.C743,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 145,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C752() {
      return C[752] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 13,
        [S._Location_line]: 144,
        [S._Location_file]: null
      });
    },
    get C753() {
      return C[753] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 145,
        [S._Location_file]: null
      });
    },
    get C751() {
      return C[751] = dart.constList([C[752] || CT.C752, C[753] || CT.C753], T$._LocationL());
    },
    get C750() {
      return C[750] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[751] || CT.C751,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 143,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C756() {
      return C[756] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 143,
        [S._Location_file]: null
      });
    },
    get C755() {
      return C[755] = dart.constList([C[756] || CT.C756], T$._LocationL());
    },
    get C754() {
      return C[754] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[755] || CT.C755,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 142,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C759() {
      return C[759] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "removeLeft",
        [S._Location_column]: 9,
        [S._Location_line]: 137,
        [S._Location_file]: null
      });
    },
    get C760() {
      return C[760] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "removeTop",
        [S._Location_column]: 9,
        [S._Location_line]: 138,
        [S._Location_file]: null
      });
    },
    get C761() {
      return C[761] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "removeRight",
        [S._Location_column]: 9,
        [S._Location_line]: 139,
        [S._Location_file]: null
      });
    },
    get C762() {
      return C[762] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "removeBottom",
        [S._Location_column]: 9,
        [S._Location_line]: 140,
        [S._Location_file]: null
      });
    },
    get C763() {
      return C[763] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "context",
        [S._Location_column]: 9,
        [S._Location_line]: 141,
        [S._Location_file]: null
      });
    },
    get C764() {
      return C[764] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 142,
        [S._Location_file]: null
      });
    },
    get C758() {
      return C[758] = dart.constList([C[759] || CT.C759, C[760] || CT.C760, C[761] || CT.C761, C[762] || CT.C762, C[763] || CT.C763, C[764] || CT.C764], T$._LocationL());
    },
    get C757() {
      return C[757] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[758] || CT.C758,
        [S._Location_name]: null,
        [S._Location_column]: 25,
        [S._Location_line]: 136,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C767() {
      return C[767] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 7,
        [S._Location_line]: 133,
        [S._Location_file]: null
      });
    },
    get C768() {
      return C[768] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 7,
        [S._Location_line]: 134,
        [S._Location_file]: null
      });
    },
    get C769() {
      return C[769] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "curve",
        [S._Location_column]: 7,
        [S._Location_line]: 135,
        [S._Location_file]: null
      });
    },
    get C770() {
      return C[770] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 136,
        [S._Location_file]: null
      });
    },
    get C766() {
      return C[766] = dart.constList([C[767] || CT.C767, C[768] || CT.C768, C[769] || CT.C769, C[770] || CT.C770], T$._LocationL());
    },
    get C765() {
      return C[765] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[766] || CT.C766,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 132,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C771() {
      return C[771] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 24,
        [S.EdgeInsets_right]: 24,
        [S.EdgeInsets_top]: 20,
        [S.EdgeInsets_left]: 24
      });
    },
    get C772() {
      return C[772] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 0
      });
    },
    get C775() {
      return C[775] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 490,
        [S._Location_file]: null
      });
    },
    get C776() {
      return C[776] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "namesRoute",
        [S._Location_column]: 13,
        [S._Location_line]: 491,
        [S._Location_file]: null
      });
    },
    get C777() {
      return C[777] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "container",
        [S._Location_column]: 13,
        [S._Location_line]: 492,
        [S._Location_file]: null
      });
    },
    get C774() {
      return C[774] = dart.constList([C[775] || CT.C775, C[776] || CT.C776, C[777] || CT.C777], T$._LocationL());
    },
    get C773() {
      return C[773] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[774] || CT.C774,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 489,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C780() {
      return C[780] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 11,
        [S._Location_line]: 488,
        [S._Location_file]: null
      });
    },
    get C781() {
      return C[781] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 489,
        [S._Location_file]: null
      });
    },
    get C779() {
      return C[779] = dart.constList([C[780] || CT.C780, C[781] || CT.C781], T$._LocationL());
    },
    get C778() {
      return C[778] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[779] || CT.C779,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 487,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C784() {
      return C[784] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 481,
        [S._Location_file]: null
      });
    },
    get C785() {
      return C[785] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 487,
        [S._Location_file]: null
      });
    },
    get C783() {
      return C[783] = dart.constList([C[784] || CT.C784, C[785] || CT.C785], T$._LocationL());
    },
    get C782() {
      return C[782] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[783] || CT.C783,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 480,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C788() {
      return C[788] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 11,
        [S._Location_line]: 508,
        [S._Location_file]: null
      });
    },
    get C789() {
      return C[789] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 509,
        [S._Location_file]: null
      });
    },
    get C787() {
      return C[787] = dart.constList([C[788] || CT.C788, C[789] || CT.C789], T$._LocationL());
    },
    get C786() {
      return C[786] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[787] || CT.C787,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 507,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C792() {
      return C[792] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 501,
        [S._Location_file]: null
      });
    },
    get C793() {
      return C[793] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 507,
        [S._Location_file]: null
      });
    },
    get C791() {
      return C[791] = dart.constList([C[792] || CT.C792, C[793] || CT.C793], T$._LocationL());
    },
    get C790() {
      return C[790] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[791] || CT.C791,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 500,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C796() {
      return C[796] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "buttonPadding",
        [S._Location_column]: 11,
        [S._Location_line]: 519,
        [S._Location_file]: null
      });
    },
    get C797() {
      return C[797] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflowDirection",
        [S._Location_column]: 11,
        [S._Location_line]: 520,
        [S._Location_file]: null
      });
    },
    get C798() {
      return C[798] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflowButtonSpacing",
        [S._Location_column]: 11,
        [S._Location_line]: 521,
        [S._Location_file]: null
      });
    },
    get C799() {
      return C[799] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 11,
        [S._Location_line]: 522,
        [S._Location_file]: null
      });
    },
    get C795() {
      return C[795] = dart.constList([C[796] || CT.C796, C[797] || CT.C797, C[798] || CT.C798, C[799] || CT.C799], T$._LocationL());
    },
    get C794() {
      return C[794] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[795] || CT.C795,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 518,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C802() {
      return C[802] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 517,
        [S._Location_file]: null
      });
    },
    get C803() {
      return C[803] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 518,
        [S._Location_file]: null
      });
    },
    get C801() {
      return C[801] = dart.constList([C[802] || CT.C802, C[803] || CT.C803], T$._LocationL());
    },
    get C800() {
      return C[800] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[801] || CT.C801,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 516,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C806() {
      return C[806] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 17,
        [S._Location_line]: 534,
        [S._Location_file]: null
      });
    },
    get C807() {
      return C[807] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 17,
        [S._Location_line]: 535,
        [S._Location_file]: null
      });
    },
    get C808() {
      return C[808] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 17,
        [S._Location_line]: 536,
        [S._Location_file]: null
      });
    },
    get C805() {
      return C[805] = dart.constList([C[806] || CT.C806, C[807] || CT.C807, C[808] || CT.C808], T$._LocationL());
    },
    get C804() {
      return C[804] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[805] || CT.C805,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 533,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C811() {
      return C[811] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 533,
        [S._Location_file]: null
      });
    },
    get C810() {
      return C[810] = dart.constList([C[811] || CT.C811], T$._LocationL());
    },
    get C809() {
      return C[809] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[810] || CT.C810,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 532,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C814() {
      return C[814] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 532,
        [S._Location_file]: null
      });
    },
    get C813() {
      return C[813] = dart.constList([C[814] || CT.C814], T$._LocationL());
    },
    get C812() {
      return C[812] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[813] || CT.C813,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 531,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C817() {
      return C[817] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 39,
        [S._Location_line]: 549,
        [S._Location_file]: null
      });
    },
    get C816() {
      return C[816] = dart.constList([C[817] || CT.C817], T$._LocationL());
    },
    get C815() {
      return C[815] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[816] || CT.C816,
        [S._Location_name]: null,
        [S._Location_column]: 30,
        [S._Location_line]: 549,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C820() {
      return C[820] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 9,
        [S._Location_line]: 556,
        [S._Location_file]: null
      });
    },
    get C821() {
      return C[821] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 9,
        [S._Location_line]: 557,
        [S._Location_file]: null
      });
    },
    get C822() {
      return C[822] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 558,
        [S._Location_file]: null
      });
    },
    get C819() {
      return C[819] = dart.constList([C[820] || CT.C820, C[821] || CT.C821, C[822] || CT.C822], T$._LocationL());
    },
    get C818() {
      return C[818] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[819] || CT.C819,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 555,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C825() {
      return C[825] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 555,
        [S._Location_file]: null
      });
    },
    get C824() {
      return C[824] = dart.constList([C[825] || CT.C825], T$._LocationL());
    },
    get C823() {
      return C[823] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[824] || CT.C824,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 554,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C828() {
      return C[828] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scopesRoute",
        [S._Location_column]: 9,
        [S._Location_line]: 564,
        [S._Location_file]: null
      });
    },
    get C829() {
      return C[829] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "explicitChildNodes",
        [S._Location_column]: 9,
        [S._Location_line]: 565,
        [S._Location_file]: null
      });
    },
    get C830() {
      return C[830] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "namesRoute",
        [S._Location_column]: 9,
        [S._Location_line]: 566,
        [S._Location_file]: null
      });
    },
    get C831() {
      return C[831] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 9,
        [S._Location_line]: 567,
        [S._Location_file]: null
      });
    },
    get C832() {
      return C[832] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 568,
        [S._Location_file]: null
      });
    },
    get C827() {
      return C[827] = dart.constList([C[828] || CT.C828, C[829] || CT.C829, C[830] || CT.C830, C[831] || CT.C831, C[832] || CT.C832], T$._LocationL());
    },
    get C826() {
      return C[826] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[827] || CT.C827,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 563,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C835() {
      return C[835] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "backgroundColor",
        [S._Location_column]: 7,
        [S._Location_line]: 572,
        [S._Location_file]: null
      });
    },
    get C836() {
      return C[836] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 573,
        [S._Location_file]: null
      });
    },
    get C837() {
      return C[837] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "insetPadding",
        [S._Location_column]: 7,
        [S._Location_line]: 574,
        [S._Location_file]: null
      });
    },
    get C838() {
      return C[838] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 575,
        [S._Location_file]: null
      });
    },
    get C839() {
      return C[839] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 576,
        [S._Location_file]: null
      });
    },
    get C840() {
      return C[840] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 577,
        [S._Location_file]: null
      });
    },
    get C834() {
      return C[834] = dart.constList([C[835] || CT.C835, C[836] || CT.C836, C[837] || CT.C837, C[838] || CT.C838, C[839] || CT.C839, C[840] || CT.C840], T$._LocationL());
    },
    get C833() {
      return C[833] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[834] || CT.C834,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 571,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C841() {
      return C[841] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 8,
        [S.EdgeInsets_right]: 24,
        [S.EdgeInsets_top]: 8,
        [S.EdgeInsets_left]: 24
      });
    },
    get C844() {
      return C[844] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 644,
        [S._Location_file]: null
      });
    },
    get C845() {
      return C[845] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 645,
        [S._Location_file]: null
      });
    },
    get C843() {
      return C[843] = dart.constList([C[844] || CT.C844, C[845] || CT.C845], T$._LocationL());
    },
    get C842() {
      return C[842] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[843] || CT.C843,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 643,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C848() {
      return C[848] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 7,
        [S._Location_line]: 642,
        [S._Location_file]: null
      });
    },
    get C849() {
      return C[849] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 643,
        [S._Location_file]: null
      });
    },
    get C847() {
      return C[847] = dart.constList([C[848] || CT.C848, C[849] || CT.C849], T$._LocationL());
    },
    get C846() {
      return C[846] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[847] || CT.C847,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 641,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C850() {
      return C[850] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 24,
        [S.EdgeInsets_top]: 24,
        [S.EdgeInsets_left]: 24
      });
    },
    get C851() {
      return C[851] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 16,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 12,
        [S.EdgeInsets_left]: 0
      });
    },
    get C854() {
      return C[854] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "namesRoute",
        [S._Location_column]: 28,
        [S._Location_line]: 854,
        [S._Location_file]: null
      });
    },
    get C855() {
      return C[855] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 55,
        [S._Location_line]: 854,
        [S._Location_file]: null
      });
    },
    get C853() {
      return C[853] = dart.constList([C[854] || CT.C854, C[855] || CT.C855], T$._LocationL());
    },
    get C852() {
      return C[852] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[853] || CT.C853,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 854,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C858() {
      return C[858] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 11,
        [S._Location_line]: 853,
        [S._Location_file]: null
      });
    },
    get C859() {
      return C[859] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 854,
        [S._Location_file]: null
      });
    },
    get C857() {
      return C[857] = dart.constList([C[858] || CT.C858, C[859] || CT.C859], T$._LocationL());
    },
    get C856() {
      return C[856] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[857] || CT.C857,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 852,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C862() {
      return C[862] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 846,
        [S._Location_file]: null
      });
    },
    get C863() {
      return C[863] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 852,
        [S._Location_file]: null
      });
    },
    get C861() {
      return C[861] = dart.constList([C[862] || CT.C862, C[863] || CT.C863], T$._LocationL());
    },
    get C860() {
      return C[860] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[861] || CT.C861,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 845,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C866() {
      return C[866] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 27,
        [S._Location_line]: 870,
        [S._Location_file]: null
      });
    },
    get C865() {
      return C[865] = dart.constList([C[866] || CT.C866], T$._LocationL());
    },
    get C864() {
      return C[864] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[865] || CT.C865,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 870,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C869() {
      return C[869] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 11,
        [S._Location_line]: 864,
        [S._Location_file]: null
      });
    },
    get C870() {
      return C[870] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 870,
        [S._Location_file]: null
      });
    },
    get C868() {
      return C[868] = dart.constList([C[869] || CT.C869, C[870] || CT.C870], T$._LocationL());
    },
    get C867() {
      return C[867] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[868] || CT.C868,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 863,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C873() {
      return C[873] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 863,
        [S._Location_file]: null
      });
    },
    get C872() {
      return C[872] = dart.constList([C[873] || CT.C873], T$._LocationL());
    },
    get C871() {
      return C[871] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[872] || CT.C872,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 862,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C876() {
      return C[876] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 11,
        [S._Location_line]: 880,
        [S._Location_file]: null
      });
    },
    get C877() {
      return C[877] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 11,
        [S._Location_line]: 881,
        [S._Location_file]: null
      });
    },
    get C878() {
      return C[878] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 11,
        [S._Location_line]: 882,
        [S._Location_file]: null
      });
    },
    get C875() {
      return C[875] = dart.constList([C[876] || CT.C876, C[877] || CT.C877, C[878] || CT.C878], T$._LocationL());
    },
    get C874() {
      return C[874] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[875] || CT.C875,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 879,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C881() {
      return C[881] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 9,
        [S._Location_line]: 878,
        [S._Location_file]: null
      });
    },
    get C882() {
      return C[882] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 879,
        [S._Location_file]: null
      });
    },
    get C880() {
      return C[880] = dart.constList([C[881] || CT.C881, C[882] || CT.C882], T$._LocationL());
    },
    get C879() {
      return C[879] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[880] || CT.C880,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 877,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C885() {
      return C[885] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "stepWidth",
        [S._Location_column]: 7,
        [S._Location_line]: 876,
        [S._Location_file]: null
      });
    },
    get C886() {
      return C[886] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 877,
        [S._Location_file]: null
      });
    },
    get C884() {
      return C[884] = dart.constList([C[885] || CT.C885, C[886] || CT.C886], T$._LocationL());
    },
    get C883() {
      return C[883] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[884] || CT.C884,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 875,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C889() {
      return C[889] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scopesRoute",
        [S._Location_column]: 9,
        [S._Location_line]: 892,
        [S._Location_file]: null
      });
    },
    get C890() {
      return C[890] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "explicitChildNodes",
        [S._Location_column]: 9,
        [S._Location_line]: 893,
        [S._Location_file]: null
      });
    },
    get C891() {
      return C[891] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "namesRoute",
        [S._Location_column]: 9,
        [S._Location_line]: 894,
        [S._Location_file]: null
      });
    },
    get C892() {
      return C[892] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 9,
        [S._Location_line]: 895,
        [S._Location_file]: null
      });
    },
    get C893() {
      return C[893] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 896,
        [S._Location_file]: null
      });
    },
    get C888() {
      return C[888] = dart.constList([C[889] || CT.C889, C[890] || CT.C890, C[891] || CT.C891, C[892] || CT.C892, C[893] || CT.C893], T$._LocationL());
    },
    get C887() {
      return C[887] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[888] || CT.C888,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 891,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C896() {
      return C[896] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "backgroundColor",
        [S._Location_column]: 7,
        [S._Location_line]: 899,
        [S._Location_file]: null
      });
    },
    get C897() {
      return C[897] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 900,
        [S._Location_file]: null
      });
    },
    get C898() {
      return C[898] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "insetPadding",
        [S._Location_column]: 7,
        [S._Location_line]: 901,
        [S._Location_file]: null
      });
    },
    get C899() {
      return C[899] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 902,
        [S._Location_file]: null
      });
    },
    get C900() {
      return C[900] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 903,
        [S._Location_file]: null
      });
    },
    get C901() {
      return C[901] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 904,
        [S._Location_file]: null
      });
    },
    get C895() {
      return C[895] = dart.constList([C[896] || CT.C896, C[897] || CT.C897, C[898] || CT.C898, C[899] || CT.C899, C[900] || CT.C900, C[901] || CT.C901], T$._LocationL());
    },
    get C894() {
      return C[894] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[895] || CT.C895,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 898,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C902() {
      return C[902] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 2315255808.0
      });
    },
    get C905() {
      return C[905] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 45,
        [S._Location_line]: 1127,
        [S._Location_file]: null
      });
    },
    get C904() {
      return C[904] = dart.constList([C[905] || CT.C905], T$._LocationL());
    },
    get C903() {
      return C[903] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[904] || CT.C904,
        [S._Location_name]: null,
        [S._Location_column]: 37,
        [S._Location_line]: 1127,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C908() {
      return C[908] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 32,
        [S._Location_line]: 1130,
        [S._Location_file]: null
      });
    },
    get C907() {
      return C[907] = dart.constList([C[908] || CT.C908], T$._LocationL());
    },
    get C906() {
      return C[906] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[907] || CT.C907,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 1130,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C909() {
      return C[909] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 150000
      });
    },
    get C910() {
      return C[910] = dart.fn(dialog._buildMaterialDialogTransitions, T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget());
    },
    get C913() {
      return C[913] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 5,
        [S._Location_line]: 911,
        [S._Location_file]: null
      });
    },
    get C914() {
      return C[914] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 5,
        [S._Location_line]: 915,
        [S._Location_file]: null
      });
    },
    get C912() {
      return C[912] = dart.constList([C[913] || CT.C913, C[914] || CT.C914], T$._LocationL());
    },
    get C911() {
      return C[911] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[912] || CT.C912,
        [S._Location_name]: null,
        [S._Location_column]: 10,
        [S._Location_line]: 910,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C917() {
      return C[917] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 7,
        [S._Location_line]: 150,
        [S._Location_file]: null
      });
    },
    get C918() {
      return C[918] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 7,
        [S._Location_line]: 151,
        [S._Location_file]: null
      });
    },
    get C919() {
      return C[919] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHighlightChanged",
        [S._Location_column]: 7,
        [S._Location_line]: 152,
        [S._Location_file]: null
      });
    },
    get C920() {
      return C[920] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 7,
        [S._Location_line]: 153,
        [S._Location_file]: null
      });
    },
    get C921() {
      return C[921] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 154,
        [S._Location_file]: null
      });
    },
    get C922() {
      return C[922] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "fillColor",
        [S._Location_column]: 7,
        [S._Location_line]: 155,
        [S._Location_file]: null
      });
    },
    get C923() {
      return C[923] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textStyle",
        [S._Location_column]: 7,
        [S._Location_line]: 156,
        [S._Location_file]: null
      });
    },
    get C924() {
      return C[924] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusColor",
        [S._Location_column]: 7,
        [S._Location_line]: 157,
        [S._Location_file]: null
      });
    },
    get C925() {
      return C[925] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 7,
        [S._Location_line]: 158,
        [S._Location_file]: null
      });
    },
    get C926() {
      return C[926] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightColor",
        [S._Location_column]: 7,
        [S._Location_line]: 159,
        [S._Location_file]: null
      });
    },
    get C927() {
      return C[927] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashColor",
        [S._Location_column]: 7,
        [S._Location_line]: 160,
        [S._Location_file]: null
      });
    },
    get C928() {
      return C[928] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 161,
        [S._Location_file]: null
      });
    },
    get C929() {
      return C[929] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 162,
        [S._Location_file]: null
      });
    },
    get C930() {
      return C[930] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 163,
        [S._Location_file]: null
      });
    },
    get C931() {
      return C[931] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 164,
        [S._Location_file]: null
      });
    },
    get C932() {
      return C[932] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "disabledElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 165,
        [S._Location_file]: null
      });
    },
    get C933() {
      return C[933] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 7,
        [S._Location_line]: 166,
        [S._Location_file]: null
      });
    },
    get C934() {
      return C[934] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "visualDensity",
        [S._Location_column]: 7,
        [S._Location_line]: 167,
        [S._Location_file]: null
      });
    },
    get C935() {
      return C[935] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 7,
        [S._Location_line]: 168,
        [S._Location_file]: null
      });
    },
    get C936() {
      return C[936] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 169,
        [S._Location_file]: null
      });
    },
    get C937() {
      return C[937] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 7,
        [S._Location_line]: 170,
        [S._Location_file]: null
      });
    },
    get C938() {
      return C[938] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 7,
        [S._Location_line]: 171,
        [S._Location_file]: null
      });
    },
    get C939() {
      return C[939] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animationDuration",
        [S._Location_column]: 7,
        [S._Location_line]: 172,
        [S._Location_file]: null
      });
    },
    get C940() {
      return C[940] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "materialTapTargetSize",
        [S._Location_column]: 7,
        [S._Location_line]: 173,
        [S._Location_file]: null
      });
    },
    get C941() {
      return C[941] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 174,
        [S._Location_file]: null
      });
    },
    get C916() {
      return C[916] = dart.constList([C[917] || CT.C917, C[918] || CT.C918, C[919] || CT.C919, C[920] || CT.C920, C[921] || CT.C921, C[922] || CT.C922, C[923] || CT.C923, C[924] || CT.C924, C[925] || CT.C925, C[926] || CT.C926, C[927] || CT.C927, C[928] || CT.C928, C[929] || CT.C929, C[930] || CT.C930, C[931] || CT.C931, C[932] || CT.C932, C[933] || CT.C933, C[934] || CT.C934, C[935] || CT.C935, C[936] || CT.C936, C[937] || CT.C937, C[938] || CT.C938, C[939] || CT.C939, C[940] || CT.C940, C[941] || CT.C941], T$._LocationL());
    },
    get C915() {
      return C[915] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[916] || CT.C916,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 149,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/raised_button.dart"
      });
    },
    get C944() {
      return C[944] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 7,
        [S._Location_line]: 406,
        [S._Location_file]: null
      });
    },
    get C945() {
      return C[945] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 7,
        [S._Location_line]: 407,
        [S._Location_file]: null
      });
    },
    get C946() {
      return C[946] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableFeedback",
        [S._Location_column]: 7,
        [S._Location_line]: 408,
        [S._Location_file]: null
      });
    },
    get C947() {
      return C[947] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHighlightChanged",
        [S._Location_column]: 7,
        [S._Location_line]: 409,
        [S._Location_file]: null
      });
    },
    get C948() {
      return C[948] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 7,
        [S._Location_line]: 410,
        [S._Location_file]: null
      });
    },
    get C949() {
      return C[949] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "fillColor",
        [S._Location_column]: 7,
        [S._Location_line]: 411,
        [S._Location_file]: null
      });
    },
    get C950() {
      return C[950] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textStyle",
        [S._Location_column]: 7,
        [S._Location_line]: 412,
        [S._Location_file]: null
      });
    },
    get C951() {
      return C[951] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusColor",
        [S._Location_column]: 7,
        [S._Location_line]: 413,
        [S._Location_file]: null
      });
    },
    get C952() {
      return C[952] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 7,
        [S._Location_line]: 414,
        [S._Location_file]: null
      });
    },
    get C953() {
      return C[953] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightColor",
        [S._Location_column]: 7,
        [S._Location_line]: 415,
        [S._Location_file]: null
      });
    },
    get C954() {
      return C[954] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashColor",
        [S._Location_column]: 7,
        [S._Location_line]: 416,
        [S._Location_file]: null
      });
    },
    get C955() {
      return C[955] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 417,
        [S._Location_file]: null
      });
    },
    get C956() {
      return C[956] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 418,
        [S._Location_file]: null
      });
    },
    get C957() {
      return C[957] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 419,
        [S._Location_file]: null
      });
    },
    get C958() {
      return C[958] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 420,
        [S._Location_file]: null
      });
    },
    get C959() {
      return C[959] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 7,
        [S._Location_line]: 421,
        [S._Location_file]: null
      });
    },
    get C960() {
      return C[960] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "visualDensity",
        [S._Location_column]: 7,
        [S._Location_line]: 422,
        [S._Location_file]: null
      });
    },
    get C961() {
      return C[961] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 7,
        [S._Location_line]: 423,
        [S._Location_file]: null
      });
    },
    get C962() {
      return C[962] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 427,
        [S._Location_file]: null
      });
    },
    get C963() {
      return C[963] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 428,
        [S._Location_file]: null
      });
    },
    get C964() {
      return C[964] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 7,
        [S._Location_line]: 429,
        [S._Location_file]: null
      });
    },
    get C965() {
      return C[965] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 7,
        [S._Location_line]: 430,
        [S._Location_file]: null
      });
    },
    get C966() {
      return C[966] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animationDuration",
        [S._Location_column]: 7,
        [S._Location_line]: 431,
        [S._Location_file]: null
      });
    },
    get C967() {
      return C[967] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 432,
        [S._Location_file]: null
      });
    },
    get C968() {
      return C[968] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "materialTapTargetSize",
        [S._Location_column]: 7,
        [S._Location_line]: 433,
        [S._Location_file]: null
      });
    },
    get C969() {
      return C[969] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "disabledElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 434,
        [S._Location_file]: null
      });
    },
    get C943() {
      return C[943] = dart.constList([C[944] || CT.C944, C[945] || CT.C945, C[946] || CT.C946, C[947] || CT.C947, C[948] || CT.C948, C[949] || CT.C949, C[950] || CT.C950, C[951] || CT.C951, C[952] || CT.C952, C[953] || CT.C953, C[954] || CT.C954, C[955] || CT.C955, C[956] || CT.C956, C[957] || CT.C957, C[958] || CT.C958, C[959] || CT.C959, C[960] || CT.C960, C[961] || CT.C961, C[962] || CT.C962, C[963] || CT.C963, C[964] || CT.C964, C[965] || CT.C965, C[966] || CT.C966, C[967] || CT.C967, C[968] || CT.C968, C[969] || CT.C969], T$._LocationL());
    },
    get C942() {
      return C[942] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[943] || CT.C943,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 405,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material_button.dart"
      });
    },
    get C973() {
      return C[973] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 29,
        [S._Location_line]: 259,
        [S._Location_file]: null
      });
    },
    get C972() {
      return C[972] = dart.constList([C[973] || CT.C973], T$._LocationL());
    },
    get C971() {
      return C[971] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[972] || CT.C972,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 259,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/raised_button.dart"
      });
    },
    get C970() {
      return C[970] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[971] || CT.C971,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 8
      });
    },
    get C976() {
      return C[976] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 12,
        [S._Location_line]: 256,
        [S._Location_file]: null
      });
    },
    get C977() {
      return C[977] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 12,
        [S._Location_line]: 257,
        [S._Location_file]: null
      });
    },
    get C975() {
      return C[975] = dart.constList([C[976] || CT.C976, C[977] || CT.C977], T$._LocationL());
    },
    get C974() {
      return C[974] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[975] || CT.C975,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 255,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/raised_button.dart"
      });
    },
    get C980() {
      return C[980] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 7,
        [S._Location_line]: 168,
        [S._Location_file]: null
      });
    },
    get C981() {
      return C[981] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 7,
        [S._Location_line]: 169,
        [S._Location_file]: null
      });
    },
    get C982() {
      return C[982] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 7,
        [S._Location_line]: 170,
        [S._Location_file]: null
      });
    },
    get C983() {
      return C[983] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 7,
        [S._Location_line]: 171,
        [S._Location_file]: null
      });
    },
    get C984() {
      return C[984] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "brightness",
        [S._Location_column]: 7,
        [S._Location_line]: 172,
        [S._Location_file]: null
      });
    },
    get C985() {
      return C[985] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textTheme",
        [S._Location_column]: 7,
        [S._Location_line]: 173,
        [S._Location_file]: null
      });
    },
    get C986() {
      return C[986] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textColor",
        [S._Location_column]: 7,
        [S._Location_line]: 174,
        [S._Location_file]: null
      });
    },
    get C987() {
      return C[987] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "disabledTextColor",
        [S._Location_column]: 7,
        [S._Location_line]: 175,
        [S._Location_file]: null
      });
    },
    get C988() {
      return C[988] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 7,
        [S._Location_line]: 176,
        [S._Location_file]: null
      });
    },
    get C989() {
      return C[989] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusColor",
        [S._Location_column]: 7,
        [S._Location_line]: 177,
        [S._Location_file]: null
      });
    },
    get C990() {
      return C[990] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 7,
        [S._Location_line]: 178,
        [S._Location_file]: null
      });
    },
    get C991() {
      return C[991] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightColor",
        [S._Location_column]: 7,
        [S._Location_line]: 179,
        [S._Location_file]: null
      });
    },
    get C992() {
      return C[992] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashColor",
        [S._Location_column]: 7,
        [S._Location_line]: 180,
        [S._Location_file]: null
      });
    },
    get C993() {
      return C[993] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 181,
        [S._Location_file]: null
      });
    },
    get C994() {
      return C[994] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "borderSide",
        [S._Location_column]: 7,
        [S._Location_line]: 182,
        [S._Location_file]: null
      });
    },
    get C995() {
      return C[995] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "disabledBorderColor",
        [S._Location_column]: 7,
        [S._Location_line]: 183,
        [S._Location_file]: null
      });
    },
    get C996() {
      return C[996] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightedBorderColor",
        [S._Location_column]: 7,
        [S._Location_line]: 184,
        [S._Location_file]: null
      });
    },
    get C997() {
      return C[997] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 7,
        [S._Location_line]: 185,
        [S._Location_file]: null
      });
    },
    get C998() {
      return C[998] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "visualDensity",
        [S._Location_column]: 7,
        [S._Location_line]: 186,
        [S._Location_file]: null
      });
    },
    get C999() {
      return C[999] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 187,
        [S._Location_file]: null
      });
    },
    get C1000() {
      return C[1000] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 188,
        [S._Location_file]: null
      });
    },
    get C1001() {
      return C[1001] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 7,
        [S._Location_line]: 189,
        [S._Location_file]: null
      });
    },
    get C1002() {
      return C[1002] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "materialTapTargetSize",
        [S._Location_column]: 7,
        [S._Location_line]: 190,
        [S._Location_file]: null
      });
    },
    get C1003() {
      return C[1003] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 191,
        [S._Location_file]: null
      });
    },
    get C979() {
      return C[979] = dart.constList([C[980] || CT.C980, C[981] || CT.C981, C[982] || CT.C982, C[983] || CT.C983, C[984] || CT.C984, C[985] || CT.C985, C[986] || CT.C986, C[987] || CT.C987, C[988] || CT.C988, C[989] || CT.C989, C[990] || CT.C990, C[991] || CT.C991, C[992] || CT.C992, C[993] || CT.C993, C[994] || CT.C994, C[995] || CT.C995, C[996] || CT.C996, C[997] || CT.C997, C[998] || CT.C998, C[999] || CT.C999, C[1000] || CT.C1000, C[1001] || CT.C1001, C[1002] || CT.C1002, C[1003] || CT.C1003], T$._LocationL());
    },
    get C978() {
      return C[978] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[979] || CT.C979,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 167,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C1007() {
      return C[1007] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 29,
        [S._Location_line]: 268,
        [S._Location_file]: null
      });
    },
    get C1006() {
      return C[1006] = dart.constList([C[1007] || CT.C1007], T$._LocationL());
    },
    get C1005() {
      return C[1005] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1006] || CT.C1006,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 268,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C1004() {
      return C[1004] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[1005] || CT.C1005,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 8
      });
    },
    get C1010() {
      return C[1010] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 12,
        [S._Location_line]: 265,
        [S._Location_file]: null
      });
    },
    get C1011() {
      return C[1011] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 12,
        [S._Location_line]: 266,
        [S._Location_file]: null
      });
    },
    get C1009() {
      return C[1009] = dart.constList([C[1010] || CT.C1010, C[1011] || CT.C1011], T$._LocationL());
    },
    get C1008() {
      return C[1008] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1009] || CT.C1009,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 264,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C1012() {
      return C[1012] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[307] || CT.C307,
        [S.Interval_end]: 0.5,
        [S.Interval_begin]: 0
      });
    },
    get C1013() {
      return C[1013] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[91] || CT.C91,
        [S.Interval_end]: 0.5,
        [S.Interval_begin]: 0.5
      });
    },
    get C1014() {
      return C[1014] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[91] || CT.C91,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 1
      });
    },
    get C1017() {
      return C[1017] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 11,
        [S._Location_line]: 454,
        [S._Location_file]: null
      });
    },
    get C1018() {
      return C[1018] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textColor",
        [S._Location_column]: 11,
        [S._Location_line]: 455,
        [S._Location_file]: null
      });
    },
    get C1019() {
      return C[1019] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "disabledTextColor",
        [S._Location_column]: 11,
        [S._Location_line]: 456,
        [S._Location_file]: null
      });
    },
    get C1020() {
      return C[1020] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 11,
        [S._Location_line]: 457,
        [S._Location_file]: null
      });
    },
    get C1021() {
      return C[1021] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashColor",
        [S._Location_column]: 11,
        [S._Location_line]: 458,
        [S._Location_file]: null
      });
    },
    get C1022() {
      return C[1022] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusColor",
        [S._Location_column]: 11,
        [S._Location_line]: 459,
        [S._Location_file]: null
      });
    },
    get C1023() {
      return C[1023] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 11,
        [S._Location_line]: 460,
        [S._Location_file]: null
      });
    },
    get C1024() {
      return C[1024] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightColor",
        [S._Location_column]: 11,
        [S._Location_line]: 461,
        [S._Location_file]: null
      });
    },
    get C1025() {
      return C[1025] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "disabledColor",
        [S._Location_column]: 11,
        [S._Location_line]: 462,
        [S._Location_file]: null
      });
    },
    get C1026() {
      return C[1026] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 11,
        [S._Location_line]: 463,
        [S._Location_file]: null
      });
    },
    get C1027() {
      return C[1027] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 11,
        [S._Location_line]: 464,
        [S._Location_file]: null
      });
    },
    get C1028() {
      return C[1028] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 11,
        [S._Location_line]: 465,
        [S._Location_file]: null
      });
    },
    get C1029() {
      return C[1029] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 11,
        [S._Location_line]: 466,
        [S._Location_file]: null
      });
    },
    get C1030() {
      return C[1030] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "disabledElevation",
        [S._Location_column]: 11,
        [S._Location_line]: 467,
        [S._Location_file]: null
      });
    },
    get C1031() {
      return C[1031] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusElevation",
        [S._Location_column]: 11,
        [S._Location_line]: 468,
        [S._Location_file]: null
      });
    },
    get C1032() {
      return C[1032] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverElevation",
        [S._Location_column]: 11,
        [S._Location_line]: 469,
        [S._Location_file]: null
      });
    },
    get C1033() {
      return C[1033] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightElevation",
        [S._Location_column]: 11,
        [S._Location_line]: 470,
        [S._Location_file]: null
      });
    },
    get C1034() {
      return C[1034] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHighlightChanged",
        [S._Location_column]: 11,
        [S._Location_line]: 471,
        [S._Location_file]: null
      });
    },
    get C1035() {
      return C[1035] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 11,
        [S._Location_line]: 472,
        [S._Location_file]: null
      });
    },
    get C1036() {
      return C[1036] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "visualDensity",
        [S._Location_column]: 11,
        [S._Location_line]: 473,
        [S._Location_file]: null
      });
    },
    get C1037() {
      return C[1037] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 11,
        [S._Location_line]: 474,
        [S._Location_file]: null
      });
    },
    get C1038() {
      return C[1038] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 11,
        [S._Location_line]: 478,
        [S._Location_file]: null
      });
    },
    get C1039() {
      return C[1039] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 11,
        [S._Location_line]: 479,
        [S._Location_file]: null
      });
    },
    get C1040() {
      return C[1040] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animationDuration",
        [S._Location_column]: 11,
        [S._Location_line]: 480,
        [S._Location_file]: null
      });
    },
    get C1041() {
      return C[1041] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "materialTapTargetSize",
        [S._Location_column]: 11,
        [S._Location_line]: 481,
        [S._Location_file]: null
      });
    },
    get C1042() {
      return C[1042] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 482,
        [S._Location_file]: null
      });
    },
    get C1016() {
      return C[1016] = dart.constList([C[1017] || CT.C1017, C[1018] || CT.C1018, C[1019] || CT.C1019, C[1020] || CT.C1020, C[1021] || CT.C1021, C[1022] || CT.C1022, C[1023] || CT.C1023, C[1024] || CT.C1024, C[1025] || CT.C1025, C[1026] || CT.C1026, C[1027] || CT.C1027, C[1028] || CT.C1028, C[1029] || CT.C1029, C[1030] || CT.C1030, C[1031] || CT.C1031, C[1032] || CT.C1032, C[1033] || CT.C1033, C[1034] || CT.C1034, C[1035] || CT.C1035, C[1036] || CT.C1036, C[1037] || CT.C1037, C[1038] || CT.C1038, C[1039] || CT.C1039, C[1040] || CT.C1040, C[1041] || CT.C1041, C[1042] || CT.C1042], T$._LocationL());
    },
    get C1015() {
      return C[1015] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1016] || CT.C1016,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 453,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C1045() {
      return C[1045] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 451,
        [S._Location_file]: null
      });
    },
    get C1046() {
      return C[1046] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 7,
        [S._Location_line]: 452,
        [S._Location_file]: null
      });
    },
    get C1044() {
      return C[1044] = dart.constList([C[1045] || CT.C1045, C[1046] || CT.C1046], T$._LocationL());
    },
    get C1043() {
      return C[1043] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1044] || CT.C1044,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 450,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C1047() {
      return C[1047] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [S._name$4]: "BorderStyle.solid",
        index: 1
      });
    },
    get C1048() {
      return C[1048] = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [S.VisualDensity_vertical]: 0,
        [S.VisualDensity_horizontal]: 0
      });
    },
    get C1049() {
      return C[1049] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 36,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 88
      });
    },
    get C1050() {
      return C[1050] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[157] || CT.C157,
        [S.RoundedRectangleBorder_borderRadius]: C[87] || CT.C87
      });
    },
    get C1053() {
      return C[1053] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "widthFactor",
        [S._Location_column]: 17,
        [S._Location_line]: 445,
        [S._Location_file]: null
      });
    },
    get C1054() {
      return C[1054] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 17,
        [S._Location_line]: 446,
        [S._Location_file]: null
      });
    },
    get C1055() {
      return C[1055] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 447,
        [S._Location_file]: null
      });
    },
    get C1052() {
      return C[1052] = dart.constList([C[1053] || CT.C1053, C[1054] || CT.C1054, C[1055] || CT.C1055], T$._LocationL());
    },
    get C1051() {
      return C[1051] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1052] || CT.C1052,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 444,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1058() {
      return C[1058] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 15,
        [S._Location_line]: 443,
        [S._Location_file]: null
      });
    },
    get C1059() {
      return C[1059] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 444,
        [S._Location_file]: null
      });
    },
    get C1057() {
      return C[1057] = dart.constList([C[1058] || CT.C1058, C[1059] || CT.C1059], T$._LocationL());
    },
    get C1056() {
      return C[1056] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1057] || CT.C1057,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 442,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1062() {
      return C[1062] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 11,
        [S._Location_line]: 425,
        [S._Location_file]: null
      });
    },
    get C1063() {
      return C[1063] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "canRequestFocus",
        [S._Location_column]: 11,
        [S._Location_line]: 426,
        [S._Location_file]: null
      });
    },
    get C1064() {
      return C[1064] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onFocusChange",
        [S._Location_column]: 11,
        [S._Location_line]: 427,
        [S._Location_file]: null
      });
    },
    get C1065() {
      return C[1065] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 11,
        [S._Location_line]: 428,
        [S._Location_file]: null
      });
    },
    get C1066() {
      return C[1066] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHighlightChanged",
        [S._Location_column]: 11,
        [S._Location_line]: 429,
        [S._Location_file]: null
      });
    },
    get C1067() {
      return C[1067] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashColor",
        [S._Location_column]: 11,
        [S._Location_line]: 430,
        [S._Location_file]: null
      });
    },
    get C1068() {
      return C[1068] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightColor",
        [S._Location_column]: 11,
        [S._Location_line]: 431,
        [S._Location_file]: null
      });
    },
    get C1069() {
      return C[1069] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusColor",
        [S._Location_column]: 11,
        [S._Location_line]: 432,
        [S._Location_file]: null
      });
    },
    get C1070() {
      return C[1070] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 11,
        [S._Location_line]: 433,
        [S._Location_file]: null
      });
    },
    get C1071() {
      return C[1071] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHover",
        [S._Location_column]: 11,
        [S._Location_line]: 434,
        [S._Location_file]: null
      });
    },
    get C1072() {
      return C[1072] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 11,
        [S._Location_line]: 435,
        [S._Location_file]: null
      });
    },
    get C1073() {
      return C[1073] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 11,
        [S._Location_line]: 436,
        [S._Location_file]: null
      });
    },
    get C1074() {
      return C[1074] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableFeedback",
        [S._Location_column]: 11,
        [S._Location_line]: 437,
        [S._Location_file]: null
      });
    },
    get C1075() {
      return C[1075] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "customBorder",
        [S._Location_column]: 11,
        [S._Location_line]: 438,
        [S._Location_file]: null
      });
    },
    get C1076() {
      return C[1076] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 11,
        [S._Location_line]: 439,
        [S._Location_file]: null
      });
    },
    get C1077() {
      return C[1077] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 440,
        [S._Location_file]: null
      });
    },
    get C1061() {
      return C[1061] = dart.constList([C[1062] || CT.C1062, C[1063] || CT.C1063, C[1064] || CT.C1064, C[1065] || CT.C1065, C[1066] || CT.C1066, C[1067] || CT.C1067, C[1068] || CT.C1068, C[1069] || CT.C1069, C[1070] || CT.C1070, C[1071] || CT.C1071, C[1072] || CT.C1072, C[1073] || CT.C1073, C[1074] || CT.C1074, C[1075] || CT.C1075, C[1076] || CT.C1076, C[1077] || CT.C1077], T$._LocationL());
    },
    get C1060() {
      return C[1060] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1061] || CT.C1061,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 424,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1080() {
      return C[1080] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 9,
        [S._Location_line]: 417,
        [S._Location_file]: null
      });
    },
    get C1081() {
      return C[1081] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 418,
        [S._Location_file]: null
      });
    },
    get C1082() {
      return C[1082] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 9,
        [S._Location_line]: 419,
        [S._Location_file]: null
      });
    },
    get C1083() {
      return C[1083] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 9,
        [S._Location_line]: 420,
        [S._Location_file]: null
      });
    },
    get C1084() {
      return C[1084] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "type",
        [S._Location_column]: 9,
        [S._Location_line]: 421,
        [S._Location_file]: null
      });
    },
    get C1085() {
      return C[1085] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animationDuration",
        [S._Location_column]: 9,
        [S._Location_line]: 422,
        [S._Location_file]: null
      });
    },
    get C1086() {
      return C[1086] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 9,
        [S._Location_line]: 423,
        [S._Location_file]: null
      });
    },
    get C1087() {
      return C[1087] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 424,
        [S._Location_file]: null
      });
    },
    get C1079() {
      return C[1079] = dart.constList([C[1080] || CT.C1080, C[1081] || CT.C1081, C[1082] || CT.C1082, C[1083] || CT.C1083, C[1084] || CT.C1084, C[1085] || CT.C1085, C[1086] || CT.C1086, C[1087] || CT.C1087], T$._LocationL());
    },
    get C1078() {
      return C[1078] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1079] || CT.C1079,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 416,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1090() {
      return C[1090] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 7,
        [S._Location_line]: 415,
        [S._Location_file]: null
      });
    },
    get C1091() {
      return C[1091] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 416,
        [S._Location_file]: null
      });
    },
    get C1089() {
      return C[1089] = dart.constList([C[1090] || CT.C1090, C[1091] || CT.C1091], T$._LocationL());
    },
    get C1088() {
      return C[1088] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1089] || CT.C1089,
        [S._Location_name]: null,
        [S._Location_column]: 27,
        [S._Location_line]: 414,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1094() {
      return C[1094] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minSize",
        [S._Location_column]: 9,
        [S._Location_line]: 474,
        [S._Location_file]: null
      });
    },
    get C1095() {
      return C[1095] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 475,
        [S._Location_file]: null
      });
    },
    get C1093() {
      return C[1093] = dart.constList([C[1094] || CT.C1094, C[1095] || CT.C1095], T$._LocationL());
    },
    get C1092() {
      return C[1092] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1093] || CT.C1093,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 473,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1098() {
      return C[1098] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "container",
        [S._Location_column]: 7,
        [S._Location_line]: 470,
        [S._Location_file]: null
      });
    },
    get C1099() {
      return C[1099] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "button",
        [S._Location_column]: 7,
        [S._Location_line]: 471,
        [S._Location_file]: null
      });
    },
    get C1100() {
      return C[1100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enabled",
        [S._Location_column]: 7,
        [S._Location_line]: 472,
        [S._Location_file]: null
      });
    },
    get C1101() {
      return C[1101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 473,
        [S._Location_file]: null
      });
    },
    get C1097() {
      return C[1097] = dart.constList([C[1098] || CT.C1098, C[1099] || CT.C1099, C[1100] || CT.C1100, C[1101] || CT.C1101], T$._LocationL());
    },
    get C1096() {
      return C[1096] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1097] || CT.C1097,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 469,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1104() {
      return C[1104] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 7,
        [S._Location_line]: 131,
        [S._Location_file]: null
      });
    },
    get C1105() {
      return C[1105] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 7,
        [S._Location_line]: 132,
        [S._Location_file]: null
      });
    },
    get C1106() {
      return C[1106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHighlightChanged",
        [S._Location_column]: 7,
        [S._Location_line]: 133,
        [S._Location_file]: null
      });
    },
    get C1107() {
      return C[1107] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 7,
        [S._Location_line]: 134,
        [S._Location_file]: null
      });
    },
    get C1108() {
      return C[1108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "fillColor",
        [S._Location_column]: 7,
        [S._Location_line]: 135,
        [S._Location_file]: null
      });
    },
    get C1109() {
      return C[1109] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textStyle",
        [S._Location_column]: 7,
        [S._Location_line]: 136,
        [S._Location_file]: null
      });
    },
    get C1110() {
      return C[1110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusColor",
        [S._Location_column]: 7,
        [S._Location_line]: 137,
        [S._Location_file]: null
      });
    },
    get C1111() {
      return C[1111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 7,
        [S._Location_line]: 138,
        [S._Location_file]: null
      });
    },
    get C1112() {
      return C[1112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightColor",
        [S._Location_column]: 7,
        [S._Location_line]: 139,
        [S._Location_file]: null
      });
    },
    get C1113() {
      return C[1113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashColor",
        [S._Location_column]: 7,
        [S._Location_line]: 140,
        [S._Location_file]: null
      });
    },
    get C1114() {
      return C[1114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 141,
        [S._Location_file]: null
      });
    },
    get C1115() {
      return C[1115] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 142,
        [S._Location_file]: null
      });
    },
    get C1116() {
      return C[1116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 143,
        [S._Location_file]: null
      });
    },
    get C1117() {
      return C[1117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 144,
        [S._Location_file]: null
      });
    },
    get C1118() {
      return C[1118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "disabledElevation",
        [S._Location_column]: 7,
        [S._Location_line]: 145,
        [S._Location_file]: null
      });
    },
    get C1119() {
      return C[1119] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 7,
        [S._Location_line]: 146,
        [S._Location_file]: null
      });
    },
    get C1120() {
      return C[1120] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "visualDensity",
        [S._Location_column]: 7,
        [S._Location_line]: 147,
        [S._Location_file]: null
      });
    },
    get C1121() {
      return C[1121] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 7,
        [S._Location_line]: 148,
        [S._Location_file]: null
      });
    },
    get C1122() {
      return C[1122] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 152,
        [S._Location_file]: null
      });
    },
    get C1123() {
      return C[1123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 153,
        [S._Location_file]: null
      });
    },
    get C1124() {
      return C[1124] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 7,
        [S._Location_line]: 154,
        [S._Location_file]: null
      });
    },
    get C1125() {
      return C[1125] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 7,
        [S._Location_line]: 155,
        [S._Location_file]: null
      });
    },
    get C1126() {
      return C[1126] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "materialTapTargetSize",
        [S._Location_column]: 7,
        [S._Location_line]: 156,
        [S._Location_file]: null
      });
    },
    get C1127() {
      return C[1127] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animationDuration",
        [S._Location_column]: 7,
        [S._Location_line]: 157,
        [S._Location_file]: null
      });
    },
    get C1128() {
      return C[1128] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 158,
        [S._Location_file]: null
      });
    },
    get C1103() {
      return C[1103] = dart.constList([C[1104] || CT.C1104, C[1105] || CT.C1105, C[1106] || CT.C1106, C[1107] || CT.C1107, C[1108] || CT.C1108, C[1109] || CT.C1109, C[1110] || CT.C1110, C[1111] || CT.C1111, C[1112] || CT.C1112, C[1113] || CT.C1113, C[1114] || CT.C1114, C[1115] || CT.C1115, C[1116] || CT.C1116, C[1117] || CT.C1117, C[1118] || CT.C1118, C[1119] || CT.C1119, C[1120] || CT.C1120, C[1121] || CT.C1121, C[1122] || CT.C1122, C[1123] || CT.C1123, C[1124] || CT.C1124, C[1125] || CT.C1125, C[1126] || CT.C1126, C[1127] || CT.C1127, C[1128] || CT.C1128], T$._LocationL());
    },
    get C1102() {
      return C[1102] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1103] || CT.C1103,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 130,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flat_button.dart"
      });
    },
    get C1132() {
      return C[1132] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 29,
        [S._Location_line]: 224,
        [S._Location_file]: null
      });
    },
    get C1131() {
      return C[1131] = dart.constList([C[1132] || CT.C1132], T$._LocationL());
    },
    get C1130() {
      return C[1130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1131] || CT.C1131,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 224,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flat_button.dart"
      });
    },
    get C1129() {
      return C[1129] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[1130] || CT.C1130,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: 8
      });
    },
    get C1135() {
      return C[1135] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 12,
        [S._Location_line]: 221,
        [S._Location_file]: null
      });
    },
    get C1136() {
      return C[1136] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 12,
        [S._Location_line]: 222,
        [S._Location_file]: null
      });
    },
    get C1134() {
      return C[1134] = dart.constList([C[1135] || CT.C1135, C[1136] || CT.C1136], T$._LocationL());
    },
    get C1133() {
      return C[1133] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1134] || CT.C1134,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 220,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/flat_button.dart"
      });
    },
    get C1139() {
      return C[1139] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 31,
        [S._Location_line]: 274,
        [S._Location_file]: null
      });
    },
    get C1140() {
      return C[1140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 43,
        [S._Location_line]: 274,
        [S._Location_file]: null
      });
    },
    get C1138() {
      return C[1138] = dart.constList([C[1139] || CT.C1139, C[1140] || CT.C1140], T$._LocationL());
    },
    get C1137() {
      return C[1137] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1138] || CT.C1138,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 274,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/toggle_buttons_theme.dart"
      });
    },
    get C1143() {
      return C[1143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 28,
        [S._Location_line]: 388,
        [S._Location_file]: null
      });
    },
    get C1144() {
      return C[1144] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 40,
        [S._Location_line]: 388,
        [S._Location_file]: null
      });
    },
    get C1142() {
      return C[1142] = dart.constList([C[1143] || CT.C1143, C[1144] || CT.C1144], T$._LocationL());
    },
    get C1141() {
      return C[1141] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1142] || CT.C1142,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 388,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/time_picker_theme.dart"
      });
    },
    get C1147() {
      return C[1147] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 31,
        [S._Location_line]: 160,
        [S._Location_file]: null
      });
    },
    get C1148() {
      return C[1148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 43,
        [S._Location_line]: 160,
        [S._Location_file]: null
      });
    },
    get C1146() {
      return C[1146] = dart.constList([C[1147] || CT.C1147, C[1148] || CT.C1148], T$._LocationL());
    },
    get C1145() {
      return C[1145] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1146] || CT.C1146,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 160,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/text_selection_theme.dart"
      });
    },
    get C1151() {
      return C[1151] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 28,
        [S._Location_line]: 119,
        [S._Location_file]: null
      });
    },
    get C1152() {
      return C[1152] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 40,
        [S._Location_line]: 119,
        [S._Location_file]: null
      });
    },
    get C1150() {
      return C[1150] = dart.constList([C[1151] || CT.C1151, C[1152] || CT.C1152], T$._LocationL());
    },
    get C1149() {
      return C[1149] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1150] || CT.C1150,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 119,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/text_button_theme.dart"
      });
    },
    get C1153() {
      return C[1153] = dart.const({
        __proto__: tabs$.TabBarIndicatorSize.prototype,
        [S$._name$11]: "TabBarIndicatorSize.tab",
        index: 0
      });
    },
    get C1154() {
      return C[1154] = dart.const({
        __proto__: tabs$.TabBarIndicatorSize.prototype,
        [S$._name$11]: "TabBarIndicatorSize.label",
        index: 1
      });
    },
    get C1155() {
      return C[1155] = dart.constList([C[1153] || CT.C1153, C[1154] || CT.C1154], T$.TabBarIndicatorSizeL());
    },
    get C1156() {
      return C[1156] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 10,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 0
      });
    },
    get C1159() {
      return C[1159] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 30,
        [S._Location_line]: 99,
        [S._Location_file]: null
      });
    },
    get C1160() {
      return C[1160] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "softWrap",
        [S._Location_column]: 33,
        [S._Location_line]: 99,
        [S._Location_file]: null
      });
    },
    get C1161() {
      return C[1161] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflow",
        [S._Location_column]: 50,
        [S._Location_line]: 99,
        [S._Location_file]: null
      });
    },
    get C1158() {
      return C[1158] = dart.constList([C[1159] || CT.C1159, C[1160] || CT.C1160, C[1161] || CT.C1161], T$._LocationL());
    },
    get C1157() {
      return C[1157] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1158] || CT.C1158,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 99,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1164() {
      return C[1164] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 121,
        [S._Location_file]: null
      });
    },
    get C1165() {
      return C[1165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "margin",
        [S._Location_column]: 13,
        [S._Location_line]: 122,
        [S._Location_file]: null
      });
    },
    get C1163() {
      return C[1163] = dart.constList([C[1164] || CT.C1164, C[1165] || CT.C1165], T$._LocationL());
    },
    get C1162() {
      return C[1162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1163] || CT.C1163,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 120,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1168() {
      return C[1168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisAlignment",
        [S._Location_column]: 9,
        [S._Location_line]: 117,
        [S._Location_file]: null
      });
    },
    get C1169() {
      return C[1169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 9,
        [S._Location_line]: 118,
        [S._Location_file]: null
      });
    },
    get C1170() {
      return C[1170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 119,
        [S._Location_file]: null
      });
    },
    get C1167() {
      return C[1167] = dart.constList([C[1168] || CT.C1168, C[1169] || CT.C1169, C[1170] || CT.C1170], T$._LocationL());
    },
    get C1166() {
      return C[1166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1167] || CT.C1167,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 116,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1173() {
      return C[1173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 132,
        [S._Location_file]: null
      });
    },
    get C1174() {
      return C[1174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "widthFactor",
        [S._Location_column]: 9,
        [S._Location_line]: 133,
        [S._Location_file]: null
      });
    },
    get C1172() {
      return C[1172] = dart.constList([C[1173] || CT.C1173, C[1174] || CT.C1174], T$._LocationL());
    },
    get C1171() {
      return C[1171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1172] || CT.C1172,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 131,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1177() {
      return C[1177] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 7,
        [S._Location_line]: 130,
        [S._Location_file]: null
      });
    },
    get C1178() {
      return C[1178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 131,
        [S._Location_file]: null
      });
    },
    get C1176() {
      return C[1176] = dart.constList([C[1177] || CT.C1177, C[1178] || CT.C1178], T$._LocationL());
    },
    get C1175() {
      return C[1175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1176] || CT.C1176,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 129,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1181() {
      return C[1181] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 7,
        [S._Location_line]: 197,
        [S._Location_file]: null
      });
    },
    get C1182() {
      return C[1182] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 198,
        [S._Location_file]: null
      });
    },
    get C1180() {
      return C[1180] = dart.constList([C[1181] || CT.C1181, C[1182] || CT.C1182], T$._LocationL());
    },
    get C1179() {
      return C[1179] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1180] || CT.C1180,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 196,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1183() {
      return C[1183] = dart.constList([], T$.WidgetL());
    },
    get C1186() {
      return C[1186] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 1132,
        [S._Location_file]: null
      });
    },
    get C1187() {
      return C[1187] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selected",
        [S._Location_column]: 7,
        [S._Location_line]: 1133,
        [S._Location_file]: null
      });
    },
    get C1188() {
      return C[1188] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "labelColor",
        [S._Location_column]: 7,
        [S._Location_line]: 1134,
        [S._Location_file]: null
      });
    },
    get C1189() {
      return C[1189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "unselectedLabelColor",
        [S._Location_column]: 7,
        [S._Location_line]: 1135,
        [S._Location_file]: null
      });
    },
    get C1190() {
      return C[1190] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "labelStyle",
        [S._Location_column]: 7,
        [S._Location_line]: 1136,
        [S._Location_file]: null
      });
    },
    get C1191() {
      return C[1191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "unselectedLabelStyle",
        [S._Location_column]: 7,
        [S._Location_line]: 1137,
        [S._Location_file]: null
      });
    },
    get C1192() {
      return C[1192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 1138,
        [S._Location_file]: null
      });
    },
    get C1185() {
      return C[1185] = dart.constList([C[1186] || CT.C1186, C[1187] || CT.C1187, C[1188] || CT.C1188, C[1189] || CT.C1189, C[1190] || CT.C1190, C[1191] || CT.C1191, C[1192] || CT.C1192], T$._LocationL());
    },
    get C1184() {
      return C[1184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1185] || CT.C1185,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 1131,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1195() {
      return C[1195] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 9,
        [S._Location_line]: 1157,
        [S._Location_file]: null
      });
    },
    get C1194() {
      return C[1194] = dart.constList([C[1195] || CT.C1195], T$._LocationL());
    },
    get C1193() {
      return C[1193] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1194] || CT.C1194,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 1156,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1198() {
      return C[1198] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 15,
        [S._Location_line]: 1170,
        [S._Location_file]: null
      });
    },
    get C1199() {
      return C[1199] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 1171,
        [S._Location_file]: null
      });
    },
    get C1197() {
      return C[1197] = dart.constList([C[1198] || CT.C1198, C[1199] || CT.C1199], T$._LocationL());
    },
    get C1196() {
      return C[1196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1197] || CT.C1197,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 1169,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1202() {
      return C[1202] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 13,
        [S._Location_line]: 1168,
        [S._Location_file]: null
      });
    },
    get C1203() {
      return C[1203] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 1169,
        [S._Location_file]: null
      });
    },
    get C1201() {
      return C[1201] = dart.constList([C[1202] || CT.C1202, C[1203] || CT.C1203], T$._LocationL());
    },
    get C1200() {
      return C[1200] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1201] || CT.C1201,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 1167,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1206() {
      return C[1206] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 11,
        [S._Location_line]: 1166,
        [S._Location_file]: null
      });
    },
    get C1207() {
      return C[1207] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 1167,
        [S._Location_file]: null
      });
    },
    get C1205() {
      return C[1205] = dart.constList([C[1206] || CT.C1206, C[1207] || CT.C1207], T$._LocationL());
    },
    get C1204() {
      return C[1204] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1205] || CT.C1205,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 1165,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1210() {
      return C[1210] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selected",
        [S._Location_column]: 17,
        [S._Location_line]: 1223,
        [S._Location_file]: null
      });
    },
    get C1211() {
      return C[1211] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 17,
        [S._Location_line]: 1224,
        [S._Location_file]: null
      });
    },
    get C1209() {
      return C[1209] = dart.constList([C[1210] || CT.C1210, C[1211] || CT.C1211], T$._LocationL());
    },
    get C1208() {
      return C[1208] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1209] || CT.C1209,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 1222,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1214() {
      return C[1214] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 13,
        [S._Location_line]: 1220,
        [S._Location_file]: null
      });
    },
    get C1213() {
      return C[1213] = dart.constList([C[1214] || CT.C1214], T$._LocationL());
    },
    get C1212() {
      return C[1212] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1213] || CT.C1213,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 1219,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1217() {
      return C[1217] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 11,
        [S._Location_line]: 1218,
        [S._Location_file]: null
      });
    },
    get C1218() {
      return C[1218] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 1219,
        [S._Location_file]: null
      });
    },
    get C1216() {
      return C[1216] = dart.constList([C[1217] || CT.C1217, C[1218] || CT.C1218], T$._LocationL());
    },
    get C1215() {
      return C[1215] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1216] || CT.C1216,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 1217,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1221() {
      return C[1221] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 9,
        [S._Location_line]: 1213,
        [S._Location_file]: null
      });
    },
    get C1222() {
      return C[1222] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 9,
        [S._Location_line]: 1214,
        [S._Location_file]: null
      });
    },
    get C1223() {
      return C[1223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableFeedback",
        [S._Location_column]: 9,
        [S._Location_line]: 1215,
        [S._Location_file]: null
      });
    },
    get C1224() {
      return C[1224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overlayColor",
        [S._Location_column]: 9,
        [S._Location_line]: 1216,
        [S._Location_file]: null
      });
    },
    get C1225() {
      return C[1225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1217,
        [S._Location_file]: null
      });
    },
    get C1220() {
      return C[1220] = dart.constList([C[1221] || CT.C1221, C[1222] || CT.C1222, C[1223] || CT.C1223, C[1224] || CT.C1224, C[1225] || CT.C1225], T$._LocationL());
    },
    get C1219() {
      return C[1219] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1220] || CT.C1220,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 1212,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1228() {
      return C[1228] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 39,
        [S._Location_line]: 1231,
        [S._Location_file]: null
      });
    },
    get C1227() {
      return C[1227] = dart.constList([C[1228] || CT.C1228], T$._LocationL());
    },
    get C1226() {
      return C[1226] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1227] || CT.C1227,
        [S._Location_name]: null,
        [S._Location_column]: 30,
        [S._Location_line]: 1231,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1231() {
      return C[1231] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPerformLayout",
        [S._Location_column]: 11,
        [S._Location_line]: 1244,
        [S._Location_file]: null
      });
    },
    get C1232() {
      return C[1232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 11,
        [S._Location_line]: 1245,
        [S._Location_file]: null
      });
    },
    get C1230() {
      return C[1230] = dart.constList([C[1231] || CT.C1231, C[1232] || CT.C1232], T$._LocationL());
    },
    get C1229() {
      return C[1229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1230] || CT.C1230,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 1243,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1235() {
      return C[1235] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 9,
        [S._Location_line]: 1237,
        [S._Location_file]: null
      });
    },
    get C1236() {
      return C[1236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selected",
        [S._Location_column]: 9,
        [S._Location_line]: 1238,
        [S._Location_file]: null
      });
    },
    get C1237() {
      return C[1237] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "labelColor",
        [S._Location_column]: 9,
        [S._Location_line]: 1239,
        [S._Location_file]: null
      });
    },
    get C1238() {
      return C[1238] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "unselectedLabelColor",
        [S._Location_column]: 9,
        [S._Location_line]: 1240,
        [S._Location_file]: null
      });
    },
    get C1239() {
      return C[1239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "labelStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 1241,
        [S._Location_file]: null
      });
    },
    get C1240() {
      return C[1240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "unselectedLabelStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 1242,
        [S._Location_file]: null
      });
    },
    get C1241() {
      return C[1241] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1243,
        [S._Location_file]: null
      });
    },
    get C1234() {
      return C[1234] = dart.constList([C[1235] || CT.C1235, C[1236] || CT.C1236, C[1237] || CT.C1237, C[1238] || CT.C1238, C[1239] || CT.C1239, C[1240] || CT.C1240, C[1241] || CT.C1241], T$._LocationL());
    },
    get C1233() {
      return C[1233] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1234] || CT.C1234,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 1236,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1244() {
      return C[1244] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "painter",
        [S._Location_column]: 7,
        [S._Location_line]: 1235,
        [S._Location_file]: null
      });
    },
    get C1245() {
      return C[1245] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 1236,
        [S._Location_file]: null
      });
    },
    get C1243() {
      return C[1243] = dart.constList([C[1244] || CT.C1244, C[1245] || CT.C1245], T$._LocationL());
    },
    get C1242() {
      return C[1242] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1243] || CT.C1243,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 1234,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1248() {
      return C[1248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dragStartBehavior",
        [S._Location_column]: 9,
        [S._Location_line]: 1253,
        [S._Location_file]: null
      });
    },
    get C1249() {
      return C[1249] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scrollDirection",
        [S._Location_column]: 9,
        [S._Location_line]: 1254,
        [S._Location_file]: null
      });
    },
    get C1250() {
      return C[1250] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "controller",
        [S._Location_column]: 9,
        [S._Location_line]: 1255,
        [S._Location_file]: null
      });
    },
    get C1251() {
      return C[1251] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "physics",
        [S._Location_column]: 9,
        [S._Location_line]: 1256,
        [S._Location_file]: null
      });
    },
    get C1252() {
      return C[1252] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1257,
        [S._Location_file]: null
      });
    },
    get C1247() {
      return C[1247] = dart.constList([C[1248] || CT.C1248, C[1249] || CT.C1249, C[1250] || CT.C1250, C[1251] || CT.C1251, C[1252] || CT.C1252], T$._LocationL());
    },
    get C1246() {
      return C[1246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1247] || CT.C1247,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 1252,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1253() {
      return C[1253] = dart.const({
        __proto__: page_view.PageScrollPhysics.prototype,
        [S$.ScrollPhysics_parent]: null
      });
    },
    get C1254() {
      return C[1254] = dart.const({
        __proto__: scroll_physics.ClampingScrollPhysics.prototype,
        [S$.ScrollPhysics_parent]: null
      });
    },
    get C1257() {
      return C[1257] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dragStartBehavior",
        [S._Location_column]: 9,
        [S._Location_line]: 1491,
        [S._Location_file]: null
      });
    },
    get C1258() {
      return C[1258] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "controller",
        [S._Location_column]: 9,
        [S._Location_line]: 1492,
        [S._Location_file]: null
      });
    },
    get C1259() {
      return C[1259] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "physics",
        [S._Location_column]: 9,
        [S._Location_line]: 1493,
        [S._Location_file]: null
      });
    },
    get C1260() {
      return C[1260] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 1496,
        [S._Location_file]: null
      });
    },
    get C1256() {
      return C[1256] = dart.constList([C[1257] || CT.C1257, C[1258] || CT.C1258, C[1259] || CT.C1259, C[1260] || CT.C1260], T$._LocationL());
    },
    get C1255() {
      return C[1255] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1256] || CT.C1256,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 1490,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1263() {
      return C[1263] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onNotification",
        [S._Location_column]: 7,
        [S._Location_line]: 1489,
        [S._Location_file]: null
      });
    },
    get C1264() {
      return C[1264] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 1490,
        [S._Location_file]: null
      });
    },
    get C1262() {
      return C[1262] = dart.constList([C[1263] || CT.C1263, C[1264] || CT.C1264], T$._LocationL());
    },
    get C1261() {
      return C[1261] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1262] || CT.C1262,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 1488,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1265() {
      return C[1265] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 4,
        [S.EdgeInsets_right]: 4,
        [S.EdgeInsets_top]: 4,
        [S.EdgeInsets_left]: 4
      });
    },
    get C1268() {
      return C[1268] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 7,
        [S._Location_line]: 1531,
        [S._Location_file]: null
      });
    },
    get C1269() {
      return C[1269] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 7,
        [S._Location_line]: 1532,
        [S._Location_file]: null
      });
    },
    get C1270() {
      return C[1270] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "margin",
        [S._Location_column]: 7,
        [S._Location_line]: 1533,
        [S._Location_file]: null
      });
    },
    get C1271() {
      return C[1271] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "decoration",
        [S._Location_column]: 7,
        [S._Location_line]: 1534,
        [S._Location_file]: null
      });
    },
    get C1267() {
      return C[1267] = dart.constList([C[1268] || CT.C1268, C[1269] || CT.C1269, C[1270] || CT.C1270, C[1271] || CT.C1271], T$._LocationL());
    },
    get C1266() {
      return C[1266] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1267] || CT.C1267,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 1530,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1274() {
      return C[1274] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "backgroundColor",
        [S._Location_column]: 7,
        [S._Location_line]: 1613,
        [S._Location_file]: null
      });
    },
    get C1275() {
      return C[1275] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "borderColor",
        [S._Location_column]: 7,
        [S._Location_line]: 1614,
        [S._Location_file]: null
      });
    },
    get C1276() {
      return C[1276] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "size",
        [S._Location_column]: 7,
        [S._Location_line]: 1615,
        [S._Location_file]: null
      });
    },
    get C1273() {
      return C[1273] = dart.constList([C[1274] || CT.C1274, C[1275] || CT.C1275, C[1276] || CT.C1276], T$._LocationL());
    },
    get C1272() {
      return C[1272] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1273] || CT.C1273,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 1612,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1279() {
      return C[1279] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 13,
        [S._Location_line]: 1648,
        [S._Location_file]: null
      });
    },
    get C1280() {
      return C[1280] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 13,
        [S._Location_line]: 1649,
        [S._Location_file]: null
      });
    },
    get C1278() {
      return C[1278] = dart.constList([C[1279] || CT.C1279, C[1280] || CT.C1280], T$._LocationL());
    },
    get C1277() {
      return C[1277] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1278] || CT.C1278,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 1647,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1283() {
      return C[1283] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 11,
        [S._Location_line]: 1646,
        [S._Location_file]: null
      });
    },
    get C1284() {
      return C[1284] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 1647,
        [S._Location_file]: null
      });
    },
    get C1282() {
      return C[1282] = dart.constList([C[1283] || CT.C1283, C[1284] || CT.C1284], T$._LocationL());
    },
    get C1281() {
      return C[1281] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1282] || CT.C1282,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 1645,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1287() {
      return C[1287] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 1643,
        [S._Location_file]: null
      });
    },
    get C1288() {
      return C[1288] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 7,
        [S._Location_line]: 1644,
        [S._Location_file]: null
      });
    },
    get C1286() {
      return C[1286] = dart.constList([C[1287] || CT.C1287, C[1288] || CT.C1288], T$._LocationL());
    },
    get C1285() {
      return C[1285] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1286] || CT.C1286,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 1642,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1289() {
      return C[1289] = dart.fn(ui.Color.lerp, T$.ColorNAndColorNAnddoubleToColorN());
    },
    get C1290() {
      return C[1290] = dart.const({
        __proto__: snack_bar_theme.SnackBarBehavior.prototype,
        [S$._name$12]: "SnackBarBehavior.fixed",
        index: 0
      });
    },
    get C1291() {
      return C[1291] = dart.const({
        __proto__: snack_bar_theme.SnackBarBehavior.prototype,
        [S$._name$12]: "SnackBarBehavior.floating",
        index: 1
      });
    },
    get C1292() {
      return C[1292] = dart.constList([C[1290] || CT.C1290, C[1291] || CT.C1291], T$.SnackBarBehaviorL());
    },
    get C1295() {
      return C[1295] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 24,
        [S._Location_line]: 120,
        [S._Location_file]: null
      });
    },
    get C1296() {
      return C[1296] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 36,
        [S._Location_line]: 120,
        [S._Location_file]: null
      });
    },
    get C1294() {
      return C[1294] = dart.constList([C[1295] || CT.C1295, C[1296] || CT.C1296], T$._LocationL());
    },
    get C1293() {
      return C[1293] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1294] || CT.C1294,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 120,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/slider_theme.dart"
      });
    },
    get C1297() {
      return C[1297] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S$._name$13]: "ShowValueIndicator.onlyForDiscrete",
        index: 0
      });
    },
    get C1298() {
      return C[1298] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S$._name$13]: "ShowValueIndicator.onlyForContinuous",
        index: 1
      });
    },
    get C1299() {
      return C[1299] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S$._name$13]: "ShowValueIndicator.always",
        index: 2
      });
    },
    get C1300() {
      return C[1300] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S$._name$13]: "ShowValueIndicator.never",
        index: 3
      });
    },
    get C1301() {
      return C[1301] = dart.constList([C[1297] || CT.C1297, C[1298] || CT.C1298, C[1299] || CT.C1299, C[1300] || CT.C1300], T$.ShowValueIndicatorL());
    },
    get C1302() {
      return C[1302] = dart.const({
        __proto__: slider_theme.Thumb.prototype,
        [S$._name$13]: "Thumb.start",
        index: 0
      });
    },
    get C1303() {
      return C[1303] = dart.const({
        __proto__: slider_theme.Thumb.prototype,
        [S$._name$13]: "Thumb.end",
        index: 1
      });
    },
    get C1304() {
      return C[1304] = dart.constList([C[1302] || CT.C1302, C[1303] || CT.C1303], T$.ThumbL());
    },
    get C1305() {
      return C[1305] = dart.const({
        __proto__: slider_theme.RoundSliderOverlayShape.prototype,
        [S$.RoundSliderOverlayShape_overlayRadius]: 24
      });
    },
    get C1306() {
      return C[1306] = dart.const({
        __proto__: slider_theme.RoundSliderTickMarkShape.prototype,
        [S$.RoundSliderTickMarkShape_tickMarkRadius]: null
      });
    },
    get C1307() {
      return C[1307] = dart.const({
        __proto__: slider_theme.RoundSliderThumbShape.prototype,
        [S$.RoundSliderThumbShape_pressedElevation]: 6,
        [S$.RoundSliderThumbShape_elevation]: 1,
        [S$.RoundSliderThumbShape_disabledThumbRadius]: null,
        [S$.RoundSliderThumbShape_enabledThumbRadius]: 10
      });
    },
    get C1308() {
      return C[1308] = dart.const({
        __proto__: slider_theme.RoundedRectSliderTrackShape.prototype
      });
    },
    get C1309() {
      return C[1309] = dart.const({
        __proto__: slider_theme.PaddleSliderValueIndicatorShape.prototype
      });
    },
    get C1310() {
      return C[1310] = dart.const({
        __proto__: slider_theme.RoundRangeSliderTickMarkShape.prototype,
        [S$.RoundRangeSliderTickMarkShape_tickMarkRadius]: null
      });
    },
    get C1311() {
      return C[1311] = dart.const({
        __proto__: slider_theme.RoundRangeSliderThumbShape.prototype,
        [S$.RoundRangeSliderThumbShape_pressedElevation]: 6,
        [S$.RoundRangeSliderThumbShape_elevation]: 1,
        [S$.RoundRangeSliderThumbShape_disabledThumbRadius]: null,
        [S$.RoundRangeSliderThumbShape_enabledThumbRadius]: 10
      });
    },
    get C1312() {
      return C[1312] = dart.const({
        __proto__: slider_theme.RoundedRectRangeSliderTrackShape.prototype
      });
    },
    get C1313() {
      return C[1313] = dart.const({
        __proto__: slider_theme.PaddleRangeSliderValueIndicatorShape.prototype
      });
    },
    get C1314() {
      return C[1314] = dart.const({
        __proto__: slider_theme.SliderThemeData.prototype,
        [S$.thumbSelector]: null,
        [S$.minThumbSeparation]: null,
        [S$.valueIndicatorTextStyle]: null,
        [S$.showValueIndicator]: null,
        [S$.rangeValueIndicatorShape]: null,
        [S$.rangeTrackShape]: null,
        [S$.rangeThumbShape]: null,
        [S$.rangeTickMarkShape]: null,
        [S$.valueIndicatorShape]: null,
        [S$.trackShape]: null,
        [S$.thumbShape]: null,
        [S$.tickMarkShape]: null,
        [S$.overlayShape]: null,
        [S$.valueIndicatorColor]: null,
        [S$.overlayColor$2]: null,
        [S$.disabledThumbColor]: null,
        [S$.overlappingShapeStrokeColor]: null,
        [S$.thumbColor$1]: null,
        [S$.disabledInactiveTickMarkColor]: null,
        [S$.disabledActiveTickMarkColor]: null,
        [S$.inactiveTickMarkColor]: null,
        [S$.activeTickMarkColor]: null,
        [S$.disabledInactiveTrackColor]: null,
        [S$.disabledActiveTrackColor]: null,
        [S$.inactiveTrackColor]: null,
        [S$.activeTrackColor]: null,
        [S$.trackHeight]: null
      });
    },
    get C1315() {
      return C[1315] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: 0,
        [S.OffsetBase__dx]: 0
      });
    },
    get C1316() {
      return C[1316] = dart.const({
        __proto__: slider_theme._RectangularSliderValueIndicatorPathPainter.prototype
      });
    },
    get C1317() {
      return C[1317] = dart.const({
        __proto__: slider_theme._PaddleSliderValueIndicatorPathPainter.prototype
      });
    },
    get C1318() {
      return C[1318] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4294901760.0
      });
    },
    get C1319() {
      return C[1319] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: -40,
        [S.OffsetBase__dx]: 0
      });
    },
    get C1320() {
      return C[1320] = dart.fn(ui.lerpDouble, T$.numNAndnumNAnddoubleTodoubleN());
    },
    get C1323() {
      return C[1323] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 27,
        [S._Location_line]: 167,
        [S._Location_file]: null
      });
    },
    get C1324() {
      return C[1324] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 39,
        [S._Location_line]: 167,
        [S._Location_file]: null
      });
    },
    get C1322() {
      return C[1322] = dart.constList([C[1323] || CT.C1323, C[1324] || CT.C1324], T$._LocationL());
    },
    get C1321() {
      return C[1321] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1322] || CT.C1322,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 167,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/popup_menu_theme.dart"
      });
    },
    get C1327() {
      return C[1327] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 41,
        [S._Location_file]: null
      });
    },
    get C1328() {
      return C[1328] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 42,
        [S._Location_file]: null
      });
    },
    get C1326() {
      return C[1326] = dart.constList([C[1327] || CT.C1327, C[1328] || CT.C1328], T$._LocationL());
    },
    get C1325() {
      return C[1325] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1326] || CT.C1326,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 40,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1331() {
      return C[1331] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "position",
        [S._Location_column]: 7,
        [S._Location_line]: 38,
        [S._Location_file]: null
      });
    },
    get C1332() {
      return C[1332] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 40,
        [S._Location_file]: null
      });
    },
    get C1330() {
      return C[1330] = dart.constList([C[1331] || CT.C1331, C[1332] || CT.C1332], T$._LocationL());
    },
    get C1329() {
      return C[1329] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1330] || CT.C1330,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 37,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1333() {
      return C[1333] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: 0.25,
        [S.OffsetBase__dx]: 0
      });
    },
    get C1336() {
      return C[1336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 21,
        [S._Location_line]: 122,
        [S._Location_file]: null
      });
    },
    get C1337() {
      return C[1337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "maxHeight",
        [S._Location_column]: 21,
        [S._Location_line]: 123,
        [S._Location_file]: null
      });
    },
    get C1338() {
      return C[1338] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 124,
        [S._Location_file]: null
      });
    },
    get C1335() {
      return C[1335] = dart.constList([C[1336] || CT.C1336, C[1337] || CT.C1337, C[1338] || CT.C1338], T$._LocationL());
    },
    get C1334() {
      return C[1334] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1335] || CT.C1335,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 121,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1341() {
      return C[1341] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 19,
        [S._Location_line]: 120,
        [S._Location_file]: null
      });
    },
    get C1342() {
      return C[1342] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 121,
        [S._Location_file]: null
      });
    },
    get C1340() {
      return C[1340] = dart.constList([C[1341] || CT.C1341, C[1342] || CT.C1342], T$._LocationL());
    },
    get C1339() {
      return C[1339] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1340] || CT.C1340,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 119,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1345() {
      return C[1345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 119,
        [S._Location_file]: null
      });
    },
    get C1344() {
      return C[1344] = dart.constList([C[1345] || CT.C1345], T$._LocationL());
    },
    get C1343() {
      return C[1343] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1344] || CT.C1344,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 118,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1348() {
      return C[1348] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 15,
        [S._Location_line]: 116,
        [S._Location_file]: null
      });
    },
    get C1349() {
      return C[1349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 15,
        [S._Location_line]: 117,
        [S._Location_file]: null
      });
    },
    get C1350() {
      return C[1350] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 118,
        [S._Location_file]: null
      });
    },
    get C1347() {
      return C[1347] = dart.constList([C[1348] || CT.C1348, C[1349] || CT.C1349, C[1350] || CT.C1350], T$._LocationL());
    },
    get C1346() {
      return C[1346] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1347] || CT.C1347,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 115,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1353() {
      return C[1353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "translation",
        [S._Location_column]: 15,
        [S._Location_line]: 133,
        [S._Location_file]: null
      });
    },
    get C1354() {
      return C[1354] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 134,
        [S._Location_file]: null
      });
    },
    get C1352() {
      return C[1352] = dart.constList([C[1353] || CT.C1353, C[1354] || CT.C1354], T$._LocationL());
    },
    get C1351() {
      return C[1351] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1352] || CT.C1352,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 132,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1357() {
      return C[1357] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "translation",
        [S._Location_column]: 17,
        [S._Location_line]: 138,
        [S._Location_file]: null
      });
    },
    get C1358() {
      return C[1358] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 139,
        [S._Location_file]: null
      });
    },
    get C1356() {
      return C[1356] = dart.constList([C[1357] || CT.C1357, C[1358] || CT.C1358], T$._LocationL());
    },
    get C1355() {
      return C[1355] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1356] || CT.C1356,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 137,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1361() {
      return C[1361] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 13,
        [S._Location_line]: 131,
        [S._Location_file]: null
      });
    },
    get C1362() {
      return C[1362] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 132,
        [S._Location_file]: null
      });
    },
    get C1363() {
      return C[1363] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 13,
        [S._Location_line]: 136,
        [S._Location_file]: null
      });
    },
    get C1360() {
      return C[1360] = dart.constList([C[1361] || CT.C1361, C[1362] || CT.C1362, C[1363] || CT.C1363], T$._LocationL());
    },
    get C1359() {
      return C[1359] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1360] || CT.C1360,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 130,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1366() {
      return C[1366] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 11,
        [S._Location_line]: 113,
        [S._Location_file]: null
      });
    },
    get C1367() {
      return C[1367] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 11,
        [S._Location_line]: 114,
        [S._Location_file]: null
      });
    },
    get C1368() {
      return C[1368] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 130,
        [S._Location_file]: null
      });
    },
    get C1365() {
      return C[1365] = dart.constList([C[1366] || CT.C1366, C[1367] || CT.C1367, C[1368] || CT.C1368], T$._LocationL());
    },
    get C1364() {
      return C[1364] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1365] || CT.C1365,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 112,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1371() {
      return C[1371] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 7,
        [S._Location_line]: 86,
        [S._Location_file]: null
      });
    },
    get C1370() {
      return C[1370] = dart.constList([C[1371] || CT.C1371], T$._LocationL());
    },
    get C1369() {
      return C[1369] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1370] || CT.C1370,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 85,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1372() {
      return C[1372] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: 0.05,
        [S.OffsetBase__dx]: 0
      });
    },
    get C1373() {
      return C[1373] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: -0.025,
        [S.OffsetBase__dx]: 0
      });
    },
    get C1374() {
      return C[1374] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0.2
      });
    },
    get C1377() {
      return C[1377] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 11,
        [S._Location_line]: 214,
        [S._Location_file]: null
      });
    },
    get C1378() {
      return C[1378] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 215,
        [S._Location_file]: null
      });
    },
    get C1376() {
      return C[1376] = dart.constList([C[1377] || CT.C1377, C[1378] || CT.C1378], T$._LocationL());
    },
    get C1375() {
      return C[1375] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1376] || CT.C1376,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 213,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1381() {
      return C[1381] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 11,
        [S._Location_line]: 224,
        [S._Location_file]: null
      });
    },
    get C1382() {
      return C[1382] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "reverse",
        [S._Location_column]: 11,
        [S._Location_line]: 225,
        [S._Location_file]: null
      });
    },
    get C1383() {
      return C[1383] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 226,
        [S._Location_file]: null
      });
    },
    get C1380() {
      return C[1380] = dart.constList([C[1381] || CT.C1381, C[1382] || CT.C1382, C[1383] || CT.C1383], T$._LocationL());
    },
    get C1379() {
      return C[1379] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1380] || CT.C1380,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 223,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1386() {
      return C[1386] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 13,
        [S._Location_line]: 237,
        [S._Location_file]: null
      });
    },
    get C1387() {
      return C[1387] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "reverse",
        [S._Location_column]: 13,
        [S._Location_line]: 238,
        [S._Location_file]: null
      });
    },
    get C1388() {
      return C[1388] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 239,
        [S._Location_file]: null
      });
    },
    get C1385() {
      return C[1385] = dart.constList([C[1386] || CT.C1386, C[1387] || CT.C1387, C[1388] || CT.C1388], T$._LocationL());
    },
    get C1384() {
      return C[1384] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1385] || CT.C1385,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 236,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1391() {
      return C[1391] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 13,
        [S._Location_line]: 248,
        [S._Location_file]: null
      });
    },
    get C1392() {
      return C[1392] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 249,
        [S._Location_file]: null
      });
    },
    get C1390() {
      return C[1390] = dart.constList([C[1391] || CT.C1391, C[1392] || CT.C1392], T$._LocationL());
    },
    get C1389() {
      return C[1389] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1390] || CT.C1390,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 247,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1395() {
      return C[1395] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 9,
        [S._Location_line]: 230,
        [S._Location_file]: null
      });
    },
    get C1396() {
      return C[1396] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "forwardBuilder",
        [S._Location_column]: 9,
        [S._Location_line]: 231,
        [S._Location_file]: null
      });
    },
    get C1397() {
      return C[1397] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "reverseBuilder",
        [S._Location_column]: 9,
        [S._Location_line]: 242,
        [S._Location_file]: null
      });
    },
    get C1398() {
      return C[1398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 252,
        [S._Location_file]: null
      });
    },
    get C1394() {
      return C[1394] = dart.constList([C[1395] || CT.C1395, C[1396] || CT.C1396, C[1397] || CT.C1397, C[1398] || CT.C1398], T$._LocationL());
    },
    get C1393() {
      return C[1393] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1394] || CT.C1394,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 229,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1401() {
      return C[1401] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 207,
        [S._Location_file]: null
      });
    },
    get C1402() {
      return C[1402] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "forwardBuilder",
        [S._Location_column]: 7,
        [S._Location_line]: 208,
        [S._Location_file]: null
      });
    },
    get C1403() {
      return C[1403] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "reverseBuilder",
        [S._Location_column]: 7,
        [S._Location_line]: 218,
        [S._Location_file]: null
      });
    },
    get C1404() {
      return C[1404] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 229,
        [S._Location_file]: null
      });
    },
    get C1400() {
      return C[1400] = dart.constList([C[1401] || CT.C1401, C[1402] || CT.C1402, C[1403] || CT.C1403, C[1404] || CT.C1404], T$._LocationL());
    },
    get C1399() {
      return C[1399] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1400] || CT.C1400,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 206,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1405() {
      return C[1405] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 0.06,
        [S.Cubic_c]: 0.133333,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0.05
      });
    },
    get C1406() {
      return C[1406] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.25,
        [S.Cubic_b]: 0.82,
        [S.Cubic_a]: 0.208333
      });
    },
    get C1409() {
      return C[1409] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 11,
        [S._Location_line]: 322,
        [S._Location_file]: null
      });
    },
    get C1410() {
      return C[1410] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 323,
        [S._Location_file]: null
      });
    },
    get C1408() {
      return C[1408] = dart.constList([C[1409] || CT.C1409, C[1410] || CT.C1410], T$._LocationL());
    },
    get C1407() {
      return C[1407] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1408] || CT.C1408,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 321,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1413() {
      return C[1413] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scale",
        [S._Location_column]: 11,
        [S._Location_line]: 329,
        [S._Location_file]: null
      });
    },
    get C1414() {
      return C[1414] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 330,
        [S._Location_file]: null
      });
    },
    get C1412() {
      return C[1412] = dart.constList([C[1413] || CT.C1413, C[1414] || CT.C1414], T$._LocationL());
    },
    get C1411() {
      return C[1411] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1412] || CT.C1412,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 328,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1417() {
      return C[1417] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 327,
        [S._Location_file]: null
      });
    },
    get C1418() {
      return C[1418] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 328,
        [S._Location_file]: null
      });
    },
    get C1416() {
      return C[1416] = dart.constList([C[1417] || CT.C1417, C[1418] || CT.C1418], T$._LocationL());
    },
    get C1415() {
      return C[1415] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1416] || CT.C1416,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 326,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1421() {
      return C[1421] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 319,
        [S._Location_file]: null
      });
    },
    get C1422() {
      return C[1422] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 7,
        [S._Location_line]: 320,
        [S._Location_file]: null
      });
    },
    get C1423() {
      return C[1423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 326,
        [S._Location_file]: null
      });
    },
    get C1420() {
      return C[1420] = dart.constList([C[1421] || CT.C1421, C[1422] || CT.C1422, C[1423] || CT.C1423], T$._LocationL());
    },
    get C1419() {
      return C[1419] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1420] || CT.C1420,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 318,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1424() {
      return C[1424] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[91] || CT.C91,
        [S.Interval_end]: 0.25,
        [S.Interval_begin]: 0.125
      });
    },
    get C1425() {
      return C[1425] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[91] || CT.C91,
        [S.Interval_end]: 0.4175,
        [S.Interval_begin]: 0.2075
      });
    },
    get C1428() {
      return C[1428] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scale",
        [S._Location_column]: 9,
        [S._Location_line]: 379,
        [S._Location_file]: null
      });
    },
    get C1429() {
      return C[1429] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 380,
        [S._Location_file]: null
      });
    },
    get C1427() {
      return C[1427] = dart.constList([C[1428] || CT.C1428, C[1429] || CT.C1429], T$._LocationL());
    },
    get C1426() {
      return C[1426] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1427] || CT.C1427,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 378,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1432() {
      return C[1432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 7,
        [S._Location_line]: 377,
        [S._Location_file]: null
      });
    },
    get C1433() {
      return C[1433] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 378,
        [S._Location_file]: null
      });
    },
    get C1431() {
      return C[1431] = dart.constList([C[1432] || CT.C1432, C[1433] || CT.C1433], T$._LocationL());
    },
    get C1430() {
      return C[1430] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1431] || CT.C1431,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 376,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1434() {
      return C[1434] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[91] || CT.C91,
        [S.Interval_end]: 0.2075,
        [S.Interval_begin]: 0.0825
      });
    },
    get C1437() {
      return C[1437] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "routeAnimation",
        [S._Location_column]: 39,
        [S._Location_line]: 449,
        [S._Location_file]: null
      });
    },
    get C1438() {
      return C[1438] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 66,
        [S._Location_line]: 449,
        [S._Location_file]: null
      });
    },
    get C1436() {
      return C[1436] = dart.constList([C[1437] || CT.C1437, C[1438] || CT.C1438], T$._LocationL());
    },
    get C1435() {
      return C[1435] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1436] || CT.C1436,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 449,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1441() {
      return C[1441] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 477,
        [S._Location_file]: null
      });
    },
    get C1442() {
      return C[1442] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "secondaryAnimation",
        [S._Location_column]: 7,
        [S._Location_line]: 478,
        [S._Location_file]: null
      });
    },
    get C1443() {
      return C[1443] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 479,
        [S._Location_file]: null
      });
    },
    get C1440() {
      return C[1440] = dart.constList([C[1441] || CT.C1441, C[1442] || CT.C1442, C[1443] || CT.C1443], T$._LocationL());
    },
    get C1439() {
      return C[1439] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1440] || CT.C1440,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 476,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1446() {
      return C[1446] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 508,
        [S._Location_file]: null
      });
    },
    get C1447() {
      return C[1447] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "secondaryAnimation",
        [S._Location_column]: 7,
        [S._Location_line]: 509,
        [S._Location_file]: null
      });
    },
    get C1448() {
      return C[1448] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 510,
        [S._Location_file]: null
      });
    },
    get C1445() {
      return C[1445] = dart.constList([C[1446] || CT.C1446, C[1447] || CT.C1447, C[1448] || CT.C1448], T$._LocationL());
    },
    get C1444() {
      return C[1444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1445] || CT.C1445,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 507,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1449() {
      return C[1449] = dart.const({
        __proto__: page_transitions_theme.FadeUpwardsPageTransitionsBuilder.prototype
      });
    },
    get C1451() {
      return C[1451] = dart.const({
        __proto__: page_transitions_theme.CupertinoPageTransitionsBuilder.prototype
      });
    },
    get C1450() {
      return C[1450] = dart.constMap(T$.TargetPlatformL(), T$.PageTransitionsBuilderL(), [C[44] || CT.C44, C[1449] || CT.C1449, C[48] || CT.C48, C[1451] || CT.C1451, C[46] || CT.C46, C[1449] || CT.C1449, C[49] || CT.C49, C[1451] || CT.C1451, C[47] || CT.C47, C[1449] || CT.C1449]);
    },
    get C1454() {
      return C[1454] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 32,
        [S._Location_line]: 119,
        [S._Location_file]: null
      });
    },
    get C1455() {
      return C[1455] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 44,
        [S._Location_line]: 119,
        [S._Location_file]: null
      });
    },
    get C1453() {
      return C[1453] = dart.constList([C[1454] || CT.C1454, C[1455] || CT.C1455], T$._LocationL());
    },
    get C1452() {
      return C[1452] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1453] || CT.C1453,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 119,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/outlined_button_theme.dart"
      });
    },
    get C1458() {
      return C[1458] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 21,
        [S._Location_line]: 474,
        [S._Location_file]: null
      });
    },
    get C1459() {
      return C[1459] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 477,
        [S._Location_file]: null
      });
    },
    get C1457() {
      return C[1457] = dart.constList([C[1458] || CT.C1458, C[1459] || CT.C1459], T$._LocationL());
    },
    get C1456() {
      return C[1456] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1457] || CT.C1457,
        [S._Location_name]: null,
        [S._Location_column]: 19,
        [S._Location_line]: 473,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1462() {
      return C[1462] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minWidth",
        [S._Location_column]: 27,
        [S._Location_line]: 489,
        [S._Location_file]: null
      });
    },
    get C1463() {
      return C[1463] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minExtendedWidth",
        [S._Location_column]: 27,
        [S._Location_line]: 490,
        [S._Location_file]: null
      });
    },
    get C1464() {
      return C[1464] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "extendedTransitionAnimation",
        [S._Location_column]: 27,
        [S._Location_line]: 491,
        [S._Location_file]: null
      });
    },
    get C1465() {
      return C[1465] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selected",
        [S._Location_column]: 27,
        [S._Location_line]: 492,
        [S._Location_file]: null
      });
    },
    get C1466() {
      return C[1466] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "icon",
        [S._Location_column]: 27,
        [S._Location_line]: 493,
        [S._Location_file]: null
      });
    },
    get C1467() {
      return C[1467] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 27,
        [S._Location_line]: 494,
        [S._Location_file]: null
      });
    },
    get C1468() {
      return C[1468] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "destinationAnimation",
        [S._Location_column]: 27,
        [S._Location_line]: 495,
        [S._Location_file]: null
      });
    },
    get C1469() {
      return C[1469] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "labelType",
        [S._Location_column]: 27,
        [S._Location_line]: 496,
        [S._Location_file]: null
      });
    },
    get C1470() {
      return C[1470] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "iconTheme",
        [S._Location_column]: 27,
        [S._Location_line]: 497,
        [S._Location_file]: null
      });
    },
    get C1471() {
      return C[1471] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "labelTextStyle",
        [S._Location_column]: 27,
        [S._Location_line]: 498,
        [S._Location_file]: null
      });
    },
    get C1472() {
      return C[1472] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 27,
        [S._Location_line]: 499,
        [S._Location_file]: null
      });
    },
    get C1473() {
      return C[1473] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 27,
        [S._Location_line]: 500,
        [S._Location_file]: null
      });
    },
    get C1474() {
      return C[1474] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "indexLabel",
        [S._Location_column]: 27,
        [S._Location_line]: 503,
        [S._Location_file]: null
      });
    },
    get C1461() {
      return C[1461] = dart.constList([C[1462] || CT.C1462, C[1463] || CT.C1463, C[1464] || CT.C1464, C[1465] || CT.C1465, C[1466] || CT.C1466, C[1467] || CT.C1467, C[1468] || CT.C1468, C[1469] || CT.C1469, C[1470] || CT.C1470, C[1471] || CT.C1471, C[1472] || CT.C1472, C[1473] || CT.C1473, C[1474] || CT.C1474], T$._LocationL());
    },
    get C1460() {
      return C[1460] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1461] || CT.C1461,
        [S._Location_name]: null,
        [S._Location_column]: 25,
        [S._Location_line]: 488,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1477() {
      return C[1477] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 27,
        [S._Location_line]: 510,
        [S._Location_file]: null
      });
    },
    get C1478() {
      return C[1478] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 27,
        [S._Location_line]: 513,
        [S._Location_file]: null
      });
    },
    get C1476() {
      return C[1476] = dart.constList([C[1477] || CT.C1477, C[1478] || CT.C1478], T$._LocationL());
    },
    get C1475() {
      return C[1475] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1476] || CT.C1476,
        [S._Location_name]: null,
        [S._Location_column]: 25,
        [S._Location_line]: 509,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1481() {
      return C[1481] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 21,
        [S._Location_line]: 485,
        [S._Location_file]: null
      });
    },
    get C1482() {
      return C[1482] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 21,
        [S._Location_line]: 486,
        [S._Location_file]: null
      });
    },
    get C1480() {
      return C[1480] = dart.constList([C[1481] || CT.C1481, C[1482] || CT.C1482], T$._LocationL());
    },
    get C1479() {
      return C[1479] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1480] || CT.C1480,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 484,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1485() {
      return C[1485] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 19,
        [S._Location_line]: 483,
        [S._Location_file]: null
      });
    },
    get C1486() {
      return C[1486] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 484,
        [S._Location_file]: null
      });
    },
    get C1484() {
      return C[1484] = dart.constList([C[1485] || CT.C1485, C[1486] || CT.C1486], T$._LocationL());
    },
    get C1483() {
      return C[1483] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1484] || CT.C1484,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 482,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1489() {
      return C[1489] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 482,
        [S._Location_file]: null
      });
    },
    get C1488() {
      return C[1488] = dart.constList([C[1489] || CT.C1489], T$._LocationL());
    },
    get C1487() {
      return C[1487] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1488] || CT.C1488,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 481,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1492() {
      return C[1492] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 13,
        [S._Location_line]: 469,
        [S._Location_file]: null
      });
    },
    get C1491() {
      return C[1491] = dart.constList([C[1492] || CT.C1492], T$._LocationL());
    },
    get C1490() {
      return C[1490] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1491] || CT.C1491,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 468,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1495() {
      return C[1495] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 11,
        [S._Location_line]: 467,
        [S._Location_file]: null
      });
    },
    get C1496() {
      return C[1496] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 468,
        [S._Location_file]: null
      });
    },
    get C1494() {
      return C[1494] = dart.constList([C[1029] || CT.C1029, C[1495] || CT.C1495, C[1496] || CT.C1496], T$._LocationL());
    },
    get C1493() {
      return C[1493] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1494] || CT.C1494,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 465,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1499() {
      return C[1499] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "explicitChildNodes",
        [S._Location_column]: 9,
        [S._Location_line]: 464,
        [S._Location_file]: null
      });
    },
    get C1500() {
      return C[1500] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 465,
        [S._Location_file]: null
      });
    },
    get C1498() {
      return C[1498] = dart.constList([C[1499] || CT.C1499, C[1500] || CT.C1500], T$._LocationL());
    },
    get C1497() {
      return C[1497] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1498] || CT.C1498,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 463,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1503() {
      return C[1503] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 462,
        [S._Location_file]: null
      });
    },
    get C1504() {
      return C[1504] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 463,
        [S._Location_file]: null
      });
    },
    get C1502() {
      return C[1502] = dart.constList([C[1503] || CT.C1503, C[1504] || CT.C1504], T$._LocationL());
    },
    get C1501() {
      return C[1501] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1502] || CT.C1502,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 461,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1507() {
      return C[1507] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 7,
        [S._Location_line]: 621,
        [S._Location_file]: null
      });
    },
    get C1508() {
      return C[1508] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 622,
        [S._Location_file]: null
      });
    },
    get C1506() {
      return C[1506] = dart.constList([C[1507] || CT.C1507, C[1508] || CT.C1508], T$._LocationL());
    },
    get C1505() {
      return C[1505] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1506] || CT.C1506,
        [S._Location_name]: null,
        [S._Location_column]: 31,
        [S._Location_line]: 620,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1511() {
      return C[1511] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 7,
        [S._Location_line]: 625,
        [S._Location_file]: null
      });
    },
    get C1512() {
      return C[1512] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 626,
        [S._Location_file]: null
      });
    },
    get C1510() {
      return C[1510] = dart.constList([C[1511] || CT.C1511, C[1512] || CT.C1512], T$._LocationL());
    },
    get C1509() {
      return C[1509] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1510] || CT.C1510,
        [S._Location_name]: null,
        [S._Location_column]: 32,
        [S._Location_line]: 624,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1515() {
      return C[1515] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 13,
        [S._Location_line]: 635,
        [S._Location_file]: null
      });
    },
    get C1516() {
      return C[1516] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 636,
        [S._Location_file]: null
      });
    },
    get C1514() {
      return C[1514] = dart.constList([C[1515] || CT.C1515, C[1516] || CT.C1516], T$._LocationL());
    },
    get C1513() {
      return C[1513] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1514] || CT.C1514,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 634,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1519() {
      return C[1519] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 11,
        [S._Location_line]: 632,
        [S._Location_file]: null
      });
    },
    get C1520() {
      return C[1520] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 11,
        [S._Location_line]: 633,
        [S._Location_file]: null
      });
    },
    get C1521() {
      return C[1521] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 634,
        [S._Location_file]: null
      });
    },
    get C1518() {
      return C[1518] = dart.constList([C[1519] || CT.C1519, C[1520] || CT.C1520, C[1521] || CT.C1521], T$._LocationL());
    },
    get C1517() {
      return C[1517] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1518] || CT.C1518,
        [S._Location_name]: null,
        [S._Location_column]: 33,
        [S._Location_line]: 631,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1524() {
      return C[1524] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alwaysIncludeSemantics",
        [S._Location_column]: 21,
        [S._Location_line]: 650,
        [S._Location_file]: null
      });
    },
    get C1525() {
      return C[1525] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 21,
        [S._Location_line]: 651,
        [S._Location_file]: null
      });
    },
    get C1526() {
      return C[1526] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 652,
        [S._Location_file]: null
      });
    },
    get C1523() {
      return C[1523] = dart.constList([C[1524] || CT.C1524, C[1525] || CT.C1525, C[1526] || CT.C1526], T$._LocationL());
    },
    get C1522() {
      return C[1522] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1523] || CT.C1523,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 649,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1529() {
      return C[1529] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 19,
        [S._Location_line]: 647,
        [S._Location_file]: null
      });
    },
    get C1530() {
      return C[1530] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 19,
        [S._Location_line]: 648,
        [S._Location_file]: null
      });
    },
    get C1531() {
      return C[1531] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 649,
        [S._Location_file]: null
      });
    },
    get C1528() {
      return C[1528] = dart.constList([C[1529] || CT.C1529, C[1530] || CT.C1530, C[1531] || CT.C1531], T$._LocationL());
    },
    get C1527() {
      return C[1527] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1528] || CT.C1528,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 646,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1534() {
      return C[1534] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 15,
        [S._Location_line]: 643,
        [S._Location_file]: null
      });
    },
    get C1533() {
      return C[1533] = dart.constList([C[1534] || CT.C1534], T$._LocationL());
    },
    get C1532() {
      return C[1532] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1533] || CT.C1533,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 642,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1537() {
      return C[1537] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 13,
        [S._Location_line]: 641,
        [S._Location_file]: null
      });
    },
    get C1538() {
      return C[1538] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 642,
        [S._Location_file]: null
      });
    },
    get C1536() {
      return C[1536] = dart.constList([C[1537] || CT.C1537, C[1538] || CT.C1538], T$._LocationL());
    },
    get C1535() {
      return C[1535] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1536] || CT.C1536,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 640,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1541() {
      return C[1541] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alwaysIncludeSemantics",
        [S._Location_column]: 25,
        [S._Location_line]: 674,
        [S._Location_file]: null
      });
    },
    get C1542() {
      return C[1542] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 25,
        [S._Location_line]: 675,
        [S._Location_file]: null
      });
    },
    get C1543() {
      return C[1543] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 25,
        [S._Location_line]: 676,
        [S._Location_file]: null
      });
    },
    get C1540() {
      return C[1540] = dart.constList([C[1541] || CT.C1541, C[1542] || CT.C1542, C[1543] || CT.C1543], T$._LocationL());
    },
    get C1539() {
      return C[1539] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1540] || CT.C1540,
        [S._Location_name]: null,
        [S._Location_column]: 30,
        [S._Location_line]: 673,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1546() {
      return C[1546] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 23,
        [S._Location_line]: 670,
        [S._Location_file]: null
      });
    },
    get C1547() {
      return C[1547] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "widthFactor",
        [S._Location_column]: 23,
        [S._Location_line]: 671,
        [S._Location_file]: null
      });
    },
    get C1548() {
      return C[1548] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 23,
        [S._Location_line]: 672,
        [S._Location_file]: null
      });
    },
    get C1549() {
      return C[1549] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 23,
        [S._Location_line]: 673,
        [S._Location_file]: null
      });
    },
    get C1545() {
      return C[1545] = dart.constList([C[1546] || CT.C1546, C[1547] || CT.C1547, C[1548] || CT.C1548, C[1549] || CT.C1549], T$._LocationL());
    },
    get C1544() {
      return C[1544] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1545] || CT.C1545,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 669,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1552() {
      return C[1552] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 30,
        [S._Location_line]: 679,
        [S._Location_file]: null
      });
    },
    get C1551() {
      return C[1551] = dart.constList([C[1552] || CT.C1552], T$._LocationL());
    },
    get C1550() {
      return C[1550] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1551] || CT.C1551,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 679,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1555() {
      return C[1555] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 19,
        [S._Location_line]: 667,
        [S._Location_file]: null
      });
    },
    get C1554() {
      return C[1554] = dart.constList([C[1555] || CT.C1555], T$._LocationL());
    },
    get C1553() {
      return C[1553] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1554] || CT.C1554,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 666,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1558() {
      return C[1558] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 666,
        [S._Location_file]: null
      });
    },
    get C1557() {
      return C[1557] = dart.constList([C[1558] || CT.C1558], T$._LocationL());
    },
    get C1556() {
      return C[1556] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1557] || CT.C1557,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 665,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1561() {
      return C[1561] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 15,
        [S._Location_line]: 662,
        [S._Location_file]: null
      });
    },
    get C1562() {
      return C[1562] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 665,
        [S._Location_file]: null
      });
    },
    get C1560() {
      return C[1560] = dart.constList([C[1561] || CT.C1561, C[1562] || CT.C1562], T$._LocationL());
    },
    get C1559() {
      return C[1559] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1560] || CT.C1560,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 661,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1565() {
      return C[1565] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 13,
        [S._Location_line]: 660,
        [S._Location_file]: null
      });
    },
    get C1566() {
      return C[1566] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 661,
        [S._Location_file]: null
      });
    },
    get C1564() {
      return C[1564] = dart.constList([C[1565] || CT.C1565, C[1566] || CT.C1566], T$._LocationL());
    },
    get C1563() {
      return C[1563] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1564] || CT.C1564,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 659,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1567() {
      return C[1567] = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [S$._name$14]: "NavigationRailLabelType.none",
        index: 0
      });
    },
    get C1570() {
      return C[1570] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 26,
        [S._Location_line]: 701,
        [S._Location_file]: null
      });
    },
    get C1569() {
      return C[1569] = dart.constList([C[1570] || CT.C1570], T$._LocationL());
    },
    get C1568() {
      return C[1568] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1569] || CT.C1569,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 701,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1573() {
      return C[1573] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alwaysIncludeSemantics",
        [S._Location_column]: 21,
        [S._Location_line]: 708,
        [S._Location_file]: null
      });
    },
    get C1574() {
      return C[1574] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 21,
        [S._Location_line]: 709,
        [S._Location_file]: null
      });
    },
    get C1575() {
      return C[1575] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 710,
        [S._Location_file]: null
      });
    },
    get C1572() {
      return C[1572] = dart.constList([C[1573] || CT.C1573, C[1574] || CT.C1574, C[1575] || CT.C1575], T$._LocationL());
    },
    get C1571() {
      return C[1571] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1572] || CT.C1572,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 707,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1578() {
      return C[1578] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 19,
        [S._Location_line]: 704,
        [S._Location_file]: null
      });
    },
    get C1579() {
      return C[1579] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 19,
        [S._Location_line]: 705,
        [S._Location_file]: null
      });
    },
    get C1580() {
      return C[1580] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "widthFactor",
        [S._Location_column]: 19,
        [S._Location_line]: 706,
        [S._Location_file]: null
      });
    },
    get C1581() {
      return C[1581] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 707,
        [S._Location_file]: null
      });
    },
    get C1577() {
      return C[1577] = dart.constList([C[1578] || CT.C1578, C[1579] || CT.C1579, C[1580] || CT.C1580, C[1581] || CT.C1581], T$._LocationL());
    },
    get C1576() {
      return C[1576] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1577] || CT.C1577,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 703,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1584() {
      return C[1584] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 26,
        [S._Location_line]: 713,
        [S._Location_file]: null
      });
    },
    get C1583() {
      return C[1583] = dart.constList([C[1584] || CT.C1584], T$._LocationL());
    },
    get C1582() {
      return C[1582] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1583] || CT.C1583,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 713,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1587() {
      return C[1587] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 15,
        [S._Location_line]: 698,
        [S._Location_file]: null
      });
    },
    get C1588() {
      return C[1588] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisAlignment",
        [S._Location_column]: 15,
        [S._Location_line]: 699,
        [S._Location_file]: null
      });
    },
    get C1589() {
      return C[1589] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 15,
        [S._Location_line]: 700,
        [S._Location_file]: null
      });
    },
    get C1586() {
      return C[1586] = dart.constList([C[1587] || CT.C1587, C[1588] || CT.C1588, C[1589] || CT.C1589], T$._LocationL());
    },
    get C1585() {
      return C[1585] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1586] || CT.C1586,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 697,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1592() {
      return C[1592] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 697,
        [S._Location_file]: null
      });
    },
    get C1591() {
      return C[1591] = dart.constList([C[1592] || CT.C1592], T$._LocationL());
    },
    get C1590() {
      return C[1590] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1591] || CT.C1591,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 696,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1595() {
      return C[1595] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 11,
        [S._Location_line]: 691,
        [S._Location_file]: null
      });
    },
    get C1596() {
      return C[1596] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 11,
        [S._Location_line]: 695,
        [S._Location_file]: null
      });
    },
    get C1597() {
      return C[1597] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 696,
        [S._Location_file]: null
      });
    },
    get C1594() {
      return C[1594] = dart.constList([C[1595] || CT.C1595, C[1596] || CT.C1596, C[1597] || CT.C1597], T$._LocationL());
    },
    get C1593() {
      return C[1593] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1594] || CT.C1594,
        [S._Location_name]: null,
        [S._Location_column]: 19,
        [S._Location_line]: 690,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1598() {
      return C[1598] = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [S$._name$14]: "NavigationRailLabelType.selected",
        index: 1
      });
    },
    get C1602() {
      return C[1602] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 30,
        [S._Location_line]: 728,
        [S._Location_file]: null
      });
    },
    get C1601() {
      return C[1601] = dart.constList([C[1602] || CT.C1602], T$._LocationL());
    },
    get C1600() {
      return C[1600] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1601] || CT.C1601,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 728,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1599() {
      return C[1599] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[1600] || CT.C1600,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: 16,
        [S.SizedBox_width]: null
      });
    },
    get C1606() {
      return C[1606] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 30,
        [S._Location_line]: 731,
        [S._Location_file]: null
      });
    },
    get C1605() {
      return C[1605] = dart.constList([C[1606] || CT.C1606], T$._LocationL());
    },
    get C1604() {
      return C[1604] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1605] || CT.C1605,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 731,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1603() {
      return C[1603] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[1604] || CT.C1604,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: 16,
        [S.SizedBox_width]: null
      });
    },
    get C1609() {
      return C[1609] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 13,
        [S._Location_line]: 727,
        [S._Location_file]: null
      });
    },
    get C1608() {
      return C[1608] = dart.constList([C[1609] || CT.C1609], T$._LocationL());
    },
    get C1607() {
      return C[1607] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1608] || CT.C1608,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 726,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1612() {
      return C[1612] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 11,
        [S._Location_line]: 721,
        [S._Location_file]: null
      });
    },
    get C1613() {
      return C[1613] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 11,
        [S._Location_line]: 725,
        [S._Location_file]: null
      });
    },
    get C1614() {
      return C[1614] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 726,
        [S._Location_file]: null
      });
    },
    get C1611() {
      return C[1611] = dart.constList([C[1612] || CT.C1612, C[1613] || CT.C1613, C[1614] || CT.C1614], T$._LocationL());
    },
    get C1610() {
      return C[1610] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1611] || CT.C1611,
        [S._Location_name]: null,
        [S._Location_column]: 19,
        [S._Location_line]: 720,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1615() {
      return C[1615] = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [S$._name$14]: "NavigationRailLabelType.all",
        index: 2
      });
    },
    get C1618() {
      return C[1618] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 15,
        [S._Location_line]: 748,
        [S._Location_file]: null
      });
    },
    get C1619() {
      return C[1619] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHover",
        [S._Location_column]: 15,
        [S._Location_line]: 749,
        [S._Location_file]: null
      });
    },
    get C1620() {
      return C[1620] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightShape",
        [S._Location_column]: 15,
        [S._Location_line]: 750,
        [S._Location_file]: null
      });
    },
    get C1621() {
      return C[1621] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "borderRadius",
        [S._Location_column]: 15,
        [S._Location_line]: 751,
        [S._Location_file]: null
      });
    },
    get C1622() {
      return C[1622] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "containedInkWell",
        [S._Location_column]: 15,
        [S._Location_line]: 752,
        [S._Location_file]: null
      });
    },
    get C1623() {
      return C[1623] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashColor",
        [S._Location_column]: 15,
        [S._Location_line]: 753,
        [S._Location_file]: null
      });
    },
    get C1624() {
      return C[1624] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 15,
        [S._Location_line]: 754,
        [S._Location_file]: null
      });
    },
    get C1625() {
      return C[1625] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 755,
        [S._Location_file]: null
      });
    },
    get C1617() {
      return C[1617] = dart.constList([C[1618] || CT.C1618, C[1619] || CT.C1619, C[1620] || CT.C1620, C[1621] || CT.C1621, C[1622] || CT.C1622, C[1623] || CT.C1623, C[1624] || CT.C1624, C[1625] || CT.C1625], T$._LocationL());
    },
    get C1616() {
      return C[1616] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1617] || CT.C1617,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 747,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1628() {
      return C[1628] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "type",
        [S._Location_column]: 13,
        [S._Location_line]: 745,
        [S._Location_file]: null
      });
    },
    get C1629() {
      return C[1629] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 13,
        [S._Location_line]: 746,
        [S._Location_file]: null
      });
    },
    get C1630() {
      return C[1630] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 747,
        [S._Location_file]: null
      });
    },
    get C1627() {
      return C[1627] = dart.constList([C[1628] || CT.C1628, C[1629] || CT.C1629, C[1630] || CT.C1630], T$._LocationL());
    },
    get C1626() {
      return C[1626] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1627] || CT.C1627,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 744,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1633() {
      return C[1633] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 13,
        [S._Location_line]: 759,
        [S._Location_file]: null
      });
    },
    get C1632() {
      return C[1632] = dart.constList([C[1633] || CT.C1633], T$._LocationL());
    },
    get C1631() {
      return C[1631] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1632] || CT.C1632,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 758,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1636() {
      return C[1636] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 743,
        [S._Location_file]: null
      });
    },
    get C1635() {
      return C[1635] = dart.constList([C[1636] || CT.C1636], T$._LocationL());
    },
    get C1634() {
      return C[1634] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1635] || CT.C1635,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 742,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1639() {
      return C[1639] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "container",
        [S._Location_column]: 7,
        [S._Location_line]: 740,
        [S._Location_file]: null
      });
    },
    get C1640() {
      return C[1640] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selected",
        [S._Location_column]: 7,
        [S._Location_line]: 741,
        [S._Location_file]: null
      });
    },
    get C1641() {
      return C[1641] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 742,
        [S._Location_file]: null
      });
    },
    get C1638() {
      return C[1638] = dart.constList([C[1639] || CT.C1639, C[1640] || CT.C1640, C[1641] || CT.C1641], T$._LocationL());
    },
    get C1637() {
      return C[1637] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1638] || CT.C1638,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 739,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1642() {
      return C[1642] = dart.constList([C[1567] || CT.C1567, C[1598] || CT.C1598, C[1615] || CT.C1615], T$.NavigationRailLabelTypeL());
    },
    get C1646() {
      return C[1646] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 41,
        [S._Location_line]: 885,
        [S._Location_file]: null
      });
    },
    get C1645() {
      return C[1645] = dart.constList([C[1646] || CT.C1646], T$._LocationL());
    },
    get C1644() {
      return C[1644] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1645] || CT.C1645,
        [S._Location_name]: null,
        [S._Location_column]: 32,
        [S._Location_line]: 885,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1643() {
      return C[1643] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[1644] || CT.C1644,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: 8,
        [S.SizedBox_width]: null
      });
    },
    get C1647() {
      return C[1647] = dart.const({
        __proto__: navigation_rail_theme.NavigationRailThemeData.prototype,
        [S$.labelType$1]: null,
        [S$.groupAlignment$1]: null,
        [S$.selectedIconTheme$1]: null,
        [S$.unselectedIconTheme$1]: null,
        [S$.selectedLabelTextStyle$1]: null,
        [S$.unselectedLabelTextStyle$1]: null,
        [S$.elevation$13]: null,
        [S$.backgroundColor$9]: null
      });
    },
    get C1650() {
      return C[1650] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 32,
        [S._Location_line]: 210,
        [S._Location_file]: null
      });
    },
    get C1651() {
      return C[1651] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 44,
        [S._Location_line]: 210,
        [S._Location_file]: null
      });
    },
    get C1649() {
      return C[1649] = dart.constList([C[1650] || CT.C1650, C[1651] || CT.C1651], T$._LocationL());
    },
    get C1648() {
      return C[1648] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1649] || CT.C1649,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 210,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail_theme.dart"
      });
    },
    get C1654() {
      return C[1654] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "foregroundPainter",
        [S._Location_column]: 7,
        [S._Location_line]: 230,
        [S._Location_file]: null
      });
    },
    get C1655() {
      return C[1655] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 245,
        [S._Location_file]: null
      });
    },
    get C1653() {
      return C[1653] = dart.constList([C[1654] || CT.C1654, C[1655] || CT.C1655], T$._LocationL());
    },
    get C1652() {
      return C[1652] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1653] || CT.C1653,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 229,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1656() {
      return C[1656] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 15000
      });
    },
    get C1659() {
      return C[1659] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "transform",
        [S._Location_column]: 7,
        [S._Location_line]: 277,
        [S._Location_file]: null
      });
    },
    get C1660() {
      return C[1660] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 278,
        [S._Location_file]: null
      });
    },
    get C1658() {
      return C[1658] = dart.constList([C[1659] || CT.C1659, C[1660] || CT.C1660], T$._LocationL());
    },
    get C1657() {
      return C[1657] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1658] || CT.C1658,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 276,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1663() {
      return C[1663] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 28,
        [S._Location_line]: 379,
        [S._Location_file]: null
      });
    },
    get C1664() {
      return C[1664] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 11,
        [S._Location_line]: 380,
        [S._Location_file]: null
      });
    },
    get C1665() {
      return C[1665] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textAlign",
        [S._Location_column]: 11,
        [S._Location_line]: 381,
        [S._Location_file]: null
      });
    },
    get C1666() {
      return C[1666] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflow",
        [S._Location_column]: 11,
        [S._Location_line]: 382,
        [S._Location_file]: null
      });
    },
    get C1667() {
      return C[1667] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "maxLines",
        [S._Location_column]: 11,
        [S._Location_line]: 383,
        [S._Location_file]: null
      });
    },
    get C1662() {
      return C[1662] = dart.constList([C[1663] || CT.C1663, C[1664] || CT.C1664, C[1665] || CT.C1665, C[1666] || CT.C1666, C[1667] || CT.C1667], T$._LocationL());
    },
    get C1661() {
      return C[1661] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1662] || CT.C1662,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 378,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1670() {
      return C[1670] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 377,
        [S._Location_file]: null
      });
    },
    get C1671() {
      return C[1671] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 378,
        [S._Location_file]: null
      });
    },
    get C1669() {
      return C[1669] = dart.constList([C[1670] || CT.C1670, C[1671] || CT.C1671], T$._LocationL());
    },
    get C1668() {
      return C[1668] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1669] || CT.C1669,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 376,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1674() {
      return C[1674] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "container",
        [S._Location_column]: 7,
        [S._Location_line]: 375,
        [S._Location_file]: null
      });
    },
    get C1675() {
      return C[1675] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 376,
        [S._Location_file]: null
      });
    },
    get C1673() {
      return C[1673] = dart.constList([C[1674] || CT.C1674, C[1675] || CT.C1675], T$._LocationL());
    },
    get C1672() {
      return C[1672] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1673] || CT.C1673,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 374,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1676() {
      return C[1676] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: -0.25,
        [S.OffsetBase__dx]: 0
      });
    },
    get C1679() {
      return C[1679] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 29,
        [S._Location_line]: 402,
        [S._Location_file]: null
      });
    },
    get C1680() {
      return C[1680] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 13,
        [S._Location_line]: 403,
        [S._Location_file]: null
      });
    },
    get C1681() {
      return C[1681] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textAlign",
        [S._Location_column]: 13,
        [S._Location_line]: 404,
        [S._Location_file]: null
      });
    },
    get C1682() {
      return C[1682] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflow",
        [S._Location_column]: 13,
        [S._Location_line]: 405,
        [S._Location_file]: null
      });
    },
    get C1683() {
      return C[1683] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "maxLines",
        [S._Location_column]: 13,
        [S._Location_line]: 406,
        [S._Location_file]: null
      });
    },
    get C1678() {
      return C[1678] = dart.constList([C[1679] || CT.C1679, C[1680] || CT.C1680, C[1681] || CT.C1681, C[1682] || CT.C1682, C[1683] || CT.C1683], T$._LocationL());
    },
    get C1677() {
      return C[1677] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1678] || CT.C1678,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 401,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1686() {
      return C[1686] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "translation",
        [S._Location_column]: 11,
        [S._Location_line]: 397,
        [S._Location_file]: null
      });
    },
    get C1687() {
      return C[1687] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 401,
        [S._Location_file]: null
      });
    },
    get C1685() {
      return C[1685] = dart.constList([C[1686] || CT.C1686, C[1687] || CT.C1687], T$._LocationL());
    },
    get C1684() {
      return C[1684] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1685] || CT.C1685,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 396,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1690() {
      return C[1690] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 395,
        [S._Location_file]: null
      });
    },
    get C1691() {
      return C[1691] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 396,
        [S._Location_file]: null
      });
    },
    get C1689() {
      return C[1689] = dart.constList([C[1690] || CT.C1690, C[1691] || CT.C1691], T$._LocationL());
    },
    get C1688() {
      return C[1688] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1689] || CT.C1689,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 394,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1694() {
      return C[1694] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "liveRegion",
        [S._Location_column]: 7,
        [S._Location_line]: 393,
        [S._Location_file]: null
      });
    },
    get C1695() {
      return C[1695] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 394,
        [S._Location_file]: null
      });
    },
    get C1693() {
      return C[1693] = dart.constList([C[146] || CT.C146, C[1694] || CT.C1694, C[1695] || CT.C1695], T$._LocationL());
    },
    get C1692() {
      return C[1692] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1693] || CT.C1693,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 391,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1698() {
      return C[1698] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 13,
        [S._Location_line]: 445,
        [S._Location_file]: null
      });
    },
    get C1699() {
      return C[1699] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 446,
        [S._Location_file]: null
      });
    },
    get C1697() {
      return C[1697] = dart.constList([C[1698] || CT.C1698, C[1699] || CT.C1699], T$._LocationL());
    },
    get C1696() {
      return C[1696] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1697] || CT.C1697,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 444,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1702() {
      return C[1702] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 443,
        [S._Location_file]: null
      });
    },
    get C1701() {
      return C[1701] = dart.constList([C[1702] || CT.C1702], T$._LocationL());
    },
    get C1700() {
      return C[1700] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1701] || CT.C1701,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 442,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1705() {
      return C[1705] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 13,
        [S._Location_line]: 458,
        [S._Location_file]: null
      });
    },
    get C1706() {
      return C[1706] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 459,
        [S._Location_file]: null
      });
    },
    get C1704() {
      return C[1704] = dart.constList([C[1705] || CT.C1705, C[1706] || CT.C1706], T$._LocationL());
    },
    get C1703() {
      return C[1703] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1704] || CT.C1704,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 457,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1709() {
      return C[1709] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 455,
        [S._Location_file]: null
      });
    },
    get C1708() {
      return C[1708] = dart.constList([C[1709] || CT.C1709], T$._LocationL());
    },
    get C1707() {
      return C[1707] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1708] || CT.C1708,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 454,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1711() {
      return C[1711] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[55] || CT.C55,
        [S._Location_name]: null,
        [S._Location_column]: 31,
        [S._Location_line]: 313,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1710() {
      return C[1710] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[1711] || CT.C1711,
        [S.Widget_key]: null,
        [S.SingleChildRenderObjectWidget_child]: null,
        [S.SizedBox_height]: null,
        [S.SizedBox_width]: null
      });
    },
    get C1712() {
      return C[1712] = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [S$._name$15]: "FloatingLabelBehavior.never",
        index: 0
      });
    },
    get C1713() {
      return C[1713] = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [S$._name$15]: "FloatingLabelBehavior.auto",
        index: 1
      });
    },
    get C1714() {
      return C[1714] = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [S$._name$15]: "FloatingLabelBehavior.always",
        index: 2
      });
    },
    get C1715() {
      return C[1715] = dart.constList([C[1712] || CT.C1712, C[1713] || CT.C1713, C[1714] || CT.C1714], T$.FloatingLabelBehaviorL());
    },
    get C1716() {
      return C[1716] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.icon",
        index: 0
      });
    },
    get C1717() {
      return C[1717] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.input",
        index: 1
      });
    },
    get C1718() {
      return C[1718] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.label",
        index: 2
      });
    },
    get C1719() {
      return C[1719] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.hint",
        index: 3
      });
    },
    get C1720() {
      return C[1720] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.prefix",
        index: 4
      });
    },
    get C1721() {
      return C[1721] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.suffix",
        index: 5
      });
    },
    get C1722() {
      return C[1722] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.prefixIcon",
        index: 6
      });
    },
    get C1723() {
      return C[1723] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.suffixIcon",
        index: 7
      });
    },
    get C1724() {
      return C[1724] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.helperError",
        index: 8
      });
    },
    get C1725() {
      return C[1725] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.counter",
        index: 9
      });
    },
    get C1726() {
      return C[1726] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S$._name$15]: "_DecorationSlot.container",
        index: 10
      });
    },
    get C1727() {
      return C[1727] = dart.constList([C[1716] || CT.C1716, C[1717] || CT.C1717, C[1718] || CT.C1718, C[1719] || CT.C1719, C[1720] || CT.C1720, C[1721] || CT.C1721, C[1722] || CT.C1722, C[1723] || CT.C1723, C[1724] || CT.C1724, C[1725] || CT.C1725, C[1726] || CT.C1726], T$._DecorationSlotL());
    },
    get C1730() {
      return C[1730] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 57,
        [S._Location_line]: 1752,
        [S._Location_file]: null
      });
    },
    get C1731() {
      return C[1731] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 60,
        [S._Location_line]: 1752,
        [S._Location_file]: null
      });
    },
    get C1729() {
      return C[1729] = dart.constList([C[1730] || CT.C1730, C[1731] || CT.C1731], T$._LocationL());
    },
    get C1728() {
      return C[1728] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1729] || CT.C1729,
        [S._Location_name]: null,
        [S._Location_column]: 48,
        [S._Location_line]: 1752,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1734() {
      return C[1734] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 9,
        [S._Location_line]: 1749,
        [S._Location_file]: null
      });
    },
    get C1735() {
      return C[1735] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "curve",
        [S._Location_column]: 9,
        [S._Location_line]: 1750,
        [S._Location_file]: null
      });
    },
    get C1736() {
      return C[1736] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 1751,
        [S._Location_file]: null
      });
    },
    get C1737() {
      return C[1737] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1752,
        [S._Location_file]: null
      });
    },
    get C1733() {
      return C[1733] = dart.constList([C[1734] || CT.C1734, C[1735] || CT.C1735, C[1736] || CT.C1736, C[1737] || CT.C1737], T$._LocationL());
    },
    get C1732() {
      return C[1732] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1733] || CT.C1733,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 1748,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1738() {
      return C[1738] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 452984831
      });
    },
    get C1739() {
      return C[1739] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 234881023
      });
    },
    get C1740() {
      return C[1740] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 167772160
      });
    },
    get C1741() {
      return C[1741] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 83886080
      });
    },
    get C1743() {
      return C[1743] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [S.BorderSide_style]: C[1047] || CT.C1047,
        [S.BorderSide_width]: 1,
        [S.BorderSide_color]: C[159] || CT.C159
      });
    },
    get C1744() {
      return C[1744] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[88] || CT.C88,
        [S.BorderRadius_bottomLeft]: C[88] || CT.C88,
        [S.BorderRadius_topRight]: C[161] || CT.C161,
        [S.BorderRadius_topLeft]: C[161] || CT.C161
      });
    },
    get C1742() {
      return C[1742] = dart.const({
        __proto__: input_border.UnderlineInputBorder.prototype,
        [S$.InputBorder_borderSide]: C[1743] || CT.C1743,
        [S$.UnderlineInputBorder_borderRadius]: C[1744] || CT.C1744
      });
    },
    get C1747() {
      return C[1747] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 29,
        [S._Location_line]: 2165,
        [S._Location_file]: null
      });
    },
    get C1748() {
      return C[1748] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 9,
        [S._Location_line]: 2166,
        [S._Location_file]: null
      });
    },
    get C1749() {
      return C[1749] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textDirection",
        [S._Location_column]: 9,
        [S._Location_line]: 2167,
        [S._Location_file]: null
      });
    },
    get C1750() {
      return C[1750] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflow",
        [S._Location_column]: 9,
        [S._Location_line]: 2168,
        [S._Location_file]: null
      });
    },
    get C1751() {
      return C[1751] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textAlign",
        [S._Location_column]: 9,
        [S._Location_line]: 2169,
        [S._Location_file]: null
      });
    },
    get C1752() {
      return C[1752] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "maxLines",
        [S._Location_column]: 9,
        [S._Location_line]: 2170,
        [S._Location_file]: null
      });
    },
    get C1746() {
      return C[1746] = dart.constList([C[1747] || CT.C1747, C[1748] || CT.C1748, C[1749] || CT.C1749, C[1750] || CT.C1750, C[1751] || CT.C1751, C[1752] || CT.C1752], T$._LocationL());
    },
    get C1745() {
      return C[1745] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1746] || CT.C1746,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 2164,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1755() {
      return C[1755] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 7,
        [S._Location_line]: 2160,
        [S._Location_file]: null
      });
    },
    get C1756() {
      return C[1756] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 7,
        [S._Location_line]: 2161,
        [S._Location_file]: null
      });
    },
    get C1757() {
      return C[1757] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "curve",
        [S._Location_column]: 7,
        [S._Location_line]: 2162,
        [S._Location_file]: null
      });
    },
    get C1758() {
      return C[1758] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alwaysIncludeSemantics",
        [S._Location_column]: 7,
        [S._Location_line]: 2163,
        [S._Location_file]: null
      });
    },
    get C1759() {
      return C[1759] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 2164,
        [S._Location_file]: null
      });
    },
    get C1754() {
      return C[1754] = dart.constList([C[1755] || CT.C1755, C[1756] || CT.C1756, C[1757] || CT.C1757, C[1758] || CT.C1758, C[1759] || CT.C1759], T$._LocationL());
    },
    get C1753() {
      return C[1753] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1754] || CT.C1754,
        [S._Location_name]: null,
        [S._Location_column]: 64,
        [S._Location_line]: 2159,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1762() {
      return C[1762] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "border",
        [S._Location_column]: 7,
        [S._Location_line]: 2185,
        [S._Location_file]: null
      });
    },
    get C1763() {
      return C[1763] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "gap",
        [S._Location_column]: 7,
        [S._Location_line]: 2186,
        [S._Location_file]: null
      });
    },
    get C1764() {
      return C[1764] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "gapAnimation",
        [S._Location_column]: 7,
        [S._Location_line]: 2187,
        [S._Location_file]: null
      });
    },
    get C1765() {
      return C[1765] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "fillColor",
        [S._Location_column]: 7,
        [S._Location_line]: 2188,
        [S._Location_file]: null
      });
    },
    get C1766() {
      return C[1766] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 7,
        [S._Location_line]: 2189,
        [S._Location_file]: null
      });
    },
    get C1767() {
      return C[1767] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "isHovering",
        [S._Location_column]: 7,
        [S._Location_line]: 2190,
        [S._Location_file]: null
      });
    },
    get C1761() {
      return C[1761] = dart.constList([C[1762] || CT.C1762, C[1763] || CT.C1763, C[1764] || CT.C1764, C[1765] || CT.C1765, C[1766] || CT.C1766, C[1767] || CT.C1767], T$._LocationL());
    },
    get C1760() {
      return C[1760] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1761] || CT.C1761,
        [S._Location_name]: null,
        [S._Location_column]: 30,
        [S._Location_line]: 2184,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1770() {
      return C[1770] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 34,
        [S._Location_line]: 2212,
        [S._Location_file]: null
      });
    },
    get C1771() {
      return C[1771] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflow",
        [S._Location_column]: 13,
        [S._Location_line]: 2213,
        [S._Location_file]: null
      });
    },
    get C1772() {
      return C[1772] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textAlign",
        [S._Location_column]: 13,
        [S._Location_line]: 2214,
        [S._Location_file]: null
      });
    },
    get C1769() {
      return C[1769] = dart.constList([C[1770] || CT.C1770, C[1771] || CT.C1771, C[1772] || CT.C1772], T$._LocationL());
    },
    get C1768() {
      return C[1768] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1769] || CT.C1769,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 2211,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1775() {
      return C[1775] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 11,
        [S._Location_line]: 2206,
        [S._Location_file]: null
      });
    },
    get C1776() {
      return C[1776] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "curve",
        [S._Location_column]: 11,
        [S._Location_line]: 2207,
        [S._Location_file]: null
      });
    },
    get C1777() {
      return C[1777] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 11,
        [S._Location_line]: 2208,
        [S._Location_file]: null
      });
    },
    get C1778() {
      return C[1778] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 2211,
        [S._Location_file]: null
      });
    },
    get C1774() {
      return C[1774] = dart.constList([C[1775] || CT.C1775, C[1776] || CT.C1776, C[1777] || CT.C1777, C[1778] || CT.C1778], T$._LocationL());
    },
    get C1773() {
      return C[1773] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1774] || CT.C1774,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 2205,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1781() {
      return C[1781] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 9,
        [S._Location_line]: 2202,
        [S._Location_file]: null
      });
    },
    get C1782() {
      return C[1782] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "curve",
        [S._Location_column]: 9,
        [S._Location_line]: 2203,
        [S._Location_file]: null
      });
    },
    get C1783() {
      return C[1783] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 2204,
        [S._Location_file]: null
      });
    },
    get C1784() {
      return C[1784] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 2205,
        [S._Location_file]: null
      });
    },
    get C1780() {
      return C[1780] = dart.constList([C[1781] || CT.C1781, C[1782] || CT.C1782, C[1783] || CT.C1783, C[1784] || CT.C1784], T$._LocationL());
    },
    get C1779() {
      return C[1779] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1780] || CT.C1780,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 2201,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1787() {
      return C[1787] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 2200,
        [S._Location_file]: null
      });
    },
    get C1788() {
      return C[1788] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 2201,
        [S._Location_file]: null
      });
    },
    get C1786() {
      return C[1786] = dart.constList([C[1787] || CT.C1787, C[1788] || CT.C1788], T$._LocationL());
    },
    get C1785() {
      return C[1785] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1786] || CT.C1786,
        [S._Location_name]: null,
        [S._Location_column]: 66,
        [S._Location_line]: 2199,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1791() {
      return C[1791] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "labelIsFloating",
        [S._Location_column]: 9,
        [S._Location_line]: 2222,
        [S._Location_file]: null
      });
    },
    get C1792() {
      return C[1792] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "text",
        [S._Location_column]: 9,
        [S._Location_line]: 2223,
        [S._Location_file]: null
      });
    },
    get C1793() {
      return C[1793] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 9,
        [S._Location_line]: 2224,
        [S._Location_file]: null
      });
    },
    get C1794() {
      return C[1794] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 2225,
        [S._Location_file]: null
      });
    },
    get C1790() {
      return C[1790] = dart.constList([C[1791] || CT.C1791, C[1792] || CT.C1792, C[1793] || CT.C1793, C[1794] || CT.C1794], T$._LocationL());
    },
    get C1789() {
      return C[1789] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1790] || CT.C1790,
        [S._Location_name]: null,
        [S._Location_column]: 7,
        [S._Location_line]: 2221,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1797() {
      return C[1797] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "labelIsFloating",
        [S._Location_column]: 9,
        [S._Location_line]: 2230,
        [S._Location_file]: null
      });
    },
    get C1798() {
      return C[1798] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "text",
        [S._Location_column]: 9,
        [S._Location_line]: 2231,
        [S._Location_file]: null
      });
    },
    get C1799() {
      return C[1799] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 9,
        [S._Location_line]: 2232,
        [S._Location_file]: null
      });
    },
    get C1800() {
      return C[1800] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 2233,
        [S._Location_file]: null
      });
    },
    get C1796() {
      return C[1796] = dart.constList([C[1797] || CT.C1797, C[1798] || CT.C1798, C[1799] || CT.C1799, C[1800] || CT.C1800], T$._LocationL());
    },
    get C1795() {
      return C[1795] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1796] || CT.C1796,
        [S._Location_name]: null,
        [S._Location_column]: 7,
        [S._Location_line]: 2229,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1801() {
      return C[1801] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 0,
        [S$.EdgeInsetsDirectional_end]: 16,
        [S$.EdgeInsetsDirectional_top]: 0,
        [S$.EdgeInsetsDirectional_start]: 0
      });
    },
    get C1804() {
      return C[1804] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 2243,
        [S._Location_file]: null
      });
    },
    get C1805() {
      return C[1805] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 2244,
        [S._Location_file]: null
      });
    },
    get C1803() {
      return C[1803] = dart.constList([C[1804] || CT.C1804, C[1805] || CT.C1805], T$._LocationL());
    },
    get C1802() {
      return C[1802] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1803] || CT.C1803,
        [S._Location_name]: null,
        [S._Location_column]: 7,
        [S._Location_line]: 2242,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1808() {
      return C[1808] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 11,
        [S._Location_line]: 2258,
        [S._Location_file]: null
      });
    },
    get C1809() {
      return C[1809] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 2264,
        [S._Location_file]: null
      });
    },
    get C1807() {
      return C[1807] = dart.constList([C[1808] || CT.C1808, C[1809] || CT.C1809], T$._LocationL());
    },
    get C1806() {
      return C[1806] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1807] || CT.C1807,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 2257,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1812() {
      return C[1812] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "widthFactor",
        [S._Location_column]: 9,
        [S._Location_line]: 2255,
        [S._Location_file]: null
      });
    },
    get C1813() {
      return C[1813] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 9,
        [S._Location_line]: 2256,
        [S._Location_file]: null
      });
    },
    get C1814() {
      return C[1814] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 2257,
        [S._Location_file]: null
      });
    },
    get C1811() {
      return C[1811] = dart.constList([C[1812] || CT.C1812, C[1813] || CT.C1813, C[1814] || CT.C1814], T$._LocationL());
    },
    get C1810() {
      return C[1810] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1811] || CT.C1811,
        [S._Location_name]: null,
        [S._Location_column]: 7,
        [S._Location_line]: 2254,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1817() {
      return C[1817] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 11,
        [S._Location_line]: 2279,
        [S._Location_file]: null
      });
    },
    get C1818() {
      return C[1818] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 2285,
        [S._Location_file]: null
      });
    },
    get C1816() {
      return C[1816] = dart.constList([C[1817] || CT.C1817, C[1818] || CT.C1818], T$._LocationL());
    },
    get C1815() {
      return C[1815] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1816] || CT.C1816,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 2278,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1821() {
      return C[1821] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "widthFactor",
        [S._Location_column]: 9,
        [S._Location_line]: 2276,
        [S._Location_file]: null
      });
    },
    get C1822() {
      return C[1822] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 9,
        [S._Location_line]: 2277,
        [S._Location_file]: null
      });
    },
    get C1823() {
      return C[1823] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 2278,
        [S._Location_file]: null
      });
    },
    get C1820() {
      return C[1820] = dart.constList([C[1821] || CT.C1821, C[1822] || CT.C1822, C[1823] || CT.C1823], T$._LocationL());
    },
    get C1819() {
      return C[1819] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1820] || CT.C1820,
        [S._Location_name]: null,
        [S._Location_column]: 7,
        [S._Location_line]: 2275,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1826() {
      return C[1826] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textAlign",
        [S._Location_column]: 7,
        [S._Location_line]: 2296,
        [S._Location_file]: null
      });
    },
    get C1827() {
      return C[1827] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "helperText",
        [S._Location_column]: 7,
        [S._Location_line]: 2297,
        [S._Location_file]: null
      });
    },
    get C1828() {
      return C[1828] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "helperStyle",
        [S._Location_column]: 7,
        [S._Location_line]: 2298,
        [S._Location_file]: null
      });
    },
    get C1829() {
      return C[1829] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "helperMaxLines",
        [S._Location_column]: 7,
        [S._Location_line]: 2299,
        [S._Location_file]: null
      });
    },
    get C1830() {
      return C[1830] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "errorText",
        [S._Location_column]: 7,
        [S._Location_line]: 2300,
        [S._Location_file]: null
      });
    },
    get C1831() {
      return C[1831] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "errorStyle",
        [S._Location_column]: 7,
        [S._Location_line]: 2301,
        [S._Location_file]: null
      });
    },
    get C1832() {
      return C[1832] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "errorMaxLines",
        [S._Location_column]: 7,
        [S._Location_line]: 2302,
        [S._Location_file]: null
      });
    },
    get C1825() {
      return C[1825] = dart.constList([C[1826] || CT.C1826, C[1827] || CT.C1827, C[1828] || CT.C1828, C[1829] || CT.C1829, C[1830] || CT.C1830, C[1831] || CT.C1831, C[1832] || CT.C1832], T$._LocationL());
    },
    get C1824() {
      return C[1824] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1825] || CT.C1825,
        [S._Location_name]: null,
        [S._Location_column]: 32,
        [S._Location_line]: 2295,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1835() {
      return C[1835] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 34,
        [S._Location_line]: 2313,
        [S._Location_file]: null
      });
    },
    get C1836() {
      return C[1836] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 11,
        [S._Location_line]: 2314,
        [S._Location_file]: null
      });
    },
    get C1837() {
      return C[1837] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflow",
        [S._Location_column]: 11,
        [S._Location_line]: 2315,
        [S._Location_file]: null
      });
    },
    get C1838() {
      return C[1838] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "semanticsLabel",
        [S._Location_column]: 11,
        [S._Location_line]: 2316,
        [S._Location_file]: null
      });
    },
    get C1834() {
      return C[1834] = dart.constList([C[1835] || CT.C1835, C[1836] || CT.C1836, C[1837] || CT.C1837, C[1838] || CT.C1838], T$._LocationL());
    },
    get C1833() {
      return C[1833] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1834] || CT.C1834,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 2312,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1841() {
      return C[1841] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "container",
        [S._Location_column]: 9,
        [S._Location_line]: 2310,
        [S._Location_file]: null
      });
    },
    get C1842() {
      return C[1842] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "liveRegion",
        [S._Location_column]: 9,
        [S._Location_line]: 2311,
        [S._Location_file]: null
      });
    },
    get C1843() {
      return C[1843] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 2312,
        [S._Location_file]: null
      });
    },
    get C1840() {
      return C[1840] = dart.constList([C[1841] || CT.C1841, C[1842] || CT.C1842, C[1843] || CT.C1843], T$._LocationL());
    },
    get C1839() {
      return C[1839] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1840] || CT.C1840,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 2309,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1844() {
      return C[1844] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 8,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 8,
        [S.EdgeInsets_left]: 12
      });
    },
    get C1845() {
      return C[1845] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 12,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 12,
        [S.EdgeInsets_left]: 12
      });
    },
    get C1846() {
      return C[1846] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 8,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 8,
        [S.EdgeInsets_left]: 0
      });
    },
    get C1847() {
      return C[1847] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 12,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 12,
        [S.EdgeInsets_left]: 0
      });
    },
    get C1848() {
      return C[1848] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 12,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 20,
        [S.EdgeInsets_left]: 12
      });
    },
    get C1849() {
      return C[1849] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 16,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 24,
        [S.EdgeInsets_left]: 12
      });
    },
    get C1852() {
      return C[1852] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "decoration",
        [S._Location_column]: 7,
        [S._Location_line]: 2354,
        [S._Location_file]: null
      });
    },
    get C1853() {
      return C[1853] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textDirection",
        [S._Location_column]: 7,
        [S._Location_line]: 2377,
        [S._Location_file]: null
      });
    },
    get C1854() {
      return C[1854] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textBaseline",
        [S._Location_column]: 7,
        [S._Location_line]: 2378,
        [S._Location_file]: null
      });
    },
    get C1855() {
      return C[1855] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textAlignVertical",
        [S._Location_column]: 7,
        [S._Location_line]: 2379,
        [S._Location_file]: null
      });
    },
    get C1856() {
      return C[1856] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "isFocused",
        [S._Location_column]: 7,
        [S._Location_line]: 2380,
        [S._Location_file]: null
      });
    },
    get C1857() {
      return C[1857] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "expands",
        [S._Location_column]: 7,
        [S._Location_line]: 2381,
        [S._Location_file]: null
      });
    },
    get C1851() {
      return C[1851] = dart.constList([C[1852] || CT.C1852, C[1853] || CT.C1853, C[1854] || CT.C1854, C[1855] || CT.C1855, C[1856] || CT.C1856, C[1857] || CT.C1857], T$._LocationL());
    },
    get C1850() {
      return C[1850] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1851] || CT.C1851,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 2353,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1858() {
      return C[1858] = dart.const({
        __proto__: input_border._NoInputBorder.prototype,
        [S$.InputBorder_borderSide]: C[157] || CT.C157
      });
    },
    get C1859() {
      return C[1859] = dart.const({
        __proto__: input_decorator.InputDecorationTheme.prototype,
        [S$0.alignLabelWithHint$2]: false,
        [S$0.border$3]: null,
        [S$0.enabledBorder$1]: null,
        [S$0.disabledBorder$1]: null,
        [S$0.focusedErrorBorder$1]: null,
        [S$0.focusedBorder$1]: null,
        [S$0.errorBorder$1]: null,
        [S$0.hoverColor$9]: null,
        [S$0.focusColor$8]: null,
        [S$0.fillColor$5]: null,
        [S$0.filled$1]: false,
        [S$0.counterStyle$1]: null,
        [S$0.suffixStyle$1]: null,
        [S$0.prefixStyle$1]: null,
        [S$0.isCollapsed$2]: false,
        [S$0.contentPadding$6]: null,
        [S$0.isDense$3]: false,
        [S$0.floatingLabelBehavior$1]: C[1713] || CT.C1713,
        [S$0.hasFloatingPlaceholder$1]: true,
        [S$0.errorMaxLines$2]: null,
        [S$0.errorStyle$2]: null,
        [S$0.hintStyle$1]: null,
        [S$0.helperMaxLines$2]: null,
        [S$0.helperStyle$2]: null,
        [S$0.labelStyle$4]: null
      });
    },
    get C1860() {
      return C[1860] = dart.const({
        __proto__: ink_splash._InkSplashFactory.prototype
      });
    },
    get C1861() {
      return C[1861] = dart.fn(text_style.TextStyle.lerp, T$.TextStyleNAndTextStyleNAnddoubleToTextStyleN());
    },
    get C1862() {
      return C[1862] = dart.fn(edge_insets.EdgeInsetsGeometry.lerp, T$.EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN());
    },
    get C1863() {
      return C[1863] = dart.fn(ui.Size.lerp, T$.SizeNAndSizeNAnddoubleToSizeN());
    },
    get C1864() {
      return C[1864] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1453] || CT.C1453,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 119,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/elevated_button_theme.dart"
      });
    },
    get C1867() {
      return C[1867] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 25,
        [S._Location_line]: 169,
        [S._Location_file]: null
      });
    },
    get C1868() {
      return C[1868] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 37,
        [S._Location_line]: 169,
        [S._Location_file]: null
      });
    },
    get C1866() {
      return C[1866] = dart.constList([C[1867] || CT.C1867, C[1868] || CT.C1868], T$._LocationL());
    },
    get C1865() {
      return C[1865] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1866] || CT.C1866,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 169,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/divider_theme.dart"
      });
    },
    get C1871() {
      return C[1871] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 22,
        [S._Location_line]: 94,
        [S._Location_file]: null
      });
    },
    get C1872() {
      return C[1872] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 34,
        [S._Location_line]: 94,
        [S._Location_file]: null
      });
    },
    get C1870() {
      return C[1870] = dart.constList([C[1871] || CT.C1871, C[1872] || CT.C1872], T$._LocationL());
    },
    get C1869() {
      return C[1869] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1870] || CT.C1870,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 94,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/chip_theme.dart"
      });
    },
    get C1875() {
      return C[1875] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 25,
        [S._Location_line]: 247,
        [S._Location_file]: null
      });
    },
    get C1876() {
      return C[1876] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 37,
        [S._Location_line]: 247,
        [S._Location_file]: null
      });
    },
    get C1874() {
      return C[1874] = dart.constList([C[1875] || CT.C1875, C[1876] || CT.C1876], T$._LocationL());
    },
    get C1873() {
      return C[1873] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1874] || CT.C1874,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 247,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip_theme.dart"
      });
    },
    get C1879() {
      return C[1879] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "message",
        [S._Location_column]: 9,
        [S._Location_line]: 389,
        [S._Location_file]: null
      });
    },
    get C1880() {
      return C[1880] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 9,
        [S._Location_line]: 390,
        [S._Location_file]: null
      });
    },
    get C1881() {
      return C[1881] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 391,
        [S._Location_file]: null
      });
    },
    get C1882() {
      return C[1882] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "margin",
        [S._Location_column]: 9,
        [S._Location_line]: 392,
        [S._Location_file]: null
      });
    },
    get C1883() {
      return C[1883] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "decoration",
        [S._Location_column]: 9,
        [S._Location_line]: 393,
        [S._Location_file]: null
      });
    },
    get C1884() {
      return C[1884] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 394,
        [S._Location_file]: null
      });
    },
    get C1885() {
      return C[1885] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 9,
        [S._Location_line]: 395,
        [S._Location_file]: null
      });
    },
    get C1886() {
      return C[1886] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "target",
        [S._Location_column]: 9,
        [S._Location_line]: 399,
        [S._Location_file]: null
      });
    },
    get C1887() {
      return C[1887] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "verticalOffset",
        [S._Location_column]: 9,
        [S._Location_line]: 400,
        [S._Location_file]: null
      });
    },
    get C1888() {
      return C[1888] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "preferBelow",
        [S._Location_column]: 9,
        [S._Location_line]: 401,
        [S._Location_file]: null
      });
    },
    get C1878() {
      return C[1878] = dart.constList([C[1879] || CT.C1879, C[1880] || CT.C1880, C[1881] || CT.C1881, C[1882] || CT.C1882, C[1883] || CT.C1883, C[1884] || CT.C1884, C[1885] || CT.C1885, C[1886] || CT.C1886, C[1887] || CT.C1887, C[1888] || CT.C1888], T$._LocationL());
    },
    get C1877() {
      return C[1877] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1878] || CT.C1878,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 388,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1891() {
      return C[1891] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textDirection",
        [S._Location_column]: 7,
        [S._Location_line]: 387,
        [S._Location_file]: null
      });
    },
    get C1892() {
      return C[1892] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 388,
        [S._Location_file]: null
      });
    },
    get C1890() {
      return C[1890] = dart.constList([C[1891] || CT.C1891, C[1892] || CT.C1892], T$._LocationL());
    },
    get C1889() {
      return C[1889] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1890] || CT.C1890,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 386,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1895() {
      return C[1895] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 9,
        [S._Location_line]: 498,
        [S._Location_file]: null
      });
    },
    get C1896() {
      return C[1896] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 499,
        [S._Location_file]: null
      });
    },
    get C1894() {
      return C[1894] = dart.constList([C[1895] || CT.C1895, C[1896] || CT.C1896], T$._LocationL());
    },
    get C1893() {
      return C[1893] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1894] || CT.C1894,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 497,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1899() {
      return C[1899] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "behavior",
        [S._Location_column]: 7,
        [S._Location_line]: 494,
        [S._Location_file]: null
      });
    },
    get C1900() {
      return C[1900] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 7,
        [S._Location_line]: 495,
        [S._Location_file]: null
      });
    },
    get C1901() {
      return C[1901] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "excludeFromSemantics",
        [S._Location_column]: 7,
        [S._Location_line]: 496,
        [S._Location_file]: null
      });
    },
    get C1902() {
      return C[1902] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 497,
        [S._Location_file]: null
      });
    },
    get C1898() {
      return C[1898] = dart.constList([C[1899] || CT.C1899, C[1900] || CT.C1900, C[1901] || CT.C1901, C[1902] || CT.C1902], T$._LocationL());
    },
    get C1897() {
      return C[1897] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1898] || CT.C1898,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 493,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1905() {
      return C[1905] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onEnter",
        [S._Location_column]: 9,
        [S._Location_line]: 506,
        [S._Location_file]: null
      });
    },
    get C1906() {
      return C[1906] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onExit",
        [S._Location_column]: 9,
        [S._Location_line]: 507,
        [S._Location_file]: null
      });
    },
    get C1907() {
      return C[1907] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 508,
        [S._Location_file]: null
      });
    },
    get C1904() {
      return C[1904] = dart.constList([C[1905] || CT.C1905, C[1906] || CT.C1906, C[1907] || CT.C1907], T$._LocationL());
    },
    get C1903() {
      return C[1903] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1904] || CT.C1904,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 505,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1908() {
      return C[1908] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 1500000
      });
    },
    get C1909() {
      return C[1909] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 0
      });
    },
    get C1912() {
      return C[1912] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 23,
        [S._Location_line]: 616,
        [S._Location_file]: null
      });
    },
    get C1913() {
      return C[1913] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 23,
        [S._Location_line]: 617,
        [S._Location_file]: null
      });
    },
    get C1911() {
      return C[1911] = dart.constList([C[1912] || CT.C1912, C[1913] || CT.C1913], T$._LocationL());
    },
    get C1910() {
      return C[1910] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1911] || CT.C1911,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 615,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1916() {
      return C[1916] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "widthFactor",
        [S._Location_column]: 21,
        [S._Location_line]: 613,
        [S._Location_file]: null
      });
    },
    get C1917() {
      return C[1917] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 21,
        [S._Location_line]: 614,
        [S._Location_file]: null
      });
    },
    get C1918() {
      return C[1918] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 615,
        [S._Location_file]: null
      });
    },
    get C1915() {
      return C[1915] = dart.constList([C[1916] || CT.C1916, C[1917] || CT.C1917, C[1918] || CT.C1918], T$._LocationL());
    },
    get C1914() {
      return C[1914] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1915] || CT.C1915,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 612,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1921() {
      return C[1921] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "decoration",
        [S._Location_column]: 19,
        [S._Location_line]: 609,
        [S._Location_file]: null
      });
    },
    get C1922() {
      return C[1922] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 19,
        [S._Location_line]: 610,
        [S._Location_file]: null
      });
    },
    get C1923() {
      return C[1923] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "margin",
        [S._Location_column]: 19,
        [S._Location_line]: 611,
        [S._Location_file]: null
      });
    },
    get C1924() {
      return C[1924] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 612,
        [S._Location_file]: null
      });
    },
    get C1920() {
      return C[1920] = dart.constList([C[1921] || CT.C1921, C[1922] || CT.C1922, C[1923] || CT.C1923, C[1924] || CT.C1924], T$._LocationL());
    },
    get C1919() {
      return C[1919] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1920] || CT.C1920,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 608,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1927() {
      return C[1927] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 17,
        [S._Location_line]: 607,
        [S._Location_file]: null
      });
    },
    get C1928() {
      return C[1928] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 608,
        [S._Location_file]: null
      });
    },
    get C1926() {
      return C[1926] = dart.constList([C[1927] || CT.C1927, C[1928] || CT.C1928], T$._LocationL());
    },
    get C1925() {
      return C[1925] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1926] || CT.C1926,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 606,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1931() {
      return C[1931] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 15,
        [S._Location_line]: 605,
        [S._Location_file]: null
      });
    },
    get C1932() {
      return C[1932] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 606,
        [S._Location_file]: null
      });
    },
    get C1930() {
      return C[1930] = dart.constList([C[1931] || CT.C1931, C[1932] || CT.C1932], T$._LocationL());
    },
    get C1929() {
      return C[1929] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1930] || CT.C1930,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 604,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1935() {
      return C[1935] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 13,
        [S._Location_line]: 603,
        [S._Location_file]: null
      });
    },
    get C1936() {
      return C[1936] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 604,
        [S._Location_file]: null
      });
    },
    get C1934() {
      return C[1934] = dart.constList([C[1935] || CT.C1935, C[1936] || CT.C1936], T$._LocationL());
    },
    get C1933() {
      return C[1933] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1934] || CT.C1934,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 602,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1939() {
      return C[1939] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "delegate",
        [S._Location_column]: 11,
        [S._Location_line]: 597,
        [S._Location_file]: null
      });
    },
    get C1940() {
      return C[1940] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 602,
        [S._Location_file]: null
      });
    },
    get C1938() {
      return C[1938] = dart.constList([C[1939] || CT.C1939, C[1940] || CT.C1940], T$._LocationL());
    },
    get C1937() {
      return C[1937] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1938] || CT.C1938,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 596,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1943() {
      return C[1943] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 596,
        [S._Location_file]: null
      });
    },
    get C1942() {
      return C[1942] = dart.constList([C[1943] || CT.C1943], T$._LocationL());
    },
    get C1941() {
      return C[1941] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1942] || CT.C1942,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 595,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1946() {
      return C[1946] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 595,
        [S._Location_file]: null
      });
    },
    get C1945() {
      return C[1945] = dart.constList([C[1946] || CT.C1946], T$._LocationL());
    },
    get C1944() {
      return C[1944] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1945] || CT.C1945,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 594,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C1947() {
      return C[1947] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [S$0._name$16]: "BoxShape.rectangle",
        index: 0
      });
    },
    get C1948() {
      return C[1948] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [S$0._name$16]: "BoxShape.circle",
        index: 1
      });
    },
    get C1949() {
      return C[1949] = dart.const({
        __proto__: semantics_event.TapSemanticEvent.prototype,
        [S$0.SemanticsEvent_type]: "tap"
      });
    },
    get C1950() {
      return C[1950] = dart.const({
        __proto__: semantics_event.LongPressSemanticsEvent.prototype,
        [S$0.SemanticsEvent_type]: "longPress"
      });
    },
    get C1953() {
      return C[1953] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 580,
        [S._Location_file]: null
      });
    },
    get C1954() {
      return C[1954] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 7,
        [S._Location_line]: 581,
        [S._Location_file]: null
      });
    },
    get C1955() {
      return C[1955] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTapDown",
        [S._Location_column]: 7,
        [S._Location_line]: 582,
        [S._Location_file]: null
      });
    },
    get C1956() {
      return C[1956] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTapCancel",
        [S._Location_column]: 7,
        [S._Location_line]: 583,
        [S._Location_file]: null
      });
    },
    get C1957() {
      return C[1957] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDoubleTap",
        [S._Location_column]: 7,
        [S._Location_line]: 584,
        [S._Location_file]: null
      });
    },
    get C1958() {
      return C[1958] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 7,
        [S._Location_line]: 585,
        [S._Location_file]: null
      });
    },
    get C1959() {
      return C[1959] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHighlightChanged",
        [S._Location_column]: 7,
        [S._Location_line]: 586,
        [S._Location_file]: null
      });
    },
    get C1960() {
      return C[1960] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onHover",
        [S._Location_column]: 7,
        [S._Location_line]: 587,
        [S._Location_file]: null
      });
    },
    get C1961() {
      return C[1961] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 7,
        [S._Location_line]: 588,
        [S._Location_file]: null
      });
    },
    get C1962() {
      return C[1962] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "containedInkWell",
        [S._Location_column]: 7,
        [S._Location_line]: 589,
        [S._Location_file]: null
      });
    },
    get C1963() {
      return C[1963] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightShape",
        [S._Location_column]: 7,
        [S._Location_line]: 590,
        [S._Location_file]: null
      });
    },
    get C1964() {
      return C[1964] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "radius",
        [S._Location_column]: 7,
        [S._Location_line]: 591,
        [S._Location_file]: null
      });
    },
    get C1965() {
      return C[1965] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "borderRadius",
        [S._Location_column]: 7,
        [S._Location_line]: 592,
        [S._Location_file]: null
      });
    },
    get C1966() {
      return C[1966] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "customBorder",
        [S._Location_column]: 7,
        [S._Location_line]: 593,
        [S._Location_file]: null
      });
    },
    get C1967() {
      return C[1967] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusColor",
        [S._Location_column]: 7,
        [S._Location_line]: 594,
        [S._Location_file]: null
      });
    },
    get C1968() {
      return C[1968] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hoverColor",
        [S._Location_column]: 7,
        [S._Location_line]: 595,
        [S._Location_file]: null
      });
    },
    get C1969() {
      return C[1969] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "highlightColor",
        [S._Location_column]: 7,
        [S._Location_line]: 596,
        [S._Location_file]: null
      });
    },
    get C1970() {
      return C[1970] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overlayColor",
        [S._Location_column]: 7,
        [S._Location_line]: 597,
        [S._Location_file]: null
      });
    },
    get C1971() {
      return C[1971] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashColor",
        [S._Location_column]: 7,
        [S._Location_line]: 598,
        [S._Location_file]: null
      });
    },
    get C1972() {
      return C[1972] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "splashFactory",
        [S._Location_column]: 7,
        [S._Location_line]: 599,
        [S._Location_file]: null
      });
    },
    get C1973() {
      return C[1973] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableFeedback",
        [S._Location_column]: 7,
        [S._Location_line]: 600,
        [S._Location_file]: null
      });
    },
    get C1974() {
      return C[1974] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "excludeFromSemantics",
        [S._Location_column]: 7,
        [S._Location_line]: 601,
        [S._Location_file]: null
      });
    },
    get C1975() {
      return C[1975] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 7,
        [S._Location_line]: 602,
        [S._Location_file]: null
      });
    },
    get C1976() {
      return C[1976] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "canRequestFocus",
        [S._Location_column]: 7,
        [S._Location_line]: 603,
        [S._Location_file]: null
      });
    },
    get C1977() {
      return C[1977] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onFocusChange",
        [S._Location_column]: 7,
        [S._Location_line]: 604,
        [S._Location_file]: null
      });
    },
    get C1978() {
      return C[1978] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 7,
        [S._Location_line]: 605,
        [S._Location_file]: null
      });
    },
    get C1979() {
      return C[1979] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "parentState",
        [S._Location_column]: 7,
        [S._Location_line]: 606,
        [S._Location_file]: null
      });
    },
    get C1980() {
      return C[1980] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "getRectCallback",
        [S._Location_column]: 7,
        [S._Location_line]: 607,
        [S._Location_file]: null
      });
    },
    get C1981() {
      return C[1981] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "debugCheckContext",
        [S._Location_column]: 7,
        [S._Location_line]: 608,
        [S._Location_file]: null
      });
    },
    get C1952() {
      return C[1952] = dart.constList([C[1953] || CT.C1953, C[1954] || CT.C1954, C[1955] || CT.C1955, C[1956] || CT.C1956, C[1957] || CT.C1957, C[1958] || CT.C1958, C[1959] || CT.C1959, C[1960] || CT.C1960, C[1961] || CT.C1961, C[1962] || CT.C1962, C[1963] || CT.C1963, C[1964] || CT.C1964, C[1965] || CT.C1965, C[1966] || CT.C1966, C[1967] || CT.C1967, C[1968] || CT.C1968, C[1969] || CT.C1969, C[1970] || CT.C1970, C[1971] || CT.C1971, C[1972] || CT.C1972, C[1973] || CT.C1973, C[1974] || CT.C1974, C[1975] || CT.C1975, C[1976] || CT.C1976, C[1977] || CT.C1977, C[1978] || CT.C1978, C[1979] || CT.C1979, C[1980] || CT.C1980, C[1981] || CT.C1981], T$._LocationL());
    },
    get C1951() {
      return C[1951] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1952] || CT.C1952,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 579,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C1982() {
      return C[1982] = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [S$0._name$17]: "_HighlightType.pressed",
        index: 0
      });
    },
    get C1983() {
      return C[1983] = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [S$0._name$17]: "_HighlightType.hover",
        index: 1
      });
    },
    get C1984() {
      return C[1984] = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [S$0._name$17]: "_HighlightType.focus",
        index: 2
      });
    },
    get C1985() {
      return C[1985] = dart.constList([C[1982] || CT.C1982, C[1983] || CT.C1983, C[1984] || CT.C1984], T$._HighlightTypeL());
    },
    get C1987() {
      return C[1987] = dart.const({
        __proto__: material_state.MaterialState.prototype,
        [S$0._name$18]: "MaterialState.focused",
        index: 1
      });
    },
    get C1986() {
      return C[1986] = dart.constSet(T$.MaterialStateL(), [C[1987] || CT.C1987]);
    },
    get C1989() {
      return C[1989] = dart.const({
        __proto__: material_state.MaterialState.prototype,
        [S$0._name$18]: "MaterialState.hovered",
        index: 0
      });
    },
    get C1988() {
      return C[1988] = dart.constSet(T$.MaterialStateL(), [C[1989] || CT.C1989]);
    },
    get C1990() {
      return C[1990] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 50000
      });
    },
    get C1992() {
      return C[1992] = dart.const({
        __proto__: material_state.MaterialState.prototype,
        [S$0._name$18]: "MaterialState.pressed",
        index: 2
      });
    },
    get C1991() {
      return C[1991] = dart.constSet(T$.MaterialStateL(), [C[1992] || CT.C1992]);
    },
    get C1993() {
      return C[1993] = dart.const({
        __proto__: media_query.NavigationMode.prototype,
        [S$0._name$19]: "NavigationMode.traditional",
        index: 0
      });
    },
    get C1994() {
      return C[1994] = dart.const({
        __proto__: media_query.NavigationMode.prototype,
        [S$0._name$19]: "NavigationMode.directional",
        index: 1
      });
    },
    get C1995() {
      return C[1995] = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [S$0._name$20]: "FocusHighlightMode.touch",
        index: 0
      });
    },
    get C1996() {
      return C[1996] = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [S$0._name$20]: "FocusHighlightMode.traditional",
        index: 1
      });
    },
    get C1999() {
      return C[1999] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTapDown",
        [S._Location_column]: 17,
        [S._Location_line]: 1109,
        [S._Location_file]: null
      });
    },
    get C2000() {
      return C[2000] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 17,
        [S._Location_line]: 1110,
        [S._Location_file]: null
      });
    },
    get C2001() {
      return C[2001] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTapCancel",
        [S._Location_column]: 17,
        [S._Location_line]: 1111,
        [S._Location_file]: null
      });
    },
    get C2002() {
      return C[2002] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDoubleTap",
        [S._Location_column]: 17,
        [S._Location_line]: 1112,
        [S._Location_file]: null
      });
    },
    get C2003() {
      return C[2003] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 17,
        [S._Location_line]: 1113,
        [S._Location_file]: null
      });
    },
    get C2004() {
      return C[2004] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "behavior",
        [S._Location_column]: 17,
        [S._Location_line]: 1114,
        [S._Location_file]: null
      });
    },
    get C2005() {
      return C[2005] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "excludeFromSemantics",
        [S._Location_column]: 17,
        [S._Location_line]: 1115,
        [S._Location_file]: null
      });
    },
    get C2006() {
      return C[2006] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 1116,
        [S._Location_file]: null
      });
    },
    get C1998() {
      return C[1998] = dart.constList([C[1999] || CT.C1999, C[2000] || CT.C2000, C[2001] || CT.C2001, C[2002] || CT.C2002, C[2003] || CT.C2003, C[2004] || CT.C2004, C[2005] || CT.C2005, C[2006] || CT.C2006], T$._LocationL());
    },
    get C1997() {
      return C[1997] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1998] || CT.C1998,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 1108,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C2009() {
      return C[2009] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 15,
        [S._Location_line]: 1106,
        [S._Location_file]: null
      });
    },
    get C2010() {
      return C[2010] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onLongPress",
        [S._Location_column]: 15,
        [S._Location_line]: 1107,
        [S._Location_file]: null
      });
    },
    get C2011() {
      return C[2011] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 1108,
        [S._Location_file]: null
      });
    },
    get C2008() {
      return C[2008] = dart.constList([C[2009] || CT.C2009, C[2010] || CT.C2010, C[2011] || CT.C2011], T$._LocationL());
    },
    get C2007() {
      return C[2007] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2008] || CT.C2008,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 1105,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C2014() {
      return C[2014] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursor",
        [S._Location_column]: 13,
        [S._Location_line]: 1102,
        [S._Location_file]: null
      });
    },
    get C2015() {
      return C[2015] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onEnter",
        [S._Location_column]: 13,
        [S._Location_line]: 1103,
        [S._Location_file]: null
      });
    },
    get C2016() {
      return C[2016] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onExit",
        [S._Location_column]: 13,
        [S._Location_line]: 1104,
        [S._Location_file]: null
      });
    },
    get C2017() {
      return C[2017] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 1105,
        [S._Location_file]: null
      });
    },
    get C2013() {
      return C[2013] = dart.constList([C[2014] || CT.C2014, C[2015] || CT.C2015, C[2016] || CT.C2016, C[2017] || CT.C2017], T$._LocationL());
    },
    get C2012() {
      return C[2012] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2013] || CT.C2013,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 1101,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C2020() {
      return C[2020] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 11,
        [S._Location_line]: 1097,
        [S._Location_file]: null
      });
    },
    get C2021() {
      return C[2021] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "canRequestFocus",
        [S._Location_column]: 11,
        [S._Location_line]: 1098,
        [S._Location_file]: null
      });
    },
    get C2022() {
      return C[2022] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onFocusChange",
        [S._Location_column]: 11,
        [S._Location_line]: 1099,
        [S._Location_file]: null
      });
    },
    get C2023() {
      return C[2023] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 11,
        [S._Location_line]: 1100,
        [S._Location_file]: null
      });
    },
    get C2024() {
      return C[2024] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 1101,
        [S._Location_file]: null
      });
    },
    get C2019() {
      return C[2019] = dart.constList([C[2020] || CT.C2020, C[2021] || CT.C2021, C[2022] || CT.C2022, C[2023] || CT.C2023, C[2024] || CT.C2024], T$._LocationL());
    },
    get C2018() {
      return C[2018] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2019] || CT.C2019,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 1096,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C2027() {
      return C[2027] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "actions",
        [S._Location_column]: 9,
        [S._Location_line]: 1095,
        [S._Location_file]: null
      });
    },
    get C2028() {
      return C[2028] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1096,
        [S._Location_file]: null
      });
    },
    get C2026() {
      return C[2026] = dart.constList([C[2027] || CT.C2027, C[2028] || CT.C2028], T$._LocationL());
    },
    get C2025() {
      return C[2025] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2026] || CT.C2026,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 1094,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C2031() {
      return C[2031] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "state",
        [S._Location_column]: 7,
        [S._Location_line]: 1093,
        [S._Location_file]: null
      });
    },
    get C2032() {
      return C[2032] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 1094,
        [S._Location_file]: null
      });
    },
    get C2030() {
      return C[2030] = dart.constList([C[2031] || CT.C2031, C[2032] || CT.C2032], T$._LocationL());
    },
    get C2029() {
      return C[2029] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2030] || CT.C2030,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 1092,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C2033() {
      return C[2033] = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarType.prototype,
        [S$0._name$21]: "BottomNavigationBarType.fixed",
        index: 0
      });
    },
    get C2034() {
      return C[2034] = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarType.prototype,
        [S$0._name$21]: "BottomNavigationBarType.shifting",
        index: 1
      });
    },
    get C2035() {
      return C[2035] = dart.constList([C[2033] || CT.C2033, C[2034] || CT.C2034], T$.BottomNavigationBarTypeL());
    },
    get C2038() {
      return C[2038] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "colorTween",
        [S._Location_column]: 15,
        [S._Location_line]: 553,
        [S._Location_file]: null
      });
    },
    get C2039() {
      return C[2039] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 15,
        [S._Location_line]: 554,
        [S._Location_file]: null
      });
    },
    get C2040() {
      return C[2040] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "iconSize",
        [S._Location_column]: 15,
        [S._Location_line]: 555,
        [S._Location_file]: null
      });
    },
    get C2041() {
      return C[2041] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selected",
        [S._Location_column]: 15,
        [S._Location_line]: 556,
        [S._Location_file]: null
      });
    },
    get C2042() {
      return C[2042] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "item",
        [S._Location_column]: 15,
        [S._Location_line]: 557,
        [S._Location_file]: null
      });
    },
    get C2043() {
      return C[2043] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectedIconTheme",
        [S._Location_column]: 15,
        [S._Location_line]: 558,
        [S._Location_file]: null
      });
    },
    get C2044() {
      return C[2044] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "unselectedIconTheme",
        [S._Location_column]: 15,
        [S._Location_line]: 559,
        [S._Location_file]: null
      });
    },
    get C2037() {
      return C[2037] = dart.constList([C[2038] || CT.C2038, C[2039] || CT.C2039, C[2040] || CT.C2040, C[2041] || CT.C2041, C[2042] || CT.C2042, C[2043] || CT.C2043, C[2044] || CT.C2044], T$._LocationL());
    },
    get C2036() {
      return C[2036] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2037] || CT.C2037,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 552,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2047() {
      return C[2047] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "colorTween",
        [S._Location_column]: 15,
        [S._Location_line]: 562,
        [S._Location_file]: null
      });
    },
    get C2048() {
      return C[2048] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 15,
        [S._Location_line]: 563,
        [S._Location_file]: null
      });
    },
    get C2049() {
      return C[2049] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "item",
        [S._Location_column]: 15,
        [S._Location_line]: 564,
        [S._Location_file]: null
      });
    },
    get C2050() {
      return C[2050] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectedLabelStyle",
        [S._Location_column]: 15,
        [S._Location_line]: 565,
        [S._Location_file]: null
      });
    },
    get C2051() {
      return C[2051] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "unselectedLabelStyle",
        [S._Location_column]: 15,
        [S._Location_line]: 566,
        [S._Location_file]: null
      });
    },
    get C2052() {
      return C[2052] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "showSelectedLabels",
        [S._Location_column]: 15,
        [S._Location_line]: 567,
        [S._Location_file]: null
      });
    },
    get C2053() {
      return C[2053] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "showUnselectedLabels",
        [S._Location_column]: 15,
        [S._Location_line]: 568,
        [S._Location_file]: null
      });
    },
    get C2046() {
      return C[2046] = dart.constList([C[2047] || CT.C2047, C[2048] || CT.C2048, C[2049] || CT.C2049, C[2050] || CT.C2050, C[2051] || CT.C2051, C[2052] || CT.C2052, C[2053] || CT.C2053], T$._LocationL());
    },
    get C2045() {
      return C[2045] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2046] || CT.C2046,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 561,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2056() {
      return C[2056] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 11,
        [S._Location_line]: 548,
        [S._Location_file]: null
      });
    },
    get C2057() {
      return C[2057] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisAlignment",
        [S._Location_column]: 11,
        [S._Location_line]: 549,
        [S._Location_file]: null
      });
    },
    get C2058() {
      return C[2058] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 11,
        [S._Location_line]: 550,
        [S._Location_file]: null
      });
    },
    get C2059() {
      return C[2059] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 11,
        [S._Location_line]: 551,
        [S._Location_file]: null
      });
    },
    get C2055() {
      return C[2055] = dart.constList([C[2056] || CT.C2056, C[2057] || CT.C2057, C[2058] || CT.C2058, C[2059] || CT.C2059], T$._LocationL());
    },
    get C2054() {
      return C[2054] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2055] || CT.C2055,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 547,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2062() {
      return C[2062] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 546,
        [S._Location_file]: null
      });
    },
    get C2063() {
      return C[2063] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 547,
        [S._Location_file]: null
      });
    },
    get C2061() {
      return C[2061] = dart.constList([C[2062] || CT.C2062, C[2063] || CT.C2063], T$._LocationL());
    },
    get C2060() {
      return C[2060] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2061] || CT.C2061,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 545,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2066() {
      return C[2066] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 7,
        [S._Location_line]: 543,
        [S._Location_file]: null
      });
    },
    get C2067() {
      return C[2067] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 7,
        [S._Location_line]: 544,
        [S._Location_file]: null
      });
    },
    get C2068() {
      return C[2068] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 545,
        [S._Location_file]: null
      });
    },
    get C2065() {
      return C[2065] = dart.constList([C[2066] || CT.C2066, C[2067] || CT.C2067, C[2068] || CT.C2068], T$._LocationL());
    },
    get C2064() {
      return C[2064] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2065] || CT.C2065,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 542,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2071() {
      return C[2071] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "message",
        [S._Location_column]: 9,
        [S._Location_line]: 577,
        [S._Location_file]: null
      });
    },
    get C2072() {
      return C[2072] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "preferBelow",
        [S._Location_column]: 9,
        [S._Location_line]: 578,
        [S._Location_file]: null
      });
    },
    get C2073() {
      return C[2073] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "verticalOffset",
        [S._Location_column]: 9,
        [S._Location_line]: 579,
        [S._Location_file]: null
      });
    },
    get C2074() {
      return C[2074] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 581,
        [S._Location_file]: null
      });
    },
    get C2070() {
      return C[2070] = dart.constList([C[2071] || CT.C2071, C[2072] || CT.C2072, C[2073] || CT.C2073, C[706] || CT.C706, C[2074] || CT.C2074], T$._LocationL());
    },
    get C2069() {
      return C[2069] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2070] || CT.C2070,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 576,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2077() {
      return C[2077] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 13,
        [S._Location_line]: 592,
        [S._Location_file]: null
      });
    },
    get C2076() {
      return C[2076] = dart.constList([C[2077] || CT.C2077], T$._LocationL());
    },
    get C2075() {
      return C[2075] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2076] || CT.C2076,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 591,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2080() {
      return C[2080] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 589,
        [S._Location_file]: null
      });
    },
    get C2079() {
      return C[2079] = dart.constList([C[2080] || CT.C2080], T$._LocationL());
    },
    get C2078() {
      return C[2078] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2079] || CT.C2079,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 588,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2083() {
      return C[2083] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selected",
        [S._Location_column]: 7,
        [S._Location_line]: 586,
        [S._Location_file]: null
      });
    },
    get C2084() {
      return C[2084] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "container",
        [S._Location_column]: 7,
        [S._Location_line]: 587,
        [S._Location_file]: null
      });
    },
    get C2085() {
      return C[2085] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 588,
        [S._Location_file]: null
      });
    },
    get C2082() {
      return C[2082] = dart.constList([C[2083] || CT.C2083, C[2084] || CT.C2084, C[2085] || CT.C2085], T$._LocationL());
    },
    get C2081() {
      return C[2081] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2082] || CT.C2082,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 585,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2088() {
      return C[2088] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "flex",
        [S._Location_column]: 7,
        [S._Location_line]: 599,
        [S._Location_file]: null
      });
    },
    get C2089() {
      return C[2089] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 600,
        [S._Location_file]: null
      });
    },
    get C2087() {
      return C[2087] = dart.constList([C[2088] || CT.C2088, C[2089] || CT.C2089], T$._LocationL());
    },
    get C2086() {
      return C[2086] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2087] || CT.C2087,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 598,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2092() {
      return C[2092] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 11,
        [S._Location_line]: 646,
        [S._Location_file]: null
      });
    },
    get C2093() {
      return C[2093] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 647,
        [S._Location_file]: null
      });
    },
    get C2091() {
      return C[2091] = dart.constList([C[2092] || CT.C2092, C[2093] || CT.C2093], T$._LocationL());
    },
    get C2090() {
      return C[2090] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2091] || CT.C2091,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 645,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2095() {
      return C[2095] = dart.constList([C[845] || CT.C845], T$._LocationL());
    },
    get C2094() {
      return C[2094] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2095] || CT.C2095,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 644,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2098() {
      return C[2098] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 7,
        [S._Location_line]: 642,
        [S._Location_file]: null
      });
    },
    get C2099() {
      return C[2099] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 7,
        [S._Location_line]: 643,
        [S._Location_file]: null
      });
    },
    get C2100() {
      return C[2100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 644,
        [S._Location_file]: null
      });
    },
    get C2097() {
      return C[2097] = dart.constList([C[2098] || CT.C2098, C[2099] || CT.C2099, C[2100] || CT.C2100], T$._LocationL());
    },
    get C2096() {
      return C[2096] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2097] || CT.C2097,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 641,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2103() {
      return C[2103] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 45,
        [S._Location_line]: 709,
        [S._Location_file]: null
      });
    },
    get C2102() {
      return C[2102] = dart.constList([C[2103] || CT.C2103], T$._LocationL());
    },
    get C2101() {
      return C[2101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2102] || CT.C2102,
        [S._Location_name]: null,
        [S._Location_column]: 30,
        [S._Location_line]: 709,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2106() {
      return C[2106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "transform",
        [S._Location_column]: 9,
        [S._Location_line]: 700,
        [S._Location_file]: null
      });
    },
    get C2107() {
      return C[2107] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 9,
        [S._Location_line]: 708,
        [S._Location_file]: null
      });
    },
    get C2108() {
      return C[2108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 709,
        [S._Location_file]: null
      });
    },
    get C2105() {
      return C[2105] = dart.constList([C[2106] || CT.C2106, C[2107] || CT.C2107, C[2108] || CT.C2108], T$._LocationL());
    },
    get C2104() {
      return C[2104] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2105] || CT.C2105,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 699,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2111() {
      return C[2111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alwaysIncludeSemantics",
        [S._Location_column]: 9,
        [S._Location_line]: 716,
        [S._Location_file]: null
      });
    },
    get C2112() {
      return C[2112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 717,
        [S._Location_file]: null
      });
    },
    get C2113() {
      return C[2113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 718,
        [S._Location_file]: null
      });
    },
    get C2110() {
      return C[2110] = dart.constList([C[2111] || CT.C2111, C[2112] || CT.C2112, C[2113] || CT.C2113], T$._LocationL());
    },
    get C2109() {
      return C[2109] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2110] || CT.C2110,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 715,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2116() {
      return C[2116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alwaysIncludeSemantics",
        [S._Location_column]: 9,
        [S._Location_line]: 723,
        [S._Location_file]: null
      });
    },
    get C2117() {
      return C[2117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 724,
        [S._Location_file]: null
      });
    },
    get C2118() {
      return C[2118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 725,
        [S._Location_file]: null
      });
    },
    get C2115() {
      return C[2115] = dart.constList([C[2116] || CT.C2116, C[2117] || CT.C2117, C[2118] || CT.C2118], T$._LocationL());
    },
    get C2114() {
      return C[2114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2115] || CT.C2115,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 722,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2121() {
      return C[2121] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alwaysIncludeSemantics",
        [S._Location_column]: 9,
        [S._Location_line]: 730,
        [S._Location_file]: null
      });
    },
    get C2122() {
      return C[2122] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 731,
        [S._Location_file]: null
      });
    },
    get C2123() {
      return C[2123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 732,
        [S._Location_file]: null
      });
    },
    get C2120() {
      return C[2120] = dart.constList([C[2121] || CT.C2121, C[2122] || CT.C2122, C[2123] || CT.C2123], T$._LocationL());
    },
    get C2119() {
      return C[2119] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2120] || CT.C2120,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 729,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2126() {
      return C[2126] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 24,
        [S._Location_line]: 739,
        [S._Location_file]: null
      });
    },
    get C2125() {
      return C[2125] = dart.constList([C[2126] || CT.C2126], T$._LocationL());
    },
    get C2124() {
      return C[2124] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2125] || CT.C2125,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 739,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2129() {
      return C[2129] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 7,
        [S._Location_line]: 737,
        [S._Location_file]: null
      });
    },
    get C2130() {
      return C[2130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 7,
        [S._Location_line]: 738,
        [S._Location_file]: null
      });
    },
    get C2131() {
      return C[2131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 739,
        [S._Location_file]: null
      });
    },
    get C2128() {
      return C[2128] = dart.constList([C[2129] || CT.C2129, C[2130] || CT.C2130, C[2131] || CT.C2131], T$._LocationL());
    },
    get C2127() {
      return C[2127] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2128] || CT.C2128,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 736,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2134() {
      return C[2134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 9,
        [S._Location_line]: 747,
        [S._Location_file]: null
      });
    },
    get C2135() {
      return C[2135] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 750,
        [S._Location_file]: null
      });
    },
    get C2133() {
      return C[2133] = dart.constList([C[2134] || CT.C2134, C[2135] || CT.C2135], T$._LocationL());
    },
    get C2132() {
      return C[2132] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2133] || CT.C2133,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 746,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2136() {
      return C[2136] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$0.TextStyle_fontFeatures]: null,
        [S$0.TextStyle_shadows]: null,
        [S$0.TextStyle_debugLabel]: null,
        [S$0.TextStyle_decorationThickness]: null,
        [S$0.TextStyle_decorationStyle]: null,
        [S$0.TextStyle_decorationColor]: null,
        [S$0.TextStyle_decoration]: null,
        [S$0.TextStyle_background]: null,
        [S$0.TextStyle_foreground]: null,
        [S$0.TextStyle_locale]: null,
        [S$0.TextStyle_height]: null,
        [S$0.TextStyle_textBaseline]: null,
        [S$0.TextStyle_wordSpacing]: null,
        [S$0.TextStyle_letterSpacing]: null,
        [S$0.TextStyle_fontStyle]: null,
        [S$0.TextStyle_fontWeight]: null,
        [S$0.TextStyle_fontSize]: null,
        [S$0.TextStyle__package]: null,
        [S$0.TextStyle__fontFamilyFallback]: null,
        [S$0.TextStyle_fontFamily]: null,
        [S$0.TextStyle_backgroundColor]: null,
        [S$0.TextStyle_color]: null,
        [S$0.TextStyle_inherit]: true
      });
    },
    get C2139() {
      return C[2139] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "type",
        [S._Location_column]: 9,
        [S._Location_line]: 964,
        [S._Location_file]: null
      });
    },
    get C2140() {
      return C[2140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "item",
        [S._Location_column]: 21,
        [S._Location_line]: 965,
        [S._Location_file]: null
      });
    },
    get C2141() {
      return C[2141] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 20,
        [S._Location_line]: 966,
        [S._Location_file]: null
      });
    },
    get C2142() {
      return C[2142] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "iconSize",
        [S._Location_column]: 16,
        [S._Location_line]: 967,
        [S._Location_file]: null
      });
    },
    get C2143() {
      return C[2143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectedIconTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 968,
        [S._Location_file]: null
      });
    },
    get C2144() {
      return C[2144] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "unselectedIconTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 969,
        [S._Location_file]: null
      });
    },
    get C2145() {
      return C[2145] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectedLabelStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 970,
        [S._Location_file]: null
      });
    },
    get C2146() {
      return C[2146] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "unselectedLabelStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 971,
        [S._Location_file]: null
      });
    },
    get C2147() {
      return C[2147] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 9,
        [S._Location_line]: 972,
        [S._Location_file]: null
      });
    },
    get C2148() {
      return C[2148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "colorTween",
        [S._Location_column]: 9,
        [S._Location_line]: 976,
        [S._Location_file]: null
      });
    },
    get C2149() {
      return C[2149] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "flex",
        [S._Location_column]: 9,
        [S._Location_line]: 977,
        [S._Location_file]: null
      });
    },
    get C2150() {
      return C[2150] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selected",
        [S._Location_column]: 9,
        [S._Location_line]: 978,
        [S._Location_file]: null
      });
    },
    get C2151() {
      return C[2151] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "showSelectedLabels",
        [S._Location_column]: 9,
        [S._Location_line]: 979,
        [S._Location_file]: null
      });
    },
    get C2152() {
      return C[2152] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "showUnselectedLabels",
        [S._Location_column]: 9,
        [S._Location_line]: 980,
        [S._Location_file]: null
      });
    },
    get C2153() {
      return C[2153] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "indexLabel",
        [S._Location_column]: 9,
        [S._Location_line]: 981,
        [S._Location_file]: null
      });
    },
    get C2154() {
      return C[2154] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mouseCursor",
        [S._Location_column]: 9,
        [S._Location_line]: 982,
        [S._Location_file]: null
      });
    },
    get C2138() {
      return C[2138] = dart.constList([C[2139] || CT.C2139, C[2140] || CT.C2140, C[2141] || CT.C2141, C[2142] || CT.C2142, C[2143] || CT.C2143, C[2144] || CT.C2144, C[2145] || CT.C2145, C[2146] || CT.C2146, C[2147] || CT.C2147, C[2148] || CT.C2148, C[2149] || CT.C2149, C[2150] || CT.C2150, C[2151] || CT.C2151, C[2152] || CT.C2152, C[2153] || CT.C2153, C[2154] || CT.C2154], T$._LocationL());
    },
    get C2137() {
      return C[2137] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2138] || CT.C2138,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 963,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2157() {
      return C[2157] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisAlignment",
        [S._Location_column]: 9,
        [S._Location_line]: 992,
        [S._Location_file]: null
      });
    },
    get C2158() {
      return C[2158] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 993,
        [S._Location_file]: null
      });
    },
    get C2156() {
      return C[2156] = dart.constList([C[2157] || CT.C2157, C[2158] || CT.C2158], T$._LocationL());
    },
    get C2155() {
      return C[2155] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2156] || CT.C2156,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 991,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2161() {
      return C[2161] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "context",
        [S._Location_column]: 19,
        [S._Location_line]: 1035,
        [S._Location_file]: null
      });
    },
    get C2162() {
      return C[2162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "removeBottom",
        [S._Location_column]: 19,
        [S._Location_line]: 1036,
        [S._Location_file]: null
      });
    },
    get C2163() {
      return C[2163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 1037,
        [S._Location_file]: null
      });
    },
    get C2160() {
      return C[2160] = dart.constList([C[2161] || CT.C2161, C[2162] || CT.C2162, C[2163] || CT.C2163], T$._LocationL());
    },
    get C2159() {
      return C[2159] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2160] || CT.C2160,
        [S._Location_name]: null,
        [S._Location_column]: 35,
        [S._Location_line]: 1034,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2166() {
      return C[2166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 17,
        [S._Location_line]: 1033,
        [S._Location_file]: null
      });
    },
    get C2167() {
      return C[2167] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 1034,
        [S._Location_file]: null
      });
    },
    get C2165() {
      return C[2165] = dart.constList([C[2166] || CT.C2166, C[2167] || CT.C2167], T$._LocationL());
    },
    get C2164() {
      return C[2164] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2165] || CT.C2165,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 1032,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2170() {
      return C[2170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "type",
        [S._Location_column]: 15,
        [S._Location_line]: 1031,
        [S._Location_file]: null
      });
    },
    get C2171() {
      return C[2171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 1032,
        [S._Location_file]: null
      });
    },
    get C2169() {
      return C[2169] = dart.constList([C[2170] || CT.C2170, C[2171] || CT.C2171], T$._LocationL());
    },
    get C2168() {
      return C[2168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2169] || CT.C2169,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 1030,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2174() {
      return C[2174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "painter",
        [S._Location_column]: 13,
        [S._Location_line]: 1026,
        [S._Location_file]: null
      });
    },
    get C2175() {
      return C[2175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 1030,
        [S._Location_file]: null
      });
    },
    get C2173() {
      return C[2173] = dart.constList([C[2174] || CT.C2174, C[2175] || CT.C2175], T$._LocationL());
    },
    get C2172() {
      return C[2172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2173] || CT.C2173,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 1025,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2178() {
      return C[2178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 11,
        [S._Location_line]: 1024,
        [S._Location_file]: null
      });
    },
    get C2179() {
      return C[2179] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 1025,
        [S._Location_file]: null
      });
    },
    get C2177() {
      return C[2177] = dart.constList([C[2178] || CT.C2178, C[2179] || CT.C2179], T$._LocationL());
    },
    get C2176() {
      return C[2176] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2177] || CT.C2177,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 1023,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2182() {
      return C[2182] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 9,
        [S._Location_line]: 1021,
        [S._Location_file]: null
      });
    },
    get C2183() {
      return C[2183] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 9,
        [S._Location_line]: 1022,
        [S._Location_file]: null
      });
    },
    get C2184() {
      return C[2184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 1023,
        [S._Location_file]: null
      });
    },
    get C2181() {
      return C[2181] = dart.constList([C[2182] || CT.C2182, C[2183] || CT.C2183, C[2184] || CT.C2184], T$._LocationL());
    },
    get C2180() {
      return C[2180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2181] || CT.C2181,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 1020,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2187() {
      return C[2187] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "explicitChildNodes",
        [S._Location_column]: 7,
        [S._Location_line]: 1019,
        [S._Location_file]: null
      });
    },
    get C2188() {
      return C[2188] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 1020,
        [S._Location_file]: null
      });
    },
    get C2186() {
      return C[2186] = dart.constList([C[2187] || CT.C2187, C[2188] || CT.C2188], T$._LocationL());
    },
    get C2185() {
      return C[2185] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2186] || CT.C2186,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 1018,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2191() {
      return C[2191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 32,
        [S._Location_line]: 150,
        [S._Location_file]: null
      });
    },
    get C2192() {
      return C[2192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 44,
        [S._Location_line]: 150,
        [S._Location_file]: null
      });
    },
    get C2190() {
      return C[2190] = dart.constList([C[2191] || CT.C2191, C[2192] || CT.C2192], T$._LocationL());
    },
    get C2189() {
      return C[2189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2190] || CT.C2190,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 150,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/banner_theme.dart"
      });
    },
    get C2193() {
      return C[2193] = dart.constList([C[138] || CT.C138, C[139] || CT.C139], T$.MaterialTapTargetSizeL());
    },
    get C2194() {
      return C[2194] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 536870911
      });
    },
    get C2195() {
      return C[2195] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 520093696
      });
    },
    get C2196() {
      return C[2196] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4282549748.0
      });
    },
    get C2197() {
      return C[2197] = dart.const({
        __proto__: page_transitions_theme.PageTransitionsTheme.prototype,
        [S$._builders]: null
      });
    },
    get C2199() {
      return C[2199] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4294967295.0
      });
    },
    get C2198() {
      return C[2198] = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [S$1.IconThemeData_size]: null,
        [S$1.IconThemeData__opacity]: null,
        [S$1.IconThemeData_color]: C[2199] || CT.C2199
      });
    },
    get C2200() {
      return C[2200] = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [S$1.IconThemeData_size]: null,
        [S$1.IconThemeData__opacity]: null,
        [S$1.IconThemeData_color]: C[159] || CT.C159
      });
    },
    get C2202() {
      return C[2202] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 3707764736.0
      });
    },
    get C2201() {
      return C[2201] = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [S$1.IconThemeData_size]: null,
        [S$1.IconThemeData__opacity]: null,
        [S$1.IconThemeData_color]: C[2202] || CT.C2202
      });
    },
    get C2203() {
      return C[2203] = dart.const({
        __proto__: toggle_buttons_theme.ToggleButtonsThemeData.prototype,
        [S$.borderRadius]: null,
        [S$.borderWidth]: null,
        [S$.disabledBorderColor$2]: null,
        [S$.selectedBorderColor]: null,
        [S$.borderColor]: null,
        [S$.hoverColor$6]: null,
        [S$.splashColor$5]: null,
        [S$.highlightColor$4]: null,
        [S$.focusColor$6]: null,
        [S$.fillColor$1]: null,
        [S$.disabledColor$2]: null,
        [S$.selectedColor$1]: null,
        [S$.color$7]: null,
        [S$.constraints$2]: null,
        [S.textStyle$1]: null
      });
    },
    get C2204() {
      return C[2204] = dart.const({
        __proto__: tab_bar_theme.TabBarTheme.prototype,
        [S$.unselectedLabelStyle$2]: null,
        [S$.unselectedLabelColor$2]: null,
        [S$.labelStyle$2]: null,
        [S$.labelPadding$1]: null,
        [S$.labelColor$2]: null,
        [S$.indicatorSize$2]: null,
        [S$.indicator$1]: null
      });
    },
    get C2205() {
      return C[2205] = dart.const({
        __proto__: tooltip_theme.TooltipThemeData.prototype,
        [S$0.showDuration]: null,
        [S$0.waitDuration]: null,
        [S$0.textStyle$4]: null,
        [S$0.decoration$3]: null,
        [S$0.excludeFromSemantics]: null,
        [S$0.preferBelow]: null,
        [S$0.verticalOffset]: null,
        [S$0.margin$2]: null,
        [S$0.padding$9]: null,
        [S$0.height$2]: null
      });
    },
    get C2206() {
      return C[2206] = dart.const({
        __proto__: app_bar_theme.AppBarTheme.prototype,
        [S$1.AppBarTheme_backwardsCompatibility]: null,
        [S$1.AppBarTheme_systemOverlayStyle]: null,
        [S$1.AppBarTheme_titleTextStyle]: null,
        [S$1.AppBarTheme_toolbarTextStyle]: null,
        [S$1.AppBarTheme_titleSpacing]: null,
        [S$1.AppBarTheme_centerTitle]: null,
        [S$1.AppBarTheme_textTheme]: null,
        [S$1.AppBarTheme_actionsIconTheme]: null,
        [S$1.AppBarTheme_iconTheme]: null,
        [S$1.AppBarTheme_shadowColor]: null,
        [S$1.AppBarTheme_elevation]: null,
        [S$1.AppBarTheme_foregroundColor]: null,
        [S$1.AppBarTheme_backgroundColor]: null,
        [S$1.AppBarTheme_brightness]: null
      });
    },
    get C2207() {
      return C[2207] = dart.const({
        __proto__: scrollbar_theme.ScrollbarThemeData.prototype,
        [S$.minThumbLength]: null,
        [S$.mainAxisMargin]: null,
        [S$.crossAxisMargin]: null,
        [S$.trackBorderColor]: null,
        [S$.trackColor$1]: null,
        [S$.thumbColor$2]: null,
        [S$.radius]: null,
        [S$.isAlwaysShown]: null,
        [S$.showTrackOnHover]: null,
        [S$.thickness$2]: null
      });
    },
    get C2208() {
      return C[2208] = dart.const({
        __proto__: bottom_app_bar_theme.BottomAppBarTheme.prototype,
        [S$0.shape$18]: null,
        [S$0.elevation$20]: null,
        [S$0.color$12]: null
      });
    },
    get C2209() {
      return C[2209] = dart.const({
        __proto__: card_theme.CardTheme.prototype,
        [S$0.shape$17]: null,
        [S$0.margin$1]: null,
        [S$0.elevation$17]: null,
        [S$0.shadowColor$2]: null,
        [S$0.color$11]: null,
        [S$0.clipBehavior$8]: null
      });
    },
    get C2210() {
      return C[2210] = dart.const({
        __proto__: dialog_theme.DialogTheme.prototype,
        [S$0.contentTextStyle$2]: null,
        [S$0.titleTextStyle$2]: null,
        [S$0.shape$15]: null,
        [S$0.elevation$15]: null,
        [S$0.backgroundColor$11]: null
      });
    },
    get C2211() {
      return C[2211] = dart.const({
        __proto__: floating_action_button_theme.FloatingActionButtonThemeData.prototype,
        [S$1.FloatingActionButtonThemeData_shape]: null,
        [S$1.FloatingActionButtonThemeData_highlightElevation]: null,
        [S$1.FloatingActionButtonThemeData_disabledElevation]: null,
        [S$1.FloatingActionButtonThemeData_hoverElevation]: null,
        [S$1.FloatingActionButtonThemeData_focusElevation]: null,
        [S$1.FloatingActionButtonThemeData_elevation]: null,
        [S$1.FloatingActionButtonThemeData_splashColor]: null,
        [S$1.FloatingActionButtonThemeData_hoverColor]: null,
        [S$1.FloatingActionButtonThemeData_focusColor]: null,
        [S$1.FloatingActionButtonThemeData_backgroundColor]: null,
        [S$1.FloatingActionButtonThemeData_foregroundColor]: null
      });
    },
    get C2212() {
      return C[2212] = dart.const({
        __proto__: snack_bar_theme.SnackBarThemeData.prototype,
        [S$.behavior$1]: null,
        [S$.shape$12]: null,
        [S$.elevation$8]: null,
        [S$.contentTextStyle$1]: null,
        [S$.disabledActionTextColor]: null,
        [S$.actionTextColor]: null,
        [S$.backgroundColor$7]: null
      });
    },
    get C2213() {
      return C[2213] = dart.const({
        __proto__: bottom_sheet_theme.BottomSheetThemeData.prototype,
        [S$1.BottomSheetThemeData_clipBehavior]: null,
        [S$1.BottomSheetThemeData_shape]: null,
        [S$1.BottomSheetThemeData_modalElevation]: null,
        [S$1.BottomSheetThemeData_modalBackgroundColor]: null,
        [S$1.BottomSheetThemeData_elevation]: null,
        [S$1.BottomSheetThemeData_backgroundColor]: null
      });
    },
    get C2214() {
      return C[2214] = dart.const({
        __proto__: popup_menu_theme.PopupMenuThemeData.prototype,
        [S$.enableFeedback$6]: null,
        [S$.textStyle$2]: null,
        [S$.elevation$11]: null,
        [S$.shape$13]: null,
        [S$.color$9]: null
      });
    },
    get C2215() {
      return C[2215] = dart.const({
        __proto__: banner_theme.MaterialBannerThemeData.prototype,
        [S$0.leadingPadding]: null,
        [S$0.padding$12]: null,
        [S$0.contentTextStyle$3]: null,
        [S$0.backgroundColor$15]: null
      });
    },
    get C2216() {
      return C[2216] = dart.const({
        __proto__: divider_theme.DividerThemeData.prototype,
        [S$0.endIndent$2]: null,
        [S$0.indent$2]: null,
        [S$0.thickness$3]: null,
        [S$0.space]: null,
        [S$0.color$10]: null
      });
    },
    get C2217() {
      return C[2217] = dart.const({
        __proto__: button_bar_theme.ButtonBarThemeData.prototype,
        [S$1.ButtonBarThemeData_overflowDirection]: null,
        [S$1.ButtonBarThemeData_layoutBehavior]: null,
        [S$1.ButtonBarThemeData_buttonAlignedDropdown]: null,
        [S$1.ButtonBarThemeData_buttonPadding]: null,
        [S$1.ButtonBarThemeData_buttonHeight]: null,
        [S$1.ButtonBarThemeData_buttonMinWidth]: null,
        [S$1.ButtonBarThemeData_buttonTextTheme]: null,
        [S$1.ButtonBarThemeData_mainAxisSize]: null,
        [S$1.ButtonBarThemeData_alignment]: null
      });
    },
    get C2218() {
      return C[2218] = dart.const({
        __proto__: bottom_navigation_bar_theme.BottomNavigationBarThemeData.prototype,
        [S$0.type$2]: null,
        [S$0.showUnselectedLabels$3]: null,
        [S$0.showSelectedLabels$3]: null,
        [S$0.unselectedLabelStyle$6]: null,
        [S$0.selectedLabelStyle$3]: null,
        [S$0.unselectedItemColor$1]: null,
        [S$0.selectedItemColor$1]: null,
        [S$0.unselectedIconTheme$5]: null,
        [S$0.selectedIconTheme$5]: null,
        [S$0.elevation$19]: null,
        [S$0.backgroundColor$14]: null
      });
    },
    get C2219() {
      return C[2219] = dart.const({
        __proto__: time_picker_theme.TimePickerThemeData.prototype,
        [S$.inputDecorationTheme]: null,
        [S$.dayPeriodBorderSide]: null,
        [S$.dayPeriodShape]: null,
        [S$.hourMinuteShape]: null,
        [S$.shape$11]: null,
        [S$.helpTextStyle]: null,
        [S$.dayPeriodTextStyle]: null,
        [S$.hourMinuteTextStyle]: null,
        [S$.entryModeIconColor]: null,
        [S$.dialTextColor]: null,
        [S$.dialBackgroundColor]: null,
        [S$.dialHandColor]: null,
        [S$.dayPeriodColor]: null,
        [S$.dayPeriodTextColor]: null,
        [S$.hourMinuteColor]: null,
        [S$.hourMinuteTextColor]: null,
        [S$.backgroundColor$5]: null
      });
    },
    get C2220() {
      return C[2220] = dart.const({
        __proto__: text_button_theme.TextButtonThemeData.prototype,
        [S$.style$2]: null
      });
    },
    get C2221() {
      return C[2221] = dart.const({
        __proto__: elevated_button_theme.ElevatedButtonThemeData.prototype,
        [S$0.style$5]: null
      });
    },
    get C2222() {
      return C[2222] = dart.const({
        __proto__: outlined_button_theme.OutlinedButtonThemeData.prototype,
        [S$.style$3]: null
      });
    },
    get C2223() {
      return C[2223] = dart.const({
        __proto__: text_selection_theme.TextSelectionThemeData.prototype,
        [S$.selectionHandleColor]: null,
        [S$.selectionColor]: null,
        [S$.cursorColor]: null
      });
    },
    get C2224() {
      return C[2224] = dart.const({
        __proto__: data_table_theme.DataTableThemeData.prototype,
        [S$0.dividerThickness]: null,
        [S$0.columnSpacing]: null,
        [S$0.horizontalMargin]: null,
        [S$0.headingTextStyle]: null,
        [S$0.headingRowHeight]: null,
        [S$0.headingRowColor]: null,
        [S$0.dataTextStyle]: null,
        [S$0.dataRowHeight]: null,
        [S$0.dataRowColor]: null,
        [S$0.decoration$2]: null
      });
    },
    get C2225() {
      return C[2225] = dart.const({
        __proto__: checkbox_theme.CheckboxThemeData.prototype,
        [S$0.visualDensity$9]: null,
        [S$0.materialTapTargetSize$6]: null,
        [S$0.splashRadius$3]: null,
        [S$0.overlayColor$5]: null,
        [S$0.checkColor]: null,
        [S$0.fillColor$6]: null,
        [S$0.mouseCursor$10]: null
      });
    },
    get C2226() {
      return C[2226] = dart.const({
        __proto__: radio_theme.RadioThemeData.prototype,
        [S$.visualDensity$6]: null,
        [S$.materialTapTargetSize$5]: null,
        [S$.splashRadius$2]: null,
        [S$.overlayColor$3]: null,
        [S$.fillColor$2]: null,
        [S$.mouseCursor$8]: null
      });
    },
    get C2227() {
      return C[2227] = dart.const({
        __proto__: switch_theme.SwitchThemeData.prototype,
        [S$.splashRadius$1]: null,
        [S$.overlayColor$1]: null,
        [S$.mouseCursor$7]: null,
        [S$.materialTapTargetSize$4]: null,
        [S$.trackColor]: null,
        [S$.thumbColor]: null
      });
    },
    get C2232() {
      return C[2232] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4285887861.0
      });
    },
    get C2233() {
      return C[2233] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4288256409.0
      });
    },
    get C2231() {
      return C[2231] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$1.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[2232] || CT.C2232,
        [S$1.CupertinoDynamicColor_highContrastElevatedColor]: C[2233] || CT.C2233,
        [S$1.CupertinoDynamicColor_darkElevatedColor]: C[2232] || CT.C2232,
        [S$1.CupertinoDynamicColor_elevatedColor]: C[2233] || CT.C2233,
        [S$1.CupertinoDynamicColor_darkHighContrastColor]: C[2232] || CT.C2232,
        [S$1.CupertinoDynamicColor_highContrastColor]: C[2233] || CT.C2233,
        [S$1.CupertinoDynamicColor_darkColor]: C[2232] || CT.C2232,
        [S$1.CupertinoDynamicColor_color]: C[2233] || CT.C2233,
        [S$1.CupertinoDynamicColor__debugResolveContext]: null,
        [S$1.CupertinoDynamicColor__debugLabel]: "inactiveGray",
        [S$1.CupertinoDynamicColor__effectiveColor]: C[2233] || CT.C2233
      });
    },
    get C2234() {
      return C[2234] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$1.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[2199] || CT.C2199,
        [S$1.CupertinoDynamicColor_highContrastElevatedColor]: C[159] || CT.C159,
        [S$1.CupertinoDynamicColor_darkElevatedColor]: C[2199] || CT.C2199,
        [S$1.CupertinoDynamicColor_elevatedColor]: C[159] || CT.C159,
        [S$1.CupertinoDynamicColor_darkHighContrastColor]: C[2199] || CT.C2199,
        [S$1.CupertinoDynamicColor_highContrastColor]: C[159] || CT.C159,
        [S$1.CupertinoDynamicColor_darkColor]: C[2199] || CT.C2199,
        [S$1.CupertinoDynamicColor_color]: C[159] || CT.C159,
        [S$1.CupertinoDynamicColor__debugResolveContext]: null,
        [S$1.CupertinoDynamicColor__debugLabel]: "label",
        [S$1.CupertinoDynamicColor__effectiveColor]: C[159] || CT.C159
      });
    },
    get C2230() {
      return C[2230] = dart.const({
        __proto__: theme._CupertinoTextThemeDefaults.prototype,
        [S$1._CupertinoTextThemeDefaults_inactiveGray]: C[2231] || CT.C2231,
        [S$1._CupertinoTextThemeDefaults_labelColor]: C[2234] || CT.C2234
      });
    },
    get C2236() {
      return C[2236] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280558630.0
      });
    },
    get C2237() {
      return C[2237] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280032286.0
      });
    },
    get C2235() {
      return C[2235] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$1.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[2236] || CT.C2236,
        [S$1.CupertinoDynamicColor_highContrastElevatedColor]: C[2199] || CT.C2199,
        [S$1.CupertinoDynamicColor_darkElevatedColor]: C[2237] || CT.C2237,
        [S$1.CupertinoDynamicColor_elevatedColor]: C[2199] || CT.C2199,
        [S$1.CupertinoDynamicColor_darkHighContrastColor]: C[159] || CT.C159,
        [S$1.CupertinoDynamicColor_highContrastColor]: C[2199] || CT.C2199,
        [S$1.CupertinoDynamicColor_darkColor]: C[159] || CT.C159,
        [S$1.CupertinoDynamicColor_color]: C[2199] || CT.C2199,
        [S$1.CupertinoDynamicColor__debugResolveContext]: null,
        [S$1.CupertinoDynamicColor__debugLabel]: "systemBackground",
        [S$1.CupertinoDynamicColor__effectiveColor]: C[2199] || CT.C2199
      });
    },
    get C2239() {
      return C[2239] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4028439837.0
      });
    },
    get C2240() {
      return C[2240] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4042914297.0
      });
    },
    get C2238() {
      return C[2238] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$1.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[2239] || CT.C2239,
        [S$1.CupertinoDynamicColor_highContrastElevatedColor]: C[2240] || CT.C2240,
        [S$1.CupertinoDynamicColor_darkElevatedColor]: C[2239] || CT.C2239,
        [S$1.CupertinoDynamicColor_elevatedColor]: C[2240] || CT.C2240,
        [S$1.CupertinoDynamicColor_darkHighContrastColor]: C[2239] || CT.C2239,
        [S$1.CupertinoDynamicColor_highContrastColor]: C[2240] || CT.C2240,
        [S$1.CupertinoDynamicColor_darkColor]: C[2239] || CT.C2239,
        [S$1.CupertinoDynamicColor_color]: C[2240] || CT.C2240,
        [S$1.CupertinoDynamicColor__debugResolveContext]: null,
        [S$1.CupertinoDynamicColor__debugLabel]: null,
        [S$1.CupertinoDynamicColor__effectiveColor]: C[2240] || CT.C2240
      });
    },
    get C2242() {
      return C[2242] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4282424575.0
      });
    },
    get C2243() {
      return C[2243] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278206685.0
      });
    },
    get C2244() {
      return C[2244] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278879487.0
      });
    },
    get C2245() {
      return C[2245] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278221567.0
      });
    },
    get C2241() {
      return C[2241] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$1.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[2242] || CT.C2242,
        [S$1.CupertinoDynamicColor_highContrastElevatedColor]: C[2243] || CT.C2243,
        [S$1.CupertinoDynamicColor_darkElevatedColor]: C[2244] || CT.C2244,
        [S$1.CupertinoDynamicColor_elevatedColor]: C[2245] || CT.C2245,
        [S$1.CupertinoDynamicColor_darkHighContrastColor]: C[2242] || CT.C2242,
        [S$1.CupertinoDynamicColor_highContrastColor]: C[2243] || CT.C2243,
        [S$1.CupertinoDynamicColor_darkColor]: C[2244] || CT.C2244,
        [S$1.CupertinoDynamicColor_color]: C[2245] || CT.C2245,
        [S$1.CupertinoDynamicColor__debugResolveContext]: null,
        [S$1.CupertinoDynamicColor__debugLabel]: "systemBlue",
        [S$1.CupertinoDynamicColor__effectiveColor]: C[2245] || CT.C2245
      });
    },
    get C2229() {
      return C[2229] = dart.const({
        __proto__: theme._CupertinoThemeDefaults.prototype,
        [S$1._CupertinoThemeDefaults_textThemeDefaults]: C[2230] || CT.C2230,
        [S$1._CupertinoThemeDefaults_scaffoldBackgroundColor]: C[2235] || CT.C2235,
        [S$1._CupertinoThemeDefaults_barBackgroundColor]: C[2238] || CT.C2238,
        [S$1._CupertinoThemeDefaults_primaryContrastingColor]: C[2235] || CT.C2235,
        [S$1._CupertinoThemeDefaults_primaryColor]: C[2241] || CT.C2241,
        [S$1._CupertinoThemeDefaults_brightness]: null
      });
    },
    get C2228() {
      return C[2228] = dart.const({
        __proto__: theme.CupertinoThemeData.prototype,
        [S$1.NoDefaultCupertinoThemeData_scaffoldBackgroundColor]: null,
        [S$1.NoDefaultCupertinoThemeData_barBackgroundColor]: null,
        [S$1.NoDefaultCupertinoThemeData_textTheme]: null,
        [S$1.NoDefaultCupertinoThemeData_primaryContrastingColor]: null,
        [S$1.NoDefaultCupertinoThemeData_primaryColor]: null,
        [S$1.NoDefaultCupertinoThemeData_brightness]: null,
        [S$1.CupertinoThemeData__defaults]: C[2229] || CT.C2229
      });
    },
    get C2246() {
      return C[2246] = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [S.VisualDensity_vertical]: -1,
        [S.VisualDensity_horizontal]: -1
      });
    },
    get C2247() {
      return C[2247] = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [S.VisualDensity_vertical]: -2,
        [S.VisualDensity_horizontal]: -2
      });
    },
    get C2248() {
      return C[2248] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 1723645116
      });
    },
    get C2249() {
      return C[2249] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 1724434632
      });
    },
    get C2250() {
      return C[2250] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 1087163596
      });
    },
    get C2251() {
      return C[2251] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4284612846.0
      });
    },
    get C2252() {
      return C[2252] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4281794739.0
      });
    },
    get C2253() {
      return C[2253] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278442694.0
      });
    },
    get C2254() {
      return C[2254] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278290310.0
      });
    },
    get C2255() {
      return C[2255] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4289724448.0
      });
    },
    get C2256() {
      return C[2256] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4290479868.0
      });
    },
    get C2257() {
      return C[2257] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279374354.0
      });
    },
    get C2258() {
      return C[2258] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4291782265.0
      });
    },
    get C2259() {
      return C[2259] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278190266.0
      });
    },
    get C2260() {
      return C[2260] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278190216.0
      });
    },
    get C2261() {
      return C[2261] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4284940281.0
      });
    },
    get C2262() {
      return C[2262] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4286119936.0
      });
    },
    get C2263() {
      return C[2263] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4293900287.0
      });
    },
    get C2264() {
      return C[2264] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4290682623.0
      });
    },
    get C2265() {
      return C[2265] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4288362317.0
      });
    },
    get C2268() {
      return C[2268] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4293128957.0
      });
    },
    get C2269() {
      return C[2269] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4290502395.0
      });
    },
    get C2270() {
      return C[2270] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4287679225.0
      });
    },
    get C2271() {
      return C[2271] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4284790262.0
      });
    },
    get C2272() {
      return C[2272] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4282557941.0
      });
    },
    get C2273() {
      return C[2273] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280391411.0
      });
    },
    get C2274() {
      return C[2274] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280191205.0
      });
    },
    get C2275() {
      return C[2275] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279858898.0
      });
    },
    get C2276() {
      return C[2276] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279592384.0
      });
    },
    get C2277() {
      return C[2277] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279060385.0
      });
    },
    get C2267() {
      return C[2267] = dart.constMap(T$.intL(), T$.ColorL(), [50, C[2268] || CT.C2268, 100, C[2269] || CT.C2269, 200, C[2270] || CT.C2270, 300, C[2271] || CT.C2271, 400, C[2272] || CT.C2272, 500, C[2273] || CT.C2273, 600, C[2274] || CT.C2274, 700, C[2275] || CT.C2275, 800, C[2276] || CT.C2276, 900, C[2277] || CT.C2277]);
    },
    get C2266() {
      return C[2266] = dart.const({
        __proto__: colors$.MaterialColor.prototype,
        [S.Color_value]: 4280391411.0,
        [S$1.ColorSwatch__swatch]: C[2267] || CT.C2267
      });
    },
    get C2278() {
      return C[2278] = dart.const({
        __proto__: color_scheme.ColorScheme.prototype,
        [S$1.brightness$2]: C[543] || CT.C543,
        [S$1.onError]: C[2199] || CT.C2199,
        [S$1.onBackground]: C[159] || CT.C159,
        [S$1.onSurface]: C[159] || CT.C159,
        [S$1.onSecondary]: C[159] || CT.C159,
        [S$1.onPrimary]: C[2199] || CT.C2199,
        [S$1.error]: C[2255] || CT.C2255,
        [S$1.background$1]: C[2199] || CT.C2199,
        [S$1.surface]: C[2199] || CT.C2199,
        [S$1.secondaryVariant]: C[2254] || CT.C2254,
        [S$1.secondary]: C[2253] || CT.C2253,
        [S$1.primaryVariant]: C[2252] || CT.C2252,
        [S$1.primary]: C[2251] || CT.C2251
      });
    },
    get C2279() {
      return C[2279] = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [S$1._name$22]: "ButtonTextTheme.normal",
        index: 0
      });
    },
    get C2280() {
      return C[2280] = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [S$1._name$22]: "ButtonTextTheme.accent",
        index: 1
      });
    },
    get C2281() {
      return C[2281] = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [S$1._name$22]: "ButtonTextTheme.primary",
        index: 2
      });
    },
    get C2282() {
      return C[2282] = dart.constList([C[2279] || CT.C2279, C[2280] || CT.C2280, C[2281] || CT.C2281], T$.ButtonTextThemeL());
    },
    get C2283() {
      return C[2283] = dart.const({
        __proto__: button_theme.ButtonBarLayoutBehavior.prototype,
        [S$1._name$22]: "ButtonBarLayoutBehavior.constrained",
        index: 0
      });
    },
    get C2284() {
      return C[2284] = dart.const({
        __proto__: button_theme.ButtonBarLayoutBehavior.prototype,
        [S$1._name$22]: "ButtonBarLayoutBehavior.padded",
        index: 1
      });
    },
    get C2285() {
      return C[2285] = dart.constList([C[2283] || CT.C2283, C[2284] || CT.C2284], T$.ButtonBarLayoutBehaviorL());
    },
    get C2288() {
      return C[2288] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 44,
        [S._Location_line]: 161,
        [S._Location_file]: null
      });
    },
    get C2289() {
      return C[2289] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 56,
        [S._Location_line]: 161,
        [S._Location_file]: null
      });
    },
    get C2287() {
      return C[2287] = dart.constList([C[2288] || CT.C2288, C[2289] || CT.C2289], T$._LocationL());
    },
    get C2286() {
      return C[2286] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2287] || CT.C2287,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 161,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_theme.dart"
      });
    },
    get C2290() {
      return C[2290] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 24,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 24
      });
    },
    get C2293() {
      return C[2293] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 2,
        [S.Radius_x]: 2
      });
    },
    get C2292() {
      return C[2292] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[2293] || CT.C2293,
        [S.BorderRadius_bottomLeft]: C[2293] || CT.C2293,
        [S.BorderRadius_topRight]: C[2293] || CT.C2293,
        [S.BorderRadius_topLeft]: C[2293] || CT.C2293
      });
    },
    get C2291() {
      return C[2291] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[157] || CT.C157,
        [S.RoundedRectangleBorder_borderRadius]: C[2292] || CT.C2292
      });
    },
    get C2294() {
      return C[2294] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 0,
        [S$.EdgeInsetsDirectional_end]: 16,
        [S$.EdgeInsetsDirectional_top]: 0,
        [S$.EdgeInsetsDirectional_start]: 12
      });
    },
    get C2295() {
      return C[2295] = dart.const({
        __proto__: button_theme.ButtonThemeData.prototype,
        [S$1._materialTapTargetSize]: null,
        [S$1.colorScheme$1]: null,
        [S$1._splashColor]: null,
        [S$1._highlightColor]: null,
        [S$1._hoverColor]: null,
        [S$1._focusColor]: null,
        [S$1._disabledColor]: null,
        [S$1._buttonColor]: null,
        [S$1.alignedDropdown]: false,
        [S$1._shape$1]: null,
        [S$1._padding]: null,
        [S$1.layoutBehavior]: C[2284] || CT.C2284,
        [S$1.textTheme$3]: C[2279] || CT.C2279,
        [S$1.height$5]: 36,
        [S$1.minWidth$2]: 88
      });
    },
    get C2298() {
      return C[2298] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 13,
        [S._Location_line]: 193,
        [S._Location_file]: null
      });
    },
    get C2299() {
      return C[2299] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 194,
        [S._Location_file]: null
      });
    },
    get C2297() {
      return C[2297] = dart.constList([C[2298] || CT.C2298, C[2299] || CT.C2299], T$._LocationL());
    },
    get C2296() {
      return C[2296] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2297] || CT.C2297,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 192,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_bar.dart"
      });
    },
    get C2302() {
      return C[2302] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisAlignment",
        [S._Location_column]: 9,
        [S._Location_line]: 188,
        [S._Location_file]: null
      });
    },
    get C2303() {
      return C[2303] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 9,
        [S._Location_line]: 189,
        [S._Location_file]: null
      });
    },
    get C2304() {
      return C[2304] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflowDirection",
        [S._Location_column]: 9,
        [S._Location_line]: 190,
        [S._Location_file]: null
      });
    },
    get C2305() {
      return C[2305] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 191,
        [S._Location_file]: null
      });
    },
    get C2306() {
      return C[2306] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflowButtonSpacing",
        [S._Location_column]: 9,
        [S._Location_line]: 197,
        [S._Location_file]: null
      });
    },
    get C2301() {
      return C[2301] = dart.constList([C[2302] || CT.C2302, C[2303] || CT.C2303, C[2304] || CT.C2304, C[2305] || CT.C2305, C[2306] || CT.C2306], T$._LocationL());
    },
    get C2300() {
      return C[2300] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2301] || CT.C2301,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 187,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_bar.dart"
      });
    },
    get C2309() {
      return C[2309] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 7,
        [S._Location_line]: 186,
        [S._Location_file]: null
      });
    },
    get C2310() {
      return C[2310] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 187,
        [S._Location_file]: null
      });
    },
    get C2308() {
      return C[2308] = dart.constList([C[2309] || CT.C2309, C[2310] || CT.C2310], T$._LocationL());
    },
    get C2307() {
      return C[2307] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2308] || CT.C2308,
        [S._Location_name]: null,
        [S._Location_column]: 38,
        [S._Location_line]: 185,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_bar.dart"
      });
    },
    get C2313() {
      return C[2313] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 11,
        [S._Location_line]: 203,
        [S._Location_file]: null
      });
    },
    get C2314() {
      return C[2314] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 207,
        [S._Location_file]: null
      });
    },
    get C2312() {
      return C[2312] = dart.constList([C[2313] || CT.C2313, C[2314] || CT.C2314], T$._LocationL());
    },
    get C2311() {
      return C[2311] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2312] || CT.C2312,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 202,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_bar.dart"
      });
    },
    get C2315() {
      return C[2315] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 52,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 0
      });
    },
    get C2318() {
      return C[2318] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 11,
        [S._Location_line]: 211,
        [S._Location_file]: null
      });
    },
    get C2319() {
      return C[2319] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 11,
        [S._Location_line]: 212,
        [S._Location_file]: null
      });
    },
    get C2320() {
      return C[2320] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 11,
        [S._Location_line]: 213,
        [S._Location_file]: null
      });
    },
    get C2321() {
      return C[2321] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 214,
        [S._Location_file]: null
      });
    },
    get C2317() {
      return C[2317] = dart.constList([C[2318] || CT.C2318, C[2319] || CT.C2319, C[2320] || CT.C2320, C[2321] || CT.C2321], T$._LocationL());
    },
    get C2316() {
      return C[2316] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2317] || CT.C2317,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 210,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/button_bar.dart"
      });
    },
    get C2322() {
      return C[2322] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [S$1._name$23]: "Axis.horizontal",
        index: 0
      });
    },
    get C2323() {
      return C[2323] = dart.const({
        __proto__: flex.MainAxisSize.prototype,
        [S$1._name$24]: "MainAxisSize.max",
        index: 1
      });
    },
    get C2324() {
      return C[2324] = dart.const({
        __proto__: flex.MainAxisAlignment.prototype,
        [S$1._name$24]: "MainAxisAlignment.start",
        index: 0
      });
    },
    get C2325() {
      return C[2325] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [S$1._name$24]: "CrossAxisAlignment.center",
        index: 2
      });
    },
    get C2326() {
      return C[2326] = dart.const({
        __proto__: basic_types.VerticalDirection.prototype,
        [S$1._name$23]: "VerticalDirection.down",
        index: 1
      });
    },
    get C2327() {
      return C[2327] = dart.const({
        __proto__: basic_types.VerticalDirection.prototype,
        [S$1._name$23]: "VerticalDirection.up",
        index: 0
      });
    },
    get C2328() {
      return C[2328] = dart.const({
        __proto__: flex.MainAxisAlignment.prototype,
        [S$1._name$24]: "MainAxisAlignment.center",
        index: 2
      });
    },
    get C2329() {
      return C[2329] = dart.const({
        __proto__: flex.MainAxisAlignment.prototype,
        [S$1._name$24]: "MainAxisAlignment.end",
        index: 1
      });
    },
    get C2332() {
      return C[2332] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onNotification",
        [S._Location_column]: 9,
        [S._Location_line]: 264,
        [S._Location_file]: null
      });
    },
    get C2333() {
      return C[2333] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 265,
        [S._Location_file]: null
      });
    },
    get C2331() {
      return C[2331] = dart.constList([C[2332] || CT.C2332, C[2333] || CT.C2333], T$._LocationL());
    },
    get C2330() {
      return C[2330] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2331] || CT.C2331,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 263,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2336() {
      return C[2336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 7,
        [S._Location_line]: 258,
        [S._Location_file]: null
      });
    },
    get C2337() {
      return C[2337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 7,
        [S._Location_line]: 259,
        [S._Location_file]: null
      });
    },
    get C2338() {
      return C[2338] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 260,
        [S._Location_file]: null
      });
    },
    get C2339() {
      return C[2339] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 261,
        [S._Location_file]: null
      });
    },
    get C2340() {
      return C[2340] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 262,
        [S._Location_file]: null
      });
    },
    get C2341() {
      return C[2341] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 263,
        [S._Location_file]: null
      });
    },
    get C2335() {
      return C[2335] = dart.constList([C[2336] || CT.C2336, C[2337] || CT.C2337, C[2338] || CT.C2338, C[2339] || CT.C2339, C[2340] || CT.C2340, C[2341] || CT.C2341], T$._LocationL());
    },
    get C2334() {
      return C[2334] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2335] || CT.C2335,
        [S._Location_name]: null,
        [S._Location_column]: 32,
        [S._Location_line]: 257,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2344() {
      return C[2344] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onVerticalDragStart",
        [S._Location_column]: 7,
        [S._Location_line]: 269,
        [S._Location_file]: null
      });
    },
    get C2345() {
      return C[2345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onVerticalDragUpdate",
        [S._Location_column]: 7,
        [S._Location_line]: 270,
        [S._Location_file]: null
      });
    },
    get C2346() {
      return C[2346] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onVerticalDragEnd",
        [S._Location_column]: 7,
        [S._Location_line]: 271,
        [S._Location_file]: null
      });
    },
    get C2347() {
      return C[2347] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 272,
        [S._Location_file]: null
      });
    },
    get C2348() {
      return C[2348] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "excludeFromSemantics",
        [S._Location_column]: 7,
        [S._Location_line]: 273,
        [S._Location_file]: null
      });
    },
    get C2343() {
      return C[2343] = dart.constList([C[2344] || CT.C2344, C[2345] || CT.C2345, C[2346] || CT.C2346, C[2347] || CT.C2347, C[2348] || CT.C2348], T$._LocationL());
    },
    get C2342() {
      return C[2342] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2343] || CT.C2343,
        [S._Location_name]: null,
        [S._Location_column]: 47,
        [S._Location_line]: 268,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2351() {
      return C[2351] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animationController",
        [S._Location_column]: 11,
        [S._Location_line]: 381,
        [S._Location_file]: null
      });
    },
    get C2352() {
      return C[2352] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onClosing",
        [S._Location_column]: 11,
        [S._Location_line]: 382,
        [S._Location_file]: null
      });
    },
    get C2353() {
      return C[2353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 11,
        [S._Location_line]: 387,
        [S._Location_file]: null
      });
    },
    get C2354() {
      return C[2354] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "backgroundColor",
        [S._Location_column]: 11,
        [S._Location_line]: 388,
        [S._Location_file]: null
      });
    },
    get C2355() {
      return C[2355] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 11,
        [S._Location_line]: 389,
        [S._Location_file]: null
      });
    },
    get C2356() {
      return C[2356] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 11,
        [S._Location_line]: 390,
        [S._Location_file]: null
      });
    },
    get C2357() {
      return C[2357] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 11,
        [S._Location_line]: 391,
        [S._Location_file]: null
      });
    },
    get C2358() {
      return C[2358] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableDrag",
        [S._Location_column]: 11,
        [S._Location_line]: 392,
        [S._Location_file]: null
      });
    },
    get C2359() {
      return C[2359] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDragStart",
        [S._Location_column]: 11,
        [S._Location_line]: 393,
        [S._Location_file]: null
      });
    },
    get C2360() {
      return C[2360] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDragEnd",
        [S._Location_column]: 11,
        [S._Location_line]: 394,
        [S._Location_file]: null
      });
    },
    get C2350() {
      return C[2350] = dart.constList([C[2351] || CT.C2351, C[2352] || CT.C2352, C[2353] || CT.C2353, C[2354] || CT.C2354, C[2355] || CT.C2355, C[2356] || CT.C2356, C[2357] || CT.C2357, C[2358] || CT.C2358, C[2359] || CT.C2359, C[2360] || CT.C2360], T$._LocationL());
    },
    get C2349() {
      return C[2349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2350] || CT.C2350,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 380,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2363() {
      return C[2363] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 379,
        [S._Location_file]: null
      });
    },
    get C2362() {
      return C[2362] = dart.constList([C[2363] || CT.C2363, C[1429] || CT.C1429], T$._LocationL());
    },
    get C2361() {
      return C[2361] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2362] || CT.C2362,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 378,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2366() {
      return C[2366] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "delegate",
        [S._Location_column]: 15,
        [S._Location_line]: 410,
        [S._Location_file]: null
      });
    },
    get C2367() {
      return C[2367] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 411,
        [S._Location_file]: null
      });
    },
    get C2365() {
      return C[2365] = dart.constList([C[2366] || CT.C2366, C[2367] || CT.C2367], T$._LocationL());
    },
    get C2364() {
      return C[2364] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2365] || CT.C2365,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 409,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2370() {
      return C[2370] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 409,
        [S._Location_file]: null
      });
    },
    get C2369() {
      return C[2369] = dart.constList([C[2370] || CT.C2370], T$._LocationL());
    },
    get C2368() {
      return C[2368] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2369] || CT.C2369,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 408,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2373() {
      return C[2373] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scopesRoute",
        [S._Location_column]: 11,
        [S._Location_line]: 404,
        [S._Location_file]: null
      });
    },
    get C2374() {
      return C[2374] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "namesRoute",
        [S._Location_column]: 11,
        [S._Location_line]: 405,
        [S._Location_file]: null
      });
    },
    get C2375() {
      return C[2375] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "label",
        [S._Location_column]: 11,
        [S._Location_line]: 406,
        [S._Location_file]: null
      });
    },
    get C2376() {
      return C[2376] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "explicitChildNodes",
        [S._Location_column]: 11,
        [S._Location_line]: 407,
        [S._Location_file]: null
      });
    },
    get C2377() {
      return C[2377] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 408,
        [S._Location_file]: null
      });
    },
    get C2372() {
      return C[2372] = dart.constList([C[2373] || CT.C2373, C[2374] || CT.C2374, C[2375] || CT.C2375, C[2376] || CT.C2376, C[2377] || CT.C2377], T$._LocationL());
    },
    get C2371() {
      return C[2371] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2372] || CT.C2372,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 403,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2380() {
      return C[2380] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 377,
        [S._Location_file]: null
      });
    },
    get C2381() {
      return C[2381] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 7,
        [S._Location_line]: 397,
        [S._Location_file]: null
      });
    },
    get C2379() {
      return C[2379] = dart.constList([C[2380] || CT.C2380, C[1433] || CT.C1433, C[2381] || CT.C2381], T$._LocationL());
    },
    get C2378() {
      return C[2378] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2379] || CT.C2379,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 376,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2384() {
      return C[2384] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "route",
        [S._Location_column]: 13,
        [S._Location_line]: 487,
        [S._Location_file]: null
      });
    },
    get C2385() {
      return C[2385] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "backgroundColor",
        [S._Location_column]: 13,
        [S._Location_line]: 488,
        [S._Location_file]: null
      });
    },
    get C2386() {
      return C[2386] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 13,
        [S._Location_line]: 489,
        [S._Location_file]: null
      });
    },
    get C2387() {
      return C[2387] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 13,
        [S._Location_line]: 490,
        [S._Location_file]: null
      });
    },
    get C2388() {
      return C[2388] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 13,
        [S._Location_line]: 491,
        [S._Location_file]: null
      });
    },
    get C2389() {
      return C[2389] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "isScrollControlled",
        [S._Location_column]: 13,
        [S._Location_line]: 492,
        [S._Location_file]: null
      });
    },
    get C2390() {
      return C[2390] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableDrag",
        [S._Location_column]: 13,
        [S._Location_line]: 493,
        [S._Location_file]: null
      });
    },
    get C2383() {
      return C[2383] = dart.constList([C[2384] || CT.C2384, C[2385] || CT.C2385, C[2386] || CT.C2386, C[2387] || CT.C2387, C[2388] || CT.C2388, C[2389] || CT.C2389, C[2390] || CT.C2390], T$._LocationL());
    },
    get C2382() {
      return C[2382] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2383] || CT.C2383,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 486,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2393() {
      return C[2393] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 9,
        [S._Location_line]: 484,
        [S._Location_file]: null
      });
    },
    get C2392() {
      return C[2392] = dart.constList([C[2393] || CT.C2393], T$._LocationL());
    },
    get C2391() {
      return C[2391] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2392] || CT.C2392,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 483,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2396() {
      return C[2396] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "context",
        [S._Location_column]: 7,
        [S._Location_line]: 481,
        [S._Location_file]: null
      });
    },
    get C2397() {
      return C[2397] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "removeTop",
        [S._Location_column]: 7,
        [S._Location_line]: 482,
        [S._Location_file]: null
      });
    },
    get C2398() {
      return C[2398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 483,
        [S._Location_file]: null
      });
    },
    get C2395() {
      return C[2395] = dart.constList([C[2396] || CT.C2396, C[2397] || CT.C2397, C[2398] || CT.C2398], T$._LocationL());
    },
    get C2394() {
      return C[2394] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2395] || CT.C2395,
        [S._Location_name]: null,
        [S._Location_column]: 43,
        [S._Location_line]: 480,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2399() {
      return C[2399] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.355,
        [S.Cubic_b]: 0.61,
        [S.Cubic_a]: 0.215
      });
    },
    get C2400() {
      return C[2400] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.2,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0
      });
    },
    get C2401() {
      return C[2401] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.body",
        index: 0
      });
    },
    get C2402() {
      return C[2402] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.appBar",
        index: 1
      });
    },
    get C2403() {
      return C[2403] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.bodyScrim",
        index: 2
      });
    },
    get C2404() {
      return C[2404] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.bottomSheet",
        index: 3
      });
    },
    get C2405() {
      return C[2405] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.snackBar",
        index: 4
      });
    },
    get C2406() {
      return C[2406] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.persistentFooter",
        index: 5
      });
    },
    get C2407() {
      return C[2407] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.bottomNavigationBar",
        index: 6
      });
    },
    get C2408() {
      return C[2408] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.floatingActionButton",
        index: 7
      });
    },
    get C2409() {
      return C[2409] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.drawer",
        index: 8
      });
    },
    get C2410() {
      return C[2410] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.endDrawer",
        index: 9
      });
    },
    get C2411() {
      return C[2411] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S$1._name$25]: "_ScaffoldSlot.statusBar",
        index: 10
      });
    },
    get C2412() {
      return C[2412] = dart.constList([C[2401] || CT.C2401, C[2402] || CT.C2402, C[2403] || CT.C2403, C[2404] || CT.C2404, C[2405] || CT.C2405, C[2406] || CT.C2406, C[2407] || CT.C2407, C[2408] || CT.C2408, C[2409] || CT.C2409, C[2410] || CT.C2410, C[2411] || CT.C2411], T$._ScaffoldSlotL());
    },
    get C2415() {
      return C[2415] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scaffoldMessengerState",
        [S._Location_column]: 7,
        [S._Location_line]: 463,
        [S._Location_file]: null
      });
    },
    get C2416() {
      return C[2416] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 464,
        [S._Location_file]: null
      });
    },
    get C2414() {
      return C[2414] = dart.constList([C[2415] || CT.C2415, C[2416] || CT.C2416], T$._LocationL());
    },
    get C2413() {
      return C[2413] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2414] || CT.C2414,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 462,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2419() {
      return C[2419] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 11,
        [S._Location_line]: 815,
        [S._Location_file]: null
      });
    },
    get C2420() {
      return C[2420] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 821,
        [S._Location_file]: null
      });
    },
    get C2418() {
      return C[2418] = dart.constList([C[2419] || CT.C2419, C[2420] || CT.C2420], T$._LocationL());
    },
    get C2417() {
      return C[2417] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2418] || CT.C2418,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 814,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2423() {
      return C[2423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 7,
        [S._Location_line]: 802,
        [S._Location_file]: null
      });
    },
    get C2422() {
      return C[2422] = dart.constList([C[2423] || CT.C2423], T$._LocationL());
    },
    get C2421() {
      return C[2421] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2422] || CT.C2422,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 801,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2424() {
      return C[2424] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[91] || CT.C91,
        [S.Interval_end]: 0.1,
        [S.Interval_begin]: 0
      });
    },
    get C2427() {
      return C[2427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 15,
        [S._Location_line]: 1225,
        [S._Location_file]: null
      });
    },
    get C2428() {
      return C[2428] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 1226,
        [S._Location_file]: null
      });
    },
    get C2426() {
      return C[2426] = dart.constList([C[2427] || CT.C2427, C[2428] || CT.C2428], T$._LocationL());
    },
    get C2425() {
      return C[2425] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2426] || CT.C2426,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 1224,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2431() {
      return C[2431] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "turns",
        [S._Location_column]: 17,
        [S._Location_line]: 1232,
        [S._Location_file]: null
      });
    },
    get C2432() {
      return C[2432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 1233,
        [S._Location_file]: null
      });
    },
    get C2430() {
      return C[2430] = dart.constList([C[2431] || CT.C2431, C[2432] || CT.C2432], T$._LocationL());
    },
    get C2429() {
      return C[2429] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2430] || CT.C2430,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 1231,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2435() {
      return C[2435] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scale",
        [S._Location_column]: 15,
        [S._Location_line]: 1230,
        [S._Location_file]: null
      });
    },
    get C2436() {
      return C[2436] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 1231,
        [S._Location_file]: null
      });
    },
    get C2434() {
      return C[2434] = dart.constList([C[2435] || CT.C2435, C[2436] || CT.C2436], T$._LocationL());
    },
    get C2433() {
      return C[2433] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2434] || CT.C2434,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 1229,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2439() {
      return C[2439] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 15,
        [S._Location_line]: 1240,
        [S._Location_file]: null
      });
    },
    get C2440() {
      return C[2440] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 1241,
        [S._Location_file]: null
      });
    },
    get C2438() {
      return C[2438] = dart.constList([C[2439] || CT.C2439, C[2440] || CT.C2440], T$._LocationL());
    },
    get C2437() {
      return C[2437] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2438] || CT.C2438,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 1239,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2443() {
      return C[2443] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scale",
        [S._Location_column]: 13,
        [S._Location_line]: 1238,
        [S._Location_file]: null
      });
    },
    get C2444() {
      return C[2444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 1239,
        [S._Location_file]: null
      });
    },
    get C2442() {
      return C[2442] = dart.constList([C[2443] || CT.C2443, C[2444] || CT.C2444], T$._LocationL());
    },
    get C2441() {
      return C[2441] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2442] || CT.C2442,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 1237,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2447() {
      return C[2447] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "turns",
        [S._Location_column]: 15,
        [S._Location_line]: 1248,
        [S._Location_file]: null
      });
    },
    get C2448() {
      return C[2448] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 1249,
        [S._Location_file]: null
      });
    },
    get C2446() {
      return C[2446] = dart.constList([C[2447] || CT.C2447, C[2448] || CT.C2448], T$._LocationL());
    },
    get C2445() {
      return C[2445] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2446] || CT.C2446,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 1247,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2451() {
      return C[2451] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scale",
        [S._Location_column]: 13,
        [S._Location_line]: 1246,
        [S._Location_file]: null
      });
    },
    get C2452() {
      return C[2452] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 1247,
        [S._Location_file]: null
      });
    },
    get C2450() {
      return C[2450] = dart.constList([C[2451] || CT.C2451, C[2452] || CT.C2452], T$._LocationL());
    },
    get C2449() {
      return C[2449] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2450] || CT.C2450,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 1245,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2455() {
      return C[2455] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 7,
        [S._Location_line]: 1220,
        [S._Location_file]: null
      });
    },
    get C2456() {
      return C[2456] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 7,
        [S._Location_line]: 1221,
        [S._Location_file]: null
      });
    },
    get C2454() {
      return C[2454] = dart.constList([C[2455] || CT.C2455, C[2456] || CT.C2456], T$._LocationL());
    },
    get C2453() {
      return C[2453] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2454] || CT.C2454,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 1219,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2459() {
      return C[2459] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 17,
        [S._Location_line]: 2427,
        [S._Location_file]: null
      });
    },
    get C2460() {
      return C[2460] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 17,
        [S._Location_line]: 2428,
        [S._Location_file]: null
      });
    },
    get C2458() {
      return C[2458] = dart.constList([C[2459] || CT.C2459, C[2460] || CT.C2460], T$._LocationL());
    },
    get C2457() {
      return C[2457] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2458] || CT.C2458,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 2426,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2463() {
      return C[2463] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 2426,
        [S._Location_file]: null
      });
    },
    get C2462() {
      return C[2462] = dart.constList([C[2463] || CT.C2463], T$._LocationL());
    },
    get C2461() {
      return C[2461] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2462] || CT.C2462,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 2425,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2466() {
      return C[2466] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onNotification",
        [S._Location_column]: 13,
        [S._Location_line]: 2424,
        [S._Location_file]: null
      });
    },
    get C2467() {
      return C[2467] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 2425,
        [S._Location_file]: null
      });
    },
    get C2465() {
      return C[2465] = dart.constList([C[2466] || CT.C2466, C[2467] || CT.C2467], T$._LocationL());
    },
    get C2464() {
      return C[2464] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2465] || CT.C2465,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 2423,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2470() {
      return C[2470] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 7,
        [S._Location_line]: 2511,
        [S._Location_file]: null
      });
    },
    get C2471() {
      return C[2471] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animationController",
        [S._Location_column]: 7,
        [S._Location_line]: 2512,
        [S._Location_file]: null
      });
    },
    get C2472() {
      return C[2472] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableDrag",
        [S._Location_column]: 7,
        [S._Location_line]: 2513,
        [S._Location_file]: null
      });
    },
    get C2473() {
      return C[2473] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onClosing",
        [S._Location_column]: 7,
        [S._Location_line]: 2514,
        [S._Location_file]: null
      });
    },
    get C2474() {
      return C[2474] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDismissed",
        [S._Location_column]: 7,
        [S._Location_line]: 2525,
        [S._Location_file]: null
      });
    },
    get C2475() {
      return C[2475] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 7,
        [S._Location_line]: 2532,
        [S._Location_file]: null
      });
    },
    get C2476() {
      return C[2476] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "isPersistent",
        [S._Location_column]: 7,
        [S._Location_line]: 2533,
        [S._Location_file]: null
      });
    },
    get C2477() {
      return C[2477] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "backgroundColor",
        [S._Location_column]: 7,
        [S._Location_line]: 2534,
        [S._Location_file]: null
      });
    },
    get C2478() {
      return C[2478] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 2535,
        [S._Location_file]: null
      });
    },
    get C2479() {
      return C[2479] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 2536,
        [S._Location_file]: null
      });
    },
    get C2480() {
      return C[2480] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 2537,
        [S._Location_file]: null
      });
    },
    get C2469() {
      return C[2469] = dart.constList([C[2470] || CT.C2470, C[2471] || CT.C2471, C[2472] || CT.C2472, C[2473] || CT.C2473, C[2474] || CT.C2474, C[2475] || CT.C2475, C[2476] || CT.C2476, C[2477] || CT.C2477, C[2478] || CT.C2478, C[2479] || CT.C2479, C[2480] || CT.C2480], T$._LocationL());
    },
    get C2468() {
      return C[2468] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2469] || CT.C2469,
        [S._Location_name]: null,
        [S._Location_column]: 19,
        [S._Location_line]: 2510,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2481() {
      return C[2481] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 300000
      });
    },
    get C2482() {
      return C[2482] = dart.const({
        __proto__: scaffold$.ScaffoldGeometry.prototype,
        [S$1.floatingActionButtonArea]: null,
        [S$1.bottomNavigationBarTop]: null
      });
    },
    get C2485() {
      return C[2485] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 29,
        [S._Location_line]: 2879,
        [S._Location_file]: null
      });
    },
    get C2486() {
      return C[2486] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 41,
        [S._Location_line]: 2879,
        [S._Location_file]: null
      });
    },
    get C2484() {
      return C[2484] = dart.constList([C[2485] || CT.C2485, C[2486] || CT.C2486], T$._LocationL());
    },
    get C2483() {
      return C[2483] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2484] || CT.C2484,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 2879,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2489() {
      return C[2489] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 11,
        [S._Location_line]: 2878,
        [S._Location_file]: null
      });
    },
    get C2490() {
      return C[2490] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 2879,
        [S._Location_file]: null
      });
    },
    get C2488() {
      return C[2488] = dart.constList([C[2489] || CT.C2489, C[2490] || CT.C2490], T$._LocationL());
    },
    get C2487() {
      return C[2487] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2488] || CT.C2488,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 2877,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2493() {
      return C[2493] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 11,
        [S._Location_line]: 2891,
        [S._Location_file]: null
      });
    },
    get C2494() {
      return C[2494] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 11,
        [S._Location_line]: 2892,
        [S._Location_file]: null
      });
    },
    get C2495() {
      return C[2495] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 2893,
        [S._Location_file]: null
      });
    },
    get C2496() {
      return C[2496] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "drawerCallback",
        [S._Location_column]: 11,
        [S._Location_line]: 2894,
        [S._Location_file]: null
      });
    },
    get C2497() {
      return C[2497] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dragStartBehavior",
        [S._Location_column]: 11,
        [S._Location_line]: 2895,
        [S._Location_file]: null
      });
    },
    get C2498() {
      return C[2498] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scrimColor",
        [S._Location_column]: 11,
        [S._Location_line]: 2896,
        [S._Location_file]: null
      });
    },
    get C2499() {
      return C[2499] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "edgeDragWidth",
        [S._Location_column]: 11,
        [S._Location_line]: 2897,
        [S._Location_file]: null
      });
    },
    get C2500() {
      return C[2500] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableOpenDragGesture",
        [S._Location_column]: 11,
        [S._Location_line]: 2898,
        [S._Location_file]: null
      });
    },
    get C2501() {
      return C[2501] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "isDrawerOpen",
        [S._Location_column]: 11,
        [S._Location_line]: 2899,
        [S._Location_file]: null
      });
    },
    get C2492() {
      return C[2492] = dart.constList([C[2493] || CT.C2493, C[2494] || CT.C2494, C[2495] || CT.C2495, C[2496] || CT.C2496, C[2497] || CT.C2497, C[2498] || CT.C2498, C[2499] || CT.C2499, C[2500] || CT.C2500, C[2501] || CT.C2501], T$._LocationL());
    },
    get C2491() {
      return C[2491] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2492] || CT.C2492,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 2890,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2504() {
      return C[2504] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 11,
        [S._Location_line]: 2917,
        [S._Location_file]: null
      });
    },
    get C2505() {
      return C[2505] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 11,
        [S._Location_line]: 2918,
        [S._Location_file]: null
      });
    },
    get C2506() {
      return C[2506] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 2919,
        [S._Location_file]: null
      });
    },
    get C2507() {
      return C[2507] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "drawerCallback",
        [S._Location_column]: 11,
        [S._Location_line]: 2920,
        [S._Location_file]: null
      });
    },
    get C2508() {
      return C[2508] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dragStartBehavior",
        [S._Location_column]: 11,
        [S._Location_line]: 2921,
        [S._Location_file]: null
      });
    },
    get C2509() {
      return C[2509] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "scrimColor",
        [S._Location_column]: 11,
        [S._Location_line]: 2922,
        [S._Location_file]: null
      });
    },
    get C2510() {
      return C[2510] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "edgeDragWidth",
        [S._Location_column]: 11,
        [S._Location_line]: 2923,
        [S._Location_file]: null
      });
    },
    get C2511() {
      return C[2511] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableOpenDragGesture",
        [S._Location_column]: 11,
        [S._Location_line]: 2924,
        [S._Location_file]: null
      });
    },
    get C2512() {
      return C[2512] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "isDrawerOpen",
        [S._Location_column]: 11,
        [S._Location_line]: 2925,
        [S._Location_file]: null
      });
    },
    get C2503() {
      return C[2503] = dart.constList([C[2504] || CT.C2504, C[2505] || CT.C2505, C[2506] || CT.C2506, C[2507] || CT.C2507, C[2508] || CT.C2508, C[2509] || CT.C2509, C[2510] || CT.C2510, C[2511] || CT.C2511, C[2512] || CT.C2512], T$._LocationL());
    },
    get C2502() {
      return C[2502] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2503] || CT.C2503,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 2916,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2515() {
      return C[2515] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "extendBody",
        [S._Location_column]: 9,
        [S._Location_line]: 2989,
        [S._Location_file]: null
      });
    },
    get C2516() {
      return C[2516] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "extendBodyBehindAppBar",
        [S._Location_column]: 9,
        [S._Location_line]: 2990,
        [S._Location_file]: null
      });
    },
    get C2517() {
      return C[2517] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "body",
        [S._Location_column]: 9,
        [S._Location_line]: 2991,
        [S._Location_file]: null
      });
    },
    get C2514() {
      return C[2514] = dart.constList([C[2515] || CT.C2515, C[2516] || CT.C2516, C[2517] || CT.C2517], T$._LocationL());
    },
    get C2513() {
      return C[2513] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2514] || CT.C2514,
        [S._Location_name]: null,
        [S._Location_column]: 36,
        [S._Location_line]: 2988,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2520() {
      return C[2520] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dismissible",
        [S._Location_column]: 11,
        [S._Location_line]: 3004,
        [S._Location_file]: null
      });
    },
    get C2521() {
      return C[2521] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 11,
        [S._Location_line]: 3005,
        [S._Location_file]: null
      });
    },
    get C2519() {
      return C[2519] = dart.constList([C[2520] || CT.C2520, C[2521] || CT.C2521], T$._LocationL());
    },
    get C2518() {
      return C[2518] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2519] || CT.C2519,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 3003,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2524() {
      return C[2524] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 11,
        [S._Location_line]: 3022,
        [S._Location_file]: null
      });
    },
    get C2525() {
      return C[2525] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 3023,
        [S._Location_file]: null
      });
    },
    get C2523() {
      return C[2523] = dart.constList([C[2524] || CT.C2524, C[2525] || CT.C2525], T$._LocationL());
    },
    get C2522() {
      return C[2522] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2523] || CT.C2523,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 3021,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2528() {
      return C[2528] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 9,
        [S._Location_line]: 3050,
        [S._Location_file]: null
      });
    },
    get C2529() {
      return C[2529] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 3051,
        [S._Location_file]: null
      });
    },
    get C2527() {
      return C[2527] = dart.constList([C[2528] || CT.C2528, C[2529] || CT.C2529], T$._LocationL());
    },
    get C2526() {
      return C[2526] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2527] || CT.C2527,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 3049,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2532() {
      return C[2532] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 15,
        [S._Location_line]: 3120,
        [S._Location_file]: null
      });
    },
    get C2531() {
      return C[2531] = dart.constList([C[2532] || CT.C2532], T$._LocationL());
    },
    get C2530() {
      return C[2530] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2531] || CT.C2531,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 3119,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2535() {
      return C[2535] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "top",
        [S._Location_column]: 13,
        [S._Location_line]: 3118,
        [S._Location_file]: null
      });
    },
    get C2536() {
      return C[2536] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 3119,
        [S._Location_file]: null
      });
    },
    get C2534() {
      return C[2534] = dart.constList([C[2535] || CT.C2535, C[2536] || CT.C2536], T$._LocationL());
    },
    get C2533() {
      return C[2533] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2534] || CT.C2534,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 3117,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2539() {
      return C[2539] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "decoration",
        [S._Location_column]: 11,
        [S._Location_line]: 3112,
        [S._Location_file]: null
      });
    },
    get C2540() {
      return C[2540] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 3117,
        [S._Location_file]: null
      });
    },
    get C2538() {
      return C[2538] = dart.constList([C[2539] || CT.C2539, C[2540] || CT.C2540], T$._LocationL());
    },
    get C2537() {
      return C[2537] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2538] || CT.C2538,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 3111,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2543() {
      return C[2543] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 3149,
        [S._Location_file]: null
      });
    },
    get C2544() {
      return C[2544] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "fabMoveAnimation",
        [S._Location_column]: 9,
        [S._Location_line]: 3150,
        [S._Location_file]: null
      });
    },
    get C2545() {
      return C[2545] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "fabMotionAnimator",
        [S._Location_column]: 9,
        [S._Location_line]: 3151,
        [S._Location_file]: null
      });
    },
    get C2546() {
      return C[2546] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "geometryNotifier",
        [S._Location_column]: 9,
        [S._Location_line]: 3152,
        [S._Location_file]: null
      });
    },
    get C2547() {
      return C[2547] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "currentController",
        [S._Location_column]: 9,
        [S._Location_line]: 3153,
        [S._Location_file]: null
      });
    },
    get C2542() {
      return C[2542] = dart.constList([C[2543] || CT.C2543, C[2544] || CT.C2544, C[2545] || CT.C2545, C[2546] || CT.C2546, C[2547] || CT.C2547], T$._LocationL());
    },
    get C2541() {
      return C[2541] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2542] || CT.C2542,
        [S._Location_name]: null,
        [S._Location_column]: 7,
        [S._Location_line]: 3148,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2550() {
      return C[2550] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "behavior",
        [S._Location_column]: 13,
        [S._Location_line]: 3168,
        [S._Location_file]: null
      });
    },
    get C2551() {
      return C[2551] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 13,
        [S._Location_line]: 3169,
        [S._Location_file]: null
      });
    },
    get C2552() {
      return C[2552] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "excludeFromSemantics",
        [S._Location_column]: 13,
        [S._Location_line]: 3171,
        [S._Location_file]: null
      });
    },
    get C2549() {
      return C[2549] = dart.constList([C[2550] || CT.C2550, C[2551] || CT.C2551, C[2552] || CT.C2552], T$._LocationL());
    },
    get C2548() {
      return C[2548] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2549] || CT.C2549,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 3167,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2555() {
      return C[2555] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 13,
        [S._Location_line]: 3216,
        [S._Location_file]: null
      });
    },
    get C2556() {
      return C[2556] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "delegate",
        [S._Location_column]: 13,
        [S._Location_line]: 3217,
        [S._Location_file]: null
      });
    },
    get C2554() {
      return C[2554] = dart.constList([C[2555] || CT.C2555, C[2556] || CT.C2556], T$._LocationL());
    },
    get C2553() {
      return C[2553] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2554] || CT.C2554,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 3215,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2559() {
      return C[2559] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 32,
        [S._Location_line]: 3214,
        [S._Location_file]: null
      });
    },
    get C2560() {
      return C[2560] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 80,
        [S._Location_line]: 3214,
        [S._Location_file]: null
      });
    },
    get C2558() {
      return C[2558] = dart.constList([C[2559] || CT.C2559, C[2560] || CT.C2560], T$._LocationL());
    },
    get C2557() {
      return C[2557] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2558] || CT.C2558,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 3214,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2563() {
      return C[2563] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 9,
        [S._Location_line]: 3213,
        [S._Location_file]: null
      });
    },
    get C2564() {
      return C[2564] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 3214,
        [S._Location_file]: null
      });
    },
    get C2562() {
      return C[2562] = dart.constList([C[2563] || CT.C2563, C[2564] || CT.C2564], T$._LocationL());
    },
    get C2561() {
      return C[2561] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2562] || CT.C2562,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 3212,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2567() {
      return C[2567] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hasDrawer",
        [S._Location_column]: 7,
        [S._Location_line]: 3210,
        [S._Location_file]: null
      });
    },
    get C2568() {
      return C[2568] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "geometryNotifier",
        [S._Location_column]: 7,
        [S._Location_line]: 3211,
        [S._Location_file]: null
      });
    },
    get C2569() {
      return C[2569] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 3212,
        [S._Location_file]: null
      });
    },
    get C2566() {
      return C[2566] = dart.constList([C[2567] || CT.C2567, C[2568] || CT.C2568, C[2569] || CT.C2569], T$._LocationL());
    },
    get C2565() {
      return C[2565] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2566] || CT.C2566,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 3209,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2572() {
      return C[2572] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onNotification",
        [S._Location_column]: 9,
        [S._Location_line]: 3413,
        [S._Location_file]: null
      });
    },
    get C2573() {
      return C[2573] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 3414,
        [S._Location_file]: null
      });
    },
    get C2571() {
      return C[2571] = dart.constList([C[2572] || CT.C2572, C[2573] || CT.C2573], T$._LocationL());
    },
    get C2570() {
      return C[2570] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2571] || CT.C2571,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 3412,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2576() {
      return C[2576] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "container",
        [S._Location_column]: 7,
        [S._Location_line]: 3410,
        [S._Location_file]: null
      });
    },
    get C2577() {
      return C[2577] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDismiss",
        [S._Location_column]: 7,
        [S._Location_line]: 3411,
        [S._Location_file]: null
      });
    },
    get C2578() {
      return C[2578] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 3412,
        [S._Location_file]: null
      });
    },
    get C2575() {
      return C[2575] = dart.constList([C[2576] || CT.C2576, C[2577] || CT.C2577, C[2578] || CT.C2578], T$._LocationL());
    },
    get C2574() {
      return C[2574] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2575] || CT.C2575,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 3409,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2581() {
      return C[2581] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 11,
        [S._Location_line]: 3425,
        [S._Location_file]: null
      });
    },
    get C2582() {
      return C[2582] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "heightFactor",
        [S._Location_column]: 11,
        [S._Location_line]: 3426,
        [S._Location_file]: null
      });
    },
    get C2583() {
      return C[2583] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 3427,
        [S._Location_file]: null
      });
    },
    get C2580() {
      return C[2580] = dart.constList([C[2581] || CT.C2581, C[2582] || CT.C2582, C[2583] || CT.C2583], T$._LocationL());
    },
    get C2579() {
      return C[2579] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2580] || CT.C2580,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 3424,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2586() {
      return C[2586] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animationController",
        [S._Location_column]: 11,
        [S._Location_line]: 3432,
        [S._Location_file]: null
      });
    },
    get C2587() {
      return C[2587] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableDrag",
        [S._Location_column]: 11,
        [S._Location_line]: 3433,
        [S._Location_file]: null
      });
    },
    get C2588() {
      return C[2588] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDragStart",
        [S._Location_column]: 11,
        [S._Location_line]: 3434,
        [S._Location_file]: null
      });
    },
    get C2589() {
      return C[2589] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDragEnd",
        [S._Location_column]: 11,
        [S._Location_line]: 3435,
        [S._Location_file]: null
      });
    },
    get C2590() {
      return C[2590] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onClosing",
        [S._Location_column]: 11,
        [S._Location_line]: 3436,
        [S._Location_file]: null
      });
    },
    get C2591() {
      return C[2591] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 11,
        [S._Location_line]: 3437,
        [S._Location_file]: null
      });
    },
    get C2592() {
      return C[2592] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "backgroundColor",
        [S._Location_column]: 11,
        [S._Location_line]: 3438,
        [S._Location_file]: null
      });
    },
    get C2593() {
      return C[2593] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 11,
        [S._Location_line]: 3439,
        [S._Location_file]: null
      });
    },
    get C2594() {
      return C[2594] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 11,
        [S._Location_line]: 3440,
        [S._Location_file]: null
      });
    },
    get C2595() {
      return C[2595] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 11,
        [S._Location_line]: 3441,
        [S._Location_file]: null
      });
    },
    get C2585() {
      return C[2585] = dart.constList([C[2586] || CT.C2586, C[2587] || CT.C2587, C[2588] || CT.C2588, C[2589] || CT.C2589, C[2590] || CT.C2590, C[2591] || CT.C2591, C[2592] || CT.C2592, C[2593] || CT.C2593, C[2594] || CT.C2594, C[2595] || CT.C2595], T$._LocationL());
    },
    get C2584() {
      return C[2584] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2585] || CT.C2585,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 3431,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2598() {
      return C[2598] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animation",
        [S._Location_column]: 7,
        [S._Location_line]: 3422,
        [S._Location_file]: null
      });
    },
    get C2599() {
      return C[2599] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 7,
        [S._Location_line]: 3423,
        [S._Location_file]: null
      });
    },
    get C2600() {
      return C[2600] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 3430,
        [S._Location_file]: null
      });
    },
    get C2597() {
      return C[2597] = dart.constList([C[2598] || CT.C2598, C[2599] || CT.C2599, C[2600] || CT.C2600], T$._LocationL());
    },
    get C2596() {
      return C[2596] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2597] || CT.C2597,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 3421,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2601() {
      return C[2601] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S$1._name$26]: "MaterialType.canvas",
        index: 0
      });
    },
    get C2602() {
      return C[2602] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S$1._name$26]: "MaterialType.card",
        index: 1
      });
    },
    get C2603() {
      return C[2603] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S$1._name$26]: "MaterialType.circle",
        index: 2
      });
    },
    get C2604() {
      return C[2604] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S$1._name$26]: "MaterialType.button",
        index: 3
      });
    },
    get C2605() {
      return C[2605] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S$1._name$26]: "MaterialType.transparency",
        index: 4
      });
    },
    get C2606() {
      return C[2606] = dart.constList([C[2601] || CT.C2601, C[2602] || CT.C2602, C[2603] || CT.C2603, C[2604] || CT.C2604, C[2605] || CT.C2605], T$.MaterialTypeL());
    },
    get C2609() {
      return C[2609] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 9,
        [S._Location_line]: 371,
        [S._Location_file]: null
      });
    },
    get C2610() {
      return C[2610] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 9,
        [S._Location_line]: 372,
        [S._Location_file]: null
      });
    },
    get C2611() {
      return C[2611] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 373,
        [S._Location_file]: null
      });
    },
    get C2608() {
      return C[2608] = dart.constList([C[2609] || CT.C2609, C[2610] || CT.C2610, C[2611] || CT.C2611], T$._LocationL());
    },
    get C2607() {
      return C[2607] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2608] || CT.C2608,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 370,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2614() {
      return C[2614] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 9,
        [S._Location_line]: 383,
        [S._Location_file]: null
      });
    },
    get C2615() {
      return C[2615] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "absorbHitTest",
        [S._Location_column]: 9,
        [S._Location_line]: 384,
        [S._Location_file]: null
      });
    },
    get C2616() {
      return C[2616] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 9,
        [S._Location_line]: 385,
        [S._Location_file]: null
      });
    },
    get C2617() {
      return C[2617] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 386,
        [S._Location_file]: null
      });
    },
    get C2618() {
      return C[2618] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "vsync",
        [S._Location_column]: 9,
        [S._Location_line]: 387,
        [S._Location_file]: null
      });
    },
    get C2613() {
      return C[2613] = dart.constList([C[2614] || CT.C2614, C[2615] || CT.C2615, C[2616] || CT.C2616, C[2617] || CT.C2617, C[2618] || CT.C2618], T$._LocationL());
    },
    get C2612() {
      return C[2612] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2613] || CT.C2613,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 382,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2621() {
      return C[2621] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onNotification",
        [S._Location_column]: 7,
        [S._Location_line]: 377,
        [S._Location_file]: null
      });
    },
    get C2622() {
      return C[2622] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 382,
        [S._Location_file]: null
      });
    },
    get C2620() {
      return C[2620] = dart.constList([C[2621] || CT.C2621, C[2622] || CT.C2622], T$._LocationL());
    },
    get C2619() {
      return C[2619] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2620] || CT.C2620,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 376,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2625() {
      return C[2625] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "curve",
        [S._Location_column]: 9,
        [S._Location_line]: 402,
        [S._Location_file]: null
      });
    },
    get C2626() {
      return C[2626] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 9,
        [S._Location_line]: 403,
        [S._Location_file]: null
      });
    },
    get C2627() {
      return C[2627] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 9,
        [S._Location_line]: 404,
        [S._Location_file]: null
      });
    },
    get C2628() {
      return C[2628] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 9,
        [S._Location_line]: 405,
        [S._Location_file]: null
      });
    },
    get C2629() {
      return C[2629] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "borderRadius",
        [S._Location_column]: 9,
        [S._Location_line]: 406,
        [S._Location_file]: null
      });
    },
    get C2630() {
      return C[2630] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 9,
        [S._Location_line]: 407,
        [S._Location_file]: null
      });
    },
    get C2631() {
      return C[2631] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 9,
        [S._Location_line]: 408,
        [S._Location_file]: null
      });
    },
    get C2632() {
      return C[2632] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shadowColor",
        [S._Location_column]: 9,
        [S._Location_line]: 409,
        [S._Location_file]: null
      });
    },
    get C2633() {
      return C[2633] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "animateColor",
        [S._Location_column]: 9,
        [S._Location_line]: 410,
        [S._Location_file]: null
      });
    },
    get C2634() {
      return C[2634] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 411,
        [S._Location_file]: null
      });
    },
    get C2624() {
      return C[2624] = dart.constList([C[2625] || CT.C2625, C[2626] || CT.C2626, C[2627] || CT.C2627, C[2628] || CT.C2628, C[2629] || CT.C2629, C[2630] || CT.C2630, C[2631] || CT.C2631, C[2632] || CT.C2632, C[2633] || CT.C2633, C[2634] || CT.C2634], T$._LocationL());
    },
    get C2623() {
      return C[2623] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2624] || CT.C2624,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 401,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2637() {
      return C[2637] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "curve",
        [S._Location_column]: 7,
        [S._Location_line]: 427,
        [S._Location_file]: null
      });
    },
    get C2638() {
      return C[2638] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "duration",
        [S._Location_column]: 7,
        [S._Location_line]: 428,
        [S._Location_file]: null
      });
    },
    get C2639() {
      return C[2639] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 429,
        [S._Location_file]: null
      });
    },
    get C2640() {
      return C[2640] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "borderOnForeground",
        [S._Location_column]: 7,
        [S._Location_line]: 430,
        [S._Location_file]: null
      });
    },
    get C2641() {
      return C[2641] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 431,
        [S._Location_file]: null
      });
    },
    get C2642() {
      return C[2642] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 432,
        [S._Location_file]: null
      });
    },
    get C2643() {
      return C[2643] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 7,
        [S._Location_line]: 433,
        [S._Location_file]: null
      });
    },
    get C2644() {
      return C[2644] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shadowColor",
        [S._Location_column]: 7,
        [S._Location_line]: 434,
        [S._Location_file]: null
      });
    },
    get C2645() {
      return C[2645] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 435,
        [S._Location_file]: null
      });
    },
    get C2636() {
      return C[2636] = dart.constList([C[2637] || CT.C2637, C[2638] || CT.C2638, C[2639] || CT.C2639, C[2640] || CT.C2640, C[2641] || CT.C2641, C[2642] || CT.C2642, C[2643] || CT.C2643, C[2644] || CT.C2644, C[2645] || CT.C2645], T$._LocationL());
    },
    get C2635() {
      return C[2635] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2636] || CT.C2636,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 426,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2648() {
      return C[2648] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 446,
        [S._Location_file]: null
      });
    },
    get C2649() {
      return C[2649] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 7,
        [S._Location_line]: 447,
        [S._Location_file]: null
      });
    },
    get C2647() {
      return C[2647] = dart.constList([C[2648] || CT.C2648, C[2649] || CT.C2649], T$._LocationL());
    },
    get C2646() {
      return C[2646] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2647] || CT.C2647,
        [S._Location_name]: null,
        [S._Location_column]: 37,
        [S._Location_line]: 445,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2652() {
      return C[2652] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 453,
        [S._Location_file]: null
      });
    },
    get C2653() {
      return C[2653] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipper",
        [S._Location_column]: 7,
        [S._Location_line]: 454,
        [S._Location_file]: null
      });
    },
    get C2654() {
      return C[2654] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 458,
        [S._Location_file]: null
      });
    },
    get C2651() {
      return C[2651] = dart.constList([C[2652] || CT.C2652, C[2653] || CT.C2653, C[2654] || CT.C2654], T$._LocationL());
    },
    get C2650() {
      return C[2650] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2651] || CT.C2651,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 452,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2657() {
      return C[2657] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 784,
        [S._Location_file]: null
      });
    },
    get C2658() {
      return C[2658] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 9,
        [S._Location_line]: 785,
        [S._Location_file]: null
      });
    },
    get C2659() {
      return C[2659] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "borderOnForeground",
        [S._Location_column]: 9,
        [S._Location_line]: 786,
        [S._Location_file]: null
      });
    },
    get C2656() {
      return C[2656] = dart.constList([C[2657] || CT.C2657, C[2658] || CT.C2658, C[2659] || CT.C2659], T$._LocationL());
    },
    get C2655() {
      return C[2655] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2656] || CT.C2656,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 783,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2662() {
      return C[2662] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 783,
        [S._Location_file]: null
      });
    },
    get C2663() {
      return C[2663] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipper",
        [S._Location_column]: 7,
        [S._Location_line]: 788,
        [S._Location_file]: null
      });
    },
    get C2664() {
      return C[2664] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "clipBehavior",
        [S._Location_column]: 7,
        [S._Location_line]: 792,
        [S._Location_file]: null
      });
    },
    get C2665() {
      return C[2665] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 7,
        [S._Location_line]: 793,
        [S._Location_file]: null
      });
    },
    get C2666() {
      return C[2666] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 7,
        [S._Location_line]: 794,
        [S._Location_file]: null
      });
    },
    get C2667() {
      return C[2667] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shadowColor",
        [S._Location_column]: 7,
        [S._Location_line]: 795,
        [S._Location_file]: null
      });
    },
    get C2661() {
      return C[2661] = dart.constList([C[2662] || CT.C2662, C[2663] || CT.C2663, C[2664] || CT.C2664, C[2665] || CT.C2665, C[2666] || CT.C2666, C[2667] || CT.C2667], T$._LocationL());
    },
    get C2660() {
      return C[2660] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2661] || CT.C2661,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 782,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2670() {
      return C[2670] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 814,
        [S._Location_file]: null
      });
    },
    get C2671() {
      return C[2671] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "painter",
        [S._Location_column]: 7,
        [S._Location_line]: 815,
        [S._Location_file]: null
      });
    },
    get C2672() {
      return C[2672] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "foregroundPainter",
        [S._Location_column]: 7,
        [S._Location_line]: 816,
        [S._Location_file]: null
      });
    },
    get C2669() {
      return C[2669] = dart.constList([C[2670] || CT.C2670, C[2671] || CT.C2671, C[2672] || CT.C2672], T$._LocationL());
    },
    get C2668() {
      return C[2668] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2669] || CT.C2669,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 813,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2673() {
      return C[2673] = dart.constList([31, -1, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], T$.intL());
    },
    get C2674() {
      return C[2674] = dart.const({
        __proto__: material_localizations.DefaultMaterialLocalizations.prototype
      });
    },
    get C2675() {
      return C[2675] = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], T$.StringL());
    },
    get C2676() {
      return C[2676] = dart.constList(["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], T$.StringL());
    },
    get C2677() {
      return C[2677] = dart.constList(["S", "M", "T", "W", "T", "F", "S"], T$.StringL());
    },
    get C2678() {
      return C[2678] = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], T$.StringL());
    },
    get C2679() {
      return C[2679] = dart.constList(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], T$.StringL());
    },
    get C2680() {
      return C[2680] = dart.const({
        __proto__: material_localizations._MaterialLocalizationsDelegate.prototype
      });
    },
    get C2683() {
      return C[2683] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 11,
        [S._Location_line]: 127,
        [S._Location_file]: null
      });
    },
    get C2684() {
      return C[2684] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 128,
        [S._Location_file]: null
      });
    },
    get C2682() {
      return C[2682] = dart.constList([C[2683] || CT.C2683, C[2684] || CT.C2684], T$._LocationL());
    },
    get C2681() {
      return C[2681] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2682] || CT.C2682,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 126,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C2687() {
      return C[2687] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 9,
        [S._Location_line]: 123,
        [S._Location_file]: null
      });
    },
    get C2688() {
      return C[2688] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 126,
        [S._Location_file]: null
      });
    },
    get C2686() {
      return C[2686] = dart.constList([C[2687] || CT.C2687, C[2688] || CT.C2688], T$._LocationL());
    },
    get C2685() {
      return C[2685] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2686] || CT.C2686,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 119,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C2691() {
      return C[2691] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "theme",
        [S._Location_column]: 7,
        [S._Location_line]: 118,
        [S._Location_file]: null
      });
    },
    get C2692() {
      return C[2692] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 119,
        [S._Location_file]: null
      });
    },
    get C2690() {
      return C[2690] = dart.constList([C[2691] || CT.C2691, C[2692] || CT.C2692], T$._LocationL());
    },
    get C2689() {
      return C[2689] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2690] || CT.C2690,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 117,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C2695() {
      return C[2695] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 18,
        [S._Location_line]: 153,
        [S._Location_file]: null
      });
    },
    get C2696() {
      return C[2696] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 36,
        [S._Location_line]: 153,
        [S._Location_file]: null
      });
    },
    get C2694() {
      return C[2694] = dart.constList([C[2695] || CT.C2695, C[2696] || CT.C2696], T$._LocationL());
    },
    get C2693() {
      return C[2693] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2694] || CT.C2694,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 153,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C2699() {
      return C[2699] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 232,
        [S._Location_file]: null
      });
    },
    get C2700() {
      return C[2700] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 7,
        [S._Location_line]: 233,
        [S._Location_file]: null
      });
    },
    get C2698() {
      return C[2698] = dart.constList([C[2699] || CT.C2699, C[2700] || CT.C2700], T$._LocationL());
    },
    get C2697() {
      return C[2697] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2698] || CT.C2698,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 231,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C2701() {
      return C[2701] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[307] || CT.C307,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.25
      });
    },
    get C2705() {
      return C[2705] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "icon",
        [S._Location_column]: 34,
        [S._Location_line]: 788,
        [S._Location_file]: null
      });
    },
    get C2704() {
      return C[2704] = dart.constList([C[2705] || CT.C2705], T$._LocationL());
    },
    get C2703() {
      return C[2703] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2704] || CT.C2704,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 788,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2706() {
      return C[2706] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S.IconData_matchTextDirection]: false,
        [S.IconData_fontPackage]: null,
        [S.IconData_fontFamily]: "MaterialIcons",
        [S.IconData_codePoint]: 59495
      });
    },
    get C2702() {
      return C[2702] = dart.const({
        __proto__: icon.Icon.prototype,
        [S.Widget__location]: C[2703] || CT.C2703,
        [S.Widget_key]: null,
        [S.Icon_textDirection]: null,
        [S.Icon_semanticLabel]: null,
        [S.Icon_color]: null,
        [S.Icon_size]: null,
        [S.Icon_icon]: C[2706] || CT.C2706
      });
    },
    get C2709() {
      return C[2709] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "icon",
        [S._Location_column]: 11,
        [S._Location_line]: 788,
        [S._Location_file]: null
      });
    },
    get C2710() {
      return C[2710] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 11,
        [S._Location_line]: 789,
        [S._Location_file]: null
      });
    },
    get C2711() {
      return C[2711] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "tooltip",
        [S._Location_column]: 11,
        [S._Location_line]: 790,
        [S._Location_file]: null
      });
    },
    get C2708() {
      return C[2708] = dart.constList([C[2709] || CT.C2709, C[2710] || CT.C2710, C[2711] || CT.C2711], T$._LocationL());
    },
    get C2707() {
      return C[2707] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2708] || CT.C2708,
        [S._Location_name]: null,
        [S._Location_column]: 19,
        [S._Location_line]: 787,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2713() {
      return C[2713] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[55] || CT.C55,
        [S._Location_name]: null,
        [S._Location_column]: 44,
        [S._Location_line]: 794,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2712() {
      return C[2712] = dart.const({
        __proto__: back_button.CloseButton.prototype,
        [S.Widget__location]: C[2713] || CT.C2713,
        [S.Widget_key]: null,
        [S.onPressed$2]: null,
        [S.color$2]: null
      });
    },
    get C2715() {
      return C[2715] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[55] || CT.C55,
        [S._Location_name]: null,
        [S._Location_column]: 66,
        [S._Location_line]: 794,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2714() {
      return C[2714] = dart.const({
        __proto__: back_button.BackButton.prototype,
        [S.Widget__location]: C[2715] || CT.C2715,
        [S.Widget_key]: null,
        [S.onPressed$1]: null,
        [S.color$1]: null
      });
    },
    get C2718() {
      return C[2718] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 9,
        [S._Location_line]: 799,
        [S._Location_file]: null
      });
    },
    get C2719() {
      return C[2719] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 800,
        [S._Location_file]: null
      });
    },
    get C2717() {
      return C[2717] = dart.constList([C[2718] || CT.C2718, C[2719] || CT.C2719], T$._LocationL());
    },
    get C2716() {
      return C[2716] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2717] || CT.C2717,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 798,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2722() {
      return C[2722] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 31,
        [S._Location_line]: 819,
        [S._Location_file]: null
      });
    },
    get C2721() {
      return C[2721] = dart.constList([C[2722] || CT.C2722], T$._LocationL());
    },
    get C2720() {
      return C[2720] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2721] || CT.C2721,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 819,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2725() {
      return C[2725] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "namesRoute",
        [S._Location_column]: 11,
        [S._Location_line]: 822,
        [S._Location_file]: null
      });
    },
    get C2726() {
      return C[2726] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 823,
        [S._Location_file]: null
      });
    },
    get C2727() {
      return C[2727] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "header",
        [S._Location_column]: 11,
        [S._Location_line]: 824,
        [S._Location_file]: null
      });
    },
    get C2724() {
      return C[2724] = dart.constList([C[2725] || CT.C2725, C[2726] || CT.C2726, C[2727] || CT.C2727], T$._LocationL());
    },
    get C2723() {
      return C[2723] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2724] || CT.C2724,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 821,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2730() {
      return C[2730] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 9,
        [S._Location_line]: 829,
        [S._Location_file]: null
      });
    },
    get C2731() {
      return C[2731] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "softWrap",
        [S._Location_column]: 9,
        [S._Location_line]: 830,
        [S._Location_file]: null
      });
    },
    get C2732() {
      return C[2732] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflow",
        [S._Location_column]: 9,
        [S._Location_line]: 831,
        [S._Location_file]: null
      });
    },
    get C2733() {
      return C[2733] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 832,
        [S._Location_file]: null
      });
    },
    get C2729() {
      return C[2729] = dart.constList([C[2730] || CT.C2730, C[2731] || CT.C2731, C[2732] || CT.C2732, C[2733] || CT.C2733], T$._LocationL());
    },
    get C2728() {
      return C[2728] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2729] || CT.C2729,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 828,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2736() {
      return C[2736] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 9,
        [S._Location_line]: 842,
        [S._Location_file]: null
      });
    },
    get C2737() {
      return C[2737] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 848,
        [S._Location_file]: null
      });
    },
    get C2735() {
      return C[2735] = dart.constList([C[2736] || CT.C2736, C[2737] || CT.C2737], T$._LocationL());
    },
    get C2734() {
      return C[2734] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2735] || CT.C2735,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 841,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2740() {
      return C[2740] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 9,
        [S._Location_line]: 855,
        [S._Location_file]: null
      });
    },
    get C2741() {
      return C[2741] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 9,
        [S._Location_line]: 856,
        [S._Location_file]: null
      });
    },
    get C2742() {
      return C[2742] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 857,
        [S._Location_file]: null
      });
    },
    get C2739() {
      return C[2739] = dart.constList([C[2740] || CT.C2740, C[2741] || CT.C2741, C[2742] || CT.C2742], T$._LocationL());
    },
    get C2738() {
      return C[2738] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2739] || CT.C2739,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 854,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2746() {
      return C[2746] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "icon",
        [S._Location_column]: 32,
        [S._Location_line]: 861,
        [S._Location_file]: null
      });
    },
    get C2745() {
      return C[2745] = dart.constList([C[2746] || CT.C2746], T$._LocationL());
    },
    get C2744() {
      return C[2744] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2745] || CT.C2745,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 861,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2743() {
      return C[2743] = dart.const({
        __proto__: icon.Icon.prototype,
        [S.Widget__location]: C[2744] || CT.C2744,
        [S.Widget_key]: null,
        [S.Icon_textDirection]: null,
        [S.Icon_semanticLabel]: null,
        [S.Icon_color]: null,
        [S.Icon_size]: null,
        [S.Icon_icon]: C[2706] || CT.C2706
      });
    },
    get C2749() {
      return C[2749] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "icon",
        [S._Location_column]: 9,
        [S._Location_line]: 861,
        [S._Location_file]: null
      });
    },
    get C2750() {
      return C[2750] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPressed",
        [S._Location_column]: 9,
        [S._Location_line]: 862,
        [S._Location_file]: null
      });
    },
    get C2751() {
      return C[2751] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "tooltip",
        [S._Location_column]: 9,
        [S._Location_line]: 863,
        [S._Location_file]: null
      });
    },
    get C2748() {
      return C[2748] = dart.constList([C[2749] || CT.C2749, C[2750] || CT.C2750, C[2751] || CT.C2751], T$._LocationL());
    },
    get C2747() {
      return C[2747] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2748] || CT.C2748,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 860,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2754() {
      return C[2754] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "leading",
        [S._Location_column]: 7,
        [S._Location_line]: 876,
        [S._Location_file]: null
      });
    },
    get C2755() {
      return C[2755] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "middle",
        [S._Location_column]: 7,
        [S._Location_line]: 877,
        [S._Location_file]: null
      });
    },
    get C2756() {
      return C[2756] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailing",
        [S._Location_column]: 7,
        [S._Location_line]: 878,
        [S._Location_file]: null
      });
    },
    get C2757() {
      return C[2757] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "centerMiddle",
        [S._Location_column]: 7,
        [S._Location_line]: 879,
        [S._Location_file]: null
      });
    },
    get C2758() {
      return C[2758] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "middleSpacing",
        [S._Location_column]: 7,
        [S._Location_line]: 880,
        [S._Location_file]: null
      });
    },
    get C2753() {
      return C[2753] = dart.constList([C[2754] || CT.C2754, C[2755] || CT.C2755, C[2756] || CT.C2756, C[2757] || CT.C2757, C[2758] || CT.C2758], T$._LocationL());
    },
    get C2752() {
      return C[2752] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2753] || CT.C2753,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 875,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2761() {
      return C[2761] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "style",
        [S._Location_column]: 13,
        [S._Location_line]: 891,
        [S._Location_file]: null
      });
    },
    get C2762() {
      return C[2762] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 892,
        [S._Location_file]: null
      });
    },
    get C2760() {
      return C[2760] = dart.constList([C[2761] || CT.C2761, C[2762] || CT.C2762], T$._LocationL());
    },
    get C2759() {
      return C[2759] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2760] || CT.C2760,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 890,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2765() {
      return C[2765] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "delegate",
        [S._Location_column]: 9,
        [S._Location_line]: 887,
        [S._Location_file]: null
      });
    },
    get C2766() {
      return C[2766] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 888,
        [S._Location_file]: null
      });
    },
    get C2764() {
      return C[2764] = dart.constList([C[2765] || CT.C2765, C[2766] || CT.C2766], T$._LocationL());
    },
    get C2763() {
      return C[2763] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2764] || CT.C2764,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 886,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2769() {
      return C[2769] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 886,
        [S._Location_file]: null
      });
    },
    get C2768() {
      return C[2768] = dart.constList([C[2769] || CT.C2769], T$._LocationL());
    },
    get C2767() {
      return C[2767] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2768] || CT.C2768,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 885,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2772() {
      return C[2772] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "constraints",
        [S._Location_column]: 15,
        [S._Location_line]: 903,
        [S._Location_file]: null
      });
    },
    get C2773() {
      return C[2773] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 904,
        [S._Location_file]: null
      });
    },
    get C2771() {
      return C[2771] = dart.constList([C[2772] || CT.C2772, C[2773] || CT.C2773], T$._LocationL());
    },
    get C2770() {
      return C[2770] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2771] || CT.C2771,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 902,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2776() {
      return C[2776] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 902,
        [S._Location_file]: null
      });
    },
    get C2775() {
      return C[2775] = dart.constList([C[2776] || CT.C2776], T$._LocationL());
    },
    get C2774() {
      return C[2774] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2775] || CT.C2775,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 901,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2779() {
      return C[2779] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 15,
        [S._Location_line]: 911,
        [S._Location_file]: null
      });
    },
    get C2780() {
      return C[2780] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 912,
        [S._Location_file]: null
      });
    },
    get C2778() {
      return C[2778] = dart.constList([C[2779] || CT.C2779, C[2780] || CT.C2780], T$._LocationL());
    },
    get C2777() {
      return C[2777] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2778] || CT.C2778,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 910,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2783() {
      return C[2783] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisAlignment",
        [S._Location_column]: 9,
        [S._Location_line]: 899,
        [S._Location_file]: null
      });
    },
    get C2784() {
      return C[2784] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 900,
        [S._Location_file]: null
      });
    },
    get C2782() {
      return C[2782] = dart.constList([C[2783] || CT.C2783, C[2784] || CT.C2784], T$._LocationL());
    },
    get C2781() {
      return C[2781] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2782] || CT.C2782,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 898,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2787() {
      return C[2787] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "bottom",
        [S._Location_column]: 9,
        [S._Location_line]: 921,
        [S._Location_file]: null
      });
    },
    get C2788() {
      return C[2788] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "top",
        [S._Location_column]: 9,
        [S._Location_line]: 922,
        [S._Location_file]: null
      });
    },
    get C2789() {
      return C[2789] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 923,
        [S._Location_file]: null
      });
    },
    get C2786() {
      return C[2786] = dart.constList([C[2787] || CT.C2787, C[2788] || CT.C2788, C[2789] || CT.C2789], T$._LocationL());
    },
    get C2785() {
      return C[2785] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2786] || CT.C2786,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 920,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2792() {
      return C[2792] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 7,
        [S._Location_line]: 928,
        [S._Location_file]: null
      });
    },
    get C2793() {
      return C[2793] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 929,
        [S._Location_file]: null
      });
    },
    get C2791() {
      return C[2791] = dart.constList([C[2792] || CT.C2792, C[2793] || CT.C2793], T$._LocationL());
    },
    get C2790() {
      return C[2790] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2791] || CT.C2791,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 927,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2794() {
      return C[2794] = dart.const({
        __proto__: semantics.OrdinalSortKey.prototype,
        [S$1.SemanticsSortKey_name]: null,
        [S$1.OrdinalSortKey_order]: 1
      });
    },
    get C2797() {
      return C[2797] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "sortKey",
        [S._Location_column]: 13,
        [S._Location_line]: 937,
        [S._Location_file]: null
      });
    },
    get C2798() {
      return C[2798] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "explicitChildNodes",
        [S._Location_column]: 13,
        [S._Location_line]: 938,
        [S._Location_file]: null
      });
    },
    get C2799() {
      return C[2799] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 939,
        [S._Location_file]: null
      });
    },
    get C2796() {
      return C[2796] = dart.constList([C[2797] || CT.C2797, C[2798] || CT.C2798, C[2799] || CT.C2799], T$._LocationL());
    },
    get C2795() {
      return C[2795] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2796] || CT.C2796,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 936,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2800() {
      return C[2800] = dart.const({
        __proto__: semantics.OrdinalSortKey.prototype,
        [S$1.SemanticsSortKey_name]: null,
        [S$1.OrdinalSortKey_order]: 0
      });
    },
    get C2803() {
      return C[2803] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "type",
        [S._Location_column]: 15,
        [S._Location_line]: 947,
        [S._Location_file]: null
      });
    },
    get C2804() {
      return C[2804] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 948,
        [S._Location_file]: null
      });
    },
    get C2802() {
      return C[2802] = dart.constList([C[2803] || CT.C2803, C[2804] || CT.C2804], T$._LocationL());
    },
    get C2801() {
      return C[2801] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2802] || CT.C2802,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 946,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2807() {
      return C[2807] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "sortKey",
        [S._Location_column]: 13,
        [S._Location_line]: 942,
        [S._Location_file]: null
      });
    },
    get C2808() {
      return C[2808] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "explicitChildNodes",
        [S._Location_column]: 13,
        [S._Location_line]: 943,
        [S._Location_file]: null
      });
    },
    get C2809() {
      return C[2809] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 946,
        [S._Location_file]: null
      });
    },
    get C2806() {
      return C[2806] = dart.constList([C[2807] || CT.C2807, C[2808] || CT.C2808, C[2809] || CT.C2809], T$._LocationL());
    },
    get C2805() {
      return C[2805] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2806] || CT.C2806,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 941,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2812() {
      return C[2812] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "fit",
        [S._Location_column]: 9,
        [S._Location_line]: 934,
        [S._Location_file]: null
      });
    },
    get C2813() {
      return C[2813] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 935,
        [S._Location_file]: null
      });
    },
    get C2811() {
      return C[2811] = dart.constList([C[2812] || CT.C2812, C[2813] || CT.C2813], T$._LocationL());
    },
    get C2810() {
      return C[2810] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2811] || CT.C2811,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 933,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2816() {
      return C[2816] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "explicitChildNodes",
        [S._Location_column]: 13,
        [S._Location_line]: 976,
        [S._Location_file]: null
      });
    },
    get C2817() {
      return C[2817] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 977,
        [S._Location_file]: null
      });
    },
    get C2815() {
      return C[2815] = dart.constList([C[2816] || CT.C2816, C[2817] || CT.C2817], T$._LocationL());
    },
    get C2814() {
      return C[2814] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2815] || CT.C2815,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 975,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2820() {
      return C[2820] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 11,
        [S._Location_line]: 967,
        [S._Location_file]: null
      });
    },
    get C2821() {
      return C[2821] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 11,
        [S._Location_line]: 968,
        [S._Location_file]: null
      });
    },
    get C2822() {
      return C[2822] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shadowColor",
        [S._Location_column]: 11,
        [S._Location_line]: 971,
        [S._Location_file]: null
      });
    },
    get C2823() {
      return C[2823] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 11,
        [S._Location_line]: 974,
        [S._Location_file]: null
      });
    },
    get C2824() {
      return C[2824] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 975,
        [S._Location_file]: null
      });
    },
    get C2819() {
      return C[2819] = dart.constList([C[2820] || CT.C2820, C[2821] || CT.C2821, C[2822] || CT.C2822, C[2823] || CT.C2823, C[2824] || CT.C2824], T$._LocationL());
    },
    get C2818() {
      return C[2818] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2819] || CT.C2819,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 966,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2827() {
      return C[2827] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "value",
        [S._Location_column]: 9,
        [S._Location_line]: 965,
        [S._Location_file]: null
      });
    },
    get C2828() {
      return C[2828] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 966,
        [S._Location_file]: null
      });
    },
    get C2826() {
      return C[2826] = dart.constList([C[2827] || CT.C2827, C[2828] || CT.C2828], T$._LocationL());
    },
    get C2825() {
      return C[2825] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2826] || CT.C2826,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 964,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2831() {
      return C[2831] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "container",
        [S._Location_column]: 7,
        [S._Location_line]: 963,
        [S._Location_file]: null
      });
    },
    get C2832() {
      return C[2832] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 964,
        [S._Location_file]: null
      });
    },
    get C2830() {
      return C[2830] = dart.constList([C[2831] || CT.C2831, C[2832] || CT.C2832], T$._LocationL());
    },
    get C2829() {
      return C[2829] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2830] || CT.C2830,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 962,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2835() {
      return C[2835] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 23,
        [S._Location_line]: 1154,
        [S._Location_file]: null
      });
    },
    get C2836() {
      return C[2836] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "header",
        [S._Location_column]: 45,
        [S._Location_line]: 1154,
        [S._Location_file]: null
      });
    },
    get C2834() {
      return C[2834] = dart.constList([C[2835] || CT.C2835, C[2836] || CT.C2836], T$._LocationL());
    },
    get C2833() {
      return C[2833] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2834] || CT.C2834,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 1154,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2839() {
      return C[2839] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "leading",
        [S._Location_column]: 9,
        [S._Location_line]: 1149,
        [S._Location_file]: null
      });
    },
    get C2840() {
      return C[2840] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "automaticallyImplyLeading",
        [S._Location_column]: 9,
        [S._Location_line]: 1150,
        [S._Location_file]: null
      });
    },
    get C2841() {
      return C[2841] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "title",
        [S._Location_column]: 9,
        [S._Location_line]: 1151,
        [S._Location_file]: null
      });
    },
    get C2842() {
      return C[2842] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "actions",
        [S._Location_column]: 9,
        [S._Location_line]: 1152,
        [S._Location_file]: null
      });
    },
    get C2843() {
      return C[2843] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "flexibleSpace",
        [S._Location_column]: 9,
        [S._Location_line]: 1153,
        [S._Location_file]: null
      });
    },
    get C2844() {
      return C[2844] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "bottom",
        [S._Location_column]: 9,
        [S._Location_line]: 1156,
        [S._Location_file]: null
      });
    },
    get C2845() {
      return C[2845] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "elevation",
        [S._Location_column]: 9,
        [S._Location_line]: 1157,
        [S._Location_file]: null
      });
    },
    get C2846() {
      return C[2846] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shadowColor",
        [S._Location_column]: 9,
        [S._Location_line]: 1158,
        [S._Location_file]: null
      });
    },
    get C2847() {
      return C[2847] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "backgroundColor",
        [S._Location_column]: 9,
        [S._Location_line]: 1159,
        [S._Location_file]: null
      });
    },
    get C2848() {
      return C[2848] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "foregroundColor",
        [S._Location_column]: 9,
        [S._Location_line]: 1160,
        [S._Location_file]: null
      });
    },
    get C2849() {
      return C[2849] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "brightness",
        [S._Location_column]: 9,
        [S._Location_line]: 1161,
        [S._Location_file]: null
      });
    },
    get C2850() {
      return C[2850] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "iconTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 1162,
        [S._Location_file]: null
      });
    },
    get C2851() {
      return C[2851] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "actionsIconTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 1163,
        [S._Location_file]: null
      });
    },
    get C2852() {
      return C[2852] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 1164,
        [S._Location_file]: null
      });
    },
    get C2853() {
      return C[2853] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "primary",
        [S._Location_column]: 9,
        [S._Location_line]: 1165,
        [S._Location_file]: null
      });
    },
    get C2854() {
      return C[2854] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "centerTitle",
        [S._Location_column]: 9,
        [S._Location_line]: 1166,
        [S._Location_file]: null
      });
    },
    get C2855() {
      return C[2855] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "excludeHeaderSemantics",
        [S._Location_column]: 9,
        [S._Location_line]: 1167,
        [S._Location_file]: null
      });
    },
    get C2856() {
      return C[2856] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "titleSpacing",
        [S._Location_column]: 9,
        [S._Location_line]: 1168,
        [S._Location_file]: null
      });
    },
    get C2857() {
      return C[2857] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "shape",
        [S._Location_column]: 9,
        [S._Location_line]: 1169,
        [S._Location_file]: null
      });
    },
    get C2858() {
      return C[2858] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "toolbarOpacity",
        [S._Location_column]: 9,
        [S._Location_line]: 1170,
        [S._Location_file]: null
      });
    },
    get C2859() {
      return C[2859] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "bottomOpacity",
        [S._Location_column]: 9,
        [S._Location_line]: 1171,
        [S._Location_file]: null
      });
    },
    get C2860() {
      return C[2860] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "toolbarHeight",
        [S._Location_column]: 9,
        [S._Location_line]: 1172,
        [S._Location_file]: null
      });
    },
    get C2861() {
      return C[2861] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "leadingWidth",
        [S._Location_column]: 9,
        [S._Location_line]: 1173,
        [S._Location_file]: null
      });
    },
    get C2862() {
      return C[2862] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "backwardsCompatibility",
        [S._Location_column]: 9,
        [S._Location_line]: 1174,
        [S._Location_file]: null
      });
    },
    get C2863() {
      return C[2863] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "toolbarTextStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 1175,
        [S._Location_file]: null
      });
    },
    get C2864() {
      return C[2864] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "titleTextStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 1176,
        [S._Location_file]: null
      });
    },
    get C2865() {
      return C[2865] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "systemOverlayStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 1177,
        [S._Location_file]: null
      });
    },
    get C2838() {
      return C[2838] = dart.constList([C[2839] || CT.C2839, C[2840] || CT.C2840, C[2841] || CT.C2841, C[2842] || CT.C2842, C[2843] || CT.C2843, C[2844] || CT.C2844, C[2845] || CT.C2845, C[2846] || CT.C2846, C[2847] || CT.C2847, C[2848] || CT.C2848, C[2849] || CT.C2849, C[2850] || CT.C2850, C[2851] || CT.C2851, C[2852] || CT.C2852, C[2853] || CT.C2853, C[2854] || CT.C2854, C[2855] || CT.C2855, C[2856] || CT.C2856, C[2857] || CT.C2857, C[2858] || CT.C2858, C[2859] || CT.C2859, C[2860] || CT.C2860, C[2861] || CT.C2861, C[2862] || CT.C2862, C[2863] || CT.C2863, C[2864] || CT.C2864, C[2865] || CT.C2865], T$._LocationL());
    },
    get C2837() {
      return C[2837] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2838] || CT.C2838,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 1148,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2868() {
      return C[2868] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 39,
        [S._Location_line]: 1180,
        [S._Location_file]: null
      });
    },
    get C2867() {
      return C[2867] = dart.constList([C[2868] || CT.C2868], T$._LocationL());
    },
    get C2866() {
      return C[2866] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2867] || CT.C2867,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 1180,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2869() {
      return C[2869] = dart.const({
        __proto__: sliver_persistent_header.PersistentHeaderShowOnScreenConfiguration.prototype,
        [S$1.PersistentHeaderShowOnScreenConfiguration_maxShowOnScreenExtent]: 1 / 0,
        [S$1.PersistentHeaderShowOnScreenConfiguration_minShowOnScreenExtent]: 1 / 0
      });
    },
    get C2872() {
      return C[2872] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "floating",
        [S._Location_column]: 9,
        [S._Location_line]: 1788,
        [S._Location_file]: null
      });
    },
    get C2873() {
      return C[2873] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "pinned",
        [S._Location_column]: 9,
        [S._Location_line]: 1789,
        [S._Location_file]: null
      });
    },
    get C2874() {
      return C[2874] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "delegate",
        [S._Location_column]: 9,
        [S._Location_line]: 1790,
        [S._Location_file]: null
      });
    },
    get C2871() {
      return C[2871] = dart.constList([C[2872] || CT.C2872, C[2873] || CT.C2873, C[2874] || CT.C2874], T$._LocationL());
    },
    get C2870() {
      return C[2870] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2871] || CT.C2871,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 1787,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2877() {
      return C[2877] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "context",
        [S._Location_column]: 7,
        [S._Location_line]: 1785,
        [S._Location_file]: null
      });
    },
    get C2878() {
      return C[2878] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "removeBottom",
        [S._Location_column]: 7,
        [S._Location_line]: 1786,
        [S._Location_file]: null
      });
    },
    get C2879() {
      return C[2879] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 1787,
        [S._Location_file]: null
      });
    },
    get C2876() {
      return C[2876] = dart.constList([C[2877] || CT.C2877, C[2878] || CT.C2878, C[2879] || CT.C2879], T$._LocationL());
    },
    get C2875() {
      return C[2875] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2876] || CT.C2876,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 1784,
        [S._Location_file]: "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    }
  }, false);
  var C = Array(2880).fill(void 0);
  var I = [
    "file:///D:/flutter/packages/flutter/lib/src/material/icon_button.dart",
    "package:flutter/src/material/icon_button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/back_button.dart",
    "package:flutter/src/material/back_button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/time.dart",
    "package:flutter/src/material/time.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/ink_ripple.dart",
    "package:flutter/src/material/ink_well.dart",
    "package:flutter/src/material/ink_ripple.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/ink_well.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/material.dart",
    "package:flutter/src/material/material.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/button_style_button.dart",
    "package:flutter/src/material/button_style_button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/text_button.dart",
    "package:flutter/src/material/text_button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar.dart",
    "package:flutter/src/material/snack_bar.dart",
    "package:flutter/src/material/floating_action_button_location.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button_location.dart",
    "package:flutter/src/material/floating_action_button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/floating_action_button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart",
    "package:flutter/src/material/flexible_space_bar.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/list_tile.dart",
    "package:flutter/src/material/list_tile.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/drawer.dart",
    "package:flutter/src/material/drawer.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/divider.dart",
    "package:flutter/src/material/divider.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/dialog.dart",
    "package:flutter/src/material/dialog.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/raised_button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/material_button.dart",
    "package:flutter/src/material/material_button.dart",
    "package:flutter/src/material/raised_button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/outline_button.dart",
    "package:flutter/src/material/outline_button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/button.dart",
    "package:flutter/src/material/button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/flat_button.dart",
    "package:flutter/src/material/flat_button.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/toggle_buttons_theme.dart",
    "package:flutter/src/material/toggle_buttons_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/time_picker_theme.dart",
    "package:flutter/src/material/time_picker_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/text_selection_theme.dart",
    "package:flutter/src/material/text_selection_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/text_button_theme.dart",
    "package:flutter/src/material/text_button_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/tabs.dart",
    "package:flutter/src/material/tabs.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/tab_bar_theme.dart",
    "package:flutter/src/material/tab_bar_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/switch_theme.dart",
    "package:flutter/src/material/switch_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/snack_bar_theme.dart",
    "package:flutter/src/material/snack_bar_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/slider_theme.dart",
    "package:flutter/src/material/slider_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/scrollbar_theme.dart",
    "package:flutter/src/material/scrollbar_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/radio_theme.dart",
    "package:flutter/src/material/radio_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/popup_menu_theme.dart",
    "package:flutter/src/material/popup_menu_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart",
    "package:flutter/src/material/page_transitions_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/outlined_button_theme.dart",
    "package:flutter/src/material/outlined_button_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail.dart",
    "package:flutter/src/material/navigation_rail.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/navigation_rail_theme.dart",
    "package:flutter/src/material/navigation_rail_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/input_decorator.dart",
    "package:flutter/src/material/input_decorator.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/ink_splash.dart",
    "package:flutter/src/material/ink_splash.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/button_style.dart",
    "package:flutter/src/material/button_style.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/elevated_button_theme.dart",
    "package:flutter/src/material/elevated_button_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/divider_theme.dart",
    "package:flutter/src/material/divider_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/dialog_theme.dart",
    "package:flutter/src/material/dialog_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/data_table_theme.dart",
    "package:flutter/src/material/data_table_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/chip_theme.dart",
    "package:flutter/src/material/chip_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/checkbox_theme.dart",
    "package:flutter/src/material/checkbox_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/card_theme.dart",
    "package:flutter/src/material/card_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/tooltip_theme.dart",
    "package:flutter/src/material/tooltip_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/tooltip.dart",
    "package:flutter/src/material/tooltip.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/ink_highlight.dart",
    "package:flutter/src/material/ink_highlight.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/feedback.dart",
    "package:flutter/src/material/feedback.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart",
    "package:flutter/src/material/bottom_navigation_bar.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar_theme.dart",
    "package:flutter/src/material/bottom_navigation_bar_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/bottom_app_bar_theme.dart",
    "package:flutter/src/material/bottom_app_bar_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/banner_theme.dart",
    "package:flutter/src/material/banner_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/theme_data.dart",
    "package:flutter/src/material/theme_data.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/color_scheme.dart",
    "package:flutter/src/material/color_scheme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/button_theme.dart",
    "package:flutter/src/material/button_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/button_bar_theme.dart",
    "package:flutter/src/material/button_bar_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/button_bar.dart",
    "package:flutter/src/material/button_bar.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart",
    "package:flutter/src/material/bottom_sheet.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/scaffold.dart",
    "package:flutter/src/material/scaffold.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/elevation_overlay.dart",
    "package:flutter/src/material/elevation_overlay.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/debug.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/material_localizations.dart",
    "package:flutter/src/material/material_localizations.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/theme.dart",
    "package:flutter/src/material/theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/app_bar_theme.dart",
    "package:flutter/src/material/app_bar_theme.dart",
    "file:///D:/flutter/packages/flutter/lib/src/material/app_bar.dart",
    "package:flutter/src/material/app_bar.dart"
  ];
  icon_button.IconButton = class IconButton extends framework.StatelessWidget {
    get iconSize() {
      return this[S.iconSize];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get visualDensity() {
      return this[S.visualDensity];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get padding() {
      return this[S.padding];
    }
    set padding(value) {
      super.padding = value;
    }
    get alignment() {
      return this[S.alignment];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get splashRadius() {
      return this[S.splashRadius];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    get icon() {
      return this[S.icon];
    }
    set icon(value) {
      super.icon = value;
    }
    get focusColor() {
      return this[S.focusColor];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get color() {
      return this[S.color];
    }
    set color(value) {
      super.color = value;
    }
    get splashColor() {
      return this[S.splashColor];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get highlightColor() {
      return this[S.highlightColor];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get disabledColor() {
      return this[S.disabledColor];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get onPressed() {
      return this[S.onPressed];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get focusNode() {
      return this[S.focusNode];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get tooltip() {
      return this[S.tooltip];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get constraints() {
      return this[S.constraints];
    }
    set constraints(value) {
      super.constraints = value;
    }
    build(context) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5;
      if (context == null) dart.nullFailed(I[0], 327, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, I[0], 328, 12, "debugCheckHasMaterial(context)");
      let theme = theme$.Theme.of(context);
      let currentColor = null;
      if (this.onPressed != null)
        currentColor = this.color;
      else
        currentColor = (t0 = this.disabledColor, t0 == null ? theme.disabledColor : t0);
      let effectiveVisualDensity = (t0$ = this.visualDensity, t0$ == null ? theme.visualDensity : t0$);
      let unadjustedConstraints = (t0$0 = this.constraints, t0$0 == null ? C[3] || CT.C3 : t0$0);
      let adjustedConstraints = effectiveVisualDensity.effectiveConstraints(unadjustedConstraints);
      let result = new basic.ConstrainedBox.new({constraints: adjustedConstraints, child: new basic.Padding.new({padding: this.padding, child: new basic.SizedBox.new({height: this.iconSize, width: this.iconSize, child: new basic.Align.new({alignment: this.alignment, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({size: this.iconSize, color: currentColor}), child: this.icon}), $creationLocationd_0dea112b090073317d4: C[4] || CT.C4}), $creationLocationd_0dea112b090073317d4: C[8] || CT.C8}), $creationLocationd_0dea112b090073317d4: C[13] || CT.C13}), $creationLocationd_0dea112b090073317d4: C[17] || CT.C17});
      if (this.tooltip != null) {
        result = new tooltip.Tooltip.new({message: dart.nullCheck(this.tooltip), child: result, $creationLocationd_0dea112b090073317d4: C[21] || CT.C21});
      }
      return new basic.Semantics.new({button: true, enabled: this.onPressed != null, child: new ink_well.InkResponse.new({focusNode: this.focusNode, autofocus: this.autofocus, canRequestFocus: this.onPressed != null, onTap: this.onPressed, mouseCursor: this.mouseCursor, enableFeedback: this.enableFeedback, child: result, focusColor: (t0$1 = this.focusColor, t0$1 == null ? theme.focusColor : t0$1), hoverColor: (t0$2 = this.hoverColor, t0$2 == null ? theme.hoverColor : t0$2), highlightColor: (t0$3 = this.highlightColor, t0$3 == null ? theme.highlightColor : t0$3), splashColor: (t0$4 = this.splashColor, t0$4 == null ? theme.splashColor : t0$4), radius: (t0$5 = this.splashRadius, t0$5 == null ? math.max(core.double, 35, (dart.notNull(this.iconSize) + math.min(core.num, this.padding.horizontal, this.padding.vertical)) * 0.7) : t0$5), $creationLocationd_0dea112b090073317d4: C[25] || CT.C25}), $creationLocationd_0dea112b090073317d4: C[39] || CT.C39});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[0], 397, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfWidget()).new("icon", this.icon, {showName: false}));
      properties.add(new diagnostics.StringProperty.new("tooltip", this.tooltip, {defaultValue: null, quoted: false}));
      properties.add(new (T$.ObjectFlagPropertyOfVoidTovoid()).new("onPressed", this.onPressed, {ifNull: "disabled"}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
    }
  };
  (icon_button.IconButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
    if (iconSize == null) dart.nullFailed(I[0], 142, 10, "iconSize");
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let padding = opts && 'padding' in opts ? opts.padding : C[0] || CT.C0;
    if (padding == null) dart.nullFailed(I[0], 144, 10, "padding");
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[1] || CT.C1;
    if (alignment == null) dart.nullFailed(I[0], 145, 10, "alignment");
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[0], 147, 19, "icon");
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : C[2] || CT.C2;
    if (mouseCursor == null) dart.nullFailed(I[0], 155, 10, "mouseCursor");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[0], 157, 10, "autofocus");
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    if (enableFeedback == null) dart.nullFailed(I[0], 159, 10, "enableFeedback");
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.iconSize] = iconSize;
    this[S.visualDensity] = visualDensity;
    this[S.padding] = padding;
    this[S.alignment] = alignment;
    this[S.splashRadius] = splashRadius;
    this[S.icon] = icon;
    this[S.color] = color;
    this[S.focusColor] = focusColor;
    this[S.hoverColor] = hoverColor;
    this[S.highlightColor] = highlightColor;
    this[S.splashColor] = splashColor;
    this[S.disabledColor] = disabledColor;
    this[S.onPressed] = onPressed;
    this[S.mouseCursor] = mouseCursor;
    this[S.focusNode] = focusNode;
    this[S.autofocus] = autofocus;
    this[S.tooltip] = tooltip;
    this[S.enableFeedback] = enableFeedback;
    this[S.constraints] = constraints;
    if (!(iconSize != null)) dart.assertFailed(null, I[0], 161, 15, "iconSize != null");
    if (!(padding != null)) dart.assertFailed(null, I[0], 162, 15, "padding != null");
    if (!(alignment != null)) dart.assertFailed(null, I[0], 163, 15, "alignment != null");
    if (!(splashRadius == null || dart.notNull(splashRadius) > 0)) dart.assertFailed(null, I[0], 164, 15, "splashRadius == null || splashRadius > 0");
    if (!(autofocus != null)) dart.assertFailed(null, I[0], 165, 15, "autofocus != null");
    if (!(icon != null)) dart.assertFailed(null, I[0], 166, 15, "icon != null");
    icon_button.IconButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = icon_button.IconButton.prototype;
  dart.addTypeTests(icon_button.IconButton);
  dart.addTypeCaches(icon_button.IconButton);
  dart.setMethodSignature(icon_button.IconButton, () => ({
    __proto__: dart.getMethods(icon_button.IconButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(icon_button.IconButton, I[1]);
  dart.setFieldSignature(icon_button.IconButton, () => ({
    __proto__: dart.getFields(icon_button.IconButton.__proto__),
    iconSize: dart.finalFieldType(core.double),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    alignment: dart.finalFieldType(alignment.AlignmentGeometry),
    splashRadius: dart.finalFieldType(dart.nullable(core.double)),
    icon: dart.finalFieldType(framework.Widget),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(mouse_cursor.MouseCursor),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    tooltip: dart.finalFieldType(dart.nullable(core.String)),
    enableFeedback: dart.finalFieldType(core.bool),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints))
  }));
  dart.defineLazy(icon_button, {
    /*icon_button._kMinButtonSize*/get _kMinButtonSize() {
      return 48;
    }
  }, false);
  back_button.BackButtonIcon = class BackButtonIcon extends framework.StatelessWidget {
    static _getIconData(platform) {
      if (platform == null) dart.nullFailed(I[2], 31, 47, "platform");
      switch (platform) {
        case C[44] || CT.C44:
        case C[45] || CT.C45:
        case C[46] || CT.C46:
        case C[47] || CT.C47:
        {
          return icons.Icons.arrow_back;
        }
        case C[48] || CT.C48:
        case C[49] || CT.C49:
        {
          return icons.Icons.arrow_back_ios;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[2], 45, 29, "context");
      return new icon.Icon.new(back_button.BackButtonIcon._getIconData(theme$.Theme.of(context).platform), {$creationLocationd_0dea112b090073317d4: C[50] || CT.C50});
    }
  };
  (back_button.BackButtonIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    back_button.BackButtonIcon.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.BackButtonIcon.prototype;
  dart.addTypeTests(back_button.BackButtonIcon);
  dart.addTypeCaches(back_button.BackButtonIcon);
  dart.setMethodSignature(back_button.BackButtonIcon, () => ({
    __proto__: dart.getMethods(back_button.BackButtonIcon.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(back_button.BackButtonIcon, I[3]);
  back_button.BackButton = class BackButton extends framework.StatelessWidget {
    get color() {
      return this[S.color$1];
    }
    set color(value) {
      super.color = value;
    }
    get onPressed() {
      return this[S.onPressed$1];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[2], 96, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[2], 97, 12, "debugCheckHasMaterialLocalizations(context)");
      return new icon_button.IconButton.new({icon: C[53] || CT.C53, color: this.color, tooltip: material_localizations.MaterialLocalizations.of(context).backButtonTooltip, onPressed: dart.fn(() => {
          if (this.onPressed != null) {
            dart.nullCheck(this.onPressed)();
          } else {
            navigator$.Navigator.maybePop(T$.ObjectN(), context);
          }
        }, T$.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[56] || CT.C56});
    }
  };
  (back_button.BackButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.color$1] = color;
    this[S.onPressed$1] = onPressed;
    back_button.BackButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.BackButton.prototype;
  dart.addTypeTests(back_button.BackButton);
  dart.addTypeCaches(back_button.BackButton);
  dart.setMethodSignature(back_button.BackButton, () => ({
    __proto__: dart.getMethods(back_button.BackButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(back_button.BackButton, I[3]);
  dart.setFieldSignature(back_button.BackButton, () => ({
    __proto__: dart.getFields(back_button.BackButton.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  back_button.CloseButton = class CloseButton extends framework.StatelessWidget {
    get color() {
      return this[S.color$2];
    }
    set color(value) {
      super.color = value;
    }
    get onPressed() {
      return this[S.onPressed$2];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[2], 150, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[2], 151, 12, "debugCheckHasMaterialLocalizations(context)");
      return new icon_button.IconButton.new({icon: C[62] || CT.C62, color: this.color, tooltip: material_localizations.MaterialLocalizations.of(context).closeButtonTooltip, onPressed: dart.fn(() => {
          if (this.onPressed != null) {
            dart.nullCheck(this.onPressed)();
          } else {
            navigator$.Navigator.maybePop(T$.ObjectN(), context);
          }
        }, T$.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[67] || CT.C67});
    }
  };
  (back_button.CloseButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.color$2] = color;
    this[S.onPressed$2] = onPressed;
    back_button.CloseButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.CloseButton.prototype;
  dart.addTypeTests(back_button.CloseButton);
  dart.addTypeCaches(back_button.CloseButton);
  dart.setMethodSignature(back_button.CloseButton, () => ({
    __proto__: dart.getMethods(back_button.CloseButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(back_button.CloseButton, I[3]);
  dart.setFieldSignature(back_button.CloseButton, () => ({
    __proto__: dart.getFields(back_button.CloseButton.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  time.DayPeriod = class DayPeriod extends core.Object {
    toString() {
      return this[S._name$1];
    }
  };
  (time.DayPeriod.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[4], 14, 6, "index");
    if (_name == null) dart.nullFailed(I[4], 14, 6, "_name");
    this.index = index;
    this[S._name$1] = _name;
    ;
  }).prototype = time.DayPeriod.prototype;
  dart.addTypeTests(time.DayPeriod);
  dart.addTypeCaches(time.DayPeriod);
  dart.setLibraryUri(time.DayPeriod, I[5]);
  dart.setFieldSignature(time.DayPeriod, () => ({
    __proto__: dart.getFields(time.DayPeriod.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$1]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(time.DayPeriod, ['toString']);
  time.DayPeriod.am = C[73] || CT.C73;
  time.DayPeriod.pm = C[74] || CT.C74;
  time.DayPeriod.values = C[75] || CT.C75;
  time.TimeOfDay = class TimeOfDay extends core.Object {
    get hour() {
      return this[S.hour];
    }
    set hour(value) {
      super.hour = value;
    }
    get minute() {
      return this[S.minute];
    }
    set minute(value) {
      super.minute = value;
    }
    static now() {
      return new time.TimeOfDay.fromDateTime(new core.DateTime.now());
    }
    replacing(opts) {
      let t0, t0$;
      let hour = opts && 'hour' in opts ? opts.hour : null;
      let minute = opts && 'minute' in opts ? opts.minute : null;
      if (!(hour == null || dart.notNull(hour) >= 0 && dart.notNull(hour) < 24)) dart.assertFailed(null, I[4], 81, 12, "hour == null || (hour >= 0 && hour < hoursPerDay)");
      if (!(minute == null || dart.notNull(minute) >= 0 && dart.notNull(minute) < 60)) dart.assertFailed(null, I[4], 82, 12, "minute == null || (minute >= 0 && minute < minutesPerHour)");
      return new time.TimeOfDay.new({hour: (t0 = hour, t0 == null ? this.hour : t0), minute: (t0$ = minute, t0$ == null ? this.minute : t0$)});
    }
    get period() {
      return dart.notNull(this.hour) < 12 ? time.DayPeriod.am : time.DayPeriod.pm;
    }
    get hourOfPeriod() {
      return dart.notNull(this.hour) - dart.notNull(this.periodOffset);
    }
    get periodOffset() {
      return this.period == time.DayPeriod.am ? 0 : 12;
    }
    format(context) {
      if (context == null) dart.nullFailed(I[4], 104, 30, "context");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[4], 105, 12, "debugCheckHasMediaQuery(context)");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[4], 106, 12, "debugCheckHasMaterialLocalizations(context)");
      let localizations = material_localizations.MaterialLocalizations.of(context);
      return localizations.formatTimeOfDay(this, {alwaysUse24HourFormat: media_query.MediaQuery.of(context).alwaysUse24HourFormat});
    }
    _equals(other) {
      if (other == null) return false;
      return time.TimeOfDay.is(other) && other.hour == this.hour && other.minute == this.minute;
    }
    get hashCode() {
      return ui.hashValues(this.hour, this.minute);
    }
    toString() {
      function _addLeadingZeroIfNeeded(value) {
        if (value == null) dart.nullFailed(I[4], 126, 40, "value");
        if (dart.notNull(value) < 10) return "0" + dart.str(value);
        return dart.toString(value);
      }
      dart.fn(_addLeadingZeroIfNeeded, T$.intToString());
      let hourLabel = _addLeadingZeroIfNeeded(this.hour);
      let minuteLabel = _addLeadingZeroIfNeeded(this.minute);
      return dart.str(dart.wrapType(time.TimeOfDay)) + "(" + dart.str(hourLabel) + ":" + dart.str(minuteLabel) + ")";
    }
  };
  (time.TimeOfDay.new = function(opts) {
    let hour = opts && 'hour' in opts ? opts.hour : null;
    if (hour == null) dart.nullFailed(I[4], 54, 35, "hour");
    let minute = opts && 'minute' in opts ? opts.minute : null;
    if (minute == null) dart.nullFailed(I[4], 54, 55, "minute");
    this[S.hour] = hour;
    this[S.minute] = minute;
    ;
  }).prototype = time.TimeOfDay.prototype;
  (time.TimeOfDay.fromDateTime = function(time) {
    if (time == null) dart.nullFailed(I[4], 60, 35, "time");
    this[S.hour] = time.hour;
    this[S.minute] = time.minute;
    ;
  }).prototype = time.TimeOfDay.prototype;
  dart.addTypeTests(time.TimeOfDay);
  dart.addTypeCaches(time.TimeOfDay);
  dart.setMethodSignature(time.TimeOfDay, () => ({
    __proto__: dart.getMethods(time.TimeOfDay.__proto__),
    replacing: dart.fnType(time.TimeOfDay, [], {hour: dart.nullable(core.int), minute: dart.nullable(core.int)}, {}),
    format: dart.fnType(core.String, [framework.BuildContext])
  }));
  dart.setGetterSignature(time.TimeOfDay, () => ({
    __proto__: dart.getGetters(time.TimeOfDay.__proto__),
    period: time.DayPeriod,
    hourOfPeriod: core.int,
    periodOffset: core.int
  }));
  dart.setLibraryUri(time.TimeOfDay, I[5]);
  dart.setFieldSignature(time.TimeOfDay, () => ({
    __proto__: dart.getFields(time.TimeOfDay.__proto__),
    hour: dart.finalFieldType(core.int),
    minute: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(time.TimeOfDay, ['_equals', 'toString']);
  dart.defineExtensionAccessors(time.TimeOfDay, ['hashCode']);
  dart.defineLazy(time.TimeOfDay, {
    /*time.TimeOfDay.hoursPerDay*/get hoursPerDay() {
      return 24;
    },
    /*time.TimeOfDay.hoursPerPeriod*/get hoursPerPeriod() {
      return 12;
    },
    /*time.TimeOfDay.minutesPerHour*/get minutesPerHour() {
      return 60;
    }
  }, false);
  time.TimeOfDayFormat = class TimeOfDayFormat extends core.Object {
    toString() {
      return this[S._name$1];
    }
  };
  (time.TimeOfDayFormat.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[4], 144, 6, "index");
    if (_name == null) dart.nullFailed(I[4], 144, 6, "_name");
    this.index = index;
    this[S._name$1] = _name;
    ;
  }).prototype = time.TimeOfDayFormat.prototype;
  dart.addTypeTests(time.TimeOfDayFormat);
  dart.addTypeCaches(time.TimeOfDayFormat);
  dart.setLibraryUri(time.TimeOfDayFormat, I[5]);
  dart.setFieldSignature(time.TimeOfDayFormat, () => ({
    __proto__: dart.getFields(time.TimeOfDayFormat.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$1]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(time.TimeOfDayFormat, ['toString']);
  time.TimeOfDayFormat.HH_colon_mm = C[76] || CT.C76;
  time.TimeOfDayFormat.HH_dot_mm = C[77] || CT.C77;
  time.TimeOfDayFormat.frenchCanadian = C[78] || CT.C78;
  time.TimeOfDayFormat.H_colon_mm = C[79] || CT.C79;
  time.TimeOfDayFormat.h_colon_mm_space_a = C[80] || CT.C80;
  time.TimeOfDayFormat.a_space_h_colon_mm = C[81] || CT.C81;
  time.TimeOfDayFormat.values = C[82] || CT.C82;
  time.HourFormat = class HourFormat extends core.Object {
    toString() {
      return this[S._name$1];
    }
  };
  (time.HourFormat.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[4], 192, 6, "index");
    if (_name == null) dart.nullFailed(I[4], 192, 6, "_name");
    this.index = index;
    this[S._name$1] = _name;
    ;
  }).prototype = time.HourFormat.prototype;
  dart.addTypeTests(time.HourFormat);
  dart.addTypeCaches(time.HourFormat);
  dart.setLibraryUri(time.HourFormat, I[5]);
  dart.setFieldSignature(time.HourFormat, () => ({
    __proto__: dart.getFields(time.HourFormat.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$1]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(time.HourFormat, ['toString']);
  time.HourFormat.HH = C[83] || CT.C83;
  time.HourFormat.H = C[84] || CT.C84;
  time.HourFormat.h = C[85] || CT.C85;
  time.HourFormat.values = C[86] || CT.C86;
  time.hourFormat = function hourFormat(opts) {
    let of = opts && 'of' in opts ? opts.of : null;
    if (of == null) dart.nullFailed(I[4], 205, 50, "of");
    switch (of) {
      case C[80] || CT.C80:
      case C[81] || CT.C81:
      {
        return time.HourFormat.h;
      }
      case C[79] || CT.C79:
      {
        return time.HourFormat.H;
      }
      case C[77] || CT.C77:
      case C[76] || CT.C76:
      case C[78] || CT.C78:
      {
        return time.HourFormat.HH;
      }
      default:
      {
        dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
      }
    }
  };
  ink_well.InteractiveInkFeatureFactory = class InteractiveInkFeatureFactory extends core.Object {};
  (ink_well.InteractiveInkFeatureFactory.new = function() {
    ;
  }).prototype = ink_well.InteractiveInkFeatureFactory.prototype;
  dart.addTypeTests(ink_well.InteractiveInkFeatureFactory);
  dart.addTypeCaches(ink_well.InteractiveInkFeatureFactory);
  dart.setLibraryUri(ink_well.InteractiveInkFeatureFactory, I[7]);
  ink_ripple._InkRippleFactory = class _InkRippleFactory extends ink_well.InteractiveInkFeatureFactory {
    create(opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      if (controller == null) dart.nullFailed(I[6], 44, 36, "controller");
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      if (referenceBox == null) dart.nullFailed(I[6], 45, 24, "referenceBox");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[6], 46, 21, "position");
      let color = opts && 'color' in opts ? opts.color : null;
      if (color == null) dart.nullFailed(I[6], 47, 20, "color");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[6], 48, 28, "textDirection");
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      if (containedInkWell == null) dart.nullFailed(I[6], 49, 10, "containedInkWell");
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_ripple.InkRipple.new({controller: controller, referenceBox: referenceBox, position: position, color: color, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved, textDirection: textDirection});
    }
  };
  (ink_ripple._InkRippleFactory.new = function() {
    ink_ripple._InkRippleFactory.__proto__.new.call(this);
    ;
  }).prototype = ink_ripple._InkRippleFactory.prototype;
  dart.addTypeTests(ink_ripple._InkRippleFactory);
  dart.addTypeCaches(ink_ripple._InkRippleFactory);
  dart.setMethodSignature(ink_ripple._InkRippleFactory, () => ({
    __proto__: dart.getMethods(ink_ripple._InkRippleFactory.__proto__),
    create: dart.fnType(ink_well.InteractiveInkFeature, [], {borderRadius: dart.nullable(border_radius.BorderRadius), containedInkWell: core.bool, customBorder: dart.nullable(borders.ShapeBorder), onRemoved: dart.nullable(dart.fnType(dart.void, [])), radius: dart.nullable(core.double), rectCallback: dart.nullable(dart.fnType(ui.Rect, []))}, {color: ui.Color, controller: material.MaterialInkController, position: ui.Offset, referenceBox: box$.RenderBox, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(ink_ripple._InkRippleFactory, I[8]);
  material.InkFeature = class InkFeature extends core.Object {
    get referenceBox() {
      return this[S.referenceBox];
    }
    set referenceBox(value) {
      super.referenceBox = value;
    }
    get onRemoved() {
      return this[S.onRemoved];
    }
    set onRemoved(value) {
      super.onRemoved = value;
    }
    get controller() {
      return this[S._controller];
    }
    dispose() {
      if (!!dart.test(this[S._debugDisposed])) dart.assertFailed(null, I[10], 623, 12, "!_debugDisposed");
      if (!dart.test(dart.fn(() => {
        this[S._debugDisposed] = true;
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[10], 624, 12, "() {\r\n      _debugDisposed = true;\r\n      return true;\r\n    }()");
      this[S._controller][S._removeFeature](this);
      if (this.onRemoved != null) dart.nullCheck(this.onRemoved)();
    }
    [S._paint](canvas) {
      if (canvas == null) dart.nullFailed(I[10], 633, 22, "canvas");
      if (!dart.test(this.referenceBox.attached)) dart.assertFailed(null, I[10], 634, 12, "referenceBox.attached");
      if (!!dart.test(this[S._debugDisposed])) dart.assertFailed(null, I[10], 635, 12, "!_debugDisposed");
      let descendants = T$.JSArrayOfRenderObject().of([this.referenceBox]);
      let node = this.referenceBox;
      while (!dart.equals(node, this[S._controller])) {
        node = object.RenderObject.as(dart.nullCheck(node.parent));
        descendants[S.$add](node);
      }
      let transform = vector_math_64.Matrix4.identity();
      if (!(dart.notNull(descendants[S.$length]) >= 2)) dart.assertFailed(null, I[10], 645, 12, "descendants.length >= 2");
      for (let index = dart.notNull(descendants[S.$length]) - 1; index > 0; index = index - 1)
        descendants[S.$_get](index).applyPaintTransform(descendants[S.$_get](index - 1), transform);
      this.paintFeature(canvas, transform);
    }
    toString() {
      return diagnostics.describeIdentity(this);
    }
  };
  (material.InkFeature.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[10], 598, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[10], 599, 19, "referenceBox");
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S._debugDisposed] = false;
    this[S.referenceBox] = referenceBox;
    this[S.onRemoved] = onRemoved;
    if (!(controller != null)) dart.assertFailed(null, I[10], 601, 15, "controller != null");
    if (!(referenceBox != null)) dart.assertFailed(null, I[10], 602, 15, "referenceBox != null");
    this[S._controller] = material._RenderInkFeatures.as(controller);
    ;
  }).prototype = material.InkFeature.prototype;
  dart.addTypeTests(material.InkFeature);
  dart.addTypeCaches(material.InkFeature);
  dart.setMethodSignature(material.InkFeature, () => ({
    __proto__: dart.getMethods(material.InkFeature.__proto__),
    dispose: dart.fnType(dart.void, []),
    [S._paint]: dart.fnType(dart.void, [ui.Canvas])
  }));
  dart.setGetterSignature(material.InkFeature, () => ({
    __proto__: dart.getGetters(material.InkFeature.__proto__),
    controller: material.MaterialInkController
  }));
  dart.setLibraryUri(material.InkFeature, I[11]);
  dart.setFieldSignature(material.InkFeature, () => ({
    __proto__: dart.getFields(material.InkFeature.__proto__),
    [S._controller]: dart.finalFieldType(material._RenderInkFeatures),
    referenceBox: dart.finalFieldType(box$.RenderBox),
    onRemoved: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    [S._debugDisposed]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(material.InkFeature, ['toString']);
  ink_well.InteractiveInkFeature = class InteractiveInkFeature extends material.InkFeature {
    confirm() {
    }
    cancel() {
    }
    get color() {
      return this[S._color];
    }
    set color(value) {
      if (value == null) dart.nullFailed(I[9], 62, 19, "value");
      if (dart.equals(value, this[S._color])) return;
      this[S._color] = value;
      this.controller.markNeedsPaint();
    }
    paintInkCircle(opts) {
      let canvas = opts && 'canvas' in opts ? opts.canvas : null;
      if (canvas == null) dart.nullFailed(I[9], 101, 21, "canvas");
      let transform = opts && 'transform' in opts ? opts.transform : null;
      if (transform == null) dart.nullFailed(I[9], 102, 22, "transform");
      let paint = opts && 'paint' in opts ? opts.paint : null;
      if (paint == null) dart.nullFailed(I[9], 103, 20, "paint");
      let center = opts && 'center' in opts ? opts.center : null;
      if (center == null) dart.nullFailed(I[9], 104, 21, "center");
      let radius = opts && 'radius' in opts ? opts.radius : null;
      if (radius == null) dart.nullFailed(I[9], 105, 21, "radius");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C[87] || CT.C87;
      if (borderRadius == null) dart.nullFailed(I[9], 108, 18, "borderRadius");
      let clipCallback = opts && 'clipCallback' in opts ? opts.clipCallback : null;
      if (!(canvas != null)) dart.assertFailed(null, I[9], 111, 12, "canvas != null");
      if (!(transform != null)) dart.assertFailed(null, I[9], 112, 12, "transform != null");
      if (!(paint != null)) dart.assertFailed(null, I[9], 113, 12, "paint != null");
      if (!(center != null)) dart.assertFailed(null, I[9], 114, 12, "center != null");
      if (!(radius != null)) dart.assertFailed(null, I[9], 115, 12, "radius != null");
      if (!(borderRadius != null)) dart.assertFailed(null, I[9], 116, 12, "borderRadius != null");
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      canvas.save();
      if (originOffset == null) {
        canvas.transform(transform.storage);
      } else {
        canvas.translate(originOffset.dx, originOffset.dy);
      }
      if (clipCallback != null) {
        let rect = clipCallback();
        if (customBorder != null) {
          canvas.clipPath(customBorder.getOuterPath(rect, {textDirection: textDirection}));
        } else if (!dart.equals(borderRadius, border_radius.BorderRadius.zero)) {
          canvas.clipRRect(new ui.RRect.fromRectAndCorners(rect, {topLeft: borderRadius.topLeft, topRight: borderRadius.topRight, bottomLeft: borderRadius.bottomLeft, bottomRight: borderRadius.bottomRight}));
        } else {
          canvas.clipRect(rect);
        }
      }
      canvas.drawCircle(center, radius, paint);
      canvas.restore();
    }
  };
  (ink_well.InteractiveInkFeature.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[9], 38, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[9], 39, 24, "referenceBox");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[9], 40, 20, "color");
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    if (!(controller != null)) dart.assertFailed(null, I[9], 42, 15, "controller != null");
    if (!(referenceBox != null)) dart.assertFailed(null, I[9], 43, 15, "referenceBox != null");
    this[S._color] = color;
    ink_well.InteractiveInkFeature.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, onRemoved: onRemoved});
    ;
  }).prototype = ink_well.InteractiveInkFeature.prototype;
  dart.addTypeTests(ink_well.InteractiveInkFeature);
  dart.addTypeCaches(ink_well.InteractiveInkFeature);
  dart.setMethodSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getMethods(ink_well.InteractiveInkFeature.__proto__),
    confirm: dart.fnType(dart.void, []),
    cancel: dart.fnType(dart.void, []),
    paintInkCircle: dart.fnType(dart.void, [], {borderRadius: border_radius.BorderRadius, clipCallback: dart.nullable(dart.fnType(ui.Rect, [])), customBorder: dart.nullable(borders.ShapeBorder), textDirection: dart.nullable(ui.TextDirection)}, {canvas: ui.Canvas, center: ui.Offset, paint: ui.Paint, radius: core.double, transform: vector_math_64.Matrix4})
  }));
  dart.setGetterSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getGetters(ink_well.InteractiveInkFeature.__proto__),
    color: ui.Color
  }));
  dart.setSetterSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getSetters(ink_well.InteractiveInkFeature.__proto__),
    color: ui.Color
  }));
  dart.setLibraryUri(ink_well.InteractiveInkFeature, I[7]);
  dart.setFieldSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getFields(ink_well.InteractiveInkFeature.__proto__),
    [S._color]: dart.fieldType(ui.Color)
  }));
  ink_ripple.InkRipple = class InkRipple extends ink_well.InteractiveInkFeature {
    get [S._radius]() {
      let t0;
      return dart.test(this[S.__InkRipple__radius_isSet]) ? (t0 = this[S.__InkRipple__radius], t0) : dart.throw(new _internal.LateError.fieldNI("_radius"));
    }
    set [S._radius](t0) {
      if (t0 == null) dart.nullFailed(I[6], 178, 26, "null");
      this[S.__InkRipple__radius_isSet] = true;
      this[S.__InkRipple__radius] = t0;
    }
    get [S._radiusController]() {
      let t1;
      return dart.test(this[S.__InkRipple__radiusController_isSet]) ? (t1 = this[S.__InkRipple__radiusController], t1) : dart.throw(new _internal.LateError.fieldNI("_radiusController"));
    }
    set [S._radiusController](t1) {
      if (t1 == null) dart.nullFailed(I[6], 179, 28, "null");
      this[S.__InkRipple__radiusController_isSet] = true;
      this[S.__InkRipple__radiusController] = t1;
    }
    get [S._fadeIn]() {
      let t2;
      return dart.test(this[S.__InkRipple__fadeIn_isSet]) ? (t2 = this[S.__InkRipple__fadeIn], t2) : dart.throw(new _internal.LateError.fieldNI("_fadeIn"));
    }
    set [S._fadeIn](t2) {
      if (t2 == null) dart.nullFailed(I[6], 181, 23, "null");
      this[S.__InkRipple__fadeIn_isSet] = true;
      this[S.__InkRipple__fadeIn] = t2;
    }
    get [S._fadeInController]() {
      let t3;
      return dart.test(this[S.__InkRipple__fadeInController_isSet]) ? (t3 = this[S.__InkRipple__fadeInController], t3) : dart.throw(new _internal.LateError.fieldNI("_fadeInController"));
    }
    set [S._fadeInController](t3) {
      if (t3 == null) dart.nullFailed(I[6], 182, 28, "null");
      this[S.__InkRipple__fadeInController_isSet] = true;
      this[S.__InkRipple__fadeInController] = t3;
    }
    get [S._fadeOut]() {
      let t4;
      return dart.test(this[S.__InkRipple__fadeOut_isSet]) ? (t4 = this[S.__InkRipple__fadeOut], t4) : dart.throw(new _internal.LateError.fieldNI("_fadeOut"));
    }
    set [S._fadeOut](t4) {
      if (t4 == null) dart.nullFailed(I[6], 184, 23, "null");
      this[S.__InkRipple__fadeOut_isSet] = true;
      this[S.__InkRipple__fadeOut] = t4;
    }
    get [S._fadeOutController]() {
      let t5;
      return dart.test(this[S.__InkRipple__fadeOutController_isSet]) ? (t5 = this[S.__InkRipple__fadeOutController], t5) : dart.throw(new _internal.LateError.fieldNI("_fadeOutController"));
    }
    set [S._fadeOutController](t5) {
      if (t5 == null) dart.nullFailed(I[6], 185, 28, "null");
      this[S.__InkRipple__fadeOutController_isSet] = true;
      this[S.__InkRipple__fadeOutController] = t5;
    }
    confirm() {
      let t6;
      t6 = this[S._radiusController];
      (() => {
        t6.duration = ink_ripple._kRadiusDuration;
        t6.forward();
        return t6;
      })();
      this[S._fadeInController].forward();
      this[S._fadeOutController].animateTo(1.0, {duration: ink_ripple._kFadeOutDuration});
    }
    cancel() {
      this[S._fadeInController].stop();
      let fadeOutValue = 1.0 - dart.notNull(this[S._fadeInController].value);
      this[S._fadeOutController].value = fadeOutValue;
      if (fadeOutValue < 1.0) this[S._fadeOutController].animateTo(1.0, {duration: ink_ripple._kCancelDuration});
    }
    [S._handleAlphaStatusChanged](status) {
      if (status == null) dart.nullFailed(I[6], 216, 50, "status");
      if (status == animation.AnimationStatus.completed) this.dispose();
    }
    dispose() {
      this[S._radiusController].dispose();
      this[S._fadeInController].dispose();
      this[S._fadeOutController].dispose();
      super.dispose();
    }
    paintFeature(canvas, transform) {
      let t6;
      if (canvas == null) dart.nullFailed(I[6], 230, 28, "canvas");
      if (transform == null) dart.nullFailed(I[6], 230, 44, "transform");
      let alpha = dart.test(this[S._fadeInController].isAnimating) ? this[S._fadeIn].value : this[S._fadeOut].value;
      let paint = (t6 = ui.Paint.new(), (() => {
        t6.color = this.color.withAlpha(alpha);
        return t6;
      })());
      let center = dart.nullCheck(ui.Offset.lerp(this[S._position], this.referenceBox.size.center(ui.Offset.zero), curves.Curves.ease.transform(this[S._radiusController].value)));
      this.paintInkCircle({canvas: canvas, transform: transform, paint: paint, center: center, textDirection: this[S._textDirection], radius: this[S._radius].value, customBorder: this[S._customBorder], borderRadius: this[S._borderRadius], clipCallback: this[S._clipCallback]});
    }
  };
  (ink_ripple.InkRipple.new = function(opts) {
    let t0, t0$, t0$0, t0$1, t0$2;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[6], 111, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[6], 112, 24, "referenceBox");
    let position = opts && 'position' in opts ? opts.position : null;
    if (position == null) dart.nullFailed(I[6], 113, 21, "position");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[6], 114, 20, "color");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[6], 115, 28, "textDirection");
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    if (containedInkWell == null) dart.nullFailed(I[6], 116, 10, "containedInkWell");
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S.__InkRipple__radius] = null;
    this[S.__InkRipple__radius_isSet] = false;
    this[S.__InkRipple__radiusController] = null;
    this[S.__InkRipple__radiusController_isSet] = false;
    this[S.__InkRipple__fadeIn] = null;
    this[S.__InkRipple__fadeIn_isSet] = false;
    this[S.__InkRipple__fadeInController] = null;
    this[S.__InkRipple__fadeInController_isSet] = false;
    this[S.__InkRipple__fadeOut] = null;
    this[S.__InkRipple__fadeOut_isSet] = false;
    this[S.__InkRipple__fadeOutController] = null;
    this[S.__InkRipple__fadeOutController_isSet] = false;
    if (!(color != null)) dart.assertFailed(null, I[6], 122, 15, "color != null");
    if (!(position != null)) dart.assertFailed(null, I[6], 123, 15, "position != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[6], 124, 15, "textDirection != null");
    this[S._position] = position;
    this[S._borderRadius] = (t0 = borderRadius, t0 == null ? border_radius.BorderRadius.zero : t0);
    this[S._customBorder] = customBorder;
    this[S._textDirection] = textDirection;
    this[S._targetRadius] = (t0$ = radius, t0$ == null ? ink_ripple._getTargetRadius(referenceBox, containedInkWell, rectCallback, position) : t0$);
    this[S._clipCallback] = ink_ripple._getClipCallback(referenceBox, containedInkWell, rectCallback);
    ink_ripple.InkRipple.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, color: color, onRemoved: onRemoved});
    if (!(this[S._borderRadius] != null)) dart.assertFailed(null, I[6], 132, 12, "_borderRadius != null");
    this[S._fadeInController] = (t0$0 = new animation_controller.AnimationController.new({duration: ink_ripple._kFadeInDuration, vsync: controller.vsync}), (() => {
      t0$0.addListener(dart.bind(controller, 'markNeedsPaint'));
      t0$0.forward();
      return t0$0;
    })());
    this[S._fadeIn] = this[S._fadeInController].drive(core.int, new tween.IntTween.new({begin: 0, end: color.alpha}));
    this[S._radiusController] = (t0$1 = new animation_controller.AnimationController.new({duration: ink_ripple._kUnconfirmedRippleDuration, vsync: controller.vsync}), (() => {
      t0$1.addListener(dart.bind(controller, 'markNeedsPaint'));
      t0$1.forward();
      return t0$1;
    })());
    this[S._radius] = this[S._radiusController].drive(core.double, new (T$.TweenOfdouble()).new({begin: dart.notNull(this[S._targetRadius]) * 0.3, end: dart.notNull(this[S._targetRadius]) + 5.0}).chain(ink_ripple.InkRipple._easeCurveTween));
    this[S._fadeOutController] = (t0$2 = new animation_controller.AnimationController.new({duration: ink_ripple._kFadeOutDuration, vsync: controller.vsync}), (() => {
      t0$2.addListener(dart.bind(controller, 'markNeedsPaint'));
      t0$2.addStatusListener(dart.bind(this, S._handleAlphaStatusChanged));
      return t0$2;
    })());
    this[S._fadeOut] = this[S._fadeOutController].drive(core.int, new tween.IntTween.new({begin: color.alpha, end: 0}).chain(ink_ripple.InkRipple._fadeOutIntervalTween));
    controller.addInkFeature(this);
  }).prototype = ink_ripple.InkRipple.prototype;
  dart.addTypeTests(ink_ripple.InkRipple);
  dart.addTypeCaches(ink_ripple.InkRipple);
  dart.setMethodSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getMethods(ink_ripple.InkRipple.__proto__),
    [S._handleAlphaStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getGetters(ink_ripple.InkRipple.__proto__),
    [S._radius]: animation.Animation$(core.double),
    [S._radiusController]: animation_controller.AnimationController,
    [S._fadeIn]: animation.Animation$(core.int),
    [S._fadeInController]: animation_controller.AnimationController,
    [S._fadeOut]: animation.Animation$(core.int),
    [S._fadeOutController]: animation_controller.AnimationController
  }));
  dart.setSetterSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getSetters(ink_ripple.InkRipple.__proto__),
    [S._radius]: animation.Animation$(core.double),
    [S._radiusController]: animation_controller.AnimationController,
    [S._fadeIn]: animation.Animation$(core.int),
    [S._fadeInController]: animation_controller.AnimationController,
    [S._fadeOut]: animation.Animation$(core.int),
    [S._fadeOutController]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(ink_ripple.InkRipple, I[8]);
  dart.setFieldSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getFields(ink_ripple.InkRipple.__proto__),
    [S._position]: dart.finalFieldType(ui.Offset),
    [S._borderRadius]: dart.finalFieldType(border_radius.BorderRadius),
    [S._customBorder]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S._targetRadius]: dart.finalFieldType(core.double),
    [S._clipCallback]: dart.finalFieldType(dart.nullable(dart.fnType(ui.Rect, []))),
    [S._textDirection]: dart.finalFieldType(ui.TextDirection),
    [S.__InkRipple__radius]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S.__InkRipple__radius_isSet]: dart.fieldType(core.bool),
    [S.__InkRipple__radiusController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.__InkRipple__radiusController_isSet]: dart.fieldType(core.bool),
    [S.__InkRipple__fadeIn]: dart.fieldType(dart.nullable(animation.Animation$(core.int))),
    [S.__InkRipple__fadeIn_isSet]: dart.fieldType(core.bool),
    [S.__InkRipple__fadeInController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.__InkRipple__fadeInController_isSet]: dart.fieldType(core.bool),
    [S.__InkRipple__fadeOut]: dart.fieldType(dart.nullable(animation.Animation$(core.int))),
    [S.__InkRipple__fadeOut_isSet]: dart.fieldType(core.bool),
    [S.__InkRipple__fadeOutController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.__InkRipple__fadeOutController_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(ink_ripple.InkRipple, {
    /*ink_ripple.InkRipple.splashFactory*/get splashFactory() {
      return C[89] || CT.C89;
    },
    /*ink_ripple.InkRipple._easeCurveTween*/get _easeCurveTween() {
      return new tween.CurveTween.new({curve: curves.Curves.ease});
    },
    /*ink_ripple.InkRipple._fadeOutIntervalTween*/get _fadeOutIntervalTween() {
      return new tween.CurveTween.new({curve: C[90] || CT.C90});
    }
  }, false);
  ink_ripple._getClipCallback = function _getClipCallback(referenceBox, containedInkWell, rectCallback) {
    if (referenceBox == null) dart.nullFailed(I[6], 22, 42, "referenceBox");
    if (containedInkWell == null) dart.nullFailed(I[6], 22, 61, "containedInkWell");
    if (rectCallback != null) {
      if (!dart.test(containedInkWell)) dart.assertFailed(null, I[6], 24, 12, "containedInkWell");
      return rectCallback;
    }
    if (dart.test(containedInkWell)) return dart.fn(() => ui.Offset.zero['&'](referenceBox.size), T$.VoidToRect());
    return null;
  };
  ink_ripple._getTargetRadius = function _getTargetRadius(referenceBox, containedInkWell, rectCallback, position) {
    if (referenceBox == null) dart.nullFailed(I[6], 32, 35, "referenceBox");
    if (containedInkWell == null) dart.nullFailed(I[6], 32, 54, "containedInkWell");
    if (position == null) dart.nullFailed(I[6], 32, 107, "position");
    let size = rectCallback != null ? rectCallback().size : referenceBox.size;
    let d1 = size.bottomRight(ui.Offset.zero).distance;
    let d2 = size.topRight(ui.Offset.zero)['-'](size.bottomLeft(ui.Offset.zero)).distance;
    return math.max(core.double, d1, d2) / 2.0;
  };
  dart.defineLazy(ink_ripple, {
    /*ink_ripple._kUnconfirmedRippleDuration*/get _kUnconfirmedRippleDuration() {
      return C[92] || CT.C92;
    },
    /*ink_ripple._kFadeInDuration*/get _kFadeInDuration() {
      return C[93] || CT.C93;
    },
    /*ink_ripple._kRadiusDuration*/get _kRadiusDuration() {
      return C[94] || CT.C94;
    },
    /*ink_ripple._kFadeOutDuration*/get _kFadeOutDuration() {
      return C[95] || CT.C95;
    },
    /*ink_ripple._kCancelDuration*/get _kCancelDuration() {
      return C[93] || CT.C93;
    },
    /*ink_ripple._kFadeOutIntervalStart*/get _kFadeOutIntervalStart() {
      return 0.6;
    }
  }, false);
  button_style_button.ButtonStyleButton = class ButtonStyleButton extends framework.StatefulWidget {
    get onPressed() {
      return this[S.onPressed$3];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S.onLongPress];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get style() {
      return this[S.style];
    }
    set style(value) {
      super.style = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get focusNode() {
      return this[S.focusNode$1];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$1];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get child() {
      return this[S.child];
    }
    set child(value) {
      super.child = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    createState() {
      return new button_style_button._ButtonStyleState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[12], 130, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("enabled", {value: this.enabled, ifFalse: "disabled"}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
    }
    static allOrNull(T, value) {
      return value == null ? null : material_state.MaterialStateProperty.all(T, value);
    }
    static scaledPadding(geometry1x, geometry2x, geometry3x, textScaleFactor) {
      if (geometry1x == null) dart.nullFailed(I[12], 151, 24, "geometry1x");
      if (geometry2x == null) dart.nullFailed(I[12], 152, 24, "geometry2x");
      if (geometry3x == null) dart.nullFailed(I[12], 153, 24, "geometry3x");
      if (textScaleFactor == null) dart.nullFailed(I[12], 154, 12, "textScaleFactor");
      if (!(geometry1x != null)) dart.assertFailed(null, I[12], 156, 12, "geometry1x != null");
      if (!(geometry2x != null)) dart.assertFailed(null, I[12], 157, 12, "geometry2x != null");
      if (!(geometry3x != null)) dart.assertFailed(null, I[12], 158, 12, "geometry3x != null");
      if (!(textScaleFactor != null)) dart.assertFailed(null, I[12], 159, 12, "textScaleFactor != null");
      if (dart.notNull(textScaleFactor) <= 1) {
        return geometry1x;
      } else if (dart.notNull(textScaleFactor) >= 3) {
        return geometry3x;
      } else if (dart.notNull(textScaleFactor) <= 2) {
        return dart.nullCheck(edge_insets.EdgeInsetsGeometry.lerp(geometry1x, geometry2x, dart.notNull(textScaleFactor) - 1));
      }
      return dart.nullCheck(edge_insets.EdgeInsetsGeometry.lerp(geometry2x, geometry3x, dart.notNull(textScaleFactor) - 2));
    }
  };
  (button_style_button.ButtonStyleButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
    if (autofocus == null) dart.nullFailed(I[12], 38, 19, "autofocus");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    if (clipBehavior == null) dart.nullFailed(I[12], 39, 19, "clipBehavior");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.onPressed$3] = onPressed;
    this[S.onLongPress] = onLongPress;
    this[S.style] = style;
    this[S.focusNode$1] = focusNode;
    this[S.autofocus$1] = autofocus;
    this[S.clipBehavior] = clipBehavior;
    this[S.child] = child;
    if (!(autofocus != null)) dart.assertFailed(null, I[12], 41, 15, "autofocus != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[12], 42, 15, "clipBehavior != null");
    button_style_button.ButtonStyleButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_style_button.ButtonStyleButton.prototype;
  dart.addTypeTests(button_style_button.ButtonStyleButton);
  dart.addTypeCaches(button_style_button.ButtonStyleButton);
  dart.setMethodSignature(button_style_button.ButtonStyleButton, () => ({
    __proto__: dart.getMethods(button_style_button.ButtonStyleButton.__proto__),
    createState: dart.fnType(button_style_button._ButtonStyleState, [])
  }));
  dart.setGetterSignature(button_style_button.ButtonStyleButton, () => ({
    __proto__: dart.getGetters(button_style_button.ButtonStyleButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(button_style_button.ButtonStyleButton, I[13]);
  dart.setFieldSignature(button_style_button.ButtonStyleButton, () => ({
    __proto__: dart.getFields(button_style_button.ButtonStyleButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(button_style_button.ButtonStyleButton) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(button_style_button.ButtonStyleButton)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(button_style_button.ButtonStyleButton));
  button_style_button._ButtonStyleState = class _ButtonStyleState extends State_TickerProviderStateMixin$36 {
    get [S._hovered]() {
      return this[S._states].contains(material_state.MaterialState.hovered);
    }
    get [S._focused]() {
      return this[S._states].contains(material_state.MaterialState.focused);
    }
    get [S._pressed]() {
      return this[S._states].contains(material_state.MaterialState.pressed);
    }
    get [S._disabled]() {
      return this[S._states].contains(material_state.MaterialState.disabled);
    }
    [S._updateState](state, value) {
      if (state == null) dart.nullFailed(I[12], 191, 35, "state");
      if (value == null) dart.nullFailed(I[12], 191, 47, "value");
      dart.test(value) ? this[S._states].add(state) : this[S._states].remove(state);
    }
    [S._handleHighlightChanged](value) {
      if (value == null) dart.nullFailed(I[12], 195, 37, "value");
      if (this[S._pressed] != value) {
        this.setState(dart.fn(() => {
          this[S._updateState](material_state.MaterialState.pressed, value);
        }, T$.VoidTovoid()));
      }
    }
    [S._handleHoveredChanged](value) {
      if (value == null) dart.nullFailed(I[12], 203, 35, "value");
      if (this[S._hovered] != value) {
        this.setState(dart.fn(() => {
          this[S._updateState](material_state.MaterialState.hovered, value);
        }, T$.VoidTovoid()));
      }
    }
    [S._handleFocusedChanged](value) {
      if (value == null) dart.nullFailed(I[12], 211, 35, "value");
      if (this[S._focused] != value) {
        this.setState(dart.fn(() => {
          this[S._updateState](material_state.MaterialState.focused, value);
        }, T$.VoidTovoid()));
      }
    }
    initState() {
      super.initState();
      this[S._updateState](material_state.MaterialState.disabled, !dart.test(this.widget.enabled));
    }
    dispose() {
      let t6;
      t6 = this[S._controller$1];
      t6 == null ? null : t6.dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      button_style_button.ButtonStyleButton.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[12], 232, 42, "oldWidget");
      super.didUpdateWidget(oldWidget);
      this[S._updateState](material_state.MaterialState.disabled, !dart.test(this.widget.enabled));
      if (dart.test(this[S._disabled]) && dart.test(this[S._pressed])) {
        this[S._handleHighlightChanged](false);
      }
    }
    build(context) {
      let t6, t6$, t6$0, t6$1;
      if (context == null) dart.nullFailed(I[12], 245, 29, "context");
      let widgetStyle = this.widget.style;
      let themeStyle = this.widget.themeStyleOf(context);
      let defaultStyle = this.widget.defaultStyleOf(context);
      if (!(defaultStyle != null)) dart.assertFailed(null, I[12], 249, 12, "defaultStyle != null");
      function effectiveValue(T, getProperty) {
        let t6, t6$;
        if (getProperty == null) dart.nullFailed(I[12], 251, 58, "getProperty");
        let widgetValue = getProperty(widgetStyle);
        let themeValue = getProperty(themeStyle);
        let defaultValue = getProperty(defaultStyle);
        t6$ = (t6 = widgetValue, t6 == null ? themeValue : t6);
        return t6$ == null ? defaultValue : t6$;
      }
      dart.fn(effectiveValue, T$.FnToTN());
      const resolve = (T, getProperty) => {
        if (getProperty == null) dart.nullFailed(I[12], 258, 74, "getProperty");
        return effectiveValue(T, dart.fn(style => {
          let t6;
          t6 = getProperty(style);
          return t6 == null ? null : t6.resolve(this[S._states]);
        }, dart.fnType(dart.nullable(T), [T$.ButtonStyleN()])));
      };
      dart.fn(resolve, T$.FnToTN$1());
      let resolvedElevation = resolve(T$.doubleN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.elevation;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfdoubleN()));
      let resolvedTextStyle = resolve(T$.TextStyleN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.textStyle;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfTextStyleN()));
      let resolvedBackgroundColor = resolve(T$.ColorN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.backgroundColor;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfColorN()));
      let resolvedForegroundColor = resolve(T$.ColorN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.foregroundColor;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfColorN()));
      let resolvedShadowColor = resolve(T$.ColorN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.shadowColor;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfColorN()));
      let resolvedPadding = resolve(T$.EdgeInsetsGeometryN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.padding;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN()));
      let resolvedMinimumSize = resolve(T$.SizeN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.minimumSize;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfSizeN()));
      let resolvedSide = resolve(T$.BorderSideN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.side;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfBorderSideN()));
      let resolvedShape = resolve(T$.OutlinedBorderN(), dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.shape;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN()));
      let resolvedMouseCursor = new button_style_button._MouseCursor.new(dart.fn(states => {
        if (states == null) dart.nullFailed(I[12], 275, 27, "states");
        return effectiveValue(mouse_cursor.MouseCursor, dart.fn(style => {
          let t7, t6;
          t6 = style;
          return t6 == null ? null : (t7 = t6.mouseCursor, t7 == null ? null : t7.resolve(states));
        }, T$.ButtonStyleNToMouseCursorN()));
      }, T$.SetOfMaterialStateToMouseCursorN()));
      let overlayColor = material_state.MaterialStateProperty.resolveWith(T$.ColorN(), dart.fn(states => {
        if (states == null) dart.nullFailed(I[12], 279, 27, "states");
        return effectiveValue(ui.Color, dart.fn(style => {
          let t7, t6;
          t6 = style;
          return t6 == null ? null : (t7 = t6.overlayColor, t7 == null ? null : t7.resolve(states));
        }, T$.ButtonStyleNToColorN()));
      }, T$.SetOfMaterialStateToColorN()));
      let resolvedVisualDensity = effectiveValue(theme_data.VisualDensity, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.visualDensity;
      }, T$.ButtonStyleNToVisualDensityN()));
      let resolvedTapTargetSize = effectiveValue(theme_data.MaterialTapTargetSize, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.tapTargetSize;
      }, T$.ButtonStyleNToMaterialTapTargetSizeN()));
      let resolvedAnimationDuration = effectiveValue(core.Duration, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.animationDuration;
      }, T$.ButtonStyleNToDurationN()));
      let resolvedEnableFeedback = effectiveValue(core.bool, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.enableFeedback;
      }, T$.ButtonStyleNToboolN()));
      let resolvedAlignment = effectiveValue(alignment.AlignmentGeometry, dart.fn(style => {
        let t6;
        t6 = style;
        return t6 == null ? null : t6.alignment;
      }, T$.ButtonStyleNToAlignmentGeometryN()));
      let densityAdjustment = dart.nullCheck(resolvedVisualDensity).baseSizeAdjustment;
      let effectiveConstraints = resolvedVisualDensity.effectiveConstraints(new box$.BoxConstraints.new({minWidth: dart.nullCheck(resolvedMinimumSize).width, minHeight: resolvedMinimumSize.height}));
      let padding = dart.nullCheck(resolvedPadding).add(new edge_insets.EdgeInsets.only({left: densityAdjustment.dx, top: densityAdjustment.dy, right: densityAdjustment.dx, bottom: densityAdjustment.dy})).clamp(edge_insets.EdgeInsets.zero, edge_insets.EdgeInsetsGeometry.infinity);
      if (dart.test(dart.nullCheck(resolvedAnimationDuration)['>'](core.Duration.zero)) && this[S._elevation] != null && this[S._backgroundColor] != null && this[S._elevation] != resolvedElevation && dart.nullCheck(this[S._backgroundColor]).value != dart.nullCheck(resolvedBackgroundColor).value && dart.nullCheck(this[S._backgroundColor]).opacity === 1 && dart.notNull(resolvedBackgroundColor.opacity) < 1 && resolvedElevation === 0) {
        if (!dart.equals((t6 = this[S._controller$1], t6 == null ? null : t6.duration), resolvedAnimationDuration)) {
          t6$ = this[S._controller$1];
          t6$ == null ? null : t6$.dispose();
          this[S._controller$1] = (t6$0 = new animation_controller.AnimationController.new({duration: resolvedAnimationDuration, vsync: this}), (() => {
            t6$0.addStatusListener(dart.fn(status => {
              if (status == null) dart.nullFailed(I[12], 321, 46, "status");
              if (status == animation.AnimationStatus.completed) {
                this.setState(dart.fn(() => {
                }, T$.VoidTovoid()));
              }
            }, T$.AnimationStatusTovoid()));
            return t6$0;
          })());
        }
        resolvedBackgroundColor = this[S._backgroundColor];
        dart.nullCheck(this[S._controller$1]).value = 0.0;
        dart.nullCheck(this[S._controller$1]).forward();
      }
      this[S._elevation] = resolvedElevation;
      this[S._backgroundColor] = resolvedBackgroundColor;
      let result = new basic.ConstrainedBox.new({constraints: effectiveConstraints, child: new material.Material.new({elevation: dart.nullCheck(resolvedElevation), textStyle: (t6$1 = resolvedTextStyle, t6$1 == null ? null : t6$1.copyWith({color: resolvedForegroundColor})), shape: dart.nullCheck(resolvedShape).copyWith({side: resolvedSide}), color: resolvedBackgroundColor, shadowColor: resolvedShadowColor, type: resolvedBackgroundColor == null ? material.MaterialType.transparency : material.MaterialType.button, animationDuration: resolvedAnimationDuration, clipBehavior: this.widget.clipBehavior, child: new ink_well.InkWell.new({onTap: this.widget.onPressed, onLongPress: this.widget.onLongPress, onHighlightChanged: dart.bind(this, S._handleHighlightChanged), onHover: dart.bind(this, S._handleHoveredChanged), mouseCursor: resolvedMouseCursor, enableFeedback: resolvedEnableFeedback, focusNode: this.widget.focusNode, canRequestFocus: this.widget.enabled, onFocusChange: dart.bind(this, S._handleFocusedChanged), autofocus: this.widget.autofocus, splashFactory: ink_ripple.InkRipple.splashFactory, overlayColor: overlayColor, highlightColor: colors$.Colors.transparent, customBorder: resolvedShape, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: resolvedForegroundColor}), child: new basic.Padding.new({padding: padding, child: new basic.Align.new({alignment: dart.nullCheck(resolvedAlignment), widthFactor: 1.0, heightFactor: 1.0, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[96] || CT.C96}), $creationLocationd_0dea112b090073317d4: C[102] || CT.C102})}), $creationLocationd_0dea112b090073317d4: C[106] || CT.C106}), $creationLocationd_0dea112b090073317d4: C[123] || CT.C123}), $creationLocationd_0dea112b090073317d4: C[134] || CT.C134});
      let minSize = null;
      switch (dart.nullCheck(resolvedTapTargetSize)) {
        case C[138] || CT.C138:
        {
          minSize = new ui.Size.new(48 + dart.notNull(densityAdjustment.dx), 48 + dart.notNull(densityAdjustment.dy));
          if (!(dart.notNull(minSize.width) >= 0.0)) dart.assertFailed(null, I[12], 383, 16, "minSize.width >= 0.0");
          if (!(dart.notNull(minSize.height) >= 0.0)) dart.assertFailed(null, I[12], 384, 16, "minSize.height >= 0.0");
          break;
        }
        case C[139] || CT.C139:
        {
          minSize = ui.Size.zero;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new basic.Semantics.new({container: true, button: true, enabled: this.widget.enabled, child: new button_style_button._InputPadding.new({minSize: minSize, child: result, $creationLocationd_0dea112b090073317d4: C[140] || CT.C140}), $creationLocationd_0dea112b090073317d4: C[144] || CT.C144});
    }
  };
  (button_style_button._ButtonStyleState.new = function() {
    this[S._controller$1] = null;
    this[S._elevation] = null;
    this[S._backgroundColor] = null;
    this[S._states] = T$.LinkedHashSetOfMaterialState().new();
    button_style_button._ButtonStyleState.__proto__.new.call(this);
    ;
  }).prototype = button_style_button._ButtonStyleState.prototype;
  dart.addTypeTests(button_style_button._ButtonStyleState);
  dart.addTypeCaches(button_style_button._ButtonStyleState);
  dart.setMethodSignature(button_style_button._ButtonStyleState, () => ({
    __proto__: dart.getMethods(button_style_button._ButtonStyleState.__proto__),
    [S._updateState]: dart.fnType(dart.void, [material_state.MaterialState, core.bool]),
    [S._handleHighlightChanged]: dart.fnType(dart.void, [core.bool]),
    [S._handleHoveredChanged]: dart.fnType(dart.void, [core.bool]),
    [S._handleFocusedChanged]: dart.fnType(dart.void, [core.bool]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(button_style_button._ButtonStyleState, () => ({
    __proto__: dart.getGetters(button_style_button._ButtonStyleState.__proto__),
    [S._hovered]: core.bool,
    [S._focused]: core.bool,
    [S._pressed]: core.bool,
    [S._disabled]: core.bool
  }));
  dart.setLibraryUri(button_style_button._ButtonStyleState, I[13]);
  dart.setFieldSignature(button_style_button._ButtonStyleState, () => ({
    __proto__: dart.getFields(button_style_button._ButtonStyleState.__proto__),
    [S._controller$1]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S._elevation]: dart.fieldType(dart.nullable(core.double)),
    [S._backgroundColor]: dart.fieldType(dart.nullable(ui.Color)),
    [S._states]: dart.finalFieldType(core.Set$(material_state.MaterialState))
  }));
  button_style_button._MouseCursor = class _MouseCursor extends material_state.MaterialStateMouseCursor {
    get resolveCallback() {
      return this[S.resolveCallback];
    }
    set resolveCallback(value) {
      super.resolveCallback = value;
    }
    resolve(states) {
      let t6;
      if (states == null) dart.nullFailed(I[12], 409, 42, "states");
      return dart.nullCheck((t6 = states, this.resolveCallback(t6)));
    }
    get debugDescription() {
      return "ButtonStyleButton_MouseCursor";
    }
  };
  (button_style_button._MouseCursor.new = function(resolveCallback) {
    if (resolveCallback == null) dart.nullFailed(I[12], 404, 27, "resolveCallback");
    this[S.resolveCallback] = resolveCallback;
    button_style_button._MouseCursor.__proto__.new.call(this);
    ;
  }).prototype = button_style_button._MouseCursor.prototype;
  dart.addTypeTests(button_style_button._MouseCursor);
  dart.addTypeCaches(button_style_button._MouseCursor);
  dart.setMethodSignature(button_style_button._MouseCursor, () => ({
    __proto__: dart.getMethods(button_style_button._MouseCursor.__proto__),
    resolve: dart.fnType(mouse_cursor.MouseCursor, [core.Set$(material_state.MaterialState)])
  }));
  dart.setGetterSignature(button_style_button._MouseCursor, () => ({
    __proto__: dart.getGetters(button_style_button._MouseCursor.__proto__),
    debugDescription: core.String
  }));
  dart.setLibraryUri(button_style_button._MouseCursor, I[13]);
  dart.setFieldSignature(button_style_button._MouseCursor, () => ({
    __proto__: dart.getFields(button_style_button._MouseCursor.__proto__),
    resolveCallback: dart.finalFieldType(dart.fnType(dart.nullable(mouse_cursor.MouseCursor), [core.Set$(material_state.MaterialState)]))
  }));
  button_style_button._InputPadding = class _InputPadding extends framework.SingleChildRenderObjectWidget {
    get minSize() {
      return this[S.minSize];
    }
    set minSize(value) {
      super.minSize = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[12], 430, 48, "context");
      return new button_style_button._RenderInputPadding.new(this.minSize);
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(I[12], 435, 40, "context");
      button_style_button._RenderInputPadding.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[12], 435, 79, "renderObject");
      renderObject.minSize = this.minSize;
    }
  };
  (button_style_button._InputPadding.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let minSize = opts && 'minSize' in opts ? opts.minSize : null;
    if (minSize == null) dart.nullFailed(I[12], 424, 19, "minSize");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.minSize] = minSize;
    button_style_button._InputPadding.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_style_button._InputPadding.prototype;
  dart.addTypeTests(button_style_button._InputPadding);
  dart.addTypeCaches(button_style_button._InputPadding);
  dart.setMethodSignature(button_style_button._InputPadding, () => ({
    __proto__: dart.getMethods(button_style_button._InputPadding.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(button_style_button._InputPadding, I[13]);
  dart.setFieldSignature(button_style_button._InputPadding, () => ({
    __proto__: dart.getFields(button_style_button._InputPadding.__proto__),
    minSize: dart.finalFieldType(ui.Size)
  }));
  button_style_button._RenderInputPadding = class _RenderInputPadding extends shifted_box.RenderShiftedBox {
    get minSize() {
      return this[S._minSize];
    }
    set minSize(value) {
      if (value == null) dart.nullFailed(I[12], 445, 20, "value");
      if (dart.equals(this[S._minSize], value)) return;
      this[S._minSize] = value;
      this.markNeedsLayout();
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[12], 453, 42, "height");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicWidth(height), this.minSize.width);
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[12], 460, 43, "width");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicHeight(width), this.minSize.height);
      return 0.0;
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[12], 467, 42, "height");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicWidth(height), this.minSize.width);
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[12], 474, 43, "width");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicHeight(width), this.minSize.height);
      return 0.0;
    }
    [S._computeSize](opts) {
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      if (constraints == null) dart.nullFailed(I[12], 480, 46, "constraints");
      let layoutChild = opts && 'layoutChild' in opts ? opts.layoutChild : null;
      if (layoutChild == null) dart.nullFailed(I[12], 480, 82, "layoutChild");
      if (this.child != null) {
        let childSize = layoutChild(dart.nullCheck(this.child), constraints);
        let height = math.max(core.double, childSize.width, this.minSize.width);
        let width = math.max(core.double, childSize.height, this.minSize.height);
        return constraints.constrain(new ui.Size.new(height, width));
      }
      return ui.Size.zero;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[12], 491, 40, "constraints");
      return this[S._computeSize]({constraints: constraints, layoutChild: C[150] || CT.C150});
    }
    performLayout() {
      this.size = this[S._computeSize]({constraints: this.constraints, layoutChild: C[151] || CT.C151});
      if (this.child != null) {
        let childParentData = box$.BoxParentData.as(dart.nullCheck(dart.nullCheck(this.child).parentData));
        childParentData.offset = alignment.Alignment.center.alongOffset(ui.Offset.as(this.size['-'](dart.nullCheck(this.child).size)));
      }
    }
    hitTest(result, opts) {
      if (result == null) dart.nullFailed(I[12], 511, 33, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[12], 511, 59, "position");
      if (dart.test(super.hitTest(result, {position: position}))) {
        return true;
      }
      let center = dart.nullCheck(this.child).size.center(ui.Offset.zero);
      return result.addWithRawTransform({transform: matrix_utils.MatrixUtils.forceToPoint(center), position: center, hitTest: dart.fn((result, position) => {
          if (result == null) dart.nullFailed(I[12], 519, 34, "result");
          if (!dart.equals(position, center)) dart.assertFailed(null, I[12], 520, 16, "position == center");
          return dart.nullCheck(this.child).hitTest(result, {position: center});
        }, T$.BoxHitTestResultAndOffsetNTobool())});
    }
  };
  (button_style_button._RenderInputPadding.new = function(_minSize, child = null) {
    if (_minSize == null) dart.nullFailed(I[12], 441, 28, "_minSize");
    this[S._minSize] = _minSize;
    button_style_button._RenderInputPadding.__proto__.new.call(this, child);
    ;
  }).prototype = button_style_button._RenderInputPadding.prototype;
  dart.addTypeTests(button_style_button._RenderInputPadding);
  dart.addTypeCaches(button_style_button._RenderInputPadding);
  dart.setMethodSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getMethods(button_style_button._RenderInputPadding.__proto__),
    [S._computeSize]: dart.fnType(ui.Size, [], {}, {constraints: box$.BoxConstraints, layoutChild: dart.fnType(ui.Size, [box$.RenderBox, box$.BoxConstraints])})
  }));
  dart.setGetterSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getGetters(button_style_button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setSetterSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getSetters(button_style_button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setLibraryUri(button_style_button._RenderInputPadding, I[13]);
  dart.setFieldSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getFields(button_style_button._RenderInputPadding.__proto__),
    [S._minSize]: dart.fieldType(ui.Size)
  }));
  text_button.TextButton = class TextButton extends button_style_button.ButtonStyleButton {
    static styleFrom(opts) {
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let enabledMouseCursor = opts && 'enabledMouseCursor' in opts ? opts.enabledMouseCursor : null;
      let disabledMouseCursor = opts && 'disabledMouseCursor' in opts ? opts.disabledMouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let foregroundColor = onSurface == null && primary == null ? null : new text_button._TextButtonDefaultForeground.new(primary, onSurface);
      let overlayColor = primary == null ? null : new text_button._TextButtonDefaultOverlay.new(primary);
      let mouseCursor = enabledMouseCursor == null && disabledMouseCursor == null ? null : new text_button._TextButtonDefaultMouseCursor.new(dart.nullCheck(enabledMouseCursor), dart.nullCheck(disabledMouseCursor));
      return new button_style.ButtonStyle.new({textStyle: button_style_button.ButtonStyleButton.allOrNull(text_style.TextStyle, textStyle), backgroundColor: button_style_button.ButtonStyleButton.allOrNull(ui.Color, backgroundColor), foregroundColor: foregroundColor, overlayColor: overlayColor, shadowColor: button_style_button.ButtonStyleButton.allOrNull(ui.Color, shadowColor), elevation: button_style_button.ButtonStyleButton.allOrNull(core.double, elevation), padding: button_style_button.ButtonStyleButton.allOrNull(edge_insets.EdgeInsetsGeometry, padding), minimumSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, minimumSize), side: button_style_button.ButtonStyleButton.allOrNull(borders.BorderSide, side), shape: button_style_button.ButtonStyleButton.allOrNull(borders.OutlinedBorder, shape), mouseCursor: mouseCursor, visualDensity: visualDensity, tapTargetSize: tapTargetSize, animationDuration: animationDuration, enableFeedback: enableFeedback, alignment: alignment});
    }
    defaultStyleOf(context) {
      let t6, t6$;
      if (context == null) dart.nullFailed(I[14], 245, 43, "context");
      let theme = theme$.Theme.of(context);
      let colorScheme = theme.colorScheme;
      let scaledPadding = button_style_button.ButtonStyleButton.scaledPadding(C[0] || CT.C0, C[153] || CT.C153, C[154] || CT.C154, (t6$ = (t6 = media_query.MediaQuery.maybeOf(context), t6 == null ? null : t6.textScaleFactor), t6$ == null ? 1.0 : t6$));
      return text_button.TextButton.styleFrom({primary: colorScheme.primary, onSurface: colorScheme.onSurface, backgroundColor: colors$.Colors.transparent, shadowColor: theme.shadowColor, elevation: 0.0, textStyle: theme.textTheme.button, padding: scaledPadding, minimumSize: C[155] || CT.C155, side: null, shape: C[156] || CT.C156, enabledMouseCursor: mouse_cursor.SystemMouseCursors.click, disabledMouseCursor: mouse_cursor.SystemMouseCursors.forbidden, visualDensity: theme.visualDensity, tapTargetSize: theme.materialTapTargetSize, animationDuration: constants.kThemeChangeDuration, enableFeedback: true, alignment: alignment.Alignment.center});
    }
    themeStyleOf(context) {
      if (context == null) dart.nullFailed(I[14], 280, 42, "context");
      return text_button_theme.TextButtonTheme.of(context).style;
    }
  };
  (text_button.TextButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[14], 67, 10, "autofocus");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[14], 68, 10, "clipBehavior");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[14], 69, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    text_button.TextButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, style: style, focusNode: focusNode, autofocus: autofocus, clipBehavior: clipBehavior, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button.TextButton.prototype;
  dart.addTypeTests(text_button.TextButton);
  dart.addTypeCaches(text_button.TextButton);
  dart.setMethodSignature(text_button.TextButton, () => ({
    __proto__: dart.getMethods(text_button.TextButton.__proto__),
    defaultStyleOf: dart.fnType(button_style.ButtonStyle, [framework.BuildContext]),
    themeStyleOf: dart.fnType(dart.nullable(button_style.ButtonStyle), [framework.BuildContext])
  }));
  dart.setLibraryUri(text_button.TextButton, I[15]);
  text_button._TextButtonDefaultForeground = class _TextButtonDefaultForeground extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {
    resolve(states) {
      let t6;
      if (states == null) dart.nullFailed(I[14], 293, 37, "states");
      if (dart.test(states.contains(material_state.MaterialState.disabled))) {
        t6 = this.onSurface;
        return t6 == null ? null : t6.withOpacity(0.38);
      }
      return this.primary;
    }
    toString() {
      let t6;
      return "{disabled: " + dart.str((t6 = this.onSurface, t6 == null ? null : t6.withOpacity(0.38))) + ", otherwise: " + dart.str(this.primary) + "}";
    }
  };
  (text_button._TextButtonDefaultForeground.new = function(primary, onSurface) {
    this.primary = primary;
    this.onSurface = onSurface;
    ;
  }).prototype = text_button._TextButtonDefaultForeground.prototype;
  dart.addTypeTests(text_button._TextButtonDefaultForeground);
  dart.addTypeCaches(text_button._TextButtonDefaultForeground);
  dart.setMethodSignature(text_button._TextButtonDefaultForeground, () => ({
    __proto__: dart.getMethods(text_button._TextButtonDefaultForeground.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(text_button._TextButtonDefaultForeground, I[15]);
  dart.setFieldSignature(text_button._TextButtonDefaultForeground, () => ({
    __proto__: dart.getFields(text_button._TextButtonDefaultForeground.__proto__),
    primary: dart.finalFieldType(dart.nullable(ui.Color)),
    onSurface: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(text_button._TextButtonDefaultForeground, ['toString']);
  text_button._TextButtonDefaultOverlay = class _TextButtonDefaultOverlay extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {
    resolve(states) {
      if (states == null) dart.nullFailed(I[14], 312, 37, "states");
      if (dart.test(states.contains(material_state.MaterialState.hovered))) return this.primary.withOpacity(0.04);
      if (dart.test(states.contains(material_state.MaterialState.focused)) || dart.test(states.contains(material_state.MaterialState.pressed))) return this.primary.withOpacity(0.12);
      return null;
    }
    toString() {
      return "{hovered: " + dart.str(this.primary.withOpacity(0.04)) + ", focused,pressed: " + dart.str(this.primary.withOpacity(0.12)) + ", otherwise: null}";
    }
  };
  (text_button._TextButtonDefaultOverlay.new = function(primary) {
    if (primary == null) dart.nullFailed(I[14], 307, 34, "primary");
    this.primary = primary;
    ;
  }).prototype = text_button._TextButtonDefaultOverlay.prototype;
  dart.addTypeTests(text_button._TextButtonDefaultOverlay);
  dart.addTypeCaches(text_button._TextButtonDefaultOverlay);
  dart.setMethodSignature(text_button._TextButtonDefaultOverlay, () => ({
    __proto__: dart.getMethods(text_button._TextButtonDefaultOverlay.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(text_button._TextButtonDefaultOverlay, I[15]);
  dart.setFieldSignature(text_button._TextButtonDefaultOverlay, () => ({
    __proto__: dart.getFields(text_button._TextButtonDefaultOverlay.__proto__),
    primary: dart.finalFieldType(ui.Color)
  }));
  dart.defineExtensionMethods(text_button._TextButtonDefaultOverlay, ['toString']);
  const MaterialStateProperty_Diagnosticable$36 = class MaterialStateProperty_Diagnosticable extends material_state.MaterialStateProperty$(mouse_cursor.MouseCursor) {};
  (MaterialStateProperty_Diagnosticable$36.new = function() {
  }).prototype = MaterialStateProperty_Diagnosticable$36.prototype;
  dart.applyMixin(MaterialStateProperty_Diagnosticable$36, diagnostics.Diagnosticable);
  text_button._TextButtonDefaultMouseCursor = class _TextButtonDefaultMouseCursor extends MaterialStateProperty_Diagnosticable$36 {
    resolve(states) {
      if (states == null) dart.nullFailed(I[14], 334, 42, "states");
      if (dart.test(states.contains(material_state.MaterialState.disabled))) return this.disabledCursor;
      return this.enabledCursor;
    }
  };
  (text_button._TextButtonDefaultMouseCursor.new = function(enabledCursor, disabledCursor) {
    if (enabledCursor == null) dart.nullFailed(I[14], 328, 38, "enabledCursor");
    if (disabledCursor == null) dart.nullFailed(I[14], 328, 58, "disabledCursor");
    this.enabledCursor = enabledCursor;
    this.disabledCursor = disabledCursor;
    ;
  }).prototype = text_button._TextButtonDefaultMouseCursor.prototype;
  dart.addTypeTests(text_button._TextButtonDefaultMouseCursor);
  dart.addTypeCaches(text_button._TextButtonDefaultMouseCursor);
  dart.setMethodSignature(text_button._TextButtonDefaultMouseCursor, () => ({
    __proto__: dart.getMethods(text_button._TextButtonDefaultMouseCursor.__proto__),
    resolve: dart.fnType(mouse_cursor.MouseCursor, [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(text_button._TextButtonDefaultMouseCursor, I[15]);
  dart.setFieldSignature(text_button._TextButtonDefaultMouseCursor, () => ({
    __proto__: dart.getFields(text_button._TextButtonDefaultMouseCursor.__proto__),
    enabledCursor: dart.finalFieldType(mouse_cursor.MouseCursor),
    disabledCursor: dart.finalFieldType(mouse_cursor.MouseCursor)
  }));
  text_button._TextButtonWithIcon = class _TextButtonWithIcon extends text_button.TextButton {
    defaultStyleOf(context) {
      let t6, t6$;
      if (context == null) dart.nullFailed(I[14], 366, 43, "context");
      let scaledPadding = button_style_button.ButtonStyleButton.scaledPadding(C[0] || CT.C0, C[154] || CT.C154, C[154] || CT.C154, (t6$ = (t6 = media_query.MediaQuery.maybeOf(context), t6 == null ? null : t6.textScaleFactor), t6$ == null ? 1.0 : t6$));
      return super.defaultStyleOf(context).copyWith({padding: material_state.MaterialStateProperty.all(edge_insets.EdgeInsetsGeometry, scaledPadding)});
    }
  };
  (text_button._TextButtonWithIcon.new = function(opts) {
    let t6, t6$;
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[14], 350, 21, "icon");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[14], 351, 21, "label");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(icon != null)) dart.assertFailed(null, I[14], 352, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[14], 353, 15, "label != null");
    text_button._TextButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, style: style, focusNode: focusNode, autofocus: (t6 = autofocus, t6 == null ? false : t6), clipBehavior: (t6$ = clipBehavior, t6$ == null ? ui.Clip.none : t6$), child: new text_button._TextButtonWithIconChild.new({icon: icon, label: label, $creationLocationd_0dea112b090073317d4: C[162] || CT.C162}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button._TextButtonWithIcon.prototype;
  dart.addTypeTests(text_button._TextButtonWithIcon);
  dart.addTypeCaches(text_button._TextButtonWithIcon);
  dart.setLibraryUri(text_button._TextButtonWithIcon, I[15]);
  text_button._TextButtonWithIconChild = class _TextButtonWithIconChild extends framework.StatelessWidget {
    get label() {
      return this[S.label];
    }
    set label(value) {
      super.label = value;
    }
    get icon() {
      return this[S.icon$1];
    }
    set icon(value) {
      super.icon = value;
    }
    build(context) {
      let t6, t6$;
      if (context == null) dart.nullFailed(I[14], 390, 29, "context");
      let scale = (t6$ = (t6 = media_query.MediaQuery.maybeOf(context), t6 == null ? null : t6.textScaleFactor), t6$ == null ? 1.0 : t6$);
      let gap = dart.notNull(scale) <= 1 ? 8.0 : dart.nullCheck(ui.lerpDouble(8, 4, math.min(core.double, dart.notNull(scale) - 1, 1.0)));
      return new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this.icon, new basic.SizedBox.new({width: gap, $creationLocationd_0dea112b090073317d4: C[166] || CT.C166}), this.label]), $creationLocationd_0dea112b090073317d4: C[169] || CT.C169});
    }
  };
  (text_button._TextButtonWithIconChild.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[14], 382, 19, "label");
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[14], 383, 19, "icon");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.label] = label;
    this[S.icon$1] = icon;
    text_button._TextButtonWithIconChild.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button._TextButtonWithIconChild.prototype;
  dart.addTypeTests(text_button._TextButtonWithIconChild);
  dart.addTypeCaches(text_button._TextButtonWithIconChild);
  dart.setMethodSignature(text_button._TextButtonWithIconChild, () => ({
    __proto__: dart.getMethods(text_button._TextButtonWithIconChild.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(text_button._TextButtonWithIconChild, I[15]);
  dart.setFieldSignature(text_button._TextButtonWithIconChild, () => ({
    __proto__: dart.getFields(text_button._TextButtonWithIconChild.__proto__),
    label: dart.finalFieldType(framework.Widget),
    icon: dart.finalFieldType(framework.Widget)
  }));
  snack_bar.SnackBarClosedReason = class SnackBarClosedReason extends core.Object {
    toString() {
      return this[S._name$5];
    }
  };
  (snack_bar.SnackBarClosedReason.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[16], 49, 6, "index");
    if (_name == null) dart.nullFailed(I[16], 49, 6, "_name");
    this.index = index;
    this[S._name$5] = _name;
    ;
  }).prototype = snack_bar.SnackBarClosedReason.prototype;
  dart.addTypeTests(snack_bar.SnackBarClosedReason);
  dart.addTypeCaches(snack_bar.SnackBarClosedReason);
  dart.setLibraryUri(snack_bar.SnackBarClosedReason, I[17]);
  dart.setFieldSignature(snack_bar.SnackBarClosedReason, () => ({
    __proto__: dart.getFields(snack_bar.SnackBarClosedReason.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$5]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(snack_bar.SnackBarClosedReason, ['toString']);
  snack_bar.SnackBarClosedReason.action = C[173] || CT.C173;
  snack_bar.SnackBarClosedReason.dismiss = C[174] || CT.C174;
  snack_bar.SnackBarClosedReason.swipe = C[175] || CT.C175;
  snack_bar.SnackBarClosedReason.hide = C[176] || CT.C176;
  snack_bar.SnackBarClosedReason.remove = C[177] || CT.C177;
  snack_bar.SnackBarClosedReason.timeout = C[178] || CT.C178;
  snack_bar.SnackBarClosedReason.values = C[179] || CT.C179;
  snack_bar.SnackBarAction = class SnackBarAction extends framework.StatefulWidget {
    get textColor() {
      return this[S.textColor];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[S.disabledTextColor];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get label() {
      return this[S.label$1];
    }
    set label(value) {
      super.label = value;
    }
    get onPressed() {
      return this[S.onPressed$4];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    createState() {
      return new snack_bar._SnackBarActionState.new();
    }
  };
  (snack_bar.SnackBarAction.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[16], 89, 19, "label");
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    if (onPressed == null) dart.nullFailed(I[16], 90, 19, "onPressed");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.textColor] = textColor;
    this[S.disabledTextColor] = disabledTextColor;
    this[S.label$1] = label;
    this[S.onPressed$4] = onPressed;
    if (!(label != null)) dart.assertFailed(null, I[16], 91, 15, "label != null");
    if (!(onPressed != null)) dart.assertFailed(null, I[16], 92, 15, "onPressed != null");
    snack_bar.SnackBarAction.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = snack_bar.SnackBarAction.prototype;
  dart.addTypeTests(snack_bar.SnackBarAction);
  dart.addTypeCaches(snack_bar.SnackBarAction);
  dart.setMethodSignature(snack_bar.SnackBarAction, () => ({
    __proto__: dart.getMethods(snack_bar.SnackBarAction.__proto__),
    createState: dart.fnType(framework.State$(snack_bar.SnackBarAction), [])
  }));
  dart.setLibraryUri(snack_bar.SnackBarAction, I[17]);
  dart.setFieldSignature(snack_bar.SnackBarAction, () => ({
    __proto__: dart.getFields(snack_bar.SnackBarAction.__proto__),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    label: dart.finalFieldType(core.String),
    onPressed: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  snack_bar._SnackBarActionState = class _SnackBarActionState extends framework.State$(snack_bar.SnackBarAction) {
    [S._handlePressed]() {
      if (dart.test(this[S._haveTriggeredAction])) return;
      this.setState(dart.fn(() => {
        this[S._haveTriggeredAction] = true;
      }, T$.VoidTovoid()));
      this.widget.onPressed();
      scaffold$.Scaffold.of(this.context).hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.action});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[16], 130, 29, "context");
      const resolveForegroundColor = states => {
        let t6, t6$;
        if (states == null) dart.nullFailed(I[16], 131, 54, "states");
        let snackBarTheme = theme$.Theme.of(context).snackBarTheme;
        if (dart.test(states.contains(material_state.MaterialState.disabled))) {
          t6 = this.widget.disabledTextColor;
          return t6 == null ? snackBarTheme.disabledActionTextColor : t6;
        }
        t6$ = this.widget.textColor;
        return t6$ == null ? snackBarTheme.actionTextColor : t6$;
      };
      dart.fn(resolveForegroundColor, T$.SetOfMaterialStateToColorN());
      return new text_button.TextButton.new({style: new button_style.ButtonStyle.new({foregroundColor: material_state.MaterialStateProperty.resolveWith(T$.ColorN(), resolveForegroundColor)}), onPressed: dart.test(this[S._haveTriggeredAction]) ? null : dart.bind(this, S._handlePressed), child: new text$.Text.new(this.widget.label, {$creationLocationd_0dea112b090073317d4: C[180] || CT.C180}), $creationLocationd_0dea112b090073317d4: C[183] || CT.C183});
    }
  };
  (snack_bar._SnackBarActionState.new = function() {
    this[S._haveTriggeredAction] = false;
    snack_bar._SnackBarActionState.__proto__.new.call(this);
    ;
  }).prototype = snack_bar._SnackBarActionState.prototype;
  dart.addTypeTests(snack_bar._SnackBarActionState);
  dart.addTypeCaches(snack_bar._SnackBarActionState);
  dart.setMethodSignature(snack_bar._SnackBarActionState, () => ({
    __proto__: dart.getMethods(snack_bar._SnackBarActionState.__proto__),
    [S._handlePressed]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(snack_bar._SnackBarActionState, I[17]);
  dart.setFieldSignature(snack_bar._SnackBarActionState, () => ({
    __proto__: dart.getFields(snack_bar._SnackBarActionState.__proto__),
    [S._haveTriggeredAction]: dart.fieldType(core.bool)
  }));
  snack_bar.SnackBar = class SnackBar extends framework.StatefulWidget {
    get content() {
      return this[S.content];
    }
    set content(value) {
      super.content = value;
    }
    get backgroundColor() {
      return this[S.backgroundColor];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S.elevation];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get margin() {
      return this[S.margin];
    }
    set margin(value) {
      super.margin = value;
    }
    get padding() {
      return this[S.padding$1];
    }
    set padding(value) {
      super.padding = value;
    }
    get width() {
      return this[S.width];
    }
    set width(value) {
      super.width = value;
    }
    get shape() {
      return this[S.shape];
    }
    set shape(value) {
      super.shape = value;
    }
    get behavior() {
      return this[S.behavior];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get action() {
      return this[S.action];
    }
    set action(value) {
      super.action = value;
    }
    get duration() {
      return this[S.duration];
    }
    set duration(value) {
      super.duration = value;
    }
    get animation() {
      return this[S.animation];
    }
    set animation(value) {
      super.animation = value;
    }
    get onVisible() {
      return this[S.onVisible];
    }
    set onVisible(value) {
      super.onVisible = value;
    }
    static createAnimationController(opts) {
      let vsync = opts && 'vsync' in opts ? opts.vsync : null;
      if (vsync == null) dart.nullFailed(I[16], 374, 82, "vsync");
      return new animation_controller.AnimationController.new({duration: snack_bar._snackBarTransitionDuration, debugLabel: "SnackBar", vsync: vsync});
    }
    withAnimation(newAnimation, opts) {
      let t6;
      if (newAnimation == null) dart.nullFailed(I[16], 386, 44, "newAnimation");
      let fallbackKey = opts && 'fallbackKey' in opts ? opts.fallbackKey : null;
      return new snack_bar.SnackBar.new({key: (t6 = this.key, t6 == null ? fallbackKey : t6), content: this.content, backgroundColor: this.backgroundColor, elevation: this.elevation, margin: this.margin, padding: this.padding, width: this.width, shape: this.shape, behavior: this.behavior, action: this.action, duration: this.duration, animation: newAnimation, onVisible: this.onVisible, $creationLocationd_0dea112b090073317d4: C[189] || CT.C189});
    }
    createState() {
      return new snack_bar._SnackBarState.new();
    }
  };
  (snack_bar.SnackBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let content = opts && 'content' in opts ? opts.content : null;
    if (content == null) dart.nullFailed(I[16], 243, 19, "content");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let action = opts && 'action' in opts ? opts.action : null;
    let duration = opts && 'duration' in opts ? opts.duration : C[188] || CT.C188;
    if (duration == null) dart.nullFailed(I[16], 252, 10, "duration");
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let onVisible = opts && 'onVisible' in opts ? opts.onVisible : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.content] = content;
    this[S.backgroundColor] = backgroundColor;
    this[S.elevation] = elevation;
    this[S.margin] = margin;
    this[S.padding$1] = padding;
    this[S.width] = width;
    this[S.shape] = shape;
    this[S.behavior] = behavior;
    this[S.action] = action;
    this[S.duration] = duration;
    this[S.animation] = animation;
    this[S.onVisible] = onVisible;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[16], 255, 15, "elevation == null || elevation >= 0.0");
    if (!(content != null)) dart.assertFailed(null, I[16], 256, 15, "content != null");
    if (!(margin == null || behavior == snack_bar_theme.SnackBarBehavior.floating)) dart.assertFailed("Margin can only be used with floating behavior", I[16], 258, 10, "margin == null || behavior == SnackBarBehavior.floating");
    if (!(width == null || behavior == snack_bar_theme.SnackBarBehavior.floating)) dart.assertFailed("Width can only be used with floating behavior", I[16], 262, 10, "width == null || behavior == SnackBarBehavior.floating");
    if (!(width == null || margin == null)) dart.assertFailed("Width and margin can not be used together", I[16], 266, 10, "width == null || margin == null");
    if (!(duration != null)) dart.assertFailed(null, I[16], 269, 15, "duration != null");
    snack_bar.SnackBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = snack_bar.SnackBar.prototype;
  dart.addTypeTests(snack_bar.SnackBar);
  dart.addTypeCaches(snack_bar.SnackBar);
  dart.setMethodSignature(snack_bar.SnackBar, () => ({
    __proto__: dart.getMethods(snack_bar.SnackBar.__proto__),
    withAnimation: dart.fnType(snack_bar.SnackBar, [animation.Animation$(core.double)], {fallbackKey: dart.nullable(key.Key)}, {}),
    createState: dart.fnType(framework.State$(snack_bar.SnackBar), [])
  }));
  dart.setLibraryUri(snack_bar.SnackBar, I[17]);
  dart.setFieldSignature(snack_bar.SnackBar, () => ({
    __proto__: dart.getFields(snack_bar.SnackBar.__proto__),
    content: dart.finalFieldType(framework.Widget),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    behavior: dart.finalFieldType(dart.nullable(snack_bar_theme.SnackBarBehavior)),
    action: dart.finalFieldType(dart.nullable(snack_bar.SnackBarAction)),
    duration: dart.finalFieldType(core.Duration),
    animation: dart.finalFieldType(dart.nullable(animation.Animation$(core.double))),
    onVisible: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  snack_bar._SnackBarState = class _SnackBarState extends framework.State$(snack_bar.SnackBar) {
    initState() {
      super.initState();
      dart.nullCheck(this.widget.animation).addStatusListener(dart.bind(this, S._onAnimationStatusChanged));
    }
    didUpdateWidget(oldWidget) {
      snack_bar.SnackBar.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[16], 418, 33, "oldWidget");
      if (!dart.equals(this.widget.animation, oldWidget.animation)) {
        dart.nullCheck(oldWidget.animation).removeStatusListener(dart.bind(this, S._onAnimationStatusChanged));
        dart.nullCheck(this.widget.animation).addStatusListener(dart.bind(this, S._onAnimationStatusChanged));
      }
      super.didUpdateWidget(oldWidget);
    }
    dispose() {
      dart.nullCheck(this.widget.animation).removeStatusListener(dart.bind(this, S._onAnimationStatusChanged));
      super.dispose();
    }
    [S._onAnimationStatusChanged](animationStatus) {
      if (animationStatus == null) dart.nullFailed(I[16], 432, 50, "animationStatus");
      switch (animationStatus) {
        case C[204] || CT.C204:
        case C[205] || CT.C205:
        case C[206] || CT.C206:
        {
          break;
        }
        case C[207] || CT.C207:
        {
          if (this.widget.onVisible != null && !dart.test(this[S._wasVisible])) {
            dart.nullCheck(this.widget.onVisible)();
          }
          this[S._wasVisible] = true;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t7, t7$, t7$0, t7$1, t7$2, t7$3, t7$4;
      if (context == null) dart.nullFailed(I[16], 447, 29, "context");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[16], 448, 12, "debugCheckHasMediaQuery(context)");
      let mediaQueryData = media_query.MediaQuery.of(context);
      if (!(this.widget.animation != null)) dart.assertFailed(null, I[16], 450, 12, "widget.animation != null");
      let theme = theme$.Theme.of(context);
      let colorScheme = theme.colorScheme;
      let snackBarTheme = theme.snackBarTheme;
      let isThemeDark = theme.brightness == ui.Brightness.dark;
      let buttonColor = isThemeDark ? colorScheme.primaryVariant : colorScheme.secondary;
      let brightness = isThemeDark ? ui.Brightness.light : ui.Brightness.dark;
      let themeBackgroundColor = isThemeDark ? colorScheme.onSurface : ui.Color.alphaBlend(colorScheme.onSurface.withOpacity(0.8), colorScheme.surface);
      let inverseTheme = theme.copyWith({colorScheme: new color_scheme.ColorScheme.new({primary: colorScheme.onPrimary, primaryVariant: colorScheme.onPrimary, secondary: buttonColor, secondaryVariant: colorScheme.onSecondary, surface: colorScheme.onSurface, background: themeBackgroundColor, error: colorScheme.onError, onPrimary: colorScheme.primary, onSecondary: colorScheme.secondary, onSurface: colorScheme.surface, onBackground: colorScheme.background, onError: colorScheme.error, brightness: brightness})});
      let contentTextStyle = (t6 = snackBarTheme.contentTextStyle, t6 == null ? theme_data.ThemeData.new({brightness: brightness}).textTheme.subtitle1 : t6);
      let snackBarBehavior = (t6$0 = (t6$ = this.widget.behavior, t6$ == null ? snackBarTheme.behavior : t6$), t6$0 == null ? snack_bar_theme.SnackBarBehavior.fixed : t6$0);
      let isFloatingSnackBar = snackBarBehavior == snack_bar_theme.SnackBarBehavior.floating;
      let horizontalPadding = isFloatingSnackBar ? 16.0 : 24.0;
      let padding = (t6$1 = this.widget.padding, t6$1 == null ? new edge_insets.EdgeInsetsDirectional.only({start: horizontalPadding, end: this.widget.action != null ? 0.0 : horizontalPadding}) : t6$1);
      let actionHorizontalMargin = dart.notNull((t6$3 = (t6$2 = this.widget.padding, t6$2 == null ? null : t6$2.resolve(ui.TextDirection.ltr).right), t6$3 == null ? horizontalPadding : t6$3)) / 2;
      let heightAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: snack_bar._snackBarHeightCurve});
      let fadeInAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: snack_bar._snackBarFadeInCurve});
      let fadeOutAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: snack_bar._snackBarFadeOutCurve, reverseCurve: C[208] || CT.C208});
      let snackBar = new basic.Padding.new({padding: padding, child: new basic.Row.new({crossAxisAlignment: flex.CrossAxisAlignment.center, children: (() => {
            let t6 = T$.JSArrayOfWidget().of([new basic.Expanded.new({child: new container.Container.new({padding: C[209] || CT.C209, child: new text$.DefaultTextStyle.new({style: dart.nullCheck(contentTextStyle), child: this.widget.content, $creationLocationd_0dea112b090073317d4: C[210] || CT.C210}), $creationLocationd_0dea112b090073317d4: C[214] || CT.C214}), $creationLocationd_0dea112b090073317d4: C[218] || CT.C218})]);
            if (this.widget.action != null) t6[S.$add](new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: actionHorizontalMargin}), child: new text_button_theme.TextButtonTheme.new({data: new text_button_theme.TextButtonThemeData.new({style: text_button.TextButton.styleFrom({primary: buttonColor, padding: new edge_insets.EdgeInsets.symmetric({horizontal: horizontalPadding})})}), child: dart.nullCheck(this.widget.action), $creationLocationd_0dea112b090073317d4: C[221] || CT.C221}), $creationLocationd_0dea112b090073317d4: C[225] || CT.C225}));
            return t6;
          })(), $creationLocationd_0dea112b090073317d4: C[229] || CT.C229}), $creationLocationd_0dea112b090073317d4: C[233] || CT.C233});
      if (!isFloatingSnackBar) {
        snackBar = new safe_area.SafeArea.new({top: false, child: snackBar, $creationLocationd_0dea112b090073317d4: C[237] || CT.C237});
      }
      let elevation = (t7$ = (t7 = this.widget.elevation, t7 == null ? snackBarTheme.elevation : t7), t7$ == null ? 6.0 : t7$);
      let backgroundColor = (t7$1 = (t7$0 = this.widget.backgroundColor, t7$0 == null ? snackBarTheme.backgroundColor : t7$0), t7$1 == null ? inverseTheme.colorScheme.background : t7$1);
      let shape = (t7$3 = (t7$2 = this.widget.shape, t7$2 == null ? snackBarTheme.shape : t7$2), t7$3 == null ? isFloatingSnackBar ? new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(4.0)}) : null : t7$3);
      snackBar = new material.Material.new({shape: shape, elevation: elevation, color: backgroundColor, child: new theme$.Theme.new({data: inverseTheme, child: dart.test(mediaQueryData.accessibleNavigation) ? snackBar : new transitions.FadeTransition.new({opacity: fadeOutAnimation, child: snackBar, $creationLocationd_0dea112b090073317d4: C[241] || CT.C241}), $creationLocationd_0dea112b090073317d4: C[245] || CT.C245}), $creationLocationd_0dea112b090073317d4: C[249] || CT.C249});
      if (isFloatingSnackBar) {
        if (this.widget.width != null) {
          snackBar = new container.Container.new({margin: C[255] || CT.C255, width: this.widget.width, child: snackBar, $creationLocationd_0dea112b090073317d4: C[256] || CT.C256});
        } else {
          snackBar = new basic.Padding.new({padding: (t7$4 = this.widget.margin, t7$4 == null ? C[261] || CT.C261 : t7$4), child: snackBar, $creationLocationd_0dea112b090073317d4: C[262] || CT.C262});
        }
        snackBar = new safe_area.SafeArea.new({top: false, bottom: false, child: snackBar, $creationLocationd_0dea112b090073317d4: C[266] || CT.C266});
      }
      snackBar = new basic.Semantics.new({container: true, liveRegion: true, onDismiss: dart.fn(() => {
          scaffold$.Scaffold.of(context).removeCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.dismiss});
        }, T$.VoidTovoid()), child: new dismissible.Dismissible.new({key: C[271] || CT.C271, direction: dismissible.DismissDirection.down, resizeDuration: null, onDismissed: dart.fn(direction => {
            if (direction == null) dart.nullFailed(I[16], 598, 40, "direction");
            scaffold$.Scaffold.of(context).removeCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.swipe});
          }, T$.DismissDirectionTovoid()), child: snackBar, $creationLocationd_0dea112b090073317d4: C[272] || CT.C272}), $creationLocationd_0dea112b090073317d4: C[279] || CT.C279});
      let snackBarTransition = null;
      if (dart.test(mediaQueryData.accessibleNavigation)) {
        snackBarTransition = snackBar;
      } else if (isFloatingSnackBar) {
        snackBarTransition = new transitions.FadeTransition.new({opacity: fadeInAnimation, child: snackBar, $creationLocationd_0dea112b090073317d4: C[285] || CT.C285});
      } else {
        snackBarTransition = new transitions.AnimatedBuilder.new({animation: heightAnimation, builder: dart.fn((context, child) => {
            if (context == null) dart.nullFailed(I[16], 616, 32, "context");
            return new basic.Align.new({alignment: alignment.AlignmentDirectional.topStart, heightFactor: heightAnimation.value, child: child, $creationLocationd_0dea112b090073317d4: C[289] || CT.C289});
          }, T$.BuildContextAndWidgetNToAlign()), child: snackBar, $creationLocationd_0dea112b090073317d4: C[294] || CT.C294});
      }
      return new heroes.Hero.new({child: new basic.ClipRect.new({child: snackBarTransition, $creationLocationd_0dea112b090073317d4: C[299] || CT.C299}), tag: "<SnackBar Hero tag - " + dart.str(this.widget.content) + ">", $creationLocationd_0dea112b090073317d4: C[302] || CT.C302});
    }
  };
  (snack_bar._SnackBarState.new = function() {
    this[S._wasVisible] = false;
    snack_bar._SnackBarState.__proto__.new.call(this);
    ;
  }).prototype = snack_bar._SnackBarState.prototype;
  dart.addTypeTests(snack_bar._SnackBarState);
  dart.addTypeCaches(snack_bar._SnackBarState);
  dart.setMethodSignature(snack_bar._SnackBarState, () => ({
    __proto__: dart.getMethods(snack_bar._SnackBarState.__proto__),
    [S._onAnimationStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(snack_bar._SnackBarState, I[17]);
  dart.setFieldSignature(snack_bar._SnackBarState, () => ({
    __proto__: dart.getFields(snack_bar._SnackBarState.__proto__),
    [S._wasVisible]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(snack_bar, {
    /*snack_bar._singleLineVerticalPadding*/get _singleLineVerticalPadding() {
      return 14;
    },
    /*snack_bar._snackBarTransitionDuration*/get _snackBarTransitionDuration() {
      return C[306] || CT.C306;
    },
    /*snack_bar._snackBarDisplayDuration*/get _snackBarDisplayDuration() {
      return C[188] || CT.C188;
    },
    /*snack_bar._snackBarHeightCurve*/get _snackBarHeightCurve() {
      return C[307] || CT.C307;
    },
    /*snack_bar._snackBarFadeInCurve*/get _snackBarFadeInCurve() {
      return C[308] || CT.C308;
    },
    /*snack_bar._snackBarFadeOutCurve*/get _snackBarFadeOutCurve() {
      return C[309] || CT.C309;
    }
  }, false);
  floating_action_button_location.FloatingActionButtonLocation = class FloatingActionButtonLocation extends core.Object {
    toString() {
      return object$.objectRuntimeType(this, "FloatingActionButtonLocation");
    }
  };
  (floating_action_button_location.FloatingActionButtonLocation.new = function() {
    ;
  }).prototype = floating_action_button_location.FloatingActionButtonLocation.prototype;
  dart.addTypeTests(floating_action_button_location.FloatingActionButtonLocation);
  dart.addTypeCaches(floating_action_button_location.FloatingActionButtonLocation);
  dart.setLibraryUri(floating_action_button_location.FloatingActionButtonLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location.FloatingActionButtonLocation, ['toString']);
  dart.defineLazy(floating_action_button_location.FloatingActionButtonLocation, {
    /*floating_action_button_location.FloatingActionButtonLocation.startTop*/get startTop() {
      return C[310] || CT.C310;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartTop*/get miniStartTop() {
      return C[311] || CT.C311;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerTop*/get centerTop() {
      return C[312] || CT.C312;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterTop*/get miniCenterTop() {
      return C[313] || CT.C313;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endTop*/get endTop() {
      return C[314] || CT.C314;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndTop*/get miniEndTop() {
      return C[315] || CT.C315;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.startFloat*/get startFloat() {
      return C[316] || CT.C316;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartFloat*/get miniStartFloat() {
      return C[317] || CT.C317;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerFloat*/get centerFloat() {
      return C[318] || CT.C318;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterFloat*/get miniCenterFloat() {
      return C[319] || CT.C319;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endFloat*/get endFloat() {
      return C[320] || CT.C320;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndFloat*/get miniEndFloat() {
      return C[321] || CT.C321;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.startDocked*/get startDocked() {
      return C[322] || CT.C322;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartDocked*/get miniStartDocked() {
      return C[323] || CT.C323;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerDocked*/get centerDocked() {
      return C[324] || CT.C324;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterDocked*/get miniCenterDocked() {
      return C[325] || CT.C325;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endDocked*/get endDocked() {
      return C[326] || CT.C326;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndDocked*/get miniEndDocked() {
      return C[327] || CT.C327;
    }
  }, false);
  floating_action_button_location.StandardFabLocation = class StandardFabLocation extends floating_action_button_location.FloatingActionButtonLocation {
    isMini() {
      return false;
    }
    getOffset(scaffoldGeometry) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 499, 46, "scaffoldGeometry");
      let adjustment = dart.test(this.isMini()) ? 4 : 0.0;
      return new ui.Offset.new(this.getOffsetX(scaffoldGeometry, adjustment), this.getOffsetY(scaffoldGeometry, adjustment));
    }
    static _leftOffsetX(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 508, 56, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 508, 81, "adjustment");
      return 16 + dart.notNull(scaffoldGeometry.minInsets.left) - dart.notNull(adjustment);
    }
    static _rightOffsetX(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 515, 57, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 515, 82, "adjustment");
      return dart.notNull(scaffoldGeometry.scaffoldSize.width) - 16 - dart.notNull(scaffoldGeometry.minInsets.right) - dart.notNull(scaffoldGeometry.floatingActionButtonSize.width) + dart.notNull(adjustment);
    }
  };
  (floating_action_button_location.StandardFabLocation.new = function() {
    floating_action_button_location.StandardFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location.StandardFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location.StandardFabLocation);
  dart.addTypeCaches(floating_action_button_location.StandardFabLocation);
  dart.setMethodSignature(floating_action_button_location.StandardFabLocation, () => ({
    __proto__: dart.getMethods(floating_action_button_location.StandardFabLocation.__proto__),
    isMini: dart.fnType(core.bool, []),
    getOffset: dart.fnType(ui.Offset, [scaffold$.ScaffoldPrelayoutGeometry])
  }));
  dart.setLibraryUri(floating_action_button_location.StandardFabLocation, I[18]);
  floating_action_button_location.FabTopOffsetY = class FabTopOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabTopOffsetY[dart.mixinOn] = StandardFabLocation => class FabTopOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 539, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 539, 72, "adjustment");
      if (dart.notNull(scaffoldGeometry.contentTop) > dart.notNull(scaffoldGeometry.minViewPadding.top)) {
        let fabHalfHeight = dart.notNull(scaffoldGeometry.floatingActionButtonSize.height) / 2.0;
        return dart.notNull(scaffoldGeometry.contentTop) - fabHalfHeight;
      }
      return scaffoldGeometry.minViewPadding.top;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabTopOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabTopOffsetY);
  floating_action_button_location.FabTopOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabTopOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabTopOffsetY.__proto__),
    getOffsetY: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabTopOffsetY, I[18]);
  floating_action_button_location.FabFloatOffsetY = class FabFloatOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabFloatOffsetY[dart.mixinOn] = StandardFabLocation => class FabFloatOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 554, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 554, 72, "adjustment");
      let contentBottom = scaffoldGeometry.contentBottom;
      let bottomContentHeight = dart.notNull(scaffoldGeometry.scaffoldSize.height) - dart.notNull(contentBottom);
      let bottomSheetHeight = scaffoldGeometry.bottomSheetSize.height;
      let fabHeight = scaffoldGeometry.floatingActionButtonSize.height;
      let snackBarHeight = scaffoldGeometry.snackBarSize.height;
      let safeMargin = math.max(core.double, 16, dart.notNull(scaffoldGeometry.minViewPadding.bottom) - bottomContentHeight);
      let fabY = dart.notNull(contentBottom) - dart.notNull(fabHeight) - safeMargin;
      if (dart.notNull(snackBarHeight) > 0.0) fabY = math.min(core.double, fabY, dart.notNull(contentBottom) - dart.notNull(snackBarHeight) - dart.notNull(fabHeight) - 16);
      if (dart.notNull(bottomSheetHeight) > 0.0) fabY = math.min(core.double, fabY, dart.notNull(contentBottom) - dart.notNull(bottomSheetHeight) - dart.notNull(fabHeight) / 2.0);
      return fabY + dart.notNull(adjustment);
    }
  };
  dart.addTypeTests(floating_action_button_location.FabFloatOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location.FabFloatOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabFloatOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabFloatOffsetY.__proto__),
    getOffsetY: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabFloatOffsetY, I[18]);
  floating_action_button_location.FabDockedOffsetY = class FabDockedOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabDockedOffsetY[dart.mixinOn] = StandardFabLocation => class FabDockedOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 581, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 581, 72, "adjustment");
      let contentBottom = scaffoldGeometry.contentBottom;
      let contentMargin = dart.notNull(scaffoldGeometry.scaffoldSize.height) - dart.notNull(contentBottom);
      let bottomViewPadding = scaffoldGeometry.minViewPadding.bottom;
      let bottomSheetHeight = scaffoldGeometry.bottomSheetSize.height;
      let fabHeight = scaffoldGeometry.floatingActionButtonSize.height;
      let snackBarHeight = scaffoldGeometry.snackBarSize.height;
      let safeMargin = dart.notNull(bottomViewPadding) > contentMargin ? bottomViewPadding : 0.0;
      let fabY = dart.notNull(contentBottom) - dart.notNull(fabHeight) / 2.0 - dart.notNull(safeMargin);
      if (dart.notNull(snackBarHeight) > 0.0) fabY = math.min(core.double, fabY, dart.notNull(contentBottom) - dart.notNull(snackBarHeight) - dart.notNull(fabHeight) - 16);
      if (dart.notNull(bottomSheetHeight) > 0.0) fabY = math.min(core.double, fabY, dart.notNull(contentBottom) - dart.notNull(bottomSheetHeight) - dart.notNull(fabHeight) / 2.0);
      let maxFabY = dart.notNull(scaffoldGeometry.scaffoldSize.height) - dart.notNull(fabHeight) - dart.notNull(safeMargin);
      return math.min(core.double, maxFabY, fabY);
    }
  };
  dart.addTypeTests(floating_action_button_location.FabDockedOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location.FabDockedOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabDockedOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabDockedOffsetY.__proto__),
    getOffsetY: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabDockedOffsetY, I[18]);
  floating_action_button_location.FabStartOffsetX = class FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabStartOffsetX[dart.mixinOn] = StandardFabLocation => class FabStartOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 606, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 606, 72, "adjustment");
      if (!(scaffoldGeometry.textDirection != null)) dart.assertFailed(null, I[19], 607, 12, "scaffoldGeometry.textDirection != null");
      switch (scaffoldGeometry.textDirection) {
        case C[328] || CT.C328:
        {
          return floating_action_button_location.StandardFabLocation._rightOffsetX(scaffoldGeometry, adjustment);
        }
        case C[329] || CT.C329:
        {
          return floating_action_button_location.StandardFabLocation._leftOffsetX(scaffoldGeometry, adjustment);
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  dart.addTypeTests(floating_action_button_location.FabStartOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabStartOffsetX);
  floating_action_button_location.FabStartOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabStartOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabStartOffsetX.__proto__),
    getOffsetX: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabStartOffsetX, I[18]);
  floating_action_button_location.FabCenterOffsetX = class FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabCenterOffsetX[dart.mixinOn] = StandardFabLocation => class FabCenterOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 621, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 621, 72, "adjustment");
      return (dart.notNull(scaffoldGeometry.scaffoldSize.width) - dart.notNull(scaffoldGeometry.floatingActionButtonSize.width)) / 2.0;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabCenterOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabCenterOffsetX);
  floating_action_button_location.FabCenterOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabCenterOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabCenterOffsetX.__proto__),
    getOffsetX: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabCenterOffsetX, I[18]);
  floating_action_button_location.FabEndOffsetX = class FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabEndOffsetX[dart.mixinOn] = StandardFabLocation => class FabEndOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry == null) dart.nullFailed(I[19], 630, 47, "scaffoldGeometry");
      if (adjustment == null) dart.nullFailed(I[19], 630, 72, "adjustment");
      if (!(scaffoldGeometry.textDirection != null)) dart.assertFailed(null, I[19], 631, 12, "scaffoldGeometry.textDirection != null");
      switch (scaffoldGeometry.textDirection) {
        case C[328] || CT.C328:
        {
          return floating_action_button_location.StandardFabLocation._leftOffsetX(scaffoldGeometry, adjustment);
        }
        case C[329] || CT.C329:
        {
          return floating_action_button_location.StandardFabLocation._rightOffsetX(scaffoldGeometry, adjustment);
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  dart.addTypeTests(floating_action_button_location.FabEndOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabEndOffsetX);
  floating_action_button_location.FabEndOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabEndOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabEndOffsetX.__proto__),
    getOffsetX: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabEndOffsetX, I[18]);
  floating_action_button_location.FabMiniOffsetAdjustment = class FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabMiniOffsetAdjustment[dart.mixinOn] = StandardFabLocation => class FabMiniOffsetAdjustment extends StandardFabLocation {
    isMini() {
      return true;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabMiniOffsetAdjustment);
  dart.addTypeCaches(floating_action_button_location.FabMiniOffsetAdjustment);
  floating_action_button_location.FabMiniOffsetAdjustment[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setLibraryUri(floating_action_button_location.FabMiniOffsetAdjustment, I[18]);
  const StandardFabLocation_FabStartOffsetX$36 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36.new = function() {
    StandardFabLocation_FabStartOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabTopOffsetY$36 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabStartOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36.new = function() {
    StandardFabLocation_FabTopOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._StartTopFabLocation = class _StartTopFabLocation extends StandardFabLocation_FabTopOffsetY$36 {
    toString() {
      return "FloatingActionButtonLocation.startTop";
    }
  };
  (floating_action_button_location._StartTopFabLocation.new = function() {
    floating_action_button_location._StartTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._StartTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$ = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36 {};
  (StandardFabLocation_FabStartOffsetX$36$.new = function() {
    StandardFabLocation_FabStartOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$ = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabStartOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$.new = function() {
    StandardFabLocation_FabTopOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniStartTopFabLocation = class _MiniStartTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$ {
    toString() {
      return "FloatingActionButtonLocation.miniStartTop";
    }
  };
  (floating_action_button_location._MiniStartTopFabLocation.new = function() {
    floating_action_button_location._MiniStartTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartTopFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36.new = function() {
    StandardFabLocation_FabCenterOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$0 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabCenterOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36$0.new = function() {
    StandardFabLocation_FabTopOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$0, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._CenterTopFabLocation = class _CenterTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$0 {
    toString() {
      return "FloatingActionButtonLocation.centerTop";
    }
  };
  (floating_action_button_location._CenterTopFabLocation.new = function() {
    floating_action_button_location._CenterTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._CenterTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$ = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$ = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$ {};
  (StandardFabLocation_FabCenterOffsetX$36$.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$1 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabCenterOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$1.new = function() {
    StandardFabLocation_FabTopOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$1, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniCenterTopFabLocation = class _MiniCenterTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$1 {
    toString() {
      return "FloatingActionButtonLocation.miniCenterTop";
    }
  };
  (floating_action_button_location._MiniCenterTopFabLocation.new = function() {
    floating_action_button_location._MiniCenterTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterTopFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36.new = function() {
    StandardFabLocation_FabEndOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$2 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabEndOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36$2.new = function() {
    StandardFabLocation_FabTopOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$2, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._EndTopFabLocation = class _EndTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$2 {
    toString() {
      return "FloatingActionButtonLocation.endTop";
    }
  };
  (floating_action_button_location._EndTopFabLocation.new = function() {
    floating_action_button_location._EndTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._EndTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$0 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$0.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$0, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$ = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$0 {};
  (StandardFabLocation_FabEndOffsetX$36$.new = function() {
    StandardFabLocation_FabEndOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$3 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabEndOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$3.new = function() {
    StandardFabLocation_FabTopOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$3, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniEndTopFabLocation = class _MiniEndTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$3 {
    toString() {
      return "FloatingActionButtonLocation.miniEndTop";
    }
  };
  (floating_action_button_location._MiniEndTopFabLocation.new = function() {
    floating_action_button_location._MiniEndTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndTopFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndTopFabLocation, ['toString']);
  const StandardFabLocation_FabStartOffsetX$36$0 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36$0.new = function() {
    StandardFabLocation_FabStartOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$0, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabStartOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36.new = function() {
    StandardFabLocation_FabFloatOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._StartFloatFabLocation = class _StartFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36 {
    toString() {
      return "FloatingActionButtonLocation.startFloat";
    }
  };
  (floating_action_button_location._StartFloatFabLocation.new = function() {
    floating_action_button_location._StartFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._StartFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$1 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$1.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$1, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$1 = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$1 {};
  (StandardFabLocation_FabStartOffsetX$36$1.new = function() {
    StandardFabLocation_FabStartOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$1, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$ = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabStartOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniStartFloatFabLocation = class _MiniStartFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$ {
    toString() {
      return "FloatingActionButtonLocation.miniStartFloat";
    }
  };
  (floating_action_button_location._MiniStartFloatFabLocation.new = function() {
    floating_action_button_location._MiniStartFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartFloatFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36$0 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36$0.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$0, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$0 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabCenterOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36$0.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$0, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._CenterFloatFabLocation = class _CenterFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$0 {
    toString() {
      return "FloatingActionButtonLocation.centerFloat";
    }
  };
  (floating_action_button_location._CenterFloatFabLocation.new = function() {
    floating_action_button_location._CenterFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._CenterFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$2 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$2.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$2, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$1 = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$2 {};
  (StandardFabLocation_FabCenterOffsetX$36$1.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$1, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$1 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabCenterOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$1.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$1, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniCenterFloatFabLocation = class _MiniCenterFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$1 {
    toString() {
      return "FloatingActionButtonLocation.miniCenterFloat";
    }
  };
  (floating_action_button_location._MiniCenterFloatFabLocation.new = function() {
    floating_action_button_location._MiniCenterFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterFloatFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36$0 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36$0.new = function() {
    StandardFabLocation_FabEndOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$0, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$2 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabEndOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36$2.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$2, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._EndFloatFabLocation = class _EndFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$2 {
    toString() {
      return "FloatingActionButtonLocation.endFloat";
    }
  };
  (floating_action_button_location._EndFloatFabLocation.new = function() {
    floating_action_button_location._EndFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._EndFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$3 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$3.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$3, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$1 = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$3 {};
  (StandardFabLocation_FabEndOffsetX$36$1.new = function() {
    StandardFabLocation_FabEndOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$1, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$3 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabEndOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$3.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$3, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniEndFloatFabLocation = class _MiniEndFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$3 {
    toString() {
      return "FloatingActionButtonLocation.miniEndFloat";
    }
  };
  (floating_action_button_location._MiniEndFloatFabLocation.new = function() {
    floating_action_button_location._MiniEndFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndFloatFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndFloatFabLocation, ['toString']);
  const StandardFabLocation_FabStartOffsetX$36$2 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36$2.new = function() {
    StandardFabLocation_FabStartOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$2, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabStartOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36.new = function() {
    StandardFabLocation_FabDockedOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._StartDockedFabLocation = class _StartDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36 {
    toString() {
      return "FloatingActionButtonLocation.startDocked";
    }
  };
  (floating_action_button_location._StartDockedFabLocation.new = function() {
    floating_action_button_location._StartDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._StartDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$4 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$4.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$4.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$4.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$4, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$3 = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$4 {};
  (StandardFabLocation_FabStartOffsetX$36$3.new = function() {
    StandardFabLocation_FabStartOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$3, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$ = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabStartOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniStartDockedFabLocation = class _MiniStartDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$ {
    toString() {
      return "FloatingActionButtonLocation.miniStartDocked";
    }
  };
  (floating_action_button_location._MiniStartDockedFabLocation.new = function() {
    floating_action_button_location._MiniStartDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartDockedFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36$2 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36$2.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$2, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$0 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabCenterOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36$0.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$0, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._CenterDockedFabLocation = class _CenterDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$0 {
    toString() {
      return "FloatingActionButtonLocation.centerDocked";
    }
  };
  (floating_action_button_location._CenterDockedFabLocation.new = function() {
    floating_action_button_location._CenterDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._CenterDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$5 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$5.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$5.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$5.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$5, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$3 = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$5 {};
  (StandardFabLocation_FabCenterOffsetX$36$3.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$3, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$1 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabCenterOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$1.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$1, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniCenterDockedFabLocation = class _MiniCenterDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$1 {
    toString() {
      return "FloatingActionButtonLocation.miniCenterDocked";
    }
  };
  (floating_action_button_location._MiniCenterDockedFabLocation.new = function() {
    floating_action_button_location._MiniCenterDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterDockedFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36$2 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36$2.new = function() {
    StandardFabLocation_FabEndOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$2, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$2 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabEndOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36$2.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$2, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._EndDockedFabLocation = class _EndDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$2 {
    toString() {
      return "FloatingActionButtonLocation.endDocked";
    }
  };
  (floating_action_button_location._EndDockedFabLocation.new = function() {
    floating_action_button_location._EndDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._EndDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$6 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$6.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$6.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$6.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$6, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$3 = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$6 {};
  (StandardFabLocation_FabEndOffsetX$36$3.new = function() {
    StandardFabLocation_FabEndOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$3, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$3 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabEndOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$3.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$3, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniEndDockedFabLocation = class _MiniEndDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$3 {
    toString() {
      return "FloatingActionButtonLocation.miniEndDocked";
    }
  };
  (floating_action_button_location._MiniEndDockedFabLocation.new = function() {
    floating_action_button_location._MiniEndDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndDockedFabLocation, I[18]);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndDockedFabLocation, ['toString']);
  floating_action_button_location.FloatingActionButtonAnimator = class FloatingActionButtonAnimator extends core.Object {
    getAnimationRestart(previousValue) {
      if (previousValue == null) dart.nullFailed(I[19], 884, 37, "previousValue");
      return 0.0;
    }
    toString() {
      return object$.objectRuntimeType(this, "FloatingActionButtonAnimator");
    }
  };
  (floating_action_button_location.FloatingActionButtonAnimator.new = function() {
    ;
  }).prototype = floating_action_button_location.FloatingActionButtonAnimator.prototype;
  dart.addTypeTests(floating_action_button_location.FloatingActionButtonAnimator);
  dart.addTypeCaches(floating_action_button_location.FloatingActionButtonAnimator);
  dart.setMethodSignature(floating_action_button_location.FloatingActionButtonAnimator, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FloatingActionButtonAnimator.__proto__),
    getAnimationRestart: dart.fnType(core.double, [core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FloatingActionButtonAnimator, I[18]);
  dart.defineExtensionMethods(floating_action_button_location.FloatingActionButtonAnimator, ['toString']);
  dart.defineLazy(floating_action_button_location.FloatingActionButtonAnimator, {
    /*floating_action_button_location.FloatingActionButtonAnimator.scaling*/get scaling() {
      return C[330] || CT.C330;
    }
  }, false);
  floating_action_button_location._ScalingFabMotionAnimator = class _ScalingFabMotionAnimator extends floating_action_button_location.FloatingActionButtonAnimator {
    getOffset(opts) {
      let begin = opts && 'begin' in opts ? opts.begin : null;
      if (begin == null) dart.nullFailed(I[19], 894, 38, "begin");
      let end = opts && 'end' in opts ? opts.end : null;
      if (end == null) dart.nullFailed(I[19], 894, 61, "end");
      let progress = opts && 'progress' in opts ? opts.progress : null;
      if (progress == null) dart.nullFailed(I[19], 894, 82, "progress");
      if (dart.notNull(progress) < 0.5) {
        return begin;
      } else {
        return end;
      }
    }
    getScaleAnimation(opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      if (parent == null) dart.nullFailed(I[19], 903, 68, "parent");
      let curve = C[331] || CT.C331;
      return new (T$._AnimationSwapOfdouble()).new(new animations.ReverseAnimation.new(parent.drive(core.double, new tween.CurveTween.new({curve: curve.flipped}))), parent.drive(core.double, new tween.CurveTween.new({curve: curve})), parent, 0.5);
    }
    getRotationAnimation(opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      if (parent == null) dart.nullFailed(I[19], 925, 71, "parent");
      return new (T$._AnimationSwapOfdouble()).new(parent.drive(core.double, floating_action_button_location._ScalingFabMotionAnimator._rotationTween), new animations.ReverseAnimation.new(parent.drive(core.double, floating_action_button_location._ScalingFabMotionAnimator._thresholdCenterTween)), parent, 0.5);
    }
    getAnimationRestart(previousValue) {
      if (previousValue == null) dart.nullFailed(I[19], 939, 37, "previousValue");
      return math.min(core.double, 1.0 - dart.notNull(previousValue), previousValue);
    }
  };
  (floating_action_button_location._ScalingFabMotionAnimator.new = function() {
    floating_action_button_location._ScalingFabMotionAnimator.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._ScalingFabMotionAnimator.prototype;
  dart.addTypeTests(floating_action_button_location._ScalingFabMotionAnimator);
  dart.addTypeCaches(floating_action_button_location._ScalingFabMotionAnimator);
  dart.setMethodSignature(floating_action_button_location._ScalingFabMotionAnimator, () => ({
    __proto__: dart.getMethods(floating_action_button_location._ScalingFabMotionAnimator.__proto__),
    getOffset: dart.fnType(ui.Offset, [], {}, {begin: ui.Offset, end: ui.Offset, progress: core.double}),
    getScaleAnimation: dart.fnType(animation.Animation$(core.double), [], {}, {parent: animation.Animation$(core.double)}),
    getRotationAnimation: dart.fnType(animation.Animation$(core.double), [], {}, {parent: animation.Animation$(core.double)})
  }));
  dart.setLibraryUri(floating_action_button_location._ScalingFabMotionAnimator, I[18]);
  dart.defineLazy(floating_action_button_location._ScalingFabMotionAnimator, {
    /*floating_action_button_location._ScalingFabMotionAnimator._rotationTween*/get _rotationTween() {
      return new (T$.TweenOfdouble()).new({begin: 1.0 - 0.125 * 2.0, end: 1.0});
    },
    /*floating_action_button_location._ScalingFabMotionAnimator._thresholdCenterTween*/get _thresholdCenterTween() {
      return new tween.CurveTween.new({curve: C[333] || CT.C333});
    }
  }, false);
  const _is__AnimationSwap_default = Symbol('_is__AnimationSwap_default');
  floating_action_button_location._AnimationSwap$ = dart.generic(T => {
    class _AnimationSwap extends animations.CompoundAnimation$(T) {
      get value() {
        return dart.notNull(this.parent.value) < dart.notNull(this.swapThreshold) ? this.first.value : this.next.value;
      }
    }
    (_AnimationSwap.new = function(first, next, parent, swapThreshold) {
      if (first == null) dart.nullFailed(I[19], 951, 31, "first");
      if (next == null) dart.nullFailed(I[19], 951, 51, "next");
      if (parent == null) dart.nullFailed(I[19], 951, 62, "parent");
      if (swapThreshold == null) dart.nullFailed(I[19], 951, 75, "swapThreshold");
      this.parent = parent;
      this.swapThreshold = swapThreshold;
      _AnimationSwap.__proto__.new.call(this, {first: first, next: next});
      ;
    }).prototype = _AnimationSwap.prototype;
    dart.addTypeTests(_AnimationSwap);
    _AnimationSwap.prototype[_is__AnimationSwap_default] = true;
    dart.addTypeCaches(_AnimationSwap);
    dart.setGetterSignature(_AnimationSwap, () => ({
      __proto__: dart.getGetters(_AnimationSwap.__proto__),
      value: T
    }));
    dart.setLibraryUri(_AnimationSwap, I[18]);
    dart.setFieldSignature(_AnimationSwap, () => ({
      __proto__: dart.getFields(_AnimationSwap.__proto__),
      parent: dart.finalFieldType(animation.Animation$(core.double)),
      swapThreshold: dart.finalFieldType(core.double)
    }));
    return _AnimationSwap;
  });
  floating_action_button_location._AnimationSwap = floating_action_button_location._AnimationSwap$();
  dart.addTypeTests(floating_action_button_location._AnimationSwap, _is__AnimationSwap_default);
  dart.defineLazy(floating_action_button_location, {
    /*floating_action_button_location.kFloatingActionButtonMargin*/get kFloatingActionButtonMargin() {
      return 16;
    },
    /*floating_action_button_location.kFloatingActionButtonSegue*/get kFloatingActionButtonSegue() {
      return C[334] || CT.C334;
    },
    /*floating_action_button_location.kFloatingActionButtonTurnInterval*/get kFloatingActionButtonTurnInterval() {
      return 0.125;
    },
    /*floating_action_button_location.kMiniButtonOffsetAdjustment*/get kMiniButtonOffsetAdjustment() {
      return 4;
    }
  }, false);
  floating_action_button._DefaultHeroTag = class _DefaultHeroTag extends core.Object {
    toString() {
      return "<default FloatingActionButton tag>";
    }
  };
  (floating_action_button._DefaultHeroTag.new = function() {
    ;
  }).prototype = floating_action_button._DefaultHeroTag.prototype;
  dart.addTypeTests(floating_action_button._DefaultHeroTag);
  dart.addTypeCaches(floating_action_button._DefaultHeroTag);
  dart.setLibraryUri(floating_action_button._DefaultHeroTag, I[20]);
  dart.defineExtensionMethods(floating_action_button._DefaultHeroTag, ['toString']);
  floating_action_button.FloatingActionButton = class FloatingActionButton extends framework.StatelessWidget {
    get child() {
      return this[S.child$1];
    }
    set child(value) {
      super.child = value;
    }
    get tooltip() {
      return this[S.tooltip$1];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    get foregroundColor() {
      return this[S.foregroundColor];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get backgroundColor() {
      return this[S.backgroundColor$1];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get focusColor() {
      return this[S.focusColor$1];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor$1];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get splashColor() {
      return this[S.splashColor$1];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get heroTag() {
      return this[S.heroTag];
    }
    set heroTag(value) {
      super.heroTag = value;
    }
    get onPressed() {
      return this[S.onPressed$5];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$1];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get elevation() {
      return this[S.elevation$1];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get focusElevation() {
      return this[S.focusElevation];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get hoverElevation() {
      return this[S.hoverElevation];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get highlightElevation() {
      return this[S.highlightElevation];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[S.disabledElevation];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get mini() {
      return this[S.mini];
    }
    set mini(value) {
      super.mini = value;
    }
    get shape() {
      return this[S.shape$1];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$1];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get isExtended() {
      return this[S.isExtended];
    }
    set isExtended(value) {
      super.isExtended = value;
    }
    get focusNode() {
      return this[S.focusNode$2];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$2];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get materialTapTargetSize() {
      return this[S.materialTapTargetSize];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get [S._sizeConstraints$1]() {
      return this[S._sizeConstraints];
    }
    set [S._sizeConstraints$1](value) {
      super[S._sizeConstraints$1] = value;
    }
    build(context) {
      let t7, t7$, t7$0, t7$1, t7$2, t7$3, t7$4, t7$5, t7$6, t7$7, t7$8, t7$9, t7$10, t7$11, t7$12, t7$13, t7$14, t7$15, t7$16, t7$17, t7$18, t7$19, t7$20;
      if (context == null) dart.nullFailed(I[21], 429, 29, "context");
      let theme = theme$.Theme.of(context);
      let floatingActionButtonTheme = theme.floatingActionButtonTheme;
      if (this.foregroundColor == null && floatingActionButtonTheme.foregroundColor == null) {
        let accentIsDark = theme.accentColorBrightness == ui.Brightness.dark;
        let defaultAccentIconThemeColor = accentIsDark ? colors$.Colors.white : colors$.Colors.black;
        if (!dart.equals(theme.accentIconTheme.color, defaultAccentIconThemeColor)) {
          print.debugPrint("Warning: " + "The support for configuring the foreground color of " + "FloatingActionButtons using ThemeData.accentIconTheme " + "has been deprecated. Please use ThemeData.floatingActionButtonTheme " + "instead. See " + "https://flutter.dev/go/remove-fab-accent-theme-dependency. " + "This feature was deprecated after v1.13.2.");
        }
      }
      let foregroundColor = (t7$ = (t7 = this.foregroundColor, t7 == null ? floatingActionButtonTheme.foregroundColor : t7), t7$ == null ? theme.colorScheme.onSecondary : t7$);
      let backgroundColor = (t7$1 = (t7$0 = this.backgroundColor, t7$0 == null ? floatingActionButtonTheme.backgroundColor : t7$0), t7$1 == null ? theme.colorScheme.secondary : t7$1);
      let focusColor = (t7$3 = (t7$2 = this.focusColor, t7$2 == null ? floatingActionButtonTheme.focusColor : t7$2), t7$3 == null ? theme.focusColor : t7$3);
      let hoverColor = (t7$5 = (t7$4 = this.hoverColor, t7$4 == null ? floatingActionButtonTheme.hoverColor : t7$4), t7$5 == null ? theme.hoverColor : t7$5);
      let splashColor = (t7$7 = (t7$6 = this.splashColor, t7$6 == null ? floatingActionButtonTheme.splashColor : t7$6), t7$7 == null ? theme.splashColor : t7$7);
      let elevation = (t7$9 = (t7$8 = this.elevation, t7$8 == null ? floatingActionButtonTheme.elevation : t7$8), t7$9 == null ? 6 : t7$9);
      let focusElevation = (t7$11 = (t7$10 = this.focusElevation, t7$10 == null ? floatingActionButtonTheme.focusElevation : t7$10), t7$11 == null ? 6 : t7$11);
      let hoverElevation = (t7$13 = (t7$12 = this.hoverElevation, t7$12 == null ? floatingActionButtonTheme.hoverElevation : t7$12), t7$13 == null ? 8 : t7$13);
      let disabledElevation = (t7$15 = (t7$14 = this.disabledElevation, t7$14 == null ? floatingActionButtonTheme.disabledElevation : t7$14), t7$15 == null ? elevation : t7$15);
      let highlightElevation = (t7$17 = (t7$16 = this.highlightElevation, t7$16 == null ? floatingActionButtonTheme.highlightElevation : t7$16), t7$17 == null ? 12 : t7$17);
      let materialTapTargetSize = (t7$18 = this.materialTapTargetSize, t7$18 == null ? theme.materialTapTargetSize : t7$18);
      let textStyle = dart.nullCheck(theme.textTheme.button).copyWith({color: foregroundColor, letterSpacing: 1.2});
      let shape = (t7$20 = (t7$19 = this.shape, t7$19 == null ? floatingActionButtonTheme.shape : t7$19), t7$20 == null ? dart.test(this.isExtended) ? floating_action_button.FloatingActionButton._defaultExtendedShape : floating_action_button.FloatingActionButton._defaultShape : t7$20);
      let result = new button.RawMaterialButton.new({onPressed: this.onPressed, mouseCursor: this.mouseCursor, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, constraints: this[S._sizeConstraints$1], materialTapTargetSize: materialTapTargetSize, fillColor: backgroundColor, focusColor: focusColor, hoverColor: hoverColor, splashColor: splashColor, textStyle: textStyle, shape: shape, clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, child: this.child, $creationLocationd_0dea112b090073317d4: C[371] || CT.C371});
      if (this.tooltip != null) {
        result = new tooltip.Tooltip.new({message: dart.nullCheck(this.tooltip), child: result, $creationLocationd_0dea112b090073317d4: C[392] || CT.C392});
      }
      if (this.heroTag != null) {
        result = new heroes.Hero.new({tag: dart.nullCheck(this.heroTag), child: result, $creationLocationd_0dea112b090073317d4: C[396] || CT.C396});
      }
      return new basic.MergeSemantics.new({child: result, $creationLocationd_0dea112b090073317d4: C[400] || CT.C400});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[21], 532, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.ObjectFlagPropertyOfVoidTovoid()).new("onPressed", this.onPressed, {ifNull: "disabled"}));
      properties.add(new diagnostics.StringProperty.new("tooltip", this.tooltip, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (T$.ObjectFlagPropertyOfObject()).new("heroTag", this.heroTag, {ifPresent: "hero"}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("focusElevation", this.focusElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("hoverElevation", this.hoverElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("highlightElevation", this.highlightElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("disabledElevation", this.disabledElevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("isExtended", {value: this.isExtended, ifTrue: "extended"}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
    }
  };
  (floating_action_button.FloatingActionButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[335] || CT.C335;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let mini = opts && 'mini' in opts ? opts.mini : false;
    if (mini == null) dart.nullFailed(I[21], 145, 10, "mini");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[21], 147, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[21], 149, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let isExtended = opts && 'isExtended' in opts ? opts.isExtended : false;
    if (isExtended == null) dart.nullFailed(I[21], 151, 10, "isExtended");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.child$1] = child;
    this[S.tooltip$1] = tooltip;
    this[S.foregroundColor] = foregroundColor;
    this[S.backgroundColor$1] = backgroundColor;
    this[S.focusColor$1] = focusColor;
    this[S.hoverColor$1] = hoverColor;
    this[S.splashColor$1] = splashColor;
    this[S.heroTag] = heroTag;
    this[S.elevation$1] = elevation;
    this[S.focusElevation] = focusElevation;
    this[S.hoverElevation] = hoverElevation;
    this[S.highlightElevation] = highlightElevation;
    this[S.disabledElevation] = disabledElevation;
    this[S.onPressed$5] = onPressed;
    this[S.mouseCursor$1] = mouseCursor;
    this[S.mini] = mini;
    this[S.shape$1] = shape;
    this[S.clipBehavior$1] = clipBehavior;
    this[S.focusNode$2] = focusNode;
    this[S.autofocus$2] = autofocus;
    this[S.materialTapTargetSize] = materialTapTargetSize;
    this[S.isExtended] = isExtended;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[21], 152, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[21], 153, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[21], 154, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[21], 155, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[21], 156, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(mini != null)) dart.assertFailed(null, I[21], 157, 15, "mini != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[21], 158, 15, "clipBehavior != null");
    if (!(isExtended != null)) dart.assertFailed(null, I[21], 159, 15, "isExtended != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[21], 160, 15, "autofocus != null");
    this[S._sizeConstraints] = dart.test(mini) ? floating_action_button._kMiniSizeConstraints : floating_action_button._kSizeConstraints;
    floating_action_button.FloatingActionButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button.FloatingActionButton.prototype;
  (floating_action_button.FloatingActionButton.extended = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[335] || CT.C335;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : C[2] || CT.C2;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let isExtended = opts && 'isExtended' in opts ? opts.isExtended : true;
    if (isExtended == null) dart.nullFailed(I[21], 187, 10, "isExtended");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[21], 189, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[21], 191, 10, "autofocus");
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[21], 193, 21, "label");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.tooltip$1] = tooltip;
    this[S.foregroundColor] = foregroundColor;
    this[S.backgroundColor$1] = backgroundColor;
    this[S.focusColor$1] = focusColor;
    this[S.hoverColor$1] = hoverColor;
    this[S.heroTag] = heroTag;
    this[S.elevation$1] = elevation;
    this[S.focusElevation] = focusElevation;
    this[S.hoverElevation] = hoverElevation;
    this[S.splashColor$1] = splashColor;
    this[S.highlightElevation] = highlightElevation;
    this[S.disabledElevation] = disabledElevation;
    this[S.onPressed$5] = onPressed;
    this[S.mouseCursor$1] = mouseCursor;
    this[S.shape$1] = shape;
    this[S.isExtended] = isExtended;
    this[S.materialTapTargetSize] = materialTapTargetSize;
    this[S.clipBehavior$1] = clipBehavior;
    this[S.focusNode$2] = focusNode;
    this[S.autofocus$2] = autofocus;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[21], 194, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[21], 195, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[21], 196, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[21], 197, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[21], 198, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(isExtended != null)) dart.assertFailed(null, I[21], 199, 15, "isExtended != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[21], 200, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[21], 201, 15, "autofocus != null");
    this[S._sizeConstraints] = floating_action_button._kExtendedSizeConstraints;
    this[S.mini] = false;
    this[S.child$1] = new floating_action_button._ChildOverflowBox.new({child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: icon == null ? T$.JSArrayOfWidget().of([C[336] || CT.C336, label, C[340] || CT.C340]) : !dart.test(isExtended) ? T$.JSArrayOfWidget().of([C[344] || CT.C344, icon, C[348] || CT.C348]) : T$.JSArrayOfWidget().of([C[352] || CT.C352, icon, C[356] || CT.C356, label, C[360] || CT.C360]), $creationLocationd_0dea112b090073317d4: C[364] || CT.C364}), $creationLocationd_0dea112b090073317d4: C[368] || CT.C368});
    floating_action_button.FloatingActionButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button.FloatingActionButton.prototype;
  dart.addTypeTests(floating_action_button.FloatingActionButton);
  dart.addTypeCaches(floating_action_button.FloatingActionButton);
  dart.setMethodSignature(floating_action_button.FloatingActionButton, () => ({
    __proto__: dart.getMethods(floating_action_button.FloatingActionButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(floating_action_button.FloatingActionButton, I[20]);
  dart.setFieldSignature(floating_action_button.FloatingActionButton, () => ({
    __proto__: dart.getFields(floating_action_button.FloatingActionButton.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    tooltip: dart.finalFieldType(dart.nullable(core.String)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    heroTag: dart.finalFieldType(dart.nullable(core.Object)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    focusElevation: dart.finalFieldType(dart.nullable(core.double)),
    hoverElevation: dart.finalFieldType(dart.nullable(core.double)),
    highlightElevation: dart.finalFieldType(dart.nullable(core.double)),
    disabledElevation: dart.finalFieldType(dart.nullable(core.double)),
    mini: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    isExtended: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    [S._sizeConstraints$1]: dart.finalFieldType(box$.BoxConstraints)
  }));
  dart.defineLazy(floating_action_button.FloatingActionButton, {
    /*floating_action_button.FloatingActionButton._defaultElevation*/get _defaultElevation() {
      return 6;
    },
    /*floating_action_button.FloatingActionButton._defaultFocusElevation*/get _defaultFocusElevation() {
      return 6;
    },
    /*floating_action_button.FloatingActionButton._defaultHoverElevation*/get _defaultHoverElevation() {
      return 8;
    },
    /*floating_action_button.FloatingActionButton._defaultHighlightElevation*/get _defaultHighlightElevation() {
      return 12;
    },
    /*floating_action_button.FloatingActionButton._defaultShape*/get _defaultShape() {
      return C[403] || CT.C403;
    },
    /*floating_action_button.FloatingActionButton._defaultExtendedShape*/get _defaultExtendedShape() {
      return C[404] || CT.C404;
    }
  }, false);
  floating_action_button._ChildOverflowBox = class _ChildOverflowBox extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[21], 566, 59, "context");
      return new floating_action_button._RenderChildOverflowBox.new({textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(I[21], 573, 40, "context");
      floating_action_button._RenderChildOverflowBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[21], 573, 73, "renderObject");
      renderObject.textDirection = basic.Directionality.of(context);
    }
  };
  (floating_action_button._ChildOverflowBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    floating_action_button._ChildOverflowBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button._ChildOverflowBox.prototype;
  dart.addTypeTests(floating_action_button._ChildOverflowBox);
  dart.addTypeCaches(floating_action_button._ChildOverflowBox);
  dart.setMethodSignature(floating_action_button._ChildOverflowBox, () => ({
    __proto__: dart.getMethods(floating_action_button._ChildOverflowBox.__proto__),
    createRenderObject: dart.fnType(floating_action_button._RenderChildOverflowBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(floating_action_button._ChildOverflowBox, I[20]);
  floating_action_button._RenderChildOverflowBox = class _RenderChildOverflowBox extends shifted_box.RenderAligningShiftedBox {
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[21], 585, 42, "height");
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[21], 588, 43, "width");
      return 0.0;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[21], 591, 40, "constraints");
      if (this.child != null) {
        let childSize = dart.nullCheck(this.child).getDryLayout(C[405] || CT.C405);
        return new ui.Size.new(math.max(core.double, constraints.minWidth, math.min(core.double, constraints.maxWidth, childSize.width)), math.max(core.double, constraints.minHeight, math.min(core.double, constraints.maxHeight, childSize.height)));
      } else {
        return constraints.biggest;
      }
    }
    performLayout() {
      let constraints = this.constraints;
      if (this.child != null) {
        dart.nullCheck(this.child).layout(C[405] || CT.C405, {parentUsesSize: true});
        this.size = new ui.Size.new(math.max(core.double, constraints.minWidth, math.min(core.double, constraints.maxWidth, dart.nullCheck(this.child).size.width)), math.max(core.double, constraints.minHeight, math.min(core.double, constraints.maxHeight, dart.nullCheck(this.child).size.height)));
        this.alignChild();
      } else {
        this.size = constraints.biggest;
      }
    }
  };
  (floating_action_button._RenderChildOverflowBox.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    floating_action_button._RenderChildOverflowBox.__proto__.new.call(this, {child: child, alignment: alignment.Alignment.center, textDirection: textDirection});
    ;
  }).prototype = floating_action_button._RenderChildOverflowBox.prototype;
  dart.addTypeTests(floating_action_button._RenderChildOverflowBox);
  dart.addTypeCaches(floating_action_button._RenderChildOverflowBox);
  dart.setLibraryUri(floating_action_button._RenderChildOverflowBox, I[20]);
  dart.defineLazy(floating_action_button, {
    /*floating_action_button._kSizeConstraints*/get _kSizeConstraints() {
      return C[406] || CT.C406;
    },
    /*floating_action_button._kMiniSizeConstraints*/get _kMiniSizeConstraints() {
      return C[407] || CT.C407;
    },
    /*floating_action_button._kExtendedSizeConstraints*/get _kExtendedSizeConstraints() {
      return C[408] || CT.C408;
    }
  }, false);
  flexible_space_bar.CollapseMode = class CollapseMode extends core.Object {
    toString() {
      return this[S._name$7];
    }
  };
  (flexible_space_bar.CollapseMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[22], 16, 6, "index");
    if (_name == null) dart.nullFailed(I[22], 16, 6, "_name");
    this.index = index;
    this[S._name$7] = _name;
    ;
  }).prototype = flexible_space_bar.CollapseMode.prototype;
  dart.addTypeTests(flexible_space_bar.CollapseMode);
  dart.addTypeCaches(flexible_space_bar.CollapseMode);
  dart.setLibraryUri(flexible_space_bar.CollapseMode, I[23]);
  dart.setFieldSignature(flexible_space_bar.CollapseMode, () => ({
    __proto__: dart.getFields(flexible_space_bar.CollapseMode.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$7]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(flexible_space_bar.CollapseMode, ['toString']);
  flexible_space_bar.CollapseMode.parallax = C[409] || CT.C409;
  flexible_space_bar.CollapseMode.pin = C[410] || CT.C410;
  flexible_space_bar.CollapseMode.none = C[411] || CT.C411;
  flexible_space_bar.CollapseMode.values = C[412] || CT.C412;
  flexible_space_bar.StretchMode = class StretchMode extends core.Object {
    toString() {
      return this[S._name$7];
    }
  };
  (flexible_space_bar.StretchMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[22], 28, 6, "index");
    if (_name == null) dart.nullFailed(I[22], 28, 6, "_name");
    this.index = index;
    this[S._name$7] = _name;
    ;
  }).prototype = flexible_space_bar.StretchMode.prototype;
  dart.addTypeTests(flexible_space_bar.StretchMode);
  dart.addTypeCaches(flexible_space_bar.StretchMode);
  dart.setLibraryUri(flexible_space_bar.StretchMode, I[23]);
  dart.setFieldSignature(flexible_space_bar.StretchMode, () => ({
    __proto__: dart.getFields(flexible_space_bar.StretchMode.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$7]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(flexible_space_bar.StretchMode, ['toString']);
  flexible_space_bar.StretchMode.zoomBackground = C[413] || CT.C413;
  flexible_space_bar.StretchMode.blurBackground = C[414] || CT.C414;
  flexible_space_bar.StretchMode.fadeTitle = C[415] || CT.C415;
  flexible_space_bar.StretchMode.values = C[416] || CT.C416;
  flexible_space_bar.FlexibleSpaceBar = class FlexibleSpaceBar extends framework.StatefulWidget {
    get title() {
      return this[S.title];
    }
    set title(value) {
      super.title = value;
    }
    get background() {
      return this[S.background];
    }
    set background(value) {
      super.background = value;
    }
    get centerTitle() {
      return this[S.centerTitle];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get collapseMode() {
      return this[S.collapseMode];
    }
    set collapseMode(value) {
      super.collapseMode = value;
    }
    get stretchModes() {
      return this[S.stretchModes];
    }
    set stretchModes(value) {
      super.stretchModes = value;
    }
    get titlePadding() {
      return this[S.titlePadding];
    }
    set titlePadding(value) {
      super.titlePadding = value;
    }
    static createSettings(opts) {
      let t7, t7$, t7$0;
      let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : null;
      let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
      let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
      let currentExtent = opts && 'currentExtent' in opts ? opts.currentExtent : null;
      if (currentExtent == null) dart.nullFailed(I[22], 218, 21, "currentExtent");
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[22], 219, 21, "child");
      if (!(currentExtent != null)) dart.assertFailed(null, I[22], 221, 12, "currentExtent != null");
      return new flexible_space_bar.FlexibleSpaceBarSettings.new({toolbarOpacity: (t7 = toolbarOpacity, t7 == null ? 1.0 : t7), minExtent: (t7$ = minExtent, t7$ == null ? currentExtent : t7$), maxExtent: (t7$0 = maxExtent, t7$0 == null ? currentExtent : t7$0), currentExtent: currentExtent, child: child, $creationLocationd_0dea112b090073317d4: C[418] || CT.C418});
    }
    createState() {
      return new flexible_space_bar._FlexibleSpaceBarState.new();
    }
  };
  (flexible_space_bar.FlexibleSpaceBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let background = opts && 'background' in opts ? opts.background : null;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
    let collapseMode = opts && 'collapseMode' in opts ? opts.collapseMode : C[409] || CT.C409;
    if (collapseMode == null) dart.nullFailed(I[22], 154, 10, "collapseMode");
    let stretchModes = opts && 'stretchModes' in opts ? opts.stretchModes : C[417] || CT.C417;
    if (stretchModes == null) dart.nullFailed(I[22], 155, 10, "stretchModes");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.title] = title;
    this[S.background] = background;
    this[S.centerTitle] = centerTitle;
    this[S.titlePadding] = titlePadding;
    this[S.collapseMode] = collapseMode;
    this[S.stretchModes] = stretchModes;
    if (!(collapseMode != null)) dart.assertFailed(null, I[22], 156, 15, "collapseMode != null");
    flexible_space_bar.FlexibleSpaceBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flexible_space_bar.FlexibleSpaceBar.prototype;
  dart.addTypeTests(flexible_space_bar.FlexibleSpaceBar);
  dart.addTypeCaches(flexible_space_bar.FlexibleSpaceBar);
  dart.setMethodSignature(flexible_space_bar.FlexibleSpaceBar, () => ({
    __proto__: dart.getMethods(flexible_space_bar.FlexibleSpaceBar.__proto__),
    createState: dart.fnType(flexible_space_bar._FlexibleSpaceBarState, [])
  }));
  dart.setLibraryUri(flexible_space_bar.FlexibleSpaceBar, I[23]);
  dart.setFieldSignature(flexible_space_bar.FlexibleSpaceBar, () => ({
    __proto__: dart.getFields(flexible_space_bar.FlexibleSpaceBar.__proto__),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    background: dart.finalFieldType(dart.nullable(framework.Widget)),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    collapseMode: dart.finalFieldType(flexible_space_bar.CollapseMode),
    stretchModes: dart.finalFieldType(core.List$(flexible_space_bar.StretchMode)),
    titlePadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry))
  }));
  flexible_space_bar._FlexibleSpaceBarState = class _FlexibleSpaceBarState extends framework.State$(flexible_space_bar.FlexibleSpaceBar) {
    [S._getEffectiveCenterTitle](theme) {
      if (theme == null) dart.nullFailed(I[22], 236, 43, "theme");
      if (this.widget.centerTitle != null) return dart.nullCheck(this.widget.centerTitle);
      if (!(theme.platform != null)) dart.assertFailed(null, I[22], 239, 12, "theme.platform != null");
      switch (theme.platform) {
        case C[44] || CT.C44:
        case C[45] || CT.C45:
        case C[46] || CT.C46:
        case C[47] || CT.C47:
        {
          return false;
        }
        case C[48] || CT.C48:
        case C[49] || CT.C49:
        {
          return true;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S._getTitleAlignment](effectiveCenterTitle) {
      if (effectiveCenterTitle == null) dart.nullFailed(I[22], 252, 37, "effectiveCenterTitle");
      if (dart.test(effectiveCenterTitle)) return alignment.Alignment.bottomCenter;
      let textDirection = basic.Directionality.of(this.context);
      if (!(textDirection != null)) dart.assertFailed(null, I[22], 256, 12, "textDirection != null");
      switch (textDirection) {
        case C[328] || CT.C328:
        {
          return alignment.Alignment.bottomRight;
        }
        case C[329] || CT.C329:
        {
          return alignment.Alignment.bottomLeft;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S._getCollapsePadding](t, settings) {
      if (t == null) dart.nullFailed(I[22], 265, 37, "t");
      if (settings == null) dart.nullFailed(I[22], 265, 65, "settings");
      switch (this.widget.collapseMode) {
        case C[410] || CT.C410:
        {
          return -(dart.notNull(settings.maxExtent) - dart.notNull(settings.currentExtent));
        }
        case C[411] || CT.C411:
        {
          return 0.0;
        }
        case C[409] || CT.C409:
        {
          let deltaExtent = dart.notNull(settings.maxExtent) - dart.notNull(settings.minExtent);
          return -dart.notNull(new (T$.TweenOfdouble()).new({begin: 0.0, end: deltaExtent / 4.0}).transform(t));
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[22], 278, 29, "context");
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let t7, t7$;
          if (context == null) dart.nullFailed(I[22], 280, 30, "context");
          if (constraints == null) dart.nullFailed(I[22], 280, 54, "constraints");
          let settings = dart.nullCheck(context.dependOnInheritedWidgetOfExactType(flexible_space_bar.FlexibleSpaceBarSettings));
          if (!(settings !== null)) dart.assertFailed("A FlexibleSpaceBar must be wrapped in the widget returned by FlexibleSpaceBar.createSettings().", I[22], 283, 11, "settings != null");
          let children = T$.JSArrayOfWidget().of([]);
          let deltaExtent = dart.notNull(settings.maxExtent) - dart.notNull(settings.minExtent);
          let t = (1.0 - (dart.notNull(settings.currentExtent) - dart.notNull(settings.minExtent)) / deltaExtent)[S.$clamp](0.0, 1.0);
          if (this.widget.background != null) {
            let fadeStart = math.max(core.double, 0.0, 1.0 - 56 / deltaExtent);
            if (!(fadeStart <= 1)) dart.assertFailed(null, I[22], 299, 18, "fadeStart <= fadeEnd");
            let opacity = 1.0 - dart.notNull(new curves.Interval.new(fadeStart, 1).transform(t));
            let height = settings.maxExtent;
            if (dart.test(this.widget.stretchModes[S.$contains](flexible_space_bar.StretchMode.zoomBackground)) && dart.notNull(constraints.maxHeight) > dart.notNull(height)) {
              height = constraints.maxHeight;
            }
            children[S.$add](new basic.Positioned.new({top: this[S._getCollapsePadding](t, settings), left: 0.0, right: 0.0, height: height, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: opacity, child: this.widget.background, $creationLocationd_0dea112b090073317d4: C[425] || CT.C425}), $creationLocationd_0dea112b090073317d4: C[430] || CT.C430}));
            if (dart.test(this.widget.stretchModes[S.$contains](flexible_space_bar.StretchMode.blurBackground)) && dart.notNull(constraints.maxHeight) > dart.notNull(settings.maxExtent)) {
              let blurAmount = (dart.notNull(constraints.maxHeight) - dart.notNull(settings.maxExtent)) / 10;
              children[S.$add](new basic.Positioned.fill({child: new basic.BackdropFilter.new({child: new container.Container.new({color: colors$.Colors.transparent, $creationLocationd_0dea112b090073317d4: C[437] || CT.C437}), filter: ui.ImageFilter.blur({sigmaX: blurAmount, sigmaY: blurAmount}), $creationLocationd_0dea112b090073317d4: C[440] || CT.C440}), $creationLocationd_0dea112b090073317d4: C[444] || CT.C444}));
            }
          }
          if (this.widget.title != null) {
            let theme = theme$.Theme.of(context);
            let title = null;
            switch (theme.platform) {
              case C[48] || CT.C48:
              case C[49] || CT.C49:
              {
                title = this.widget.title;
                break;
              }
              case C[44] || CT.C44:
              case C[45] || CT.C45:
              case C[46] || CT.C46:
              case C[47] || CT.C47:
              {
                title = new basic.Semantics.new({namesRoute: true, child: this.widget.title, $creationLocationd_0dea112b090073317d4: C[447] || CT.C447});
                break;
              }
              default:
              {
                dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
              }
            }
            if (dart.test(this.widget.stretchModes[S.$contains](flexible_space_bar.StretchMode.fadeTitle)) && dart.notNull(constraints.maxHeight) > dart.notNull(settings.maxExtent)) {
              let stretchOpacity = 1 - ((dart.notNull(constraints.maxHeight) - dart.notNull(settings.maxExtent)) / 100)[S.$clamp](0.0, 1.0);
              title = new basic.Opacity.new({opacity: stretchOpacity, child: title, $creationLocationd_0dea112b090073317d4: C[451] || CT.C451});
            }
            let opacity = settings.toolbarOpacity;
            if (dart.notNull(opacity) > 0.0) {
              let titleStyle = dart.nullCheck(theme.primaryTextTheme.headline6);
              titleStyle = titleStyle.copyWith({color: dart.nullCheck(titleStyle.color).withOpacity(opacity)});
              let effectiveCenterTitle = this[S._getEffectiveCenterTitle](theme);
              let padding = (t7 = this.widget.titlePadding, t7 == null ? new edge_insets.EdgeInsetsDirectional.only({start: dart.test(effectiveCenterTitle) ? 0.0 : 72.0, bottom: 16.0}) : t7);
              let scaleValue = new (T$.TweenOfdouble()).new({begin: 1.5, end: 1.0}).transform(t);
              let scaleTransform = (t7$ = vector_math_64.Matrix4.identity(), (() => {
                t7$.scale(scaleValue, scaleValue, 1.0);
                return t7$;
              })());
              let titleAlignment = this[S._getTitleAlignment](effectiveCenterTitle);
              children[S.$add](new container.Container.new({padding: padding, child: new basic.Transform.new({alignment: titleAlignment, transform: scaleTransform, child: new basic.Align.new({alignment: titleAlignment, child: new text$.DefaultTextStyle.new({style: titleStyle, child: new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
                          if (context == null) dart.nullFailed(I[22], 398, 46, "context");
                          if (constraints == null) dart.nullFailed(I[22], 398, 70, "constraints");
                          return new container.Container.new({width: dart.notNull(constraints.maxWidth) / dart.notNull(scaleValue), alignment: titleAlignment, child: title, $creationLocationd_0dea112b090073317d4: C[455] || CT.C455});
                        }, T$.BuildContextAndBoxConstraintsToContainer()), $creationLocationd_0dea112b090073317d4: C[460] || CT.C460}), $creationLocationd_0dea112b090073317d4: C[463] || CT.C463}), $creationLocationd_0dea112b090073317d4: C[467] || CT.C467}), $creationLocationd_0dea112b090073317d4: C[471] || CT.C471}), $creationLocationd_0dea112b090073317d4: C[476] || CT.C476}));
            }
          }
          return new basic.ClipRect.new({child: new basic.Stack.new({children: children, $creationLocationd_0dea112b090073317d4: C[480] || CT.C480}), $creationLocationd_0dea112b090073317d4: C[483] || CT.C483});
        }, T$.BuildContextAndBoxConstraintsToClipRect()), $creationLocationd_0dea112b090073317d4: C[486] || CT.C486});
    }
  };
  (flexible_space_bar._FlexibleSpaceBarState.new = function() {
    flexible_space_bar._FlexibleSpaceBarState.__proto__.new.call(this);
    ;
  }).prototype = flexible_space_bar._FlexibleSpaceBarState.prototype;
  dart.addTypeTests(flexible_space_bar._FlexibleSpaceBarState);
  dart.addTypeCaches(flexible_space_bar._FlexibleSpaceBarState);
  dart.setMethodSignature(flexible_space_bar._FlexibleSpaceBarState, () => ({
    __proto__: dart.getMethods(flexible_space_bar._FlexibleSpaceBarState.__proto__),
    [S._getEffectiveCenterTitle]: dart.fnType(core.bool, [theme_data.ThemeData]),
    [S._getTitleAlignment]: dart.fnType(alignment.Alignment, [core.bool]),
    [S._getCollapsePadding]: dart.fnType(core.double, [core.double, flexible_space_bar.FlexibleSpaceBarSettings]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(flexible_space_bar._FlexibleSpaceBarState, I[23]);
  flexible_space_bar.FlexibleSpaceBarSettings = class FlexibleSpaceBarSettings extends framework.InheritedWidget {
    get toolbarOpacity() {
      return this[S.toolbarOpacity];
    }
    set toolbarOpacity(value) {
      super.toolbarOpacity = value;
    }
    get minExtent() {
      return this[S.minExtent];
    }
    set minExtent(value) {
      super.minExtent = value;
    }
    get maxExtent() {
      return this[S.maxExtent];
    }
    set maxExtent(value) {
      super.maxExtent = value;
    }
    get currentExtent() {
      return this[S.currentExtent];
    }
    set currentExtent(value) {
      super.currentExtent = value;
    }
    updateShouldNotify(oldWidget) {
      flexible_space_bar.FlexibleSpaceBarSettings.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[22], 464, 52, "oldWidget");
      return this.toolbarOpacity != oldWidget.toolbarOpacity || this.minExtent != oldWidget.minExtent || this.maxExtent != oldWidget.maxExtent || this.currentExtent != oldWidget.currentExtent;
    }
  };
  (flexible_space_bar.FlexibleSpaceBarSettings.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : null;
    if (toolbarOpacity == null) dart.nullFailed(I[22], 434, 19, "toolbarOpacity");
    let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
    if (minExtent == null) dart.nullFailed(I[22], 435, 19, "minExtent");
    let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
    if (maxExtent == null) dart.nullFailed(I[22], 436, 19, "maxExtent");
    let currentExtent = opts && 'currentExtent' in opts ? opts.currentExtent : null;
    if (currentExtent == null) dart.nullFailed(I[22], 437, 19, "currentExtent");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[22], 438, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.toolbarOpacity] = toolbarOpacity;
    this[S.minExtent] = minExtent;
    this[S.maxExtent] = maxExtent;
    this[S.currentExtent] = currentExtent;
    if (!(toolbarOpacity != null)) dart.assertFailed(null, I[22], 439, 15, "toolbarOpacity != null");
    if (!(minExtent != null && dart.notNull(minExtent) >= 0)) dart.assertFailed(null, I[22], 440, 15, "minExtent != null && minExtent >= 0");
    if (!(maxExtent != null && dart.notNull(maxExtent) >= 0)) dart.assertFailed(null, I[22], 441, 15, "maxExtent != null && maxExtent >= 0");
    if (!(currentExtent != null && dart.notNull(currentExtent) >= 0)) dart.assertFailed(null, I[22], 442, 15, "currentExtent != null && currentExtent >= 0");
    if (!(dart.notNull(toolbarOpacity) >= 0.0)) dart.assertFailed(null, I[22], 443, 15, "toolbarOpacity >= 0.0");
    if (!(dart.notNull(minExtent) <= dart.notNull(maxExtent))) dart.assertFailed(null, I[22], 444, 15, "minExtent <= maxExtent");
    if (!(dart.notNull(minExtent) <= dart.notNull(currentExtent))) dart.assertFailed(null, I[22], 445, 15, "minExtent <= currentExtent");
    if (!(dart.notNull(currentExtent) <= dart.notNull(maxExtent))) dart.assertFailed(null, I[22], 446, 15, "currentExtent <= maxExtent");
    flexible_space_bar.FlexibleSpaceBarSettings.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flexible_space_bar.FlexibleSpaceBarSettings.prototype;
  dart.addTypeTests(flexible_space_bar.FlexibleSpaceBarSettings);
  dart.addTypeCaches(flexible_space_bar.FlexibleSpaceBarSettings);
  dart.setMethodSignature(flexible_space_bar.FlexibleSpaceBarSettings, () => ({
    __proto__: dart.getMethods(flexible_space_bar.FlexibleSpaceBarSettings.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(flexible_space_bar.FlexibleSpaceBarSettings, I[23]);
  dart.setFieldSignature(flexible_space_bar.FlexibleSpaceBarSettings, () => ({
    __proto__: dart.getFields(flexible_space_bar.FlexibleSpaceBarSettings.__proto__),
    toolbarOpacity: dart.finalFieldType(core.double),
    minExtent: dart.finalFieldType(core.double),
    maxExtent: dart.finalFieldType(core.double),
    currentExtent: dart.finalFieldType(core.double)
  }));
  list_tile.ListTileStyle = class ListTileStyle extends core.Object {
    toString() {
      return this[S._name$8];
    }
  };
  (list_tile.ListTileStyle.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[24], 25, 6, "index");
    if (_name == null) dart.nullFailed(I[24], 25, 6, "_name");
    this.index = index;
    this[S._name$8] = _name;
    ;
  }).prototype = list_tile.ListTileStyle.prototype;
  dart.addTypeTests(list_tile.ListTileStyle);
  dart.addTypeCaches(list_tile.ListTileStyle);
  dart.setLibraryUri(list_tile.ListTileStyle, I[25]);
  dart.setFieldSignature(list_tile.ListTileStyle, () => ({
    __proto__: dart.getFields(list_tile.ListTileStyle.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$8]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(list_tile.ListTileStyle, ['toString']);
  list_tile.ListTileStyle.list = C[489] || CT.C489;
  list_tile.ListTileStyle.drawer = C[490] || CT.C490;
  list_tile.ListTileStyle.values = C[491] || CT.C491;
  list_tile.ListTileTheme = class ListTileTheme extends inherited_theme.InheritedTheme {
    get dense() {
      return this[S.dense];
    }
    set dense(value) {
      super.dense = value;
    }
    get shape() {
      return this[S.shape$2];
    }
    set shape(value) {
      super.shape = value;
    }
    get style() {
      return this[S.style$1];
    }
    set style(value) {
      super.style = value;
    }
    get selectedColor() {
      return this[S.selectedColor];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get iconColor() {
      return this[S.iconColor];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    get textColor() {
      return this[S.textColor$1];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get contentPadding() {
      return this[S.contentPadding];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get tileColor() {
      return this[S.tileColor];
    }
    set tileColor(value) {
      super.tileColor = value;
    }
    get selectedTileColor() {
      return this[S.selectedTileColor];
    }
    set selectedTileColor(value) {
      super.selectedTileColor = value;
    }
    get horizontalTitleGap() {
      return this[S.horizontalTitleGap];
    }
    set horizontalTitleGap(value) {
      super.horizontalTitleGap = value;
    }
    get minVerticalPadding() {
      return this[S.minVerticalPadding];
    }
    set minVerticalPadding(value) {
      super.minVerticalPadding = value;
    }
    get minLeadingWidth() {
      return this[S.minLeadingWidth];
    }
    set minLeadingWidth(value) {
      super.minLeadingWidth = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$1];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    static merge(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let dense = opts && 'dense' in opts ? opts.dense : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
      let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
      let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
      let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[24], 81, 21, "child");
      if (!(child != null)) dart.assertFailed(null, I[24], 83, 12, "child != null");
      return new basic.Builder.new({builder: dart.fn(context => {
          let t7, t7$, t7$0, t7$1, t7$2, t7$3, t7$4, t7$5, t7$6, t7$7, t7$8, t7$9, t7$10;
          if (context == null) dart.nullFailed(I[24], 85, 30, "context");
          let parent = list_tile.ListTileTheme.of(context);
          return new list_tile.ListTileTheme.new({key: key, dense: (t7 = dense, t7 == null ? parent.dense : t7), shape: (t7$ = shape, t7$ == null ? parent.shape : t7$), style: (t7$0 = style, t7$0 == null ? parent.style : t7$0), selectedColor: (t7$1 = selectedColor, t7$1 == null ? parent.selectedColor : t7$1), iconColor: (t7$2 = iconColor, t7$2 == null ? parent.iconColor : t7$2), textColor: (t7$3 = textColor, t7$3 == null ? parent.textColor : t7$3), contentPadding: (t7$4 = contentPadding, t7$4 == null ? parent.contentPadding : t7$4), tileColor: (t7$5 = tileColor, t7$5 == null ? parent.tileColor : t7$5), selectedTileColor: (t7$6 = selectedTileColor, t7$6 == null ? parent.selectedTileColor : t7$6), enableFeedback: (t7$7 = enableFeedback, t7$7 == null ? parent.enableFeedback : t7$7), horizontalTitleGap: (t7$8 = horizontalTitleGap, t7$8 == null ? parent.horizontalTitleGap : t7$8), minVerticalPadding: (t7$9 = minVerticalPadding, t7$9 == null ? parent.minVerticalPadding : t7$9), minLeadingWidth: (t7$10 = minLeadingWidth, t7$10 == null ? parent.minLeadingWidth : t7$10), child: child, $creationLocationd_0dea112b090073317d4: C[492] || CT.C492});
        }, T$.BuildContextToListTileTheme()), $creationLocationd_0dea112b090073317d4: C[509] || CT.C509});
    }
    static of(context) {
      let t7;
      if (context == null) dart.nullFailed(I[24], 173, 40, "context");
      let result = context.dependOnInheritedWidgetOfExactType(list_tile.ListTileTheme);
      t7 = result;
      return t7 == null ? C[512] || CT.C512 : t7;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[24], 179, 28, "context");
      if (child == null) dart.nullFailed(I[24], 179, 44, "child");
      return new list_tile.ListTileTheme.new({dense: this.dense, shape: this.shape, style: this.style, selectedColor: this.selectedColor, iconColor: this.iconColor, textColor: this.textColor, contentPadding: this.contentPadding, tileColor: this.tileColor, selectedTileColor: this.selectedTileColor, enableFeedback: this.enableFeedback, horizontalTitleGap: this.horizontalTitleGap, minVerticalPadding: this.minVerticalPadding, minLeadingWidth: this.minLeadingWidth, child: child, $creationLocationd_0dea112b090073317d4: C[518] || CT.C518});
    }
    updateShouldNotify(oldWidget) {
      list_tile.ListTileTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[24], 199, 41, "oldWidget");
      return this.dense != oldWidget.dense || !dart.equals(this.shape, oldWidget.shape) || this.style != oldWidget.style || !dart.equals(this.selectedColor, oldWidget.selectedColor) || !dart.equals(this.iconColor, oldWidget.iconColor) || !dart.equals(this.textColor, oldWidget.textColor) || !dart.equals(this.contentPadding, oldWidget.contentPadding) || !dart.equals(this.tileColor, oldWidget.tileColor) || !dart.equals(this.selectedTileColor, oldWidget.selectedTileColor) || this.enableFeedback != oldWidget.enableFeedback || this.horizontalTitleGap != oldWidget.horizontalTitleGap || this.minVerticalPadding != oldWidget.minVerticalPadding || this.minLeadingWidth != oldWidget.minLeadingWidth;
    }
  };
  (list_tile.ListTileTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let dense = opts && 'dense' in opts ? opts.dense : false;
    if (dense == null) dart.nullFailed(I[24], 46, 10, "dense");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let style = opts && 'style' in opts ? opts.style : C[489] || CT.C489;
    if (style == null) dart.nullFailed(I[24], 48, 10, "style");
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
    let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[24], 59, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.dense] = dense;
    this[S.shape$2] = shape;
    this[S.style$1] = style;
    this[S.selectedColor] = selectedColor;
    this[S.iconColor] = iconColor;
    this[S.textColor$1] = textColor;
    this[S.contentPadding] = contentPadding;
    this[S.tileColor] = tileColor;
    this[S.selectedTileColor] = selectedTileColor;
    this[S.enableFeedback$1] = enableFeedback;
    this[S.horizontalTitleGap] = horizontalTitleGap;
    this[S.minVerticalPadding] = minVerticalPadding;
    this[S.minLeadingWidth] = minLeadingWidth;
    list_tile.ListTileTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile.ListTileTheme.prototype;
  dart.addTypeTests(list_tile.ListTileTheme);
  dart.addTypeCaches(list_tile.ListTileTheme);
  dart.setMethodSignature(list_tile.ListTileTheme, () => ({
    __proto__: dart.getMethods(list_tile.ListTileTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(list_tile.ListTileTheme, I[25]);
  dart.setFieldSignature(list_tile.ListTileTheme, () => ({
    __proto__: dart.getFields(list_tile.ListTileTheme.__proto__),
    dense: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    style: dart.finalFieldType(list_tile.ListTileStyle),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color)),
    iconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    tileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedTileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    horizontalTitleGap: dart.finalFieldType(dart.nullable(core.double)),
    minVerticalPadding: dart.finalFieldType(dart.nullable(core.double)),
    minLeadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool))
  }));
  list_tile.ListTileControlAffinity = class ListTileControlAffinity extends core.Object {
    toString() {
      return this[S._name$8];
    }
  };
  (list_tile.ListTileControlAffinity.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[24], 224, 6, "index");
    if (_name == null) dart.nullFailed(I[24], 224, 6, "_name");
    this.index = index;
    this[S._name$8] = _name;
    ;
  }).prototype = list_tile.ListTileControlAffinity.prototype;
  dart.addTypeTests(list_tile.ListTileControlAffinity);
  dart.addTypeCaches(list_tile.ListTileControlAffinity);
  dart.setLibraryUri(list_tile.ListTileControlAffinity, I[25]);
  dart.setFieldSignature(list_tile.ListTileControlAffinity, () => ({
    __proto__: dart.getFields(list_tile.ListTileControlAffinity.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$8]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(list_tile.ListTileControlAffinity, ['toString']);
  list_tile.ListTileControlAffinity.leading = C[534] || CT.C534;
  list_tile.ListTileControlAffinity.trailing = C[535] || CT.C535;
  list_tile.ListTileControlAffinity.platform = C[536] || CT.C536;
  list_tile.ListTileControlAffinity.values = C[537] || CT.C537;
  list_tile.ListTile = class ListTile extends framework.StatelessWidget {
    get leading() {
      return this[S.leading];
    }
    set leading(value) {
      super.leading = value;
    }
    get title() {
      return this[S.title$1];
    }
    set title(value) {
      super.title = value;
    }
    get subtitle() {
      return this[S.subtitle];
    }
    set subtitle(value) {
      super.subtitle = value;
    }
    get trailing() {
      return this[S.trailing];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get isThreeLine() {
      return this[S.isThreeLine];
    }
    set isThreeLine(value) {
      super.isThreeLine = value;
    }
    get dense() {
      return this[S.dense$1];
    }
    set dense(value) {
      super.dense = value;
    }
    get visualDensity() {
      return this[S.visualDensity$1];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[S.shape$3];
    }
    set shape(value) {
      super.shape = value;
    }
    get contentPadding() {
      return this[S.contentPadding$1];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get enabled() {
      return this[S.enabled];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get onTap() {
      return this[S.onTap];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onLongPress() {
      return this[S.onLongPress$1];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$2];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get selected() {
      return this[S.selected];
    }
    set selected(value) {
      super.selected = value;
    }
    get focusColor() {
      return this[S.focusColor$2];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor$2];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get focusNode() {
      return this[S.focusNode$3];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$3];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get tileColor() {
      return this[S.tileColor$1];
    }
    set tileColor(value) {
      super.tileColor = value;
    }
    get selectedTileColor() {
      return this[S.selectedTileColor$1];
    }
    set selectedTileColor(value) {
      super.selectedTileColor = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$2];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get horizontalTitleGap() {
      return this[S.horizontalTitleGap$1];
    }
    set horizontalTitleGap(value) {
      super.horizontalTitleGap = value;
    }
    get minVerticalPadding() {
      return this[S.minVerticalPadding$1];
    }
    set minVerticalPadding(value) {
      super.minVerticalPadding = value;
    }
    get minLeadingWidth() {
      return this[S.minLeadingWidth$1];
    }
    set minLeadingWidth(value) {
      super.minLeadingWidth = value;
    }
    static divideTiles(opts) {
      let context = opts && 'context' in opts ? opts.context : null;
      let tiles = opts && 'tiles' in opts ? opts.tiles : null;
      if (tiles == null) dart.nullFailed(I[24], 982, 90, "tiles");
      let color = opts && 'color' in opts ? opts.color : null;
      return new (T$.SyncIterableOfWidget()).new(function* divideTiles() {
        if (!(tiles != null)) dart.assertFailed(null, I[24], 983, 12, "tiles != null");
        if (!(color != null || context != null)) dart.assertFailed(null, I[24], 984, 12, "color != null || context != null");
        let iterator = tiles[S.$iterator];
        let isNotEmpty = iterator.moveNext();
        let decoration = new box_decoration.BoxDecoration.new({border: new box_border.Border.new({bottom: divider.Divider.createBorderSide(context, {color: color})})});
        let tile = iterator.current;
        while (dart.test(iterator.moveNext())) {
          yield new container.DecoratedBox.new({position: proxy_box.DecorationPosition.foreground, decoration: decoration, child: tile, $creationLocationd_0dea112b090073317d4: C[538] || CT.C538});
          tile = iterator.current;
        }
        if (dart.test(isNotEmpty)) yield tile;
      });
    }
    [S._iconColor](theme, tileTheme) {
      let t7, t7$;
      if (theme == null) dart.nullFailed(I[24], 1008, 31, "theme");
      if (!dart.test(this.enabled)) return theme.disabledColor;
      if (dart.test(this.selected) && (t7 = tileTheme, t7 == null ? null : t7.selectedColor) != null) return dart.nullCheck(tileTheme).selectedColor;
      if (!dart.test(this.selected) && (t7$ = tileTheme, t7$ == null ? null : t7$.iconColor) != null) return dart.nullCheck(tileTheme).iconColor;
      switch (theme.brightness) {
        case C[543] || CT.C543:
        {
          return dart.test(this.selected) ? theme.primaryColor : colors$.Colors.black45;
        }
        case C[544] || CT.C544:
        {
          return dart.test(this.selected) ? theme.accentColor : null;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S._textColor](theme, tileTheme, defaultColor) {
      let t7, t7$;
      if (theme == null) dart.nullFailed(I[24], 1026, 31, "theme");
      if (!dart.test(this.enabled)) return theme.disabledColor;
      if (dart.test(this.selected) && (t7 = tileTheme, t7 == null ? null : t7.selectedColor) != null) return dart.nullCheck(tileTheme).selectedColor;
      if (!dart.test(this.selected) && (t7$ = tileTheme, t7$ == null ? null : t7$.textColor) != null) return dart.nullCheck(tileTheme).textColor;
      if (dart.test(this.selected)) {
        switch (theme.brightness) {
          case C[543] || CT.C543:
          {
            return theme.primaryColor;
          }
          case C[544] || CT.C544:
          {
            return theme.accentColor;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      return defaultColor;
    }
    [S._isDenseLayout](tileTheme) {
      let t8, t7, t7$;
      t7$ = (t7 = this.dense, t7 == null ? (t8 = tileTheme, t8 == null ? null : t8.dense) : t7);
      return t7$ == null ? false : t7$;
    }
    [S._titleTextStyle](theme, tileTheme) {
      if (theme == null) dart.nullFailed(I[24], 1051, 39, "theme");
      let style = null;
      if (tileTheme != null) {
        switch (tileTheme.style) {
          case C[490] || CT.C490:
          {
            style = dart.nullCheck(theme.textTheme.bodyText1);
            break;
          }
          case C[489] || CT.C489:
          {
            style = dart.nullCheck(theme.textTheme.subtitle1);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      } else {
        style = dart.nullCheck(theme.textTheme.subtitle1);
      }
      let color = this[S._textColor](theme, tileTheme, style.color);
      return dart.test(this[S._isDenseLayout](tileTheme)) ? style.copyWith({fontSize: 13.0, color: color}) : style.copyWith({color: color});
    }
    [S._subtitleTextStyle](theme, tileTheme) {
      if (theme == null) dart.nullFailed(I[24], 1071, 42, "theme");
      let style = dart.nullCheck(theme.textTheme.bodyText2);
      let color = this[S._textColor](theme, tileTheme, dart.nullCheck(theme.textTheme.caption).color);
      return dart.test(this[S._isDenseLayout](tileTheme)) ? style.copyWith({color: color, fontSize: 12.0}) : style.copyWith({color: color});
    }
    [S._trailingAndLeadingTextStyle](theme, tileTheme) {
      if (theme == null) dart.nullFailed(I[24], 1079, 52, "theme");
      let style = dart.nullCheck(theme.textTheme.bodyText2);
      let color = this[S._textColor](theme, tileTheme, style.color);
      return style.copyWith({color: color});
    }
    [S._tileBackgroundColor](tileTheme) {
      let t7, t7$;
      if (!dart.test(this.selected)) {
        if (this.tileColor != null) return dart.nullCheck(this.tileColor);
        if ((t7 = tileTheme, t7 == null ? null : t7.tileColor) != null) return dart.nullCheck(dart.nullCheck(tileTheme).tileColor);
      }
      if (dart.test(this.selected)) {
        if (this.selectedTileColor != null) return dart.nullCheck(this.selectedTileColor);
        if ((t7$ = tileTheme, t7$ == null ? null : t7$.selectedTileColor) != null) return dart.nullCheck(dart.nullCheck(tileTheme).selectedTileColor);
      }
      return colors$.Colors.transparent;
    }
    build(context) {
      let t7, t7$, t8, t7$0, t7$1, t7$2, t8$, t8$0, t8$1, t8$2, t8$3, t8$4, t8$5, t8$6, t8$7, t8$8, t8$9;
      if (context == null) dart.nullFailed(I[24], 1104, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, I[24], 1105, 12, "debugCheckHasMaterial(context)");
      let theme = theme$.Theme.of(context);
      let tileTheme = list_tile.ListTileTheme.of(context);
      let iconThemeData = null;
      let leadingAndTrailingTextStyle = null;
      if (this.leading != null || this.trailing != null) {
        iconThemeData = new icon_theme_data.IconThemeData.new({color: this[S._iconColor](theme, tileTheme)});
        leadingAndTrailingTextStyle = this[S._trailingAndLeadingTextStyle](theme, tileTheme);
      }
      let leadingIcon = null;
      if (this.leading != null) {
        leadingIcon = new implicit_animations.AnimatedDefaultTextStyle.new({style: dart.nullCheck(leadingAndTrailingTextStyle), duration: constants.kThemeChangeDuration, child: icon_theme.IconTheme.merge({data: dart.nullCheck(iconThemeData), child: dart.nullCheck(this.leading)}), $creationLocationd_0dea112b090073317d4: C[545] || CT.C545});
      }
      let titleStyle = this[S._titleTextStyle](theme, tileTheme);
      let titleText = new implicit_animations.AnimatedDefaultTextStyle.new({style: titleStyle, duration: constants.kThemeChangeDuration, child: (t7 = this.title, t7 == null ? C[550] || CT.C550 : t7), $creationLocationd_0dea112b090073317d4: C[552] || CT.C552});
      let subtitleText = null;
      let subtitleStyle = null;
      if (this.subtitle != null) {
        subtitleStyle = this[S._subtitleTextStyle](theme, tileTheme);
        subtitleText = new implicit_animations.AnimatedDefaultTextStyle.new({style: subtitleStyle, duration: constants.kThemeChangeDuration, child: dart.nullCheck(this.subtitle), $creationLocationd_0dea112b090073317d4: C[557] || CT.C557});
      }
      let trailingIcon = null;
      if (this.trailing != null) {
        trailingIcon = new implicit_animations.AnimatedDefaultTextStyle.new({style: dart.nullCheck(leadingAndTrailingTextStyle), duration: constants.kThemeChangeDuration, child: icon_theme.IconTheme.merge({data: dart.nullCheck(iconThemeData), child: dart.nullCheck(this.trailing)}), $creationLocationd_0dea112b090073317d4: C[562] || CT.C562});
      }
      let _defaultContentPadding = C[567] || CT.C567;
      let textDirection = basic.Directionality.of(context);
      let resolvedContentPadding = (t7$1 = (t7$0 = (t7$ = this.contentPadding, t7$ == null ? null : t7$.resolve(textDirection)), t7$0 == null ? (t8 = tileTheme.contentPadding, t8 == null ? null : t8.resolve(textDirection)) : t7$0), t7$1 == null ? _defaultContentPadding : t7$1);
      let resolvedMouseCursor = material_state.MaterialStateProperty.resolveAs(mouse_cursor.MouseCursor, (t7$2 = this.mouseCursor, t7$2 == null ? material_state.MaterialStateMouseCursor.clickable : t7$2), (() => {
        let t7 = T$.LinkedHashSetOfMaterialState().new();
        if (!dart.test(this.enabled) || this.onTap == null && this.onLongPress == null) t7.add(material_state.MaterialState.disabled);
        if (dart.test(this.selected)) t7.add(material_state.MaterialState.selected);
        return t7;
      })());
      return new ink_well.InkWell.new({customBorder: (t8$ = this.shape, t8$ == null ? tileTheme.shape : t8$), onTap: dart.test(this.enabled) ? this.onTap : null, onLongPress: dart.test(this.enabled) ? this.onLongPress : null, mouseCursor: resolvedMouseCursor, canRequestFocus: this.enabled, focusNode: this.focusNode, focusColor: this.focusColor, hoverColor: this.hoverColor, autofocus: this.autofocus, enableFeedback: (t8$1 = (t8$0 = this.enableFeedback, t8$0 == null ? tileTheme.enableFeedback : t8$0), t8$1 == null ? true : t8$1), child: new basic.Semantics.new({selected: this.selected, enabled: this.enabled, child: new basic.ColoredBox.new({color: this[S._tileBackgroundColor](tileTheme), child: new safe_area.SafeArea.new({top: false, bottom: false, minimum: resolvedContentPadding, child: new list_tile._ListTile.new({leading: leadingIcon, title: titleText, subtitle: subtitleText, trailing: trailingIcon, isDense: this[S._isDenseLayout](tileTheme), visualDensity: (t8$2 = this.visualDensity, t8$2 == null ? theme.visualDensity : t8$2), isThreeLine: this.isThreeLine, textDirection: textDirection, titleBaselineType: dart.nullCheck(titleStyle.textBaseline), subtitleBaselineType: (t8$3 = subtitleStyle, t8$3 == null ? null : t8$3.textBaseline), horizontalTitleGap: (t8$5 = (t8$4 = this.horizontalTitleGap, t8$4 == null ? tileTheme.horizontalTitleGap : t8$4), t8$5 == null ? 16.0 : t8$5), minVerticalPadding: (t8$7 = (t8$6 = this.minVerticalPadding, t8$6 == null ? tileTheme.minVerticalPadding : t8$6), t8$7 == null ? 4.0 : t8$7), minLeadingWidth: (t8$9 = (t8$8 = this.minLeadingWidth, t8$8 == null ? tileTheme.minLeadingWidth : t8$8), t8$9 == null ? 40.0 : t8$9), $creationLocationd_0dea112b090073317d4: C[568] || CT.C568}), $creationLocationd_0dea112b090073317d4: C[583] || CT.C583}), $creationLocationd_0dea112b090073317d4: C[589] || CT.C589}), $creationLocationd_0dea112b090073317d4: C[593] || CT.C593}), $creationLocationd_0dea112b090073317d4: C[598] || CT.C598});
    }
  };
  (list_tile.ListTile.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : false;
    if (isThreeLine == null) dart.nullFailed(I[24], 735, 10, "isThreeLine");
    let dense = opts && 'dense' in opts ? opts.dense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    if (enabled == null) dart.nullFailed(I[24], 740, 10, "enabled");
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let selected = opts && 'selected' in opts ? opts.selected : false;
    if (selected == null) dart.nullFailed(I[24], 744, 10, "selected");
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[24], 748, 10, "autofocus");
    let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
    let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.leading] = leading;
    this[S.title$1] = title;
    this[S.subtitle] = subtitle;
    this[S.trailing] = trailing;
    this[S.isThreeLine] = isThreeLine;
    this[S.dense$1] = dense;
    this[S.visualDensity$1] = visualDensity;
    this[S.shape$3] = shape;
    this[S.contentPadding$1] = contentPadding;
    this[S.enabled] = enabled;
    this[S.onTap] = onTap;
    this[S.onLongPress$1] = onLongPress;
    this[S.mouseCursor$2] = mouseCursor;
    this[S.selected] = selected;
    this[S.focusColor$2] = focusColor;
    this[S.hoverColor$2] = hoverColor;
    this[S.focusNode$3] = focusNode;
    this[S.autofocus$3] = autofocus;
    this[S.tileColor$1] = tileColor;
    this[S.selectedTileColor$1] = selectedTileColor;
    this[S.enableFeedback$2] = enableFeedback;
    this[S.horizontalTitleGap$1] = horizontalTitleGap;
    this[S.minVerticalPadding$1] = minVerticalPadding;
    this[S.minLeadingWidth$1] = minLeadingWidth;
    if (!(isThreeLine != null)) dart.assertFailed(null, I[24], 755, 15, "isThreeLine != null");
    if (!(enabled != null)) dart.assertFailed(null, I[24], 756, 15, "enabled != null");
    if (!(selected != null)) dart.assertFailed(null, I[24], 757, 15, "selected != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[24], 758, 15, "autofocus != null");
    if (!(!dart.test(isThreeLine) || subtitle != null)) dart.assertFailed(null, I[24], 759, 15, "!isThreeLine || subtitle != null");
    list_tile.ListTile.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile.ListTile.prototype;
  dart.addTypeTests(list_tile.ListTile);
  dart.addTypeCaches(list_tile.ListTile);
  dart.setMethodSignature(list_tile.ListTile, () => ({
    __proto__: dart.getMethods(list_tile.ListTile.__proto__),
    [S._iconColor]: dart.fnType(dart.nullable(ui.Color), [theme_data.ThemeData, dart.nullable(list_tile.ListTileTheme)]),
    [S._textColor]: dart.fnType(dart.nullable(ui.Color), [theme_data.ThemeData, dart.nullable(list_tile.ListTileTheme), dart.nullable(ui.Color)]),
    [S._isDenseLayout]: dart.fnType(core.bool, [dart.nullable(list_tile.ListTileTheme)]),
    [S._titleTextStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData, dart.nullable(list_tile.ListTileTheme)]),
    [S._subtitleTextStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData, dart.nullable(list_tile.ListTileTheme)]),
    [S._trailingAndLeadingTextStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData, dart.nullable(list_tile.ListTileTheme)]),
    [S._tileBackgroundColor]: dart.fnType(ui.Color, [dart.nullable(list_tile.ListTileTheme)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(list_tile.ListTile, I[25]);
  dart.setFieldSignature(list_tile.ListTile, () => ({
    __proto__: dart.getFields(list_tile.ListTile.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    subtitle: dart.finalFieldType(dart.nullable(framework.Widget)),
    trailing: dart.finalFieldType(dart.nullable(framework.Widget)),
    isThreeLine: dart.finalFieldType(core.bool),
    dense: dart.finalFieldType(dart.nullable(core.bool)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    enabled: dart.finalFieldType(core.bool),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    selected: dart.finalFieldType(core.bool),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    tileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedTileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    horizontalTitleGap: dart.finalFieldType(dart.nullable(core.double)),
    minVerticalPadding: dart.finalFieldType(dart.nullable(core.double)),
    minLeadingWidth: dart.finalFieldType(dart.nullable(core.double))
  }));
  list_tile._ListTileSlot = class _ListTileSlot extends core.Object {
    toString() {
      return this[S._name$8];
    }
  };
  (list_tile._ListTileSlot.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[24], 1215, 6, "index");
    if (_name == null) dart.nullFailed(I[24], 1215, 6, "_name");
    this.index = index;
    this[S._name$8] = _name;
    ;
  }).prototype = list_tile._ListTileSlot.prototype;
  dart.addTypeTests(list_tile._ListTileSlot);
  dart.addTypeCaches(list_tile._ListTileSlot);
  dart.setLibraryUri(list_tile._ListTileSlot, I[25]);
  dart.setFieldSignature(list_tile._ListTileSlot, () => ({
    __proto__: dart.getFields(list_tile._ListTileSlot.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$8]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(list_tile._ListTileSlot, ['toString']);
  list_tile._ListTileSlot.leading = C[611] || CT.C611;
  list_tile._ListTileSlot.title = C[612] || CT.C612;
  list_tile._ListTileSlot.subtitle = C[613] || CT.C613;
  list_tile._ListTileSlot.trailing = C[614] || CT.C614;
  list_tile._ListTileSlot.values = C[615] || CT.C615;
  list_tile._ListTile = class _ListTile extends framework.RenderObjectWidget {
    get leading() {
      return this[S.leading$1];
    }
    set leading(value) {
      super.leading = value;
    }
    get title() {
      return this[S.title$2];
    }
    set title(value) {
      super.title = value;
    }
    get subtitle() {
      return this[S.subtitle$1];
    }
    set subtitle(value) {
      super.subtitle = value;
    }
    get trailing() {
      return this[S.trailing$1];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get isThreeLine() {
      return this[S.isThreeLine$1];
    }
    set isThreeLine(value) {
      super.isThreeLine = value;
    }
    get isDense() {
      return this[S.isDense];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get visualDensity() {
      return this[S.visualDensity$2];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get textDirection() {
      return this[S.textDirection];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get titleBaselineType() {
      return this[S.titleBaselineType];
    }
    set titleBaselineType(value) {
      super.titleBaselineType = value;
    }
    get subtitleBaselineType() {
      return this[S.subtitleBaselineType];
    }
    set subtitleBaselineType(value) {
      super.subtitleBaselineType = value;
    }
    get horizontalTitleGap() {
      return this[S.horizontalTitleGap$2];
    }
    set horizontalTitleGap(value) {
      super.horizontalTitleGap = value;
    }
    get minVerticalPadding() {
      return this[S.minVerticalPadding$2];
    }
    set minVerticalPadding(value) {
      super.minVerticalPadding = value;
    }
    get minLeadingWidth() {
      return this[S.minLeadingWidth$2];
    }
    set minLeadingWidth(value) {
      super.minLeadingWidth = value;
    }
    createElement() {
      return new list_tile._ListTileElement.new(this);
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[24], 1266, 51, "context");
      return new list_tile._RenderListTile.new({isThreeLine: this.isThreeLine, isDense: this.isDense, visualDensity: this.visualDensity, textDirection: this.textDirection, titleBaselineType: this.titleBaselineType, subtitleBaselineType: this.subtitleBaselineType, horizontalTitleGap: this.horizontalTitleGap, minVerticalPadding: this.minVerticalPadding, minLeadingWidth: this.minLeadingWidth});
    }
    updateRenderObject(context, renderObject) {
      let t8;
      if (context == null) dart.nullFailed(I[24], 1281, 40, "context");
      list_tile._RenderListTile.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[24], 1281, 65, "renderObject");
      t8 = renderObject;
      (() => {
        t8.isThreeLine = this.isThreeLine;
        t8.isDense = this.isDense;
        t8.visualDensity = this.visualDensity;
        t8.textDirection = this.textDirection;
        t8.titleBaselineType = this.titleBaselineType;
        t8.subtitleBaselineType = this.subtitleBaselineType;
        t8.horizontalTitleGap = this.horizontalTitleGap;
        t8.minLeadingWidth = this.minLeadingWidth;
        t8.minVerticalPadding = this.minVerticalPadding;
        return t8;
      })();
    }
  };
  (list_tile._ListTile.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let title = opts && 'title' in opts ? opts.title : null;
    if (title == null) dart.nullFailed(I[24], 1226, 19, "title");
    let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
    if (isThreeLine == null) dart.nullFailed(I[24], 1229, 19, "isThreeLine");
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    if (isDense == null) dart.nullFailed(I[24], 1230, 19, "isDense");
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    if (visualDensity == null) dart.nullFailed(I[24], 1231, 19, "visualDensity");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[24], 1232, 19, "textDirection");
    let titleBaselineType = opts && 'titleBaselineType' in opts ? opts.titleBaselineType : null;
    if (titleBaselineType == null) dart.nullFailed(I[24], 1233, 19, "titleBaselineType");
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    if (horizontalTitleGap == null) dart.nullFailed(I[24], 1234, 19, "horizontalTitleGap");
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    if (minVerticalPadding == null) dart.nullFailed(I[24], 1235, 19, "minVerticalPadding");
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    if (minLeadingWidth == null) dart.nullFailed(I[24], 1236, 19, "minLeadingWidth");
    let subtitleBaselineType = opts && 'subtitleBaselineType' in opts ? opts.subtitleBaselineType : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.leading$1] = leading;
    this[S.title$2] = title;
    this[S.subtitle$1] = subtitle;
    this[S.trailing$1] = trailing;
    this[S.isThreeLine$1] = isThreeLine;
    this[S.isDense] = isDense;
    this[S.visualDensity$2] = visualDensity;
    this[S.textDirection] = textDirection;
    this[S.titleBaselineType] = titleBaselineType;
    this[S.horizontalTitleGap$2] = horizontalTitleGap;
    this[S.minVerticalPadding$2] = minVerticalPadding;
    this[S.minLeadingWidth$2] = minLeadingWidth;
    this[S.subtitleBaselineType] = subtitleBaselineType;
    if (!(isThreeLine != null)) dart.assertFailed(null, I[24], 1238, 15, "isThreeLine != null");
    if (!(isDense != null)) dart.assertFailed(null, I[24], 1239, 15, "isDense != null");
    if (!(visualDensity != null)) dart.assertFailed(null, I[24], 1240, 15, "visualDensity != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[24], 1241, 15, "textDirection != null");
    if (!(titleBaselineType != null)) dart.assertFailed(null, I[24], 1242, 15, "titleBaselineType != null");
    if (!(horizontalTitleGap != null)) dart.assertFailed(null, I[24], 1243, 15, "horizontalTitleGap != null");
    if (!(minVerticalPadding != null)) dart.assertFailed(null, I[24], 1244, 15, "minVerticalPadding != null");
    if (!(minLeadingWidth != null)) dart.assertFailed(null, I[24], 1245, 15, "minLeadingWidth != null");
    list_tile._ListTile.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile._ListTile.prototype;
  dart.addTypeTests(list_tile._ListTile);
  dart.addTypeCaches(list_tile._ListTile);
  dart.setMethodSignature(list_tile._ListTile, () => ({
    __proto__: dart.getMethods(list_tile._ListTile.__proto__),
    createElement: dart.fnType(list_tile._ListTileElement, []),
    createRenderObject: dart.fnType(list_tile._RenderListTile, [framework.BuildContext])
  }));
  dart.setLibraryUri(list_tile._ListTile, I[25]);
  dart.setFieldSignature(list_tile._ListTile, () => ({
    __proto__: dart.getFields(list_tile._ListTile.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    title: dart.finalFieldType(framework.Widget),
    subtitle: dart.finalFieldType(dart.nullable(framework.Widget)),
    trailing: dart.finalFieldType(dart.nullable(framework.Widget)),
    isThreeLine: dart.finalFieldType(core.bool),
    isDense: dart.finalFieldType(core.bool),
    visualDensity: dart.finalFieldType(theme_data.VisualDensity),
    textDirection: dart.finalFieldType(ui.TextDirection),
    titleBaselineType: dart.finalFieldType(ui.TextBaseline),
    subtitleBaselineType: dart.finalFieldType(dart.nullable(ui.TextBaseline)),
    horizontalTitleGap: dart.finalFieldType(core.double),
    minVerticalPadding: dart.finalFieldType(core.double),
    minLeadingWidth: dart.finalFieldType(core.double)
  }));
  list_tile._ListTileElement = class _ListTileElement extends framework.RenderObjectElement {
    get widget() {
      return list_tile._ListTile.as(super.widget);
    }
    get renderObject() {
      return list_tile._RenderListTile.as(super.renderObject);
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(I[24], 1307, 37, "visitor");
      this.slotToChild[S.$values][S.$forEach](visitor);
    }
    forgetChild(child) {
      if (child == null) dart.nullFailed(I[24], 1312, 28, "child");
      if (!dart.test(this.slotToChild[S.$containsValue](child))) dart.assertFailed(null, I[24], 1313, 12, "slotToChild.containsValue(child)");
      if (!list_tile._ListTileSlot.is(child.slot)) dart.assertFailed(null, I[24], 1314, 12, "child.slot is _ListTileSlot");
      if (!dart.test(this.slotToChild[S.$containsKey](child.slot))) dart.assertFailed(null, I[24], 1315, 12, "slotToChild.containsKey(child.slot)");
      this.slotToChild[S.$remove](child.slot);
      super.forgetChild(child);
    }
    [S._mountChild](widget, slot) {
      if (slot == null) dart.nullFailed(I[24], 1320, 50, "slot");
      let oldChild = this.slotToChild[S.$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[S.$remove](slot);
      }
      if (newChild != null) {
        this.slotToChild[S.$_set](slot, newChild);
      }
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[S._mountChild](this.widget.leading, list_tile._ListTileSlot.leading);
      this[S._mountChild](this.widget.title, list_tile._ListTileSlot.title);
      this[S._mountChild](this.widget.subtitle, list_tile._ListTileSlot.subtitle);
      this[S._mountChild](this.widget.trailing, list_tile._ListTileSlot.trailing);
    }
    [S._updateChild](widget, slot) {
      if (slot == null) dart.nullFailed(I[24], 1340, 51, "slot");
      let oldChild = this.slotToChild[S.$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[S.$remove](slot);
      }
      if (newChild != null) {
        this.slotToChild[S.$_set](slot, newChild);
      }
    }
    update(newWidget) {
      list_tile._ListTile.as(newWidget);
      if (newWidget == null) dart.nullFailed(I[24], 1352, 25, "newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, I[24], 1354, 12, "widget == newWidget");
      this[S._updateChild](this.widget.leading, list_tile._ListTileSlot.leading);
      this[S._updateChild](this.widget.title, list_tile._ListTileSlot.title);
      this[S._updateChild](this.widget.subtitle, list_tile._ListTileSlot.subtitle);
      this[S._updateChild](this.widget.trailing, list_tile._ListTileSlot.trailing);
    }
    [S._updateRenderObject](child, slot) {
      if (slot == null) dart.nullFailed(I[24], 1361, 60, "slot");
      switch (slot) {
        case C[611] || CT.C611:
        {
          this.renderObject.leading = child;
          break;
        }
        case C[612] || CT.C612:
        {
          this.renderObject.title = child;
          break;
        }
        case C[613] || CT.C613:
        {
          this.renderObject.subtitle = child;
          break;
        }
        case C[614] || CT.C614:
        {
          this.renderObject.trailing = child;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    insertRenderObjectChild(child, slot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[24], 1379, 45, "child");
      list_tile._ListTileSlot.as(slot);
      if (slot == null) dart.nullFailed(I[24], 1379, 66, "slot");
      if (!box$.RenderBox.is(child)) dart.assertFailed(null, I[24], 1380, 12, "child is RenderBox");
      this[S._updateRenderObject](box$.RenderBox.as(child), slot);
      if (!dart.test(this.renderObject.children[S.$keys][S.$contains](slot))) dart.assertFailed(null, I[24], 1382, 12, "renderObject.children.keys.contains(slot)");
    }
    removeRenderObjectChild(child, slot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[24], 1386, 45, "child");
      list_tile._ListTileSlot.as(slot);
      if (slot == null) dart.nullFailed(I[24], 1386, 66, "slot");
      if (!box$.RenderBox.is(child)) dart.assertFailed(null, I[24], 1387, 12, "child is RenderBox");
      if (!dart.equals(this.renderObject.children[S.$_get](slot), child)) dart.assertFailed(null, I[24], 1388, 12, "renderObject.children[slot] == child");
      this[S._updateRenderObject](null, slot);
      if (!!dart.test(this.renderObject.children[S.$keys][S.$contains](slot))) dart.assertFailed(null, I[24], 1390, 12, "!renderObject.children.keys.contains(slot)");
    }
    moveRenderObjectChild(child, oldSlot, newSlot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[24], 1394, 43, "child");
      if (!false) dart.assertFailed("not reachable", I[24], 1395, 12, "false");
    }
  };
  (list_tile._ListTileElement.new = function(widget) {
    if (widget == null) dart.nullFailed(I[24], 1296, 30, "widget");
    this.slotToChild = new (T$.LinkedMapOf_ListTileSlot$Element()).new();
    list_tile._ListTileElement.__proto__.new.call(this, widget);
    ;
  }).prototype = list_tile._ListTileElement.prototype;
  dart.addTypeTests(list_tile._ListTileElement);
  dart.addTypeCaches(list_tile._ListTileElement);
  dart.setMethodSignature(list_tile._ListTileElement, () => ({
    __proto__: dart.getMethods(list_tile._ListTileElement.__proto__),
    [S._mountChild]: dart.fnType(dart.void, [dart.nullable(framework.Widget), list_tile._ListTileSlot]),
    [S._updateChild]: dart.fnType(dart.void, [dart.nullable(framework.Widget), list_tile._ListTileSlot]),
    [S._updateRenderObject]: dart.fnType(dart.void, [dart.nullable(box$.RenderBox), list_tile._ListTileSlot])
  }));
  dart.setGetterSignature(list_tile._ListTileElement, () => ({
    __proto__: dart.getGetters(list_tile._ListTileElement.__proto__),
    widget: list_tile._ListTile,
    renderObject: list_tile._RenderListTile
  }));
  dart.setLibraryUri(list_tile._ListTileElement, I[25]);
  dart.setFieldSignature(list_tile._ListTileElement, () => ({
    __proto__: dart.getFields(list_tile._ListTileElement.__proto__),
    slotToChild: dart.finalFieldType(core.Map$(list_tile._ListTileSlot, framework.Element))
  }));
  list_tile._RenderListTile = class _RenderListTile extends box$.RenderBox {
    [S._updateChild](oldChild, newChild, slot) {
      if (slot == null) dart.nullFailed(I[24], 1430, 83, "slot");
      if (oldChild != null) {
        this.dropChild(oldChild);
        this.children[S.$remove](slot);
      }
      if (newChild != null) {
        this.children[S.$_set](slot, newChild);
        this.adoptChild(newChild);
      }
      return newChild;
    }
    get leading() {
      return this[S._leading];
    }
    set leading(value) {
      this[S._leading] = this[S._updateChild](this[S._leading], value, list_tile._ListTileSlot.leading);
    }
    get title() {
      return this[S._title];
    }
    set title(value) {
      this[S._title] = this[S._updateChild](this[S._title], value, list_tile._ListTileSlot.title);
    }
    get subtitle() {
      return this[S._subtitle];
    }
    set subtitle(value) {
      this[S._subtitle] = this[S._updateChild](this[S._subtitle], value, list_tile._ListTileSlot.subtitle);
    }
    get trailing() {
      return this[S._trailing];
    }
    set trailing(value) {
      this[S._trailing] = this[S._updateChild](this[S._trailing], value, list_tile._ListTileSlot.trailing);
    }
    get [S._children]() {
      return new (T$.SyncIterableOfRenderBox()).new((function* _children() {
        if (this.leading != null) yield dart.nullCheck(this.leading);
        if (this.title != null) yield dart.nullCheck(this.title);
        if (this.subtitle != null) yield dart.nullCheck(this.subtitle);
        if (this.trailing != null) yield dart.nullCheck(this.trailing);
      }).bind(this));
    }
    get isDense() {
      return this[S._isDense];
    }
    set isDense(value) {
      if (value == null) dart.nullFailed(I[24], 1480, 20, "value");
      if (!(value != null)) dart.assertFailed(null, I[24], 1481, 12, "value != null");
      if (this[S._isDense] == value) return;
      this[S._isDense] = value;
      this.markNeedsLayout();
    }
    get visualDensity() {
      return this[S._visualDensity];
    }
    set visualDensity(value) {
      if (value == null) dart.nullFailed(I[24], 1490, 35, "value");
      if (!(value != null)) dart.assertFailed(null, I[24], 1491, 12, "value != null");
      if (dart.equals(this[S._visualDensity], value)) return;
      this[S._visualDensity] = value;
      this.markNeedsLayout();
    }
    get isThreeLine() {
      return this[S._isThreeLine];
    }
    set isThreeLine(value) {
      if (value == null) dart.nullFailed(I[24], 1500, 24, "value");
      if (!(value != null)) dart.assertFailed(null, I[24], 1501, 12, "value != null");
      if (this[S._isThreeLine] == value) return;
      this[S._isThreeLine] = value;
      this.markNeedsLayout();
    }
    get textDirection() {
      return this[S._textDirection$1];
    }
    set textDirection(value) {
      if (value == null) dart.nullFailed(I[24], 1510, 35, "value");
      if (!(value != null)) dart.assertFailed(null, I[24], 1511, 12, "value != null");
      if (this[S._textDirection$1] == value) return;
      this[S._textDirection$1] = value;
      this.markNeedsLayout();
    }
    get titleBaselineType() {
      return this[S._titleBaselineType];
    }
    set titleBaselineType(value) {
      if (value == null) dart.nullFailed(I[24], 1520, 38, "value");
      if (!(value != null)) dart.assertFailed(null, I[24], 1521, 12, "value != null");
      if (this[S._titleBaselineType] == value) return;
      this[S._titleBaselineType] = value;
      this.markNeedsLayout();
    }
    get subtitleBaselineType() {
      return this[S._subtitleBaselineType];
    }
    set subtitleBaselineType(value) {
      if (this[S._subtitleBaselineType] == value) return;
      this[S._subtitleBaselineType] = value;
      this.markNeedsLayout();
    }
    get horizontalTitleGap() {
      return this[S._horizontalTitleGap];
    }
    get [S._effectiveHorizontalTitleGap]() {
      return dart.notNull(this[S._horizontalTitleGap]) + dart.notNull(this.visualDensity.horizontal) * 2.0;
    }
    set horizontalTitleGap(value) {
      if (value == null) dart.nullFailed(I[24], 1541, 33, "value");
      if (!(value != null)) dart.assertFailed(null, I[24], 1542, 12, "value != null");
      if (this[S._horizontalTitleGap] == value) return;
      this[S._horizontalTitleGap] = value;
      this.markNeedsLayout();
    }
    get minVerticalPadding() {
      return this[S._minVerticalPadding];
    }
    set minVerticalPadding(value) {
      if (value == null) dart.nullFailed(I[24], 1552, 33, "value");
      if (!(value != null)) dart.assertFailed(null, I[24], 1553, 12, "value != null");
      if (this[S._minVerticalPadding] == value) return;
      this[S._minVerticalPadding] = value;
      this.markNeedsLayout();
    }
    get minLeadingWidth() {
      return this[S._minLeadingWidth];
    }
    set minLeadingWidth(value) {
      if (value == null) dart.nullFailed(I[24], 1563, 30, "value");
      if (!(value != null)) dart.assertFailed(null, I[24], 1564, 12, "value != null");
      if (this[S._minLeadingWidth] == value) return;
      this[S._minLeadingWidth] = value;
      this.markNeedsLayout();
    }
    attach(owner) {
      object.PipelineOwner.as(owner);
      if (owner == null) dart.nullFailed(I[24], 1572, 29, "owner");
      super.attach(owner);
      for (let child of this[S._children])
        child.attach(owner);
    }
    detach() {
      super.detach();
      for (let child of this[S._children])
        child.detach();
    }
    redepthChildren() {
      this[S._children][S.$forEach](dart.bind(this, 'redepthChild'));
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(I[24], 1591, 42, "visitor");
      this[S._children][S.$forEach](visitor);
    }
    debugDescribeChildren() {
      let value = T$.JSArrayOfDiagnosticsNode().of([]);
      function add(child, name) {
        if (name == null) dart.nullFailed(I[24], 1598, 39, "name");
        if (child != null) value[S.$add](child.toDiagnosticsNode({name: name}));
      }
      dart.fn(add, T$.RenderBoxNAndStringTovoid());
      add(this.leading, "leading");
      add(this.title, "title");
      add(this.subtitle, "subtitle");
      add(this.trailing, "trailing");
      return value;
    }
    get sizedByParent() {
      return false;
    }
    static _minWidth(box, height) {
      if (height == null) dart.nullFailed(I[24], 1612, 50, "height");
      return box == null ? 0.0 : box.getMinIntrinsicWidth(height);
    }
    static _maxWidth(box, height) {
      if (height == null) dart.nullFailed(I[24], 1616, 50, "height");
      return box == null ? 0.0 : box.getMaxIntrinsicWidth(height);
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[24], 1621, 42, "height");
      let leadingWidth = this.leading != null ? math.max(core.double, dart.nullCheck(this.leading).getMinIntrinsicWidth(height), this[S._minLeadingWidth]) + dart.notNull(this[S._effectiveHorizontalTitleGap]) : 0.0;
      return leadingWidth + math.max(core.num, list_tile._RenderListTile._minWidth(this.title, height), list_tile._RenderListTile._minWidth(this.subtitle, height)) + dart.notNull(list_tile._RenderListTile._maxWidth(this.trailing, height));
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[24], 1631, 42, "height");
      let leadingWidth = this.leading != null ? math.max(core.double, dart.nullCheck(this.leading).getMaxIntrinsicWidth(height), this[S._minLeadingWidth]) + dart.notNull(this[S._effectiveHorizontalTitleGap]) : 0.0;
      return leadingWidth + math.max(core.num, list_tile._RenderListTile._maxWidth(this.title, height), list_tile._RenderListTile._maxWidth(this.subtitle, height)) + dart.notNull(list_tile._RenderListTile._maxWidth(this.trailing, height));
    }
    get [S._defaultTileHeight]() {
      let hasSubtitle = this.subtitle != null;
      let isTwoLine = !dart.test(this.isThreeLine) && hasSubtitle;
      let isOneLine = !dart.test(this.isThreeLine) && !hasSubtitle;
      let baseDensity = this.visualDensity.baseSizeAdjustment;
      if (isOneLine) return (dart.test(this.isDense) ? 48.0 : 56.0) + dart.notNull(baseDensity.dy);
      if (isTwoLine) return (dart.test(this.isDense) ? 64.0 : 72.0) + dart.notNull(baseDensity.dy);
      return (dart.test(this.isDense) ? 76.0 : 88.0) + dart.notNull(baseDensity.dy);
    }
    computeMinIntrinsicHeight(width) {
      let t8, t8$;
      if (width == null) dart.nullFailed(I[24], 1654, 43, "width");
      return math.max(core.double, this[S._defaultTileHeight], dart.notNull(dart.nullCheck(this.title).getMinIntrinsicHeight(width)) + dart.notNull((t8$ = (t8 = this.subtitle, t8 == null ? null : t8.getMinIntrinsicHeight(width)), t8$ == null ? 0.0 : t8$)));
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[24], 1662, 43, "width");
      return this.computeMinIntrinsicHeight(width);
    }
    computeDistanceToActualBaseline(baseline) {
      if (baseline == null) dart.nullFailed(I[24], 1667, 55, "baseline");
      if (!(this.title != null)) dart.assertFailed(null, I[24], 1668, 12, "title != null");
      let parentData = box$.BoxParentData.as(dart.nullCheck(dart.nullCheck(this.title).parentData));
      return dart.notNull(parentData.offset.dy) + dart.nullCheck(dart.nullCheck(this.title).getDistanceToActualBaseline(baseline));
    }
    static _boxBaseline(box, baseline) {
      if (box == null) dart.nullFailed(I[24], 1673, 41, "box");
      if (baseline == null) dart.nullFailed(I[24], 1673, 59, "baseline");
      return box.getDistanceToBaseline(baseline);
    }
    static _layoutBox(box, constraints) {
      if (constraints == null) dart.nullFailed(I[24], 1677, 57, "constraints");
      if (box == null) return ui.Size.zero;
      box.layout(constraints, {parentUsesSize: true});
      return box.size;
    }
    static _positionBox(box, offset) {
      if (box == null) dart.nullFailed(I[24], 1684, 38, "box");
      if (offset == null) dart.nullFailed(I[24], 1684, 50, "offset");
      let parentData = box$.BoxParentData.as(dart.nullCheck(box.parentData));
      parentData.offset = offset;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[24], 1690, 40, "constraints");
      if (!dart.test(this.debugCannotComputeDryLayout({reason: "Layout requires baseline metrics, which are only available after a full layout."}))) dart.assertFailed(null, I[24], 1691, 12, "debugCannotComputeDryLayout(\r\n      reason: 'Layout requires baseline metrics, which are only available after a full layout.'\r\n    )");
      return ui.Size.zero;
    }
    performLayout() {
      let constraints = this.constraints;
      let hasLeading = this.leading != null;
      let hasSubtitle = this.subtitle != null;
      let hasTrailing = this.trailing != null;
      let isTwoLine = !dart.test(this.isThreeLine) && hasSubtitle;
      let isOneLine = !dart.test(this.isThreeLine) && !hasSubtitle;
      let densityAdjustment = this.visualDensity.baseSizeAdjustment;
      let maxIconHeightConstraint = new box$.BoxConstraints.new({maxHeight: (dart.test(this.isDense) ? 48.0 : 56.0) + dart.notNull(densityAdjustment.dy)});
      let looseConstraints = constraints.loosen();
      let iconConstraints = looseConstraints.enforce(maxIconHeightConstraint);
      let tileWidth = looseConstraints.maxWidth;
      let leadingSize = list_tile._RenderListTile._layoutBox(this.leading, iconConstraints);
      let trailingSize = list_tile._RenderListTile._layoutBox(this.trailing, iconConstraints);
      if (!(tileWidth != leadingSize.width || tileWidth === 0.0)) dart.assertFailed("Leading widget consumes entire tile width. Please use a sized widget, " + "or consider replacing ListTile with a custom widget " + "(see https://api.flutter.dev/flutter/material/ListTile-class.html#material.ListTile.4)", I[24], 1724, 7, "tileWidth != leadingSize.width || tileWidth == 0.0");
      if (!(tileWidth != trailingSize.width || tileWidth === 0.0)) dart.assertFailed("Trailing widget consumes entire tile width. Please use a sized widget, " + "or consider replacing ListTile with a custom widget " + "(see https://api.flutter.dev/flutter/material/ListTile-class.html#material.ListTile.4)", I[24], 1730, 7, "tileWidth != trailingSize.width || tileWidth == 0.0");
      let titleStart = hasLeading ? math.max(core.double, this[S._minLeadingWidth], leadingSize.width) + dart.notNull(this[S._effectiveHorizontalTitleGap]) : 0.0;
      let adjustedTrailingWidth = hasTrailing ? math.max(core.double, dart.notNull(trailingSize.width) + dart.notNull(this[S._effectiveHorizontalTitleGap]), 32.0) : 0.0;
      let textConstraints = looseConstraints.tighten({width: dart.notNull(tileWidth) - titleStart - adjustedTrailingWidth});
      let titleSize = list_tile._RenderListTile._layoutBox(this.title, textConstraints);
      let subtitleSize = list_tile._RenderListTile._layoutBox(this.subtitle, textConstraints);
      let titleBaseline = null;
      let subtitleBaseline = null;
      if (isTwoLine) {
        titleBaseline = dart.test(this.isDense) ? 28.0 : 32.0;
        subtitleBaseline = dart.test(this.isDense) ? 48.0 : 52.0;
      } else if (dart.test(this.isThreeLine)) {
        titleBaseline = dart.test(this.isDense) ? 22.0 : 28.0;
        subtitleBaseline = dart.test(this.isDense) ? 42.0 : 48.0;
      } else {
        if (!isOneLine) dart.assertFailed(null, I[24], 1757, 14, "isOneLine");
      }
      let defaultTileHeight = this[S._defaultTileHeight];
      let tileHeight = null;
      let titleY = null;
      let subtitleY = null;
      if (!hasSubtitle) {
        tileHeight = math.max(core.double, defaultTileHeight, dart.notNull(titleSize.height) + 2.0 * dart.notNull(this[S._minVerticalPadding]));
        titleY = (dart.notNull(tileHeight) - dart.notNull(titleSize.height)) / 2.0;
      } else {
        if (!(this.subtitleBaselineType != null)) dart.assertFailed(null, I[24], 1769, 14, "subtitleBaselineType != null");
        titleY = dart.nullCheck(titleBaseline) - dart.nullCheck(list_tile._RenderListTile._boxBaseline(dart.nullCheck(this.title), this.titleBaselineType));
        subtitleY = dart.nullCheck(subtitleBaseline) - dart.nullCheck(list_tile._RenderListTile._boxBaseline(dart.nullCheck(this.subtitle), dart.nullCheck(this.subtitleBaselineType))) + dart.notNull(this.visualDensity.vertical) * 2.0;
        tileHeight = defaultTileHeight;
        let titleOverlap = dart.notNull(titleY) + dart.notNull(titleSize.height) - dart.notNull(subtitleY);
        if (titleOverlap > 0.0) {
          titleY = dart.notNull(titleY) - titleOverlap / 2.0;
          subtitleY = dart.notNull(subtitleY) + titleOverlap / 2.0;
        }
        if (dart.notNull(titleY) < dart.notNull(this[S._minVerticalPadding]) || dart.notNull(subtitleY) + dart.notNull(subtitleSize.height) + dart.notNull(this[S._minVerticalPadding]) > dart.notNull(tileHeight)) {
          tileHeight = dart.notNull(titleSize.height) + dart.notNull(subtitleSize.height) + 2.0 * dart.notNull(this[S._minVerticalPadding]);
          titleY = this[S._minVerticalPadding];
          subtitleY = dart.notNull(titleSize.height) + dart.notNull(this[S._minVerticalPadding]);
        }
      }
      let leadingY = null;
      let trailingY = null;
      if (dart.notNull(tileHeight) > 72.0) {
        leadingY = 16.0;
        trailingY = 16.0;
      } else {
        leadingY = math.min(core.double, (dart.notNull(tileHeight) - dart.notNull(leadingSize.height)) / 2.0, 16.0);
        trailingY = (dart.notNull(tileHeight) - dart.notNull(trailingSize.height)) / 2.0;
      }
      switch (this.textDirection) {
        case C[328] || CT.C328:
        {
          {
            if (hasLeading) list_tile._RenderListTile._positionBox(dart.nullCheck(this.leading), new ui.Offset.new(dart.notNull(tileWidth) - dart.notNull(leadingSize.width), leadingY));
            list_tile._RenderListTile._positionBox(dart.nullCheck(this.title), new ui.Offset.new(adjustedTrailingWidth, titleY));
            if (hasSubtitle) list_tile._RenderListTile._positionBox(dart.nullCheck(this.subtitle), new ui.Offset.new(adjustedTrailingWidth, dart.nullCheck(subtitleY)));
            if (hasTrailing) list_tile._RenderListTile._positionBox(dart.nullCheck(this.trailing), new ui.Offset.new(0.0, trailingY));
            break;
          }
        }
        case C[329] || CT.C329:
        {
          {
            if (hasLeading) list_tile._RenderListTile._positionBox(dart.nullCheck(this.leading), new ui.Offset.new(0.0, leadingY));
            list_tile._RenderListTile._positionBox(dart.nullCheck(this.title), new ui.Offset.new(titleStart, titleY));
            if (hasSubtitle) list_tile._RenderListTile._positionBox(dart.nullCheck(this.subtitle), new ui.Offset.new(titleStart, dart.nullCheck(subtitleY)));
            if (hasTrailing) list_tile._RenderListTile._positionBox(dart.nullCheck(this.trailing), new ui.Offset.new(dart.notNull(tileWidth) - dart.notNull(trailingSize.width), trailingY));
            break;
          }
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      this.size = constraints.constrain(new ui.Size.new(tileWidth, tileHeight));
      if (!(this.size.width == constraints.constrainWidth(tileWidth))) dart.assertFailed(null, I[24], 1837, 12, "size.width == constraints.constrainWidth(tileWidth)");
      if (!(this.size.height == constraints.constrainHeight(tileHeight))) dart.assertFailed(null, I[24], 1838, 12, "size.height == constraints.constrainHeight(tileHeight)");
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(I[24], 1842, 30, "context");
      if (offset == null) dart.nullFailed(I[24], 1842, 46, "offset");
      function doPaint(child) {
        if (child != null) {
          let parentData = box$.BoxParentData.as(dart.nullCheck(child.parentData));
          context.paintChild(child, parentData.offset['+'](offset));
        }
      }
      dart.fn(doPaint, T$.RenderBoxNTovoid());
      doPaint(this.leading);
      doPaint(this.title);
      doPaint(this.subtitle);
      doPaint(this.trailing);
    }
    hitTestSelf(position) {
      if (position == null) dart.nullFailed(I[24], 1856, 27, "position");
      return true;
    }
    hitTestChildren(result, opts) {
      if (result == null) dart.nullFailed(I[24], 1859, 41, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[24], 1859, 67, "position");
      if (!(position != null)) dart.assertFailed(null, I[24], 1860, 12, "position != null");
      for (let child of this[S._children]) {
        let parentData = box$.BoxParentData.as(dart.nullCheck(child.parentData));
        let isHit = result.addWithPaintOffset({offset: parentData.offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (result == null) dart.nullFailed(I[24], 1866, 36, "result");
            if (transformed == null) dart.nullFailed(I[24], 1866, 51, "transformed");
            if (!dart.equals(transformed, position['-'](parentData.offset))) dart.assertFailed(null, I[24], 1867, 18, "transformed == position - parentData.offset");
            return child.hitTest(result, {position: transformed});
          }, T$.BoxHitTestResultAndOffsetTobool())});
        if (dart.test(isHit)) return true;
      }
      return false;
    }
  };
  (list_tile._RenderListTile.new = function(opts) {
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    if (isDense == null) dart.nullFailed(I[24], 1401, 19, "isDense");
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    if (visualDensity == null) dart.nullFailed(I[24], 1402, 28, "visualDensity");
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
    if (isThreeLine == null) dart.nullFailed(I[24], 1403, 19, "isThreeLine");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[24], 1404, 28, "textDirection");
    let titleBaselineType = opts && 'titleBaselineType' in opts ? opts.titleBaselineType : null;
    if (titleBaselineType == null) dart.nullFailed(I[24], 1405, 27, "titleBaselineType");
    let subtitleBaselineType = opts && 'subtitleBaselineType' in opts ? opts.subtitleBaselineType : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    if (horizontalTitleGap == null) dart.nullFailed(I[24], 1407, 21, "horizontalTitleGap");
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    if (minVerticalPadding == null) dart.nullFailed(I[24], 1408, 21, "minVerticalPadding");
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    if (minLeadingWidth == null) dart.nullFailed(I[24], 1409, 21, "minLeadingWidth");
    this.children = new (T$.LinkedMapOf_ListTileSlot$RenderBox()).new();
    this[S._leading] = null;
    this[S._title] = null;
    this[S._subtitle] = null;
    this[S._trailing] = null;
    if (!(isDense != null)) dart.assertFailed(null, I[24], 1410, 15, "isDense != null");
    if (!(visualDensity != null)) dart.assertFailed(null, I[24], 1411, 15, "visualDensity != null");
    if (!(isThreeLine != null)) dart.assertFailed(null, I[24], 1412, 15, "isThreeLine != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[24], 1413, 15, "textDirection != null");
    if (!(titleBaselineType != null)) dart.assertFailed(null, I[24], 1414, 15, "titleBaselineType != null");
    if (!(horizontalTitleGap != null)) dart.assertFailed(null, I[24], 1415, 15, "horizontalTitleGap != null");
    if (!(minVerticalPadding != null)) dart.assertFailed(null, I[24], 1416, 15, "minVerticalPadding != null");
    if (!(minLeadingWidth != null)) dart.assertFailed(null, I[24], 1417, 15, "minLeadingWidth != null");
    this[S._isDense] = isDense;
    this[S._visualDensity] = visualDensity;
    this[S._isThreeLine] = isThreeLine;
    this[S._textDirection$1] = textDirection;
    this[S._titleBaselineType] = titleBaselineType;
    this[S._subtitleBaselineType] = subtitleBaselineType;
    this[S._horizontalTitleGap] = horizontalTitleGap;
    this[S._minVerticalPadding] = minVerticalPadding;
    this[S._minLeadingWidth] = minLeadingWidth;
    list_tile._RenderListTile.__proto__.new.call(this);
    ;
  }).prototype = list_tile._RenderListTile.prototype;
  dart.addTypeTests(list_tile._RenderListTile);
  dart.addTypeCaches(list_tile._RenderListTile);
  dart.setMethodSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getMethods(list_tile._RenderListTile.__proto__),
    [S._updateChild]: dart.fnType(dart.nullable(box$.RenderBox), [dart.nullable(box$.RenderBox), dart.nullable(box$.RenderBox), list_tile._ListTileSlot]),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline])
  }));
  dart.setGetterSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getGetters(list_tile._RenderListTile.__proto__),
    leading: dart.nullable(box$.RenderBox),
    title: dart.nullable(box$.RenderBox),
    subtitle: dart.nullable(box$.RenderBox),
    trailing: dart.nullable(box$.RenderBox),
    [S._children]: core.Iterable$(box$.RenderBox),
    isDense: core.bool,
    visualDensity: theme_data.VisualDensity,
    isThreeLine: core.bool,
    textDirection: ui.TextDirection,
    titleBaselineType: ui.TextBaseline,
    subtitleBaselineType: dart.nullable(ui.TextBaseline),
    horizontalTitleGap: core.double,
    [S._effectiveHorizontalTitleGap]: core.double,
    minVerticalPadding: core.double,
    minLeadingWidth: core.double,
    [S._defaultTileHeight]: core.double
  }));
  dart.setSetterSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getSetters(list_tile._RenderListTile.__proto__),
    leading: dart.nullable(box$.RenderBox),
    title: dart.nullable(box$.RenderBox),
    subtitle: dart.nullable(box$.RenderBox),
    trailing: dart.nullable(box$.RenderBox),
    isDense: core.bool,
    visualDensity: theme_data.VisualDensity,
    isThreeLine: core.bool,
    textDirection: ui.TextDirection,
    titleBaselineType: ui.TextBaseline,
    subtitleBaselineType: dart.nullable(ui.TextBaseline),
    horizontalTitleGap: core.double,
    minVerticalPadding: core.double,
    minLeadingWidth: core.double
  }));
  dart.setLibraryUri(list_tile._RenderListTile, I[25]);
  dart.setFieldSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getFields(list_tile._RenderListTile.__proto__),
    children: dart.finalFieldType(core.Map$(list_tile._ListTileSlot, box$.RenderBox)),
    [S._leading]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S._title]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S._subtitle]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S._trailing]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S._isDense]: dart.fieldType(core.bool),
    [S._visualDensity]: dart.fieldType(theme_data.VisualDensity),
    [S._isThreeLine]: dart.fieldType(core.bool),
    [S._textDirection$1]: dart.fieldType(ui.TextDirection),
    [S._titleBaselineType]: dart.fieldType(ui.TextBaseline),
    [S._subtitleBaselineType]: dart.fieldType(dart.nullable(ui.TextBaseline)),
    [S._horizontalTitleGap]: dart.fieldType(core.double),
    [S._minVerticalPadding]: dart.fieldType(core.double),
    [S._minLeadingWidth]: dart.fieldType(core.double)
  }));
  drawer.DrawerAlignment = class DrawerAlignment extends core.Object {
    toString() {
      return this[S._name$9];
    }
  };
  (drawer.DrawerAlignment.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[26], 17, 6, "index");
    if (_name == null) dart.nullFailed(I[26], 17, 6, "_name");
    this.index = index;
    this[S._name$9] = _name;
    ;
  }).prototype = drawer.DrawerAlignment.prototype;
  dart.addTypeTests(drawer.DrawerAlignment);
  dart.addTypeCaches(drawer.DrawerAlignment);
  dart.setLibraryUri(drawer.DrawerAlignment, I[27]);
  dart.setFieldSignature(drawer.DrawerAlignment, () => ({
    __proto__: dart.getFields(drawer.DrawerAlignment.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$9]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(drawer.DrawerAlignment, ['toString']);
  drawer.DrawerAlignment.start = C[616] || CT.C616;
  drawer.DrawerAlignment.end = C[617] || CT.C617;
  drawer.DrawerAlignment.values = C[618] || CT.C618;
  drawer.Drawer = class Drawer extends framework.StatelessWidget {
    get elevation() {
      return this[S.elevation$2];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get child() {
      return this[S.child$2];
    }
    set child(value) {
      super.child = value;
    }
    get semanticLabel() {
      return this[S.semanticLabel];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    build(context) {
      let t8;
      if (context == null) dart.nullFailed(I[26], 177, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[26], 178, 12, "debugCheckHasMaterialLocalizations(context)");
      let label = this.semanticLabel;
      switch (theme$.Theme.of(context).platform) {
        case C[48] || CT.C48:
        case C[49] || CT.C49:
        {
          break;
        }
        case C[44] || CT.C44:
        case C[45] || CT.C45:
        case C[46] || CT.C46:
        case C[47] || CT.C47:
        {
          label = (t8 = this.semanticLabel, t8 == null ? material_localizations.MaterialLocalizations.of(context).drawerLabel : t8);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new basic.Semantics.new({scopesRoute: true, namesRoute: true, explicitChildNodes: true, label: label, child: new basic.ConstrainedBox.new({constraints: C[619] || CT.C619, child: new material.Material.new({elevation: this.elevation, child: this.child, $creationLocationd_0dea112b090073317d4: C[620] || CT.C620}), $creationLocationd_0dea112b090073317d4: C[624] || CT.C624}), $creationLocationd_0dea112b090073317d4: C[628] || CT.C628});
    }
  };
  (drawer.Drawer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 16;
    if (elevation == null) dart.nullFailed(I[26], 143, 10, "elevation");
    let child = opts && 'child' in opts ? opts.child : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.elevation$2] = elevation;
    this[S.child$2] = child;
    this[S.semanticLabel] = semanticLabel;
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[26], 146, 15, "elevation != null && elevation >= 0.0");
    drawer.Drawer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = drawer.Drawer.prototype;
  dart.addTypeTests(drawer.Drawer);
  dart.addTypeCaches(drawer.Drawer);
  dart.setMethodSignature(drawer.Drawer, () => ({
    __proto__: dart.getMethods(drawer.Drawer.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(drawer.Drawer, I[27]);
  dart.setFieldSignature(drawer.Drawer, () => ({
    __proto__: dart.getFields(drawer.Drawer.__proto__),
    elevation: dart.finalFieldType(core.double),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    semanticLabel: dart.finalFieldType(dart.nullable(core.String))
  }));
  drawer.DrawerController = class DrawerController extends framework.StatefulWidget {
    get child() {
      return this[S.child$3];
    }
    set child(value) {
      super.child = value;
    }
    get alignment() {
      return this[S.alignment$1];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get drawerCallback() {
      return this[S.drawerCallback];
    }
    set drawerCallback(value) {
      super.drawerCallback = value;
    }
    get dragStartBehavior() {
      return this[S.dragStartBehavior];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get scrimColor() {
      return this[S.scrimColor];
    }
    set scrimColor(value) {
      super.scrimColor = value;
    }
    get enableOpenDragGesture() {
      return this[S.enableOpenDragGesture];
    }
    set enableOpenDragGesture(value) {
      super.enableOpenDragGesture = value;
    }
    get edgeDragWidth() {
      return this[S.edgeDragWidth];
    }
    set edgeDragWidth(value) {
      super.edgeDragWidth = value;
    }
    get isDrawerOpen() {
      return this[S.isDrawerOpen];
    }
    set isDrawerOpen(value) {
      super.isDrawerOpen = value;
    }
    createState() {
      return new drawer.DrawerControllerState.new();
    }
  };
  (drawer.DrawerController.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[26], 232, 19, "child");
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    if (alignment == null) dart.nullFailed(I[26], 233, 19, "alignment");
    let isDrawerOpen = opts && 'isDrawerOpen' in opts ? opts.isDrawerOpen : false;
    if (isDrawerOpen == null) dart.nullFailed(I[26], 234, 10, "isDrawerOpen");
    let drawerCallback = opts && 'drawerCallback' in opts ? opts.drawerCallback : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[635] || CT.C635;
    if (dragStartBehavior == null) dart.nullFailed(I[26], 236, 10, "dragStartBehavior");
    let scrimColor = opts && 'scrimColor' in opts ? opts.scrimColor : null;
    let edgeDragWidth = opts && 'edgeDragWidth' in opts ? opts.edgeDragWidth : null;
    let enableOpenDragGesture = opts && 'enableOpenDragGesture' in opts ? opts.enableOpenDragGesture : true;
    if (enableOpenDragGesture == null) dart.nullFailed(I[26], 239, 10, "enableOpenDragGesture");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.child$3] = child;
    this[S.alignment$1] = alignment;
    this[S.isDrawerOpen] = isDrawerOpen;
    this[S.drawerCallback] = drawerCallback;
    this[S.dragStartBehavior] = dragStartBehavior;
    this[S.scrimColor] = scrimColor;
    this[S.edgeDragWidth] = edgeDragWidth;
    this[S.enableOpenDragGesture] = enableOpenDragGesture;
    if (!(child != null)) dart.assertFailed(null, I[26], 240, 15, "child != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, I[26], 241, 15, "dragStartBehavior != null");
    if (!(alignment != null)) dart.assertFailed(null, I[26], 242, 15, "alignment != null");
    drawer.DrawerController.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = drawer.DrawerController.prototype;
  dart.addTypeTests(drawer.DrawerController);
  dart.addTypeCaches(drawer.DrawerController);
  dart.setMethodSignature(drawer.DrawerController, () => ({
    __proto__: dart.getMethods(drawer.DrawerController.__proto__),
    createState: dart.fnType(drawer.DrawerControllerState, [])
  }));
  dart.setLibraryUri(drawer.DrawerController, I[27]);
  dart.setFieldSignature(drawer.DrawerController, () => ({
    __proto__: dart.getFields(drawer.DrawerController.__proto__),
    child: dart.finalFieldType(framework.Widget),
    alignment: dart.finalFieldType(drawer.DrawerAlignment),
    drawerCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    scrimColor: dart.finalFieldType(dart.nullable(ui.Color)),
    enableOpenDragGesture: dart.finalFieldType(core.bool),
    edgeDragWidth: dart.finalFieldType(dart.nullable(core.double)),
    isDrawerOpen: dart.finalFieldType(core.bool)
  }));
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(drawer.DrawerController) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(drawer.DrawerController)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(drawer.DrawerController));
  drawer.DrawerControllerState = class DrawerControllerState extends State_SingleTickerProviderStateMixin$36 {
    initState() {
      let t8;
      super.initState();
      this[S._scrimColorTween] = this[S._buildScrimColorTween]();
      this[S._controller$2] = new animation_controller.AnimationController.new({value: dart.test(this.widget.isDrawerOpen) ? 1.0 : 0.0, duration: drawer._kBaseSettleDuration, vsync: this});
      t8 = this[S._controller$2];
      (() => {
        t8.addListener(dart.bind(this, S._animationChanged));
        t8.addStatusListener(dart.bind(this, S._animationStatusChanged));
        return t8;
      })();
    }
    dispose() {
      let t8;
      t8 = this[S._historyEntry];
      t8 == null ? null : t8.remove();
      this[S._controller$2].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      drawer.DrawerController.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[26], 340, 41, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.scrimColor, oldWidget.scrimColor)) this[S._scrimColorTween] = this[S._buildScrimColorTween]();
      if (this.widget.isDrawerOpen != oldWidget.isDrawerOpen) {
        switch (this[S._controller$2].status) {
          case C[207] || CT.C207:
          case C[204] || CT.C204:
          {
            this[S._controller$2].value = dart.test(this.widget.isDrawerOpen) ? 1.0 : 0.0;
            break;
          }
          default:
          {
            break;
          }
        }
      }
    }
    [S._animationChanged]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    [S._ensureHistoryEntry]() {
      if (this[S._historyEntry] == null) {
        let route = routes.ModalRoute.of(T$.ObjectN(), this.context);
        if (route != null) {
          this[S._historyEntry] = new routes.LocalHistoryEntry.new({onRemove: dart.bind(this, S._handleHistoryEntryRemoved)});
          route.addLocalHistoryEntry(dart.nullCheck(this[S._historyEntry]));
          focus_scope.FocusScope.of(this.context).setFirstFocus(this[S._focusScopeNode]);
        }
      }
    }
    [S._animationStatusChanged](status) {
      let t8;
      if (status == null) dart.nullFailed(I[26], 376, 48, "status");
      switch (status) {
        case C[205] || CT.C205:
        {
          this[S._ensureHistoryEntry]();
          break;
        }
        case C[206] || CT.C206:
        {
          t8 = this[S._historyEntry];
          t8 == null ? null : t8.remove();
          this[S._historyEntry] = null;
          break;
        }
        case C[204] || CT.C204:
        {
          break;
        }
        case C[207] || CT.C207:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S._handleHistoryEntryRemoved]() {
      this[S._historyEntry] = null;
      this.close();
    }
    get [S._controller$2]() {
      let t8;
      return dart.test(this[S.__DrawerControllerState__controller_isSet]) ? (t8 = this[S.__DrawerControllerState__controller], t8) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S._controller$2](t8) {
      if (t8 == null) dart.nullFailed(I[26], 397, 28, "null");
      this[S.__DrawerControllerState__controller_isSet] = true;
      this[S.__DrawerControllerState__controller] = t8;
    }
    [S._handleDragDown](details) {
      if (details == null) dart.nullFailed(I[26], 399, 40, "details");
      this[S._controller$2].stop();
      this[S._ensureHistoryEntry]();
    }
    [S._handleDragCancel]() {
      if (dart.test(this[S._controller$2].isDismissed) || dart.test(this[S._controller$2].isAnimating)) return;
      if (dart.notNull(this[S._controller$2].value) < 0.5) {
        this.close();
      } else {
        this.open();
      }
    }
    get [S._width]() {
      let t9;
      let box = T$.RenderBoxN().as((t9 = this[S._drawerKey].currentContext, t9 == null ? null : t9.findRenderObject()));
      if (box != null) return box.size.width;
      return 304;
    }
    [S._move](details) {
      let t9, t9$;
      if (details == null) dart.nullFailed(I[26], 425, 32, "details");
      let delta = dart.nullCheck(details.primaryDelta) / dart.notNull(this[S._width]);
      switch (this.widget.alignment) {
        case C[616] || CT.C616:
        {
          break;
        }
        case C[617] || CT.C617:
        {
          delta = -delta;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      switch (basic.Directionality.of(this.context)) {
        case C[328] || CT.C328:
        {
          t9 = this[S._controller$2];
          t9.value = dart.notNull(t9.value) - delta;
          break;
        }
        case C[329] || CT.C329:
        {
          t9$ = this[S._controller$2];
          t9$.value = dart.notNull(t9$.value) + delta;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let opened = dart.notNull(this[S._controller$2].value) > 0.5;
      if (opened !== this[S._previouslyOpened] && this.widget.drawerCallback != null) dart.nullCheck(this.widget.drawerCallback)(opened);
      this[S._previouslyOpened] = opened;
    }
    [S._settle](details) {
      if (details == null) dart.nullFailed(I[26], 449, 31, "details");
      if (dart.test(this[S._controller$2].isDismissed)) return;
      if (details.velocity.pixelsPerSecond.dx[S.$abs]() >= 365) {
        let visualVelocity = dart.notNull(details.velocity.pixelsPerSecond.dx) / dart.notNull(this[S._width]);
        switch (this.widget.alignment) {
          case C[616] || CT.C616:
          {
            break;
          }
          case C[617] || CT.C617:
          {
            visualVelocity = -visualVelocity;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        switch (basic.Directionality.of(this.context)) {
          case C[328] || CT.C328:
          {
            this[S._controller$2].fling({velocity: -visualVelocity});
            if (this.widget.drawerCallback != null) dart.nullCheck(this.widget.drawerCallback)(visualVelocity < 0.0);
            break;
          }
          case C[329] || CT.C329:
          {
            this[S._controller$2].fling({velocity: visualVelocity});
            if (this.widget.drawerCallback != null) dart.nullCheck(this.widget.drawerCallback)(visualVelocity > 0.0);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      } else if (dart.notNull(this[S._controller$2].value) < 0.5) {
        this.close();
      } else {
        this.open();
      }
    }
    open() {
      this[S._controller$2].fling({velocity: 1.0});
      if (this.widget.drawerCallback != null) dart.nullCheck(this.widget.drawerCallback)(true);
    }
    close() {
      this[S._controller$2].fling({velocity: -1.0});
      if (this.widget.drawerCallback != null) dart.nullCheck(this.widget.drawerCallback)(false);
    }
    get [S._scrimColorTween]() {
      let t9;
      return dart.test(this[S.__DrawerControllerState__scrimColorTween_isSet]) ? (t9 = this[S.__DrawerControllerState__scrimColorTween], t9) : dart.throw(new _internal.LateError.fieldNI("_scrimColorTween"));
    }
    set [S._scrimColorTween](t9) {
      if (t9 == null) dart.nullFailed(I[26], 496, 19, "null");
      this[S.__DrawerControllerState__scrimColorTween_isSet] = true;
      this[S.__DrawerControllerState__scrimColorTween] = t9;
    }
    [S._buildScrimColorTween]() {
      let t10;
      return new tween.ColorTween.new({begin: colors$.Colors.transparent, end: (t10 = this.widget.scrimColor, t10 == null ? colors$.Colors.black54 : t10)});
    }
    get [S._drawerOuterAlignment]() {
      if (!(this.widget.alignment != null)) dart.assertFailed(null, I[26], 504, 12, "widget.alignment != null");
      switch (this.widget.alignment) {
        case C[616] || CT.C616:
        {
          return alignment.AlignmentDirectional.centerStart;
        }
        case C[617] || CT.C617:
        {
          return alignment.AlignmentDirectional.centerEnd;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    get [S._drawerInnerAlignment]() {
      if (!(this.widget.alignment != null)) dart.assertFailed(null, I[26], 514, 12, "widget.alignment != null");
      switch (this.widget.alignment) {
        case C[616] || CT.C616:
        {
          return alignment.AlignmentDirectional.centerEnd;
        }
        case C[617] || CT.C617:
        {
          return alignment.AlignmentDirectional.centerStart;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S._buildDrawer](context) {
      if (context == null) dart.nullFailed(I[26], 523, 36, "context");
      let drawerIsStart = this.widget.alignment == drawer.DrawerAlignment.start;
      let padding = media_query.MediaQuery.of(context).padding;
      let textDirection = basic.Directionality.of(context);
      let dragAreaWidth = this.widget.edgeDragWidth;
      if (this.widget.edgeDragWidth == null) {
        switch (textDirection) {
          case C[329] || CT.C329:
          {
            dragAreaWidth = 20 + dart.notNull(drawerIsStart ? padding.left : padding.right);
            break;
          }
          case C[328] || CT.C328:
          {
            dragAreaWidth = 20 + dart.notNull(drawerIsStart ? padding.right : padding.left);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      if (this[S._controller$2].status == animation.AnimationStatus.dismissed) {
        if (dart.test(this.widget.enableOpenDragGesture)) {
          return new basic.Align.new({alignment: this[S._drawerOuterAlignment], child: new gesture_detector.GestureDetector.new({key: this[S._gestureDetectorKey], onHorizontalDragUpdate: dart.bind(this, S._move), onHorizontalDragEnd: dart.bind(this, S._settle), behavior: proxy_box.HitTestBehavior.translucent, excludeFromSemantics: true, dragStartBehavior: this.widget.dragStartBehavior, child: new container.Container.new({width: dragAreaWidth, $creationLocationd_0dea112b090073317d4: C[636] || CT.C636}), $creationLocationd_0dea112b090073317d4: C[639] || CT.C639}), $creationLocationd_0dea112b090073317d4: C[648] || CT.C648});
        } else {
          return C[652] || CT.C652;
        }
      } else {
        let platformHasBackButton = null;
        switch (theme$.Theme.of(context).platform) {
          case C[44] || CT.C44:
          {
            platformHasBackButton = true;
            break;
          }
          case C[48] || CT.C48:
          case C[49] || CT.C49:
          case C[45] || CT.C45:
          case C[46] || CT.C46:
          case C[47] || CT.C47:
          {
            platformHasBackButton = false;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        if (!(platformHasBackButton != null)) dart.assertFailed(null, I[26], 573, 14, "platformHasBackButton != null");
        return new gesture_detector.GestureDetector.new({key: this[S._gestureDetectorKey], onHorizontalDragDown: dart.bind(this, S._handleDragDown), onHorizontalDragUpdate: dart.bind(this, S._move), onHorizontalDragEnd: dart.bind(this, S._settle), onHorizontalDragCancel: dart.bind(this, S._handleDragCancel), excludeFromSemantics: true, dragStartBehavior: this.widget.dragStartBehavior, child: new basic.RepaintBoundary.new({child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new basic.BlockSemantics.new({child: new basic.ExcludeSemantics.new({excluding: platformHasBackButton, child: new gesture_detector.GestureDetector.new({onTap: dart.bind(this, 'close'), child: new basic.Semantics.new({label: material_localizations.MaterialLocalizations.of(context).modalBarrierDismissLabel, child: new basic.MouseRegion.new({opaque: true, child: new container.Container.new({color: this[S._scrimColorTween].evaluate(this[S._controller$2]), $creationLocationd_0dea112b090073317d4: C[654] || CT.C654}), $creationLocationd_0dea112b090073317d4: C[657] || CT.C657}), $creationLocationd_0dea112b090073317d4: C[661] || CT.C661}), $creationLocationd_0dea112b090073317d4: C[665] || CT.C665}), $creationLocationd_0dea112b090073317d4: C[669] || CT.C669}), $creationLocationd_0dea112b090073317d4: C[673] || CT.C673}), new basic.Align.new({alignment: this[S._drawerOuterAlignment], child: new basic.Align.new({alignment: this[S._drawerInnerAlignment], widthFactor: this[S._controller$2].value, child: new basic.RepaintBoundary.new({child: new focus_scope.FocusScope.new({key: this[S._drawerKey], node: this[S._focusScopeNode], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[676] || CT.C676}), $creationLocationd_0dea112b090073317d4: C[681] || CT.C681}), $creationLocationd_0dea112b090073317d4: C[684] || CT.C684}), $creationLocationd_0dea112b090073317d4: C[689] || CT.C689})]), $creationLocationd_0dea112b090073317d4: C[693] || CT.C693}), $creationLocationd_0dea112b090073317d4: C[696] || CT.C696}), $creationLocationd_0dea112b090073317d4: C[699] || CT.C699});
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[26], 625, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[26], 626, 12, "debugCheckHasMaterialLocalizations(context)");
      return new list_tile.ListTileTheme.new({style: list_tile.ListTileStyle.drawer, child: this[S._buildDrawer](context), $creationLocationd_0dea112b090073317d4: C[709] || CT.C709});
    }
  };
  (drawer.DrawerControllerState.new = function() {
    this[S._historyEntry] = null;
    this[S._focusScopeNode] = new focus_manager.FocusScopeNode.new();
    this[S.__DrawerControllerState__controller] = null;
    this[S.__DrawerControllerState__controller_isSet] = false;
    this[S._drawerKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    this[S._previouslyOpened] = false;
    this[S.__DrawerControllerState__scrimColorTween] = null;
    this[S.__DrawerControllerState__scrimColorTween_isSet] = false;
    this[S._gestureDetectorKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    drawer.DrawerControllerState.__proto__.new.call(this);
    ;
  }).prototype = drawer.DrawerControllerState.prototype;
  dart.addTypeTests(drawer.DrawerControllerState);
  dart.addTypeCaches(drawer.DrawerControllerState);
  dart.setMethodSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getMethods(drawer.DrawerControllerState.__proto__),
    [S._animationChanged]: dart.fnType(dart.void, []),
    [S._ensureHistoryEntry]: dart.fnType(dart.void, []),
    [S._animationStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [S._handleHistoryEntryRemoved]: dart.fnType(dart.void, []),
    [S._handleDragDown]: dart.fnType(dart.void, [drag_details.DragDownDetails]),
    [S._handleDragCancel]: dart.fnType(dart.void, []),
    [S._move]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [S._settle]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    open: dart.fnType(dart.void, []),
    close: dart.fnType(dart.void, []),
    [S._buildScrimColorTween]: dart.fnType(tween.ColorTween, []),
    [S._buildDrawer]: dart.fnType(framework.Widget, [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getGetters(drawer.DrawerControllerState.__proto__),
    [S._controller$2]: animation_controller.AnimationController,
    [S._width]: core.double,
    [S._scrimColorTween]: tween.ColorTween,
    [S._drawerOuterAlignment]: alignment.AlignmentDirectional,
    [S._drawerInnerAlignment]: alignment.AlignmentDirectional
  }));
  dart.setSetterSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getSetters(drawer.DrawerControllerState.__proto__),
    [S._controller$2]: animation_controller.AnimationController,
    [S._scrimColorTween]: tween.ColorTween
  }));
  dart.setLibraryUri(drawer.DrawerControllerState, I[27]);
  dart.setFieldSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getFields(drawer.DrawerControllerState.__proto__),
    [S._historyEntry]: dart.fieldType(dart.nullable(routes.LocalHistoryEntry)),
    [S._focusScopeNode]: dart.finalFieldType(focus_manager.FocusScopeNode),
    [S.__DrawerControllerState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.__DrawerControllerState__controller_isSet]: dart.fieldType(core.bool),
    [S._drawerKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S._previouslyOpened]: dart.fieldType(core.bool),
    [S.__DrawerControllerState__scrimColorTween]: dart.fieldType(dart.nullable(tween.ColorTween)),
    [S.__DrawerControllerState__scrimColorTween_isSet]: dart.fieldType(core.bool),
    [S._gestureDetectorKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  dart.defineLazy(drawer, {
    /*drawer._kWidth*/get _kWidth() {
      return 304;
    },
    /*drawer._kEdgeDragWidth*/get _kEdgeDragWidth() {
      return 20;
    },
    /*drawer._kMinFlingVelocity*/get _kMinFlingVelocity() {
      return 365;
    },
    /*drawer._kBaseSettleDuration*/get _kBaseSettleDuration() {
      return C[713] || CT.C713;
    }
  }, false);
  divider.Divider = class Divider extends framework.StatelessWidget {
    get height() {
      return this[S.height];
    }
    set height(value) {
      super.height = value;
    }
    get thickness() {
      return this[S.thickness];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[S.indent];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[S.endIndent];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    get color() {
      return this[S.color$3];
    }
    set color(value) {
      super.color = value;
    }
    static createBorderSide(context, opts) {
      let t11, t10, t10$, t10$0;
      let color = opts && 'color' in opts ? opts.color : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let effectiveColor = (t10 = color, t10 == null ? context != null ? (t11 = divider_theme.DividerTheme.of(context).color, t11 == null ? theme$.Theme.of(context).dividerColor : t11) : null : t10);
      let effectiveWidth = (t10$0 = (t10$ = width, t10$ == null ? context != null ? divider_theme.DividerTheme.of(context).thickness : null : t10$), t10$0 == null ? 0.0 : t10$0);
      if (effectiveColor == null) {
        return new borders.BorderSide.new({width: effectiveWidth});
      }
      return new borders.BorderSide.new({color: effectiveColor, width: effectiveWidth});
    }
    build(context) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5;
      if (context == null) dart.nullFailed(I[28], 201, 29, "context");
      let dividerTheme = divider_theme.DividerTheme.of(context);
      let height = (t10$ = (t10 = this.height, t10 == null ? dividerTheme.space : t10), t10$ == null ? 16.0 : t10$);
      let thickness = (t10$1 = (t10$0 = this.thickness, t10$0 == null ? dividerTheme.thickness : t10$0), t10$1 == null ? 0.0 : t10$1);
      let indent = (t10$3 = (t10$2 = this.indent, t10$2 == null ? dividerTheme.indent : t10$2), t10$3 == null ? 0.0 : t10$3);
      let endIndent = (t10$5 = (t10$4 = this.endIndent, t10$4 == null ? dividerTheme.endIndent : t10$4), t10$5 == null ? 0.0 : t10$5);
      return new basic.SizedBox.new({height: height, child: new basic.Center.new({child: new container.Container.new({height: thickness, margin: new edge_insets.EdgeInsetsDirectional.only({start: indent, end: endIndent}), decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({bottom: divider.Divider.createBorderSide(context, {color: this.color, width: thickness})})}), $creationLocationd_0dea112b090073317d4: C[714] || CT.C714}), $creationLocationd_0dea112b090073317d4: C[719] || CT.C719}), $creationLocationd_0dea112b090073317d4: C[722] || CT.C722});
    }
  };
  (divider.Divider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.height] = height;
    this[S.thickness] = thickness;
    this[S.indent] = indent;
    this[S.endIndent] = endIndent;
    this[S.color$3] = color;
    if (!(height == null || dart.notNull(height) >= 0.0)) dart.assertFailed(null, I[28], 99, 15, "height == null || height >= 0.0");
    if (!(thickness == null || dart.notNull(thickness) >= 0.0)) dart.assertFailed(null, I[28], 100, 15, "thickness == null || thickness >= 0.0");
    if (!(indent == null || dart.notNull(indent) >= 0.0)) dart.assertFailed(null, I[28], 101, 15, "indent == null || indent >= 0.0");
    if (!(endIndent == null || dart.notNull(endIndent) >= 0.0)) dart.assertFailed(null, I[28], 102, 15, "endIndent == null || endIndent >= 0.0");
    divider.Divider.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider.Divider.prototype;
  dart.addTypeTests(divider.Divider);
  dart.addTypeCaches(divider.Divider);
  dart.setMethodSignature(divider.Divider, () => ({
    __proto__: dart.getMethods(divider.Divider.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(divider.Divider, I[29]);
  dart.setFieldSignature(divider.Divider, () => ({
    __proto__: dart.getFields(divider.Divider.__proto__),
    height: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    indent: dart.finalFieldType(dart.nullable(core.double)),
    endIndent: dart.finalFieldType(dart.nullable(core.double)),
    color: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  divider.VerticalDivider = class VerticalDivider extends framework.StatelessWidget {
    get width() {
      return this[S.width$1];
    }
    set width(value) {
      super.width = value;
    }
    get thickness() {
      return this[S.thickness$1];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[S.indent$1];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[S.endIndent$1];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    get color() {
      return this[S.color$4];
    }
    set color(value) {
      super.color = value;
    }
    build(context) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5;
      if (context == null) dart.nullFailed(I[28], 302, 29, "context");
      let dividerTheme = divider_theme.DividerTheme.of(context);
      let width = (t10$ = (t10 = this.width, t10 == null ? dividerTheme.space : t10), t10$ == null ? 16.0 : t10$);
      let thickness = (t10$1 = (t10$0 = this.thickness, t10$0 == null ? dividerTheme.thickness : t10$0), t10$1 == null ? 0.0 : t10$1);
      let indent = (t10$3 = (t10$2 = this.indent, t10$2 == null ? dividerTheme.indent : t10$2), t10$3 == null ? 0.0 : t10$3);
      let endIndent = (t10$5 = (t10$4 = this.endIndent, t10$4 == null ? dividerTheme.endIndent : t10$4), t10$5 == null ? 0.0 : t10$5);
      return new basic.SizedBox.new({width: width, child: new basic.Center.new({child: new container.Container.new({width: thickness, margin: new edge_insets.EdgeInsetsDirectional.only({top: indent, bottom: endIndent}), decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({left: divider.Divider.createBorderSide(context, {color: this.color, width: thickness})})}), $creationLocationd_0dea112b090073317d4: C[726] || CT.C726}), $creationLocationd_0dea112b090073317d4: C[731] || CT.C731}), $creationLocationd_0dea112b090073317d4: C[734] || CT.C734});
    }
  };
  (divider.VerticalDivider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.width$1] = width;
    this[S.thickness$1] = thickness;
    this[S.indent$1] = indent;
    this[S.endIndent$1] = endIndent;
    this[S.color$4] = color;
    if (!(width == null || dart.notNull(width) >= 0.0)) dart.assertFailed(null, I[28], 250, 15, "width == null || width >= 0.0");
    if (!(thickness == null || dart.notNull(thickness) >= 0.0)) dart.assertFailed(null, I[28], 251, 15, "thickness == null || thickness >= 0.0");
    if (!(indent == null || dart.notNull(indent) >= 0.0)) dart.assertFailed(null, I[28], 252, 15, "indent == null || indent >= 0.0");
    if (!(endIndent == null || dart.notNull(endIndent) >= 0.0)) dart.assertFailed(null, I[28], 253, 15, "endIndent == null || endIndent >= 0.0");
    divider.VerticalDivider.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider.VerticalDivider.prototype;
  dart.addTypeTests(divider.VerticalDivider);
  dart.addTypeCaches(divider.VerticalDivider);
  dart.setMethodSignature(divider.VerticalDivider, () => ({
    __proto__: dart.getMethods(divider.VerticalDivider.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(divider.VerticalDivider, I[29]);
  dart.setFieldSignature(divider.VerticalDivider, () => ({
    __proto__: dart.getFields(divider.VerticalDivider.__proto__),
    width: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    indent: dart.finalFieldType(dart.nullable(core.double)),
    endIndent: dart.finalFieldType(dart.nullable(core.double)),
    color: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dialog.Dialog = class Dialog extends framework.StatelessWidget {
    get backgroundColor() {
      return this[S.backgroundColor$2];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S.elevation$3];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get insetAnimationDuration() {
      return this[S.insetAnimationDuration];
    }
    set insetAnimationDuration(value) {
      super.insetAnimationDuration = value;
    }
    get insetAnimationCurve() {
      return this[S.insetAnimationCurve];
    }
    set insetAnimationCurve(value) {
      super.insetAnimationCurve = value;
    }
    get insetPadding() {
      return this[S.insetPadding];
    }
    set insetPadding(value) {
      super.insetPadding = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$2];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get shape() {
      return this[S.shape$4];
    }
    set shape(value) {
      super.shape = value;
    }
    get child() {
      return this[S.child$4];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4;
      if (context == null) dart.nullFailed(I[30], 129, 29, "context");
      let dialogTheme = dialog_theme.DialogTheme.of(context);
      let effectivePadding = media_query.MediaQuery.of(context).viewInsets['+']((t10 = this.insetPadding, t10 == null ? edge_insets.EdgeInsets.zero : t10));
      return new implicit_animations.AnimatedPadding.new({padding: effectivePadding, duration: this.insetAnimationDuration, curve: this.insetAnimationCurve, child: media_query.MediaQuery.removeViewInsets({removeLeft: true, removeTop: true, removeRight: true, removeBottom: true, context: context, child: new basic.Center.new({child: new basic.ConstrainedBox.new({constraints: C[741] || CT.C741, child: new material.Material.new({color: (t10$0 = (t10$ = this.backgroundColor, t10$ == null ? dialogTheme.backgroundColor : t10$), t10$0 == null ? theme$.Theme.of(context).dialogBackgroundColor : t10$0), elevation: (t10$2 = (t10$1 = this.elevation, t10$1 == null ? dialogTheme.elevation : t10$1), t10$2 == null ? 24 : t10$2), shape: (t10$4 = (t10$3 = this.shape, t10$3 == null ? dialogTheme.shape : t10$3), t10$4 == null ? dialog.Dialog._defaultDialogShape : t10$4), type: material.MaterialType.card, clipBehavior: this.clipBehavior, child: this.child, $creationLocationd_0dea112b090073317d4: C[742] || CT.C742}), $creationLocationd_0dea112b090073317d4: C[750] || CT.C750}), $creationLocationd_0dea112b090073317d4: C[754] || CT.C754}), $creationLocationd_0dea112b090073317d4: C[757] || CT.C757}), $creationLocationd_0dea112b090073317d4: C[765] || CT.C765});
    }
  };
  (dialog.Dialog.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let insetAnimationDuration = opts && 'insetAnimationDuration' in opts ? opts.insetAnimationDuration : C[738] || CT.C738;
    if (insetAnimationDuration == null) dart.nullFailed(I[30], 47, 10, "insetAnimationDuration");
    let insetAnimationCurve = opts && 'insetAnimationCurve' in opts ? opts.insetAnimationCurve : C[739] || CT.C739;
    if (insetAnimationCurve == null) dart.nullFailed(I[30], 48, 10, "insetAnimationCurve");
    let insetPadding = opts && 'insetPadding' in opts ? opts.insetPadding : C[740] || CT.C740;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[30], 50, 10, "clipBehavior");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.backgroundColor$2] = backgroundColor;
    this[S.elevation$3] = elevation;
    this[S.insetAnimationDuration] = insetAnimationDuration;
    this[S.insetAnimationCurve] = insetAnimationCurve;
    this[S.insetPadding] = insetPadding;
    this[S.clipBehavior$2] = clipBehavior;
    this[S.shape$4] = shape;
    this[S.child$4] = child;
    if (!(clipBehavior != null)) dart.assertFailed(null, I[30], 53, 15, "clipBehavior != null");
    dialog.Dialog.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dialog.Dialog.prototype;
  dart.addTypeTests(dialog.Dialog);
  dart.addTypeCaches(dialog.Dialog);
  dart.setMethodSignature(dialog.Dialog, () => ({
    __proto__: dart.getMethods(dialog.Dialog.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(dialog.Dialog, I[31]);
  dart.setFieldSignature(dialog.Dialog, () => ({
    __proto__: dart.getFields(dialog.Dialog.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    insetAnimationDuration: dart.finalFieldType(core.Duration),
    insetAnimationCurve: dart.finalFieldType(curves.Curve),
    insetPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsets)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  dart.defineLazy(dialog.Dialog, {
    /*dialog.Dialog._defaultDialogShape*/get _defaultDialogShape() {
      return C[156] || CT.C156;
    },
    /*dialog.Dialog._defaultElevation*/get _defaultElevation() {
      return 24;
    }
  }, false);
  dialog.AlertDialog = class AlertDialog extends framework.StatelessWidget {
    get title() {
      return this[S.title$3];
    }
    set title(value) {
      super.title = value;
    }
    get titlePadding() {
      return this[S.titlePadding$1];
    }
    set titlePadding(value) {
      super.titlePadding = value;
    }
    get titleTextStyle() {
      return this[S.titleTextStyle];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get content() {
      return this[S.content$1];
    }
    set content(value) {
      super.content = value;
    }
    get contentPadding() {
      return this[S.contentPadding$2];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get contentTextStyle() {
      return this[S.contentTextStyle];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get actions() {
      return this[S.actions];
    }
    set actions(value) {
      super.actions = value;
    }
    get actionsPadding() {
      return this[S.actionsPadding];
    }
    set actionsPadding(value) {
      super.actionsPadding = value;
    }
    get actionsOverflowDirection() {
      return this[S.actionsOverflowDirection];
    }
    set actionsOverflowDirection(value) {
      super.actionsOverflowDirection = value;
    }
    get actionsOverflowButtonSpacing() {
      return this[S.actionsOverflowButtonSpacing];
    }
    set actionsOverflowButtonSpacing(value) {
      super.actionsOverflowButtonSpacing = value;
    }
    get buttonPadding() {
      return this[S.buttonPadding];
    }
    set buttonPadding(value) {
      super.buttonPadding = value;
    }
    get backgroundColor() {
      return this[S.backgroundColor$3];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S.elevation$4];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get semanticLabel() {
      return this[S.semanticLabel$1];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    get insetPadding() {
      return this[S.insetPadding$1];
    }
    set insetPadding(value) {
      super.insetPadding = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$3];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get shape() {
      return this[S.shape$5];
    }
    set shape(value) {
      super.shape = value;
    }
    get scrollable() {
      return this[S.scrollable];
    }
    set scrollable(value) {
      super.scrollable = value;
    }
    build(context) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3;
      if (context == null) dart.nullFailed(I[30], 452, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[30], 453, 12, "debugCheckHasMaterialLocalizations(context)");
      let theme = theme$.Theme.of(context);
      let dialogTheme = dialog_theme.DialogTheme.of(context);
      let label = this.semanticLabel;
      switch (theme.platform) {
        case C[48] || CT.C48:
        case C[49] || CT.C49:
        {
          break;
        }
        case C[44] || CT.C44:
        case C[45] || CT.C45:
        case C[46] || CT.C46:
        case C[47] || CT.C47:
        {
          label == null ? label = material_localizations.MaterialLocalizations.of(context).alertDialogLabel : null;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let paddingScaleFactor = dialog._paddingScaleFactor(media_query.MediaQuery.of(context).textScaleFactor);
      let textDirection = basic.Directionality.maybeOf(context);
      let titleWidget = null;
      let contentWidget = null;
      let actionsWidget = null;
      if (this.title != null) {
        let defaultTitlePadding = new edge_insets.EdgeInsets.fromLTRB(24.0, 24.0, 24.0, this.content == null ? 20.0 : 0.0);
        let effectiveTitlePadding = (t10$ = (t10 = this.titlePadding, t10 == null ? null : t10.resolve(textDirection)), t10$ == null ? defaultTitlePadding : t10$);
        titleWidget = new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: dart.notNull(effectiveTitlePadding.left) * dart.notNull(paddingScaleFactor), right: dart.notNull(effectiveTitlePadding.right) * dart.notNull(paddingScaleFactor), top: dart.notNull(effectiveTitlePadding.top) * dart.notNull(paddingScaleFactor), bottom: effectiveTitlePadding.bottom}), child: new text$.DefaultTextStyle.new({style: (t10$1 = (t10$0 = this.titleTextStyle, t10$0 == null ? dialogTheme.titleTextStyle : t10$0), t10$1 == null ? dart.nullCheck(theme.textTheme.headline6) : t10$1), child: new basic.Semantics.new({child: this.title, namesRoute: label == null, container: true, $creationLocationd_0dea112b090073317d4: C[773] || CT.C773}), $creationLocationd_0dea112b090073317d4: C[778] || CT.C778}), $creationLocationd_0dea112b090073317d4: C[782] || CT.C782});
      }
      if (this.content != null) {
        let effectiveContentPadding = this.contentPadding.resolve(textDirection);
        contentWidget = new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: dart.notNull(effectiveContentPadding.left) * dart.notNull(paddingScaleFactor), right: dart.notNull(effectiveContentPadding.right) * dart.notNull(paddingScaleFactor), top: this.title == null ? dart.notNull(effectiveContentPadding.top) * dart.notNull(paddingScaleFactor) : effectiveContentPadding.top, bottom: effectiveContentPadding.bottom}), child: new text$.DefaultTextStyle.new({style: (t10$3 = (t10$2 = this.contentTextStyle, t10$2 == null ? dialogTheme.contentTextStyle : t10$2), t10$3 == null ? dart.nullCheck(theme.textTheme.subtitle1) : t10$3), child: dart.nullCheck(this.content), $creationLocationd_0dea112b090073317d4: C[786] || CT.C786}), $creationLocationd_0dea112b090073317d4: C[790] || CT.C790});
      }
      if (this.actions != null) {
        actionsWidget = new basic.Padding.new({padding: this.actionsPadding, child: new button_bar.ButtonBar.new({buttonPadding: this.buttonPadding, overflowDirection: this.actionsOverflowDirection, overflowButtonSpacing: this.actionsOverflowButtonSpacing, children: dart.nullCheck(this.actions), $creationLocationd_0dea112b090073317d4: C[794] || CT.C794}), $creationLocationd_0dea112b090073317d4: C[800] || CT.C800});
      }
      let columnChildren = null;
      if (dart.test(this.scrollable)) {
        columnChildren = (() => {
          let t10 = T$.JSArrayOfWidget().of([]);
          if (this.title != null || this.content != null) t10[S.$add](new basic.Flexible.new({child: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: (() => {
                  let t11 = T$.JSArrayOfWidget().of([]);
                  if (this.title != null) t11[S.$add](dart.nullCheck(titleWidget));
                  if (this.content != null) t11[S.$add](dart.nullCheck(contentWidget));
                  return t11;
                })(), $creationLocationd_0dea112b090073317d4: C[804] || CT.C804}), $creationLocationd_0dea112b090073317d4: C[809] || CT.C809}), $creationLocationd_0dea112b090073317d4: C[812] || CT.C812}));
          if (this.actions != null) t10[S.$add](dart.nullCheck(actionsWidget));
          return t10;
        })();
      } else {
        columnChildren = (() => {
          let t12 = T$.JSArrayOfWidget().of([]);
          if (this.title != null) t12[S.$add](dart.nullCheck(titleWidget));
          if (this.content != null) t12[S.$add](new basic.Flexible.new({child: dart.nullCheck(contentWidget), $creationLocationd_0dea112b090073317d4: C[815] || CT.C815}));
          if (this.actions != null) t12[S.$add](dart.nullCheck(actionsWidget));
          return t12;
        })();
      }
      let dialogChild = new basic.IntrinsicWidth.new({child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: columnChildren, $creationLocationd_0dea112b090073317d4: C[818] || CT.C818}), $creationLocationd_0dea112b090073317d4: C[823] || CT.C823});
      if (label != null) dialogChild = new basic.Semantics.new({scopesRoute: true, explicitChildNodes: true, namesRoute: true, label: label, child: dialogChild, $creationLocationd_0dea112b090073317d4: C[826] || CT.C826});
      return new dialog.Dialog.new({backgroundColor: this.backgroundColor, elevation: this.elevation, insetPadding: this.insetPadding, clipBehavior: this.clipBehavior, shape: this.shape, child: dialogChild, $creationLocationd_0dea112b090073317d4: C[833] || CT.C833});
    }
  };
  (dialog.AlertDialog.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let content = opts && 'content' in opts ? opts.content : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : C[771] || CT.C771;
    if (contentPadding == null) dart.nullFailed(I[30], 243, 10, "contentPadding");
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let actionsPadding = opts && 'actionsPadding' in opts ? opts.actionsPadding : C[772] || CT.C772;
    if (actionsPadding == null) dart.nullFailed(I[30], 246, 10, "actionsPadding");
    let actionsOverflowDirection = opts && 'actionsOverflowDirection' in opts ? opts.actionsOverflowDirection : null;
    let actionsOverflowButtonSpacing = opts && 'actionsOverflowButtonSpacing' in opts ? opts.actionsOverflowButtonSpacing : null;
    let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let insetPadding = opts && 'insetPadding' in opts ? opts.insetPadding : C[740] || CT.C740;
    if (insetPadding == null) dart.nullFailed(I[30], 253, 10, "insetPadding");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[30], 254, 10, "clipBehavior");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let scrollable = opts && 'scrollable' in opts ? opts.scrollable : false;
    if (scrollable == null) dart.nullFailed(I[30], 256, 10, "scrollable");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.title$3] = title;
    this[S.titlePadding$1] = titlePadding;
    this[S.titleTextStyle] = titleTextStyle;
    this[S.content$1] = content;
    this[S.contentPadding$2] = contentPadding;
    this[S.contentTextStyle] = contentTextStyle;
    this[S.actions] = actions;
    this[S.actionsPadding] = actionsPadding;
    this[S.actionsOverflowDirection] = actionsOverflowDirection;
    this[S.actionsOverflowButtonSpacing] = actionsOverflowButtonSpacing;
    this[S.buttonPadding] = buttonPadding;
    this[S.backgroundColor$3] = backgroundColor;
    this[S.elevation$4] = elevation;
    this[S.semanticLabel$1] = semanticLabel;
    this[S.insetPadding$1] = insetPadding;
    this[S.clipBehavior$3] = clipBehavior;
    this[S.shape$5] = shape;
    this[S.scrollable] = scrollable;
    if (!(contentPadding != null)) dart.assertFailed(null, I[30], 257, 15, "contentPadding != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[30], 258, 15, "clipBehavior != null");
    dialog.AlertDialog.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dialog.AlertDialog.prototype;
  dart.addTypeTests(dialog.AlertDialog);
  dart.addTypeCaches(dialog.AlertDialog);
  dart.setMethodSignature(dialog.AlertDialog, () => ({
    __proto__: dart.getMethods(dialog.AlertDialog.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(dialog.AlertDialog, I[31]);
  dart.setFieldSignature(dialog.AlertDialog, () => ({
    __proto__: dart.getFields(dialog.AlertDialog.__proto__),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    titlePadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    content: dart.finalFieldType(dart.nullable(framework.Widget)),
    contentPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    actionsPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    actionsOverflowDirection: dart.finalFieldType(dart.nullable(basic_types.VerticalDirection)),
    actionsOverflowButtonSpacing: dart.finalFieldType(dart.nullable(core.double)),
    buttonPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    semanticLabel: dart.finalFieldType(dart.nullable(core.String)),
    insetPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    clipBehavior: dart.finalFieldType(ui.Clip),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    scrollable: dart.finalFieldType(core.bool)
  }));
  dialog.SimpleDialogOption = class SimpleDialogOption extends framework.StatelessWidget {
    get onPressed() {
      return this[S.onPressed$6];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get child() {
      return this[S.child$5];
    }
    set child(value) {
      super.child = value;
    }
    get padding() {
      return this[S.padding$2];
    }
    set padding(value) {
      super.padding = value;
    }
    build(context) {
      let t13;
      if (context == null) dart.nullFailed(I[30], 640, 29, "context");
      return new ink_well.InkWell.new({onTap: this.onPressed, child: new basic.Padding.new({padding: (t13 = this.padding, t13 == null ? C[841] || CT.C841 : t13), child: this.child, $creationLocationd_0dea112b090073317d4: C[842] || CT.C842}), $creationLocationd_0dea112b090073317d4: C[846] || CT.C846});
    }
  };
  (dialog.SimpleDialogOption.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.onPressed$6] = onPressed;
    this[S.padding$2] = padding;
    this[S.child$5] = child;
    dialog.SimpleDialogOption.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dialog.SimpleDialogOption.prototype;
  dart.addTypeTests(dialog.SimpleDialogOption);
  dart.addTypeCaches(dialog.SimpleDialogOption);
  dart.setMethodSignature(dialog.SimpleDialogOption, () => ({
    __proto__: dart.getMethods(dialog.SimpleDialogOption.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(dialog.SimpleDialogOption, I[31]);
  dart.setFieldSignature(dialog.SimpleDialogOption, () => ({
    __proto__: dart.getFields(dialog.SimpleDialogOption.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsets))
  }));
  dialog.SimpleDialog = class SimpleDialog extends framework.StatelessWidget {
    get title() {
      return this[S.title$4];
    }
    set title(value) {
      super.title = value;
    }
    get titlePadding() {
      return this[S.titlePadding$2];
    }
    set titlePadding(value) {
      super.titlePadding = value;
    }
    get titleTextStyle() {
      return this[S.titleTextStyle$1];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get children() {
      return this[S.children];
    }
    set children(value) {
      super.children = value;
    }
    get contentPadding() {
      return this[S.contentPadding$3];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get backgroundColor() {
      return this[S.backgroundColor$4];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S.elevation$5];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get semanticLabel() {
      return this[S.semanticLabel$2];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    get insetPadding() {
      return this[S.insetPadding$2];
    }
    set insetPadding(value) {
      super.insetPadding = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$4];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get shape() {
      return this[S.shape$6];
    }
    set shape(value) {
      super.shape = value;
    }
    build(context) {
      let t13, t13$, t13$0;
      if (context == null) dart.nullFailed(I[30], 819, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[30], 820, 12, "debugCheckHasMaterialLocalizations(context)");
      let theme = theme$.Theme.of(context);
      let label = this.semanticLabel;
      if (this.title == null) {
        switch (theme.platform) {
          case C[49] || CT.C49:
          case C[48] || CT.C48:
          {
            break;
          }
          case C[44] || CT.C44:
          case C[45] || CT.C45:
          case C[46] || CT.C46:
          case C[47] || CT.C47:
          {
            label = (t13 = this.semanticLabel, t13 == null ? material_localizations.MaterialLocalizations.of(context).dialogLabel : t13);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      let paddingScaleFactor = dialog._paddingScaleFactor(media_query.MediaQuery.of(context).textScaleFactor);
      let textDirection = basic.Directionality.maybeOf(context);
      let titleWidget = null;
      if (this.title != null) {
        let effectiveTitlePadding = this.titlePadding.resolve(textDirection);
        titleWidget = new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: dart.notNull(effectiveTitlePadding.left) * dart.notNull(paddingScaleFactor), right: dart.notNull(effectiveTitlePadding.right) * dart.notNull(paddingScaleFactor), top: dart.notNull(effectiveTitlePadding.top) * dart.notNull(paddingScaleFactor), bottom: this.children == null ? dart.notNull(effectiveTitlePadding.bottom) * dart.notNull(paddingScaleFactor) : effectiveTitlePadding.bottom}), child: new text$.DefaultTextStyle.new({style: (t13$0 = (t13$ = this.titleTextStyle, t13$ == null ? dialog_theme.DialogTheme.of(context).titleTextStyle : t13$), t13$0 == null ? dart.nullCheck(theme.textTheme.headline6) : t13$0), child: new basic.Semantics.new({namesRoute: label == null, child: this.title, $creationLocationd_0dea112b090073317d4: C[852] || CT.C852}), $creationLocationd_0dea112b090073317d4: C[856] || CT.C856}), $creationLocationd_0dea112b090073317d4: C[860] || CT.C860});
      }
      let contentWidget = null;
      if (this.children != null) {
        let effectiveContentPadding = this.contentPadding.resolve(textDirection);
        contentWidget = new basic.Flexible.new({child: new single_child_scroll_view.SingleChildScrollView.new({padding: new edge_insets.EdgeInsets.only({left: dart.notNull(effectiveContentPadding.left) * dart.notNull(paddingScaleFactor), right: dart.notNull(effectiveContentPadding.right) * dart.notNull(paddingScaleFactor), top: this.title == null ? dart.notNull(effectiveContentPadding.top) * dart.notNull(paddingScaleFactor) : effectiveContentPadding.top, bottom: dart.notNull(effectiveContentPadding.bottom) * dart.notNull(paddingScaleFactor)}), child: new basic.ListBody.new({children: dart.nullCheck(this.children), $creationLocationd_0dea112b090073317d4: C[864] || CT.C864}), $creationLocationd_0dea112b090073317d4: C[867] || CT.C867}), $creationLocationd_0dea112b090073317d4: C[871] || CT.C871});
      }
      let dialogChild = new basic.IntrinsicWidth.new({stepWidth: 56.0, child: new basic.ConstrainedBox.new({constraints: C[741] || CT.C741, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: (() => {
              let t13 = T$.JSArrayOfWidget().of([]);
              if (this.title != null) t13[S.$add](dart.nullCheck(titleWidget));
              if (this.children != null) t13[S.$add](dart.nullCheck(contentWidget));
              return t13;
            })(), $creationLocationd_0dea112b090073317d4: C[874] || CT.C874}), $creationLocationd_0dea112b090073317d4: C[879] || CT.C879}), $creationLocationd_0dea112b090073317d4: C[883] || CT.C883});
      if (label != null) dialogChild = new basic.Semantics.new({scopesRoute: true, explicitChildNodes: true, namesRoute: true, label: label, child: dialogChild, $creationLocationd_0dea112b090073317d4: C[887] || CT.C887});
      return new dialog.Dialog.new({backgroundColor: this.backgroundColor, elevation: this.elevation, insetPadding: this.insetPadding, clipBehavior: this.clipBehavior, shape: this.shape, child: dialogChild, $creationLocationd_0dea112b090073317d4: C[894] || CT.C894});
    }
  };
  (dialog.SimpleDialog.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : C[850] || CT.C850;
    if (titlePadding == null) dart.nullFailed(I[30], 732, 10, "titlePadding");
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : C[851] || CT.C851;
    if (contentPadding == null) dart.nullFailed(I[30], 735, 10, "contentPadding");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let insetPadding = opts && 'insetPadding' in opts ? opts.insetPadding : C[740] || CT.C740;
    if (insetPadding == null) dart.nullFailed(I[30], 739, 10, "insetPadding");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[30], 740, 10, "clipBehavior");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.title$4] = title;
    this[S.titlePadding$2] = titlePadding;
    this[S.titleTextStyle$1] = titleTextStyle;
    this[S.children] = children;
    this[S.contentPadding$3] = contentPadding;
    this[S.backgroundColor$4] = backgroundColor;
    this[S.elevation$5] = elevation;
    this[S.semanticLabel$2] = semanticLabel;
    this[S.insetPadding$2] = insetPadding;
    this[S.clipBehavior$4] = clipBehavior;
    this[S.shape$6] = shape;
    if (!(titlePadding != null)) dart.assertFailed(null, I[30], 742, 15, "titlePadding != null");
    if (!(contentPadding != null)) dart.assertFailed(null, I[30], 743, 15, "contentPadding != null");
    dialog.SimpleDialog.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dialog.SimpleDialog.prototype;
  dart.addTypeTests(dialog.SimpleDialog);
  dart.addTypeCaches(dialog.SimpleDialog);
  dart.setMethodSignature(dialog.SimpleDialog, () => ({
    __proto__: dart.getMethods(dialog.SimpleDialog.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(dialog.SimpleDialog, I[31]);
  dart.setFieldSignature(dialog.SimpleDialog, () => ({
    __proto__: dart.getFields(dialog.SimpleDialog.__proto__),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    titlePadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    children: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    contentPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    semanticLabel: dart.finalFieldType(dart.nullable(core.String)),
    insetPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    clipBehavior: dart.finalFieldType(ui.Clip),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder))
  }));
  const _is_DialogRoute_default = Symbol('_is_DialogRoute_default');
  dialog.DialogRoute$ = dart.generic(T => {
    class DialogRoute extends routes.RawDialogRoute$(T) {}
    (DialogRoute.new = function(opts) {
      let t14;
      let context = opts && 'context' in opts ? opts.context : null;
      if (context == null) dart.nullFailed(I[30], 1116, 27, "context");
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(I[30], 1117, 28, "builder");
      let themes = opts && 'themes' in opts ? opts.themes : null;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C[902] || CT.C902;
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
      if (barrierDismissible == null) dart.nullFailed(I[30], 1120, 10, "barrierDismissible");
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let useSafeArea = opts && 'useSafeArea' in opts ? opts.useSafeArea : true;
      if (useSafeArea == null) dart.nullFailed(I[30], 1122, 10, "useSafeArea");
      let settings = opts && 'settings' in opts ? opts.settings : null;
      if (!(barrierDismissible != null)) dart.assertFailed(null, I[30], 1124, 15, "barrierDismissible != null");
      DialogRoute.__proto__.new.call(this, {pageBuilder: dart.fn((buildContext, animation, secondaryAnimation) => {
          let t14, t14$;
          if (buildContext == null) dart.nullFailed(I[30], 1126, 37, "buildContext");
          if (animation == null) dart.nullFailed(I[30], 1126, 69, "animation");
          if (secondaryAnimation == null) dart.nullFailed(I[30], 1126, 98, "secondaryAnimation");
          let pageChild = new basic.Builder.new({builder: builder, $creationLocationd_0dea112b090073317d4: C[903] || CT.C903});
          let dialog = (t14$ = (t14 = themes, t14 == null ? null : t14.wrap(pageChild)), t14$ == null ? pageChild : t14$);
          if (dart.test(useSafeArea)) {
            dialog = new safe_area.SafeArea.new({child: dialog, $creationLocationd_0dea112b090073317d4: C[906] || CT.C906});
          }
          return dialog;
        }, T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget()), barrierDismissible: barrierDismissible, barrierColor: barrierColor, barrierLabel: (t14 = barrierLabel, t14 == null ? material_localizations.MaterialLocalizations.of(context).modalBarrierDismissLabel : t14), transitionDuration: C[909] || CT.C909, transitionBuilder: C[910] || CT.C910, settings: settings});
      ;
    }).prototype = DialogRoute.prototype;
    dart.addTypeTests(DialogRoute);
    DialogRoute.prototype[_is_DialogRoute_default] = true;
    dart.addTypeCaches(DialogRoute);
    dart.setLibraryUri(DialogRoute, I[31]);
    return DialogRoute;
  });
  dialog.DialogRoute = dialog.DialogRoute$();
  dart.addTypeTests(dialog.DialogRoute, _is_DialogRoute_default);
  dialog._buildMaterialDialogTransitions = function _buildMaterialDialogTransitions(context, animation, secondaryAnimation, child) {
    if (context == null) dart.nullFailed(I[30], 909, 53, "context");
    if (animation == null) dart.nullFailed(I[30], 909, 80, "animation");
    if (secondaryAnimation == null) dart.nullFailed(I[30], 909, 109, "secondaryAnimation");
    if (child == null) dart.nullFailed(I[30], 909, 136, "child");
    return new transitions.FadeTransition.new({opacity: new animations.CurvedAnimation.new({parent: animation, curve: curves.Curves.easeOut}), child: child, $creationLocationd_0dea112b090073317d4: C[911] || CT.C911});
  };
  dialog.showDialog = function showDialog(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(I[30], 1036, 25, "context");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[30], 1037, 26, "builder");
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
    if (barrierDismissible == null) dart.nullFailed(I[30], 1038, 8, "barrierDismissible");
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C[902] || CT.C902;
    let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
    let useSafeArea = opts && 'useSafeArea' in opts ? opts.useSafeArea : true;
    if (useSafeArea == null) dart.nullFailed(I[30], 1041, 8, "useSafeArea");
    let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : true;
    if (useRootNavigator == null) dart.nullFailed(I[30], 1042, 8, "useRootNavigator");
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    if (!(builder != null)) dart.assertFailed(null, I[30], 1045, 10, "builder != null");
    if (!(barrierDismissible != null)) dart.assertFailed(null, I[30], 1046, 10, "barrierDismissible != null");
    if (!(useSafeArea != null)) dart.assertFailed(null, I[30], 1047, 10, "useSafeArea != null");
    if (!(useRootNavigator != null)) dart.assertFailed(null, I[30], 1048, 10, "useRootNavigator != null");
    if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[30], 1049, 10, "debugCheckHasMaterialLocalizations(context)");
    let themes = inherited_theme.InheritedTheme.capture({from: context, to: navigator$.Navigator.of(context, {rootNavigator: useRootNavigator}).context});
    return navigator$.Navigator.of(context, {rootNavigator: useRootNavigator}).push(T, new (dialog.DialogRoute$(T)).new({context: context, builder: builder, barrierColor: barrierColor, barrierDismissible: barrierDismissible, barrierLabel: barrierLabel, useSafeArea: useSafeArea, settings: routeSettings, themes: themes}));
  };
  dialog._paddingScaleFactor = function _paddingScaleFactor(textScaleFactor) {
    if (textScaleFactor == null) dart.nullFailed(I[30], 1143, 35, "textScaleFactor");
    let clampedTextScaleFactor = textScaleFactor[S.$clamp](1.0, 2.0)[S.$toDouble]();
    return dart.nullCheck(ui.lerpDouble(1.0, 1.0 / 3.0, clampedTextScaleFactor - 1.0));
  };
  dart.defineLazy(dialog, {
    /*dialog._defaultInsetPadding*/get _defaultInsetPadding() {
      return C[740] || CT.C740;
    }
  }, false);
  material_button.MaterialButton = class MaterialButton extends framework.StatelessWidget {
    get onPressed() {
      return this[S.onPressed$7];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S.onLongPress$2];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S.onHighlightChanged];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$3];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get textTheme() {
      return this[S.textTheme];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get textColor() {
      return this[S.textColor$2];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[S.disabledTextColor$1];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get color() {
      return this[S.color$5];
    }
    set color(value) {
      super.color = value;
    }
    get disabledColor() {
      return this[S.disabledColor$1];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get splashColor() {
      return this[S.splashColor$2];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get focusColor() {
      return this[S.focusColor$3];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor$3];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S.highlightColor$1];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get elevation() {
      return this[S.elevation$6];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get hoverElevation() {
      return this[S.hoverElevation$1];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get focusElevation() {
      return this[S.focusElevation$1];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get highlightElevation() {
      return this[S.highlightElevation$1];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[S.disabledElevation$1];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get colorBrightness() {
      return this[S.colorBrightness];
    }
    set colorBrightness(value) {
      super.colorBrightness = value;
    }
    get child() {
      return this[S.child$6];
    }
    set child(value) {
      super.child = value;
    }
    get padding() {
      return this[S.padding$3];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[S.visualDensity$3];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[S.shape$7];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$5];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get focusNode() {
      return this[S.focusNode$4];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$4];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get animationDuration() {
      return this[S.animationDuration];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get materialTapTargetSize() {
      return this[S.materialTapTargetSize$1];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get minWidth() {
      return this[S.minWidth];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get height() {
      return this[S.height$1];
    }
    set height(value) {
      super.height = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$3];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    build(context) {
      let t14, t14$, t14$0, t14$1, t14$2, t14$3, t14$4;
      if (context == null) dart.nullFailed(I[33], 401, 29, "context");
      let theme = theme$.Theme.of(context);
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new button.RawMaterialButton.new({onPressed: this.onPressed, onLongPress: this.onLongPress, enableFeedback: this.enableFeedback, onHighlightChanged: this.onHighlightChanged, mouseCursor: this.mouseCursor, fillColor: buttonTheme.getFillColor(this), textStyle: dart.nullCheck(theme.textTheme.button).copyWith({color: buttonTheme.getTextColor(this)}), focusColor: (t14 = this.focusColor, t14 == null ? buttonTheme.getFocusColor(this) : t14), hoverColor: (t14$ = this.hoverColor, t14$ == null ? buttonTheme.getHoverColor(this) : t14$), highlightColor: (t14$0 = this.highlightColor, t14$0 == null ? theme.highlightColor : t14$0), splashColor: (t14$1 = this.splashColor, t14$1 == null ? theme.splashColor : t14$1), elevation: buttonTheme.getElevation(this), focusElevation: buttonTheme.getFocusElevation(this), hoverElevation: buttonTheme.getHoverElevation(this), highlightElevation: buttonTheme.getHighlightElevation(this), padding: buttonTheme.getPadding(this), visualDensity: (t14$2 = this.visualDensity, t14$2 == null ? theme.visualDensity : t14$2), constraints: buttonTheme.getConstraints(this).copyWith({minWidth: this.minWidth, minHeight: this.height}), shape: buttonTheme.getShape(this), clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, animationDuration: buttonTheme.getAnimationDuration(this), child: this.child, materialTapTargetSize: (t14$3 = this.materialTapTargetSize, t14$3 == null ? theme.materialTapTargetSize : t14$3), disabledElevation: (t14$4 = this.disabledElevation, t14$4 == null ? 0.0 : t14$4), $creationLocationd_0dea112b090073317d4: C[942] || CT.C942});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[33], 439, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("enabled", {value: this.enabled, ifFalse: "disabled"}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonTextTheme()).new("textTheme", this.textTheme, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("textColor", this.textColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledTextColor", this.disabledTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBrightness()).new("colorBrightness", this.colorBrightness, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
    }
  };
  (material_button.MaterialButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[33], 89, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[33], 91, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    if (enableFeedback == null) dart.nullFailed(I[33], 96, 10, "enableFeedback");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.onPressed$7] = onPressed;
    this[S.onLongPress$2] = onLongPress;
    this[S.onHighlightChanged] = onHighlightChanged;
    this[S.mouseCursor$3] = mouseCursor;
    this[S.textTheme] = textTheme;
    this[S.textColor$2] = textColor;
    this[S.disabledTextColor$1] = disabledTextColor;
    this[S.color$5] = color;
    this[S.disabledColor$1] = disabledColor;
    this[S.focusColor$3] = focusColor;
    this[S.hoverColor$3] = hoverColor;
    this[S.highlightColor$1] = highlightColor;
    this[S.splashColor$2] = splashColor;
    this[S.colorBrightness] = colorBrightness;
    this[S.elevation$6] = elevation;
    this[S.focusElevation$1] = focusElevation;
    this[S.hoverElevation$1] = hoverElevation;
    this[S.highlightElevation$1] = highlightElevation;
    this[S.disabledElevation$1] = disabledElevation;
    this[S.padding$3] = padding;
    this[S.visualDensity$3] = visualDensity;
    this[S.shape$7] = shape;
    this[S.clipBehavior$5] = clipBehavior;
    this[S.focusNode$4] = focusNode;
    this[S.autofocus$4] = autofocus;
    this[S.materialTapTargetSize$1] = materialTapTargetSize;
    this[S.animationDuration] = animationDuration;
    this[S.minWidth] = minWidth;
    this[S.height$1] = height;
    this[S.enableFeedback$3] = enableFeedback;
    this[S.child$6] = child;
    if (!(clipBehavior != null)) dart.assertFailed(null, I[33], 98, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[33], 99, 15, "autofocus != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[33], 100, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[33], 101, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[33], 102, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[33], 103, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[33], 104, 15, "disabledElevation == null || disabledElevation >= 0.0");
    material_button.MaterialButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material_button.MaterialButton.prototype;
  dart.addTypeTests(material_button.MaterialButton);
  dart.addTypeCaches(material_button.MaterialButton);
  dart.setMethodSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getMethods(material_button.MaterialButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getGetters(material_button.MaterialButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(material_button.MaterialButton, I[34]);
  dart.setFieldSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getFields(material_button.MaterialButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    textTheme: dart.finalFieldType(dart.nullable(button_theme.ButtonTextTheme)),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    hoverElevation: dart.finalFieldType(dart.nullable(core.double)),
    focusElevation: dart.finalFieldType(dart.nullable(core.double)),
    highlightElevation: dart.finalFieldType(dart.nullable(core.double)),
    disabledElevation: dart.finalFieldType(dart.nullable(core.double)),
    colorBrightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    animationDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    minWidth: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double)),
    enableFeedback: dart.finalFieldType(core.bool)
  }));
  raised_button.RaisedButton = class RaisedButton extends material_button.MaterialButton {
    build(context) {
      let t14;
      if (context == null) dart.nullFailed(I[32], 146, 29, "context");
      let theme = theme$.Theme.of(context);
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new button.RawMaterialButton.new({onPressed: this.onPressed, onLongPress: this.onLongPress, onHighlightChanged: this.onHighlightChanged, mouseCursor: this.mouseCursor, clipBehavior: this.clipBehavior, fillColor: buttonTheme.getFillColor(this), textStyle: dart.nullCheck(theme.textTheme.button).copyWith({color: buttonTheme.getTextColor(this)}), focusColor: buttonTheme.getFocusColor(this), hoverColor: buttonTheme.getHoverColor(this), highlightColor: buttonTheme.getHighlightColor(this), splashColor: buttonTheme.getSplashColor(this), elevation: buttonTheme.getElevation(this), focusElevation: buttonTheme.getFocusElevation(this), hoverElevation: buttonTheme.getHoverElevation(this), highlightElevation: buttonTheme.getHighlightElevation(this), disabledElevation: buttonTheme.getDisabledElevation(this), padding: buttonTheme.getPadding(this), visualDensity: (t14 = this.visualDensity, t14 == null ? theme.visualDensity : t14), constraints: buttonTheme.getConstraints(this), shape: buttonTheme.getShape(this), focusNode: this.focusNode, autofocus: this.autofocus, animationDuration: buttonTheme.getAnimationDuration(this), materialTapTargetSize: buttonTheme.getMaterialTapTargetSize(this), child: this.child, $creationLocationd_0dea112b090073317d4: C[915] || CT.C915});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[32], 179, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("focusElevation", this.focusElevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("hoverElevation", this.hoverElevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("highlightElevation", this.highlightElevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("disabledElevation", this.disabledElevation, {defaultValue: null}));
    }
  };
  (raised_button.RaisedButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[32], 62, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[32], 64, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(autofocus != null)) dart.assertFailed(null, I[32], 68, 15, "autofocus != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[32], 69, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[32], 70, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[32], 71, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[32], 72, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[32], 73, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[32], 74, 15, "clipBehavior != null");
    raised_button.RaisedButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, animationDuration: animationDuration, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = raised_button.RaisedButton.prototype;
  dart.addTypeTests(raised_button.RaisedButton);
  dart.addTypeCaches(raised_button.RaisedButton);
  dart.setLibraryUri(raised_button.RaisedButton, I[35]);
  material_button.MaterialButtonWithIconMixin = class MaterialButtonWithIconMixin extends core.Object {};
  material_button.MaterialButtonWithIconMixin[dart.mixinOn] = Object => class MaterialButtonWithIconMixin extends Object {};
  (material_button.MaterialButtonWithIconMixin[dart.mixinNew] = function() {
  }).prototype = material_button.MaterialButtonWithIconMixin.prototype;
  dart.addTypeTests(material_button.MaterialButtonWithIconMixin);
  dart.addTypeCaches(material_button.MaterialButtonWithIconMixin);
  material_button.MaterialButtonWithIconMixin[dart.implements] = () => [core.Object];
  dart.setLibraryUri(material_button.MaterialButtonWithIconMixin, I[34]);
  const RaisedButton_MaterialButtonWithIconMixin$36 = class RaisedButton_MaterialButtonWithIconMixin extends raised_button.RaisedButton {};
  (RaisedButton_MaterialButtonWithIconMixin$36.new = function(opts) {
    RaisedButton_MaterialButtonWithIconMixin$36.__proto__.new.call(this, opts);
  }).prototype = RaisedButton_MaterialButtonWithIconMixin$36.prototype;
  dart.applyMixin(RaisedButton_MaterialButtonWithIconMixin$36, material_button.MaterialButtonWithIconMixin);
  raised_button._RaisedButtonWithIcon = class _RaisedButtonWithIcon extends RaisedButton_MaterialButtonWithIconMixin$36 {};
  (raised_button._RaisedButtonWithIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[32], 214, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[32], 216, 10, "autofocus");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[32], 220, 21, "icon");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[32], 221, 21, "label");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[32], 222, 15, "elevation == null || elevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[32], 223, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[32], 224, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[32], 225, 15, "clipBehavior != null");
    if (!(icon != null)) dart.assertFailed(null, I[32], 226, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[32], 227, 15, "label != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[32], 228, 15, "autofocus != null");
    raised_button._RaisedButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, elevation: elevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, padding: padding, materialTapTargetSize: materialTapTargetSize, animationDuration: animationDuration, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([icon, C[970] || CT.C970, label]), $creationLocationd_0dea112b090073317d4: C[974] || CT.C974}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = raised_button._RaisedButtonWithIcon.prototype;
  dart.addTypeTests(raised_button._RaisedButtonWithIcon);
  dart.addTypeCaches(raised_button._RaisedButtonWithIcon);
  dart.setLibraryUri(raised_button._RaisedButtonWithIcon, I[35]);
  outline_button.OutlineButton = class OutlineButton extends material_button.MaterialButton {
    get highlightedBorderColor() {
      return this[S.highlightedBorderColor];
    }
    set highlightedBorderColor(value) {
      super.highlightedBorderColor = value;
    }
    get disabledBorderColor() {
      return this[S.disabledBorderColor];
    }
    set disabledBorderColor(value) {
      super.disabledBorderColor = value;
    }
    get borderSide() {
      return this[S.borderSide];
    }
    set borderSide(value) {
      super.borderSide = value;
    }
    build(context) {
      let t14;
      if (context == null) dart.nullFailed(I[36], 165, 29, "context");
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new outline_button._OutlineButton.new({autofocus: this.autofocus, onPressed: this.onPressed, onLongPress: this.onLongPress, mouseCursor: this.mouseCursor, brightness: buttonTheme.getBrightness(this), textTheme: this.textTheme, textColor: buttonTheme.getTextColor(this), disabledTextColor: buttonTheme.getDisabledTextColor(this), color: this.color, focusColor: buttonTheme.getFocusColor(this), hoverColor: buttonTheme.getHoverColor(this), highlightColor: buttonTheme.getHighlightColor(this), splashColor: buttonTheme.getSplashColor(this), highlightElevation: buttonTheme.getHighlightElevation(this), borderSide: this.borderSide, disabledBorderColor: this.disabledBorderColor, highlightedBorderColor: (t14 = this.highlightedBorderColor, t14 == null ? dart.nullCheck(buttonTheme.colorScheme).primary : t14), padding: buttonTheme.getPadding(this), visualDensity: this.visualDensity, shape: buttonTheme.getShape(this), clipBehavior: this.clipBehavior, focusNode: this.focusNode, materialTapTargetSize: this.materialTapTargetSize, child: this.child, $creationLocationd_0dea112b090073317d4: C[978] || CT.C978});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[36], 196, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfBorderSide()).new("borderSide", this.borderSide, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledBorderColor", this.disabledBorderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightedBorderColor", this.highlightedBorderColor, {defaultValue: null}));
    }
  };
  (outline_button.OutlineButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let borderSide = opts && 'borderSide' in opts ? opts.borderSide : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let highlightedBorderColor = opts && 'highlightedBorderColor' in opts ? opts.highlightedBorderColor : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[36], 66, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[36], 68, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.borderSide] = borderSide;
    this[S.disabledBorderColor] = disabledBorderColor;
    this[S.highlightedBorderColor] = highlightedBorderColor;
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[36], 71, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[36], 72, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[36], 73, 15, "autofocus != null");
    outline_button.OutlineButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, highlightElevation: highlightElevation, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, materialTapTargetSize: materialTapTargetSize, autofocus: autofocus, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outline_button.OutlineButton.prototype;
  dart.addTypeTests(outline_button.OutlineButton);
  dart.addTypeCaches(outline_button.OutlineButton);
  dart.setLibraryUri(outline_button.OutlineButton, I[37]);
  dart.setFieldSignature(outline_button.OutlineButton, () => ({
    __proto__: dart.getFields(outline_button.OutlineButton.__proto__),
    highlightedBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderSide: dart.finalFieldType(dart.nullable(borders.BorderSide))
  }));
  const OutlineButton_MaterialButtonWithIconMixin$36 = class OutlineButton_MaterialButtonWithIconMixin extends outline_button.OutlineButton {};
  (OutlineButton_MaterialButtonWithIconMixin$36.new = function(opts) {
    OutlineButton_MaterialButtonWithIconMixin$36.__proto__.new.call(this, opts);
  }).prototype = OutlineButton_MaterialButtonWithIconMixin$36.prototype;
  dart.applyMixin(OutlineButton_MaterialButtonWithIconMixin$36, material_button.MaterialButtonWithIconMixin);
  outline_button._OutlineButtonWithIcon = class _OutlineButtonWithIcon extends OutlineButton_MaterialButtonWithIconMixin$36 {};
  (outline_button._OutlineButtonWithIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let highlightedBorderColor = opts && 'highlightedBorderColor' in opts ? opts.highlightedBorderColor : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let borderSide = opts && 'borderSide' in opts ? opts.borderSide : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[36], 229, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[36], 231, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[36], 233, 21, "icon");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[36], 234, 21, "label");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[36], 235, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[36], 236, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[36], 237, 15, "autofocus != null");
    if (!(icon != null)) dart.assertFailed(null, I[36], 238, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[36], 239, 15, "label != null");
    outline_button._OutlineButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, highlightElevation: highlightElevation, disabledBorderColor: disabledBorderColor, highlightedBorderColor: highlightedBorderColor, borderSide: borderSide, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([icon, C[1004] || CT.C1004, label]), $creationLocationd_0dea112b090073317d4: C[1008] || CT.C1008}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outline_button._OutlineButtonWithIcon.prototype;
  dart.addTypeTests(outline_button._OutlineButtonWithIcon);
  dart.addTypeCaches(outline_button._OutlineButtonWithIcon);
  dart.setLibraryUri(outline_button._OutlineButtonWithIcon, I[37]);
  outline_button._OutlineButton = class _OutlineButton extends framework.StatefulWidget {
    get onPressed() {
      return this[S.onPressed$8];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S.onLongPress$3];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$4];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get brightness() {
      return this[S.brightness];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get textTheme() {
      return this[S.textTheme$1];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get textColor() {
      return this[S.textColor$3];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[S.disabledTextColor$2];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get color() {
      return this[S.color$6];
    }
    set color(value) {
      super.color = value;
    }
    get splashColor() {
      return this[S.splashColor$3];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get focusColor() {
      return this[S.focusColor$4];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor$4];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S.highlightColor$2];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get highlightElevation() {
      return this[S.highlightElevation$2];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get borderSide() {
      return this[S.borderSide$1];
    }
    set borderSide(value) {
      super.borderSide = value;
    }
    get disabledBorderColor() {
      return this[S.disabledBorderColor$1];
    }
    set disabledBorderColor(value) {
      super.disabledBorderColor = value;
    }
    get highlightedBorderColor() {
      return this[S.highlightedBorderColor$1];
    }
    set highlightedBorderColor(value) {
      super.highlightedBorderColor = value;
    }
    get padding() {
      return this[S.padding$4];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[S.visualDensity$4];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[S.shape$8];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$6];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get focusNode() {
      return this[S.focusNode$5];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$5];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get child() {
      return this[S.child$7];
    }
    set child(value) {
      super.child = value;
    }
    get materialTapTargetSize() {
      return this[S.materialTapTargetSize$2];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    createState() {
      return new outline_button._OutlineButtonState.new();
    }
  };
  (outline_button._OutlineButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    if (brightness == null) dart.nullFailed(I[36], 281, 19, "brightness");
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    if (textColor == null) dart.nullFailed(I[36], 283, 19, "textColor");
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    if (disabledTextColor == null) dart.nullFailed(I[36], 284, 19, "disabledTextColor");
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    if (focusColor == null) dart.nullFailed(I[36], 286, 19, "focusColor");
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    if (hoverColor == null) dart.nullFailed(I[36], 287, 19, "hoverColor");
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    if (highlightColor == null) dart.nullFailed(I[36], 288, 19, "highlightColor");
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    if (splashColor == null) dart.nullFailed(I[36], 289, 19, "splashColor");
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    if (highlightElevation == null) dart.nullFailed(I[36], 290, 19, "highlightElevation");
    let borderSide = opts && 'borderSide' in opts ? opts.borderSide : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let highlightedBorderColor = opts && 'highlightedBorderColor' in opts ? opts.highlightedBorderColor : null;
    if (highlightedBorderColor == null) dart.nullFailed(I[36], 293, 19, "highlightedBorderColor");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    if (padding == null) dart.nullFailed(I[36], 294, 19, "padding");
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    if (shape == null) dart.nullFailed(I[36], 296, 19, "shape");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[36], 297, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[36], 299, 10, "autofocus");
    let child = opts && 'child' in opts ? opts.child : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.onPressed$8] = onPressed;
    this[S.onLongPress$3] = onLongPress;
    this[S.mouseCursor$4] = mouseCursor;
    this[S.brightness] = brightness;
    this[S.textTheme$1] = textTheme;
    this[S.textColor$3] = textColor;
    this[S.disabledTextColor$2] = disabledTextColor;
    this[S.color$6] = color;
    this[S.focusColor$4] = focusColor;
    this[S.hoverColor$4] = hoverColor;
    this[S.highlightColor$2] = highlightColor;
    this[S.splashColor$3] = splashColor;
    this[S.highlightElevation$2] = highlightElevation;
    this[S.borderSide$1] = borderSide;
    this[S.disabledBorderColor$1] = disabledBorderColor;
    this[S.highlightedBorderColor$1] = highlightedBorderColor;
    this[S.padding$4] = padding;
    this[S.visualDensity$4] = visualDensity;
    this[S.shape$8] = shape;
    this[S.clipBehavior$6] = clipBehavior;
    this[S.focusNode$5] = focusNode;
    this[S.autofocus$5] = autofocus;
    this[S.child$7] = child;
    this[S.materialTapTargetSize$2] = materialTapTargetSize;
    if (!(highlightElevation != null && dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[36], 302, 15, "highlightElevation != null && highlightElevation >= 0.0");
    if (!(highlightedBorderColor != null)) dart.assertFailed(null, I[36], 303, 15, "highlightedBorderColor != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[36], 304, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[36], 305, 15, "autofocus != null");
    outline_button._OutlineButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outline_button._OutlineButton.prototype;
  dart.addTypeTests(outline_button._OutlineButton);
  dart.addTypeCaches(outline_button._OutlineButton);
  dart.setMethodSignature(outline_button._OutlineButton, () => ({
    __proto__: dart.getMethods(outline_button._OutlineButton.__proto__),
    createState: dart.fnType(outline_button._OutlineButtonState, [])
  }));
  dart.setGetterSignature(outline_button._OutlineButton, () => ({
    __proto__: dart.getGetters(outline_button._OutlineButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(outline_button._OutlineButton, I[37]);
  dart.setFieldSignature(outline_button._OutlineButton, () => ({
    __proto__: dart.getFields(outline_button._OutlineButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    brightness: dart.finalFieldType(ui.Brightness),
    textTheme: dart.finalFieldType(dart.nullable(button_theme.ButtonTextTheme)),
    textColor: dart.finalFieldType(ui.Color),
    disabledTextColor: dart.finalFieldType(ui.Color),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(ui.Color),
    focusColor: dart.finalFieldType(ui.Color),
    hoverColor: dart.finalFieldType(ui.Color),
    highlightColor: dart.finalFieldType(ui.Color),
    highlightElevation: dart.finalFieldType(core.double),
    borderSide: dart.finalFieldType(dart.nullable(borders.BorderSide)),
    disabledBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightedBorderColor: dart.finalFieldType(ui.Color),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    shape: dart.finalFieldType(borders.ShapeBorder),
    clipBehavior: dart.finalFieldType(ui.Clip),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize))
  }));
  const State_SingleTickerProviderStateMixin$36$ = class State_SingleTickerProviderStateMixin extends framework.State$(outline_button._OutlineButton) {};
  (State_SingleTickerProviderStateMixin$36$.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(outline_button._OutlineButton)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$, ticker_provider.SingleTickerProviderStateMixin$(outline_button._OutlineButton));
  outline_button._OutlineButtonState = class _OutlineButtonState extends State_SingleTickerProviderStateMixin$36$ {
    get [S._controller$3]() {
      let t14;
      return dart.test(this[S.___OutlineButtonState__controller_isSet]) ? (t14 = this[S.___OutlineButtonState__controller], t14) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S._controller$3](t14) {
      if (t14 == null) dart.nullFailed(I[36], 341, 28, "null");
      this[S.___OutlineButtonState__controller_isSet] = true;
      this[S.___OutlineButtonState__controller] = t14;
    }
    get [S._fillAnimation]() {
      let t15;
      return dart.test(this[S.___OutlineButtonState__fillAnimation_isSet]) ? (t15 = this[S.___OutlineButtonState__fillAnimation], t15) : dart.throw(new _internal.LateError.fieldNI("_fillAnimation"));
    }
    set [S._fillAnimation](t15) {
      if (t15 == null) dart.nullFailed(I[36], 342, 26, "null");
      this[S.___OutlineButtonState__fillAnimation_isSet] = true;
      this[S.___OutlineButtonState__fillAnimation] = t15;
    }
    get [S._elevationAnimation]() {
      let t16;
      return dart.test(this[S.___OutlineButtonState__elevationAnimation_isSet]) ? (t16 = this[S.___OutlineButtonState__elevationAnimation], t16) : dart.throw(new _internal.LateError.fieldNI("_elevationAnimation"));
    }
    set [S._elevationAnimation](t16) {
      if (t16 == null) dart.nullFailed(I[36], 343, 26, "null");
      this[S.___OutlineButtonState__elevationAnimation_isSet] = true;
      this[S.___OutlineButtonState__elevationAnimation] = t16;
    }
    initState() {
      super.initState();
      this[S._controller$3] = new animation_controller.AnimationController.new({duration: outline_button._kPressDuration, vsync: this});
      this[S._fillAnimation] = new animations.CurvedAnimation.new({parent: this[S._controller$3], curve: C[1012] || CT.C1012});
      this[S._elevationAnimation] = new animations.CurvedAnimation.new({parent: this[S._controller$3], curve: C[1013] || CT.C1013, reverseCurve: C[1014] || CT.C1014});
    }
    didUpdateWidget(oldWidget) {
      outline_button._OutlineButton.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[36], 376, 39, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (dart.test(this[S._pressed$1]) && !dart.test(this.widget.enabled)) {
        this[S._pressed$1] = false;
        this[S._controller$3].reverse();
      }
    }
    [S._handleHighlightChanged$1](value) {
      if (value == null) dart.nullFailed(I[36], 384, 37, "value");
      if (this[S._pressed$1] == value) return;
      this.setState(dart.fn(() => {
        this[S._pressed$1] = value;
        if (dart.test(value))
          this[S._controller$3].forward();
        else
          this[S._controller$3].reverse();
      }, T$.VoidTovoid()));
    }
    dispose() {
      this[S._controller$3].dispose();
      super.dispose();
    }
    [S._getFillColor]() {
      let t17;
      if (this.widget.highlightElevation == null || this.widget.highlightElevation === 0.0) return colors$.Colors.transparent;
      let color = (t17 = this.widget.color, t17 == null ? theme$.Theme.of(this.context).canvasColor : t17);
      let colorTween = new tween.ColorTween.new({begin: color.withAlpha(0), end: color.withAlpha(255)});
      return dart.nullCheck(colorTween.evaluate(this[S._fillAnimation]));
    }
    get [S._outlineColor]() {
      let t17, t17$;
      if (T$.MaterialStatePropertyOfColorN().is((t17 = this.widget.borderSide, t17 == null ? null : t17.color))) return dart.nullCheck(this.widget.borderSide).color;
      if (!dart.test(this.widget.enabled)) return this.widget.disabledBorderColor;
      if (dart.test(this[S._pressed$1])) return this.widget.highlightedBorderColor;
      t17$ = this.widget.borderSide;
      return t17$ == null ? null : t17$.color;
    }
    [S._getOutline]() {
      let t17, t17$, t17$0, t17$1;
      if ((t17 = this.widget.borderSide, t17 == null ? null : t17.style) == borders.BorderStyle.none) return dart.nullCheck(this.widget.borderSide);
      let themeColor = theme$.Theme.of(this.context).colorScheme.onSurface.withOpacity(0.12);
      return new borders.BorderSide.new({color: (t17$ = this[S._outlineColor], t17$ == null ? themeColor : t17$), width: (t17$1 = (t17$0 = this.widget.borderSide, t17$0 == null ? null : t17$0.width), t17$1 == null ? 1.0 : t17$1)});
    }
    [S._getHighlightElevation]() {
      if (this.widget.highlightElevation == null || this.widget.highlightElevation === 0.0) return 0.0;
      return new (T$.TweenOfdouble()).new({begin: 0.0, end: this.widget.highlightElevation}).evaluate(this[S._elevationAnimation]);
    }
    build(context) {
      if (context == null) dart.nullFailed(I[36], 447, 29, "context");
      let theme = theme$.Theme.of(context);
      return new transitions.AnimatedBuilder.new({animation: this[S._controller$3], builder: dart.fn((context, child) => {
          let t17;
          if (context == null) dart.nullFailed(I[36], 452, 30, "context");
          return new raised_button.RaisedButton.new({autofocus: this.widget.autofocus, textColor: this.widget.textColor, disabledTextColor: this.widget.disabledTextColor, color: this[S._getFillColor](), splashColor: this.widget.splashColor, focusColor: this.widget.focusColor, hoverColor: this.widget.hoverColor, highlightColor: this.widget.highlightColor, disabledColor: colors$.Colors.transparent, onPressed: this.widget.onPressed, onLongPress: this.widget.onLongPress, mouseCursor: this.widget.mouseCursor, elevation: 0.0, disabledElevation: 0.0, focusElevation: 0.0, hoverElevation: 0.0, highlightElevation: this[S._getHighlightElevation](), onHighlightChanged: dart.bind(this, S._handleHighlightChanged$1), padding: this.widget.padding, visualDensity: (t17 = this.widget.visualDensity, t17 == null ? theme.visualDensity : t17), shape: new outline_button._OutlineBorder.new({shape: this.widget.shape, side: this[S._getOutline]()}), clipBehavior: this.widget.clipBehavior, focusNode: this.widget.focusNode, animationDuration: outline_button._kElevationDuration, materialTapTargetSize: this.widget.materialTapTargetSize, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[1015] || CT.C1015});
        }, T$.BuildContextAndWidgetNToRaisedButton()), $creationLocationd_0dea112b090073317d4: C[1043] || CT.C1043});
    }
  };
  (outline_button._OutlineButtonState.new = function() {
    this[S.___OutlineButtonState__controller] = null;
    this[S.___OutlineButtonState__controller_isSet] = false;
    this[S.___OutlineButtonState__fillAnimation] = null;
    this[S.___OutlineButtonState__fillAnimation_isSet] = false;
    this[S.___OutlineButtonState__elevationAnimation] = null;
    this[S.___OutlineButtonState__elevationAnimation_isSet] = false;
    this[S._pressed$1] = false;
    outline_button._OutlineButtonState.__proto__.new.call(this);
    ;
  }).prototype = outline_button._OutlineButtonState.prototype;
  dart.addTypeTests(outline_button._OutlineButtonState);
  dart.addTypeCaches(outline_button._OutlineButtonState);
  dart.setMethodSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getMethods(outline_button._OutlineButtonState.__proto__),
    [S._handleHighlightChanged$1]: dart.fnType(dart.void, [core.bool]),
    [S._getFillColor]: dart.fnType(ui.Color, []),
    [S._getOutline]: dart.fnType(borders.BorderSide, []),
    [S._getHighlightElevation]: dart.fnType(core.double, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getGetters(outline_button._OutlineButtonState.__proto__),
    [S._controller$3]: animation_controller.AnimationController,
    [S._fillAnimation]: animation.Animation$(core.double),
    [S._elevationAnimation]: animation.Animation$(core.double),
    [S._outlineColor]: dart.nullable(ui.Color)
  }));
  dart.setSetterSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getSetters(outline_button._OutlineButtonState.__proto__),
    [S._controller$3]: animation_controller.AnimationController,
    [S._fillAnimation]: animation.Animation$(core.double),
    [S._elevationAnimation]: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(outline_button._OutlineButtonState, I[37]);
  dart.setFieldSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getFields(outline_button._OutlineButtonState.__proto__),
    [S.___OutlineButtonState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.___OutlineButtonState__controller_isSet]: dart.fieldType(core.bool),
    [S.___OutlineButtonState__fillAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S.___OutlineButtonState__fillAnimation_isSet]: dart.fieldType(core.bool),
    [S.___OutlineButtonState__elevationAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S.___OutlineButtonState__elevationAnimation_isSet]: dart.fieldType(core.bool),
    [S._pressed$1]: dart.fieldType(core.bool)
  }));
  outline_button._OutlineBorder = class _OutlineBorder extends borders.ShapeBorder {
    get shape() {
      return this[S.shape$9];
    }
    set shape(value) {
      super.shape = value;
    }
    get side() {
      return this[S.side];
    }
    set side(value) {
      super.side = value;
    }
    get dimensions() {
      return new edge_insets.EdgeInsets.all(this.side.width);
    }
    scale(t) {
      if (t == null) dart.nullFailed(I[36], 507, 28, "t");
      return new outline_button._OutlineBorder.new({shape: this.shape.scale(t), side: this.side.scale(t)});
    }
    lerpFrom(a, t) {
      if (t == null) dart.nullFailed(I[36], 515, 48, "t");
      if (!(t != null)) dart.assertFailed(null, I[36], 516, 12, "t != null");
      if (outline_button._OutlineBorder.is(a)) {
        return new outline_button._OutlineBorder.new({side: borders.BorderSide.lerp(a.side, this.side, t), shape: dart.nullCheck(borders.ShapeBorder.lerp(a.shape, this.shape, t))});
      }
      return super.lerpFrom(a, t);
    }
    lerpTo(b, t) {
      if (t == null) dart.nullFailed(I[36], 527, 46, "t");
      if (!(t != null)) dart.assertFailed(null, I[36], 528, 12, "t != null");
      if (outline_button._OutlineBorder.is(b)) {
        return new outline_button._OutlineBorder.new({side: borders.BorderSide.lerp(this.side, b.side, t), shape: dart.nullCheck(borders.ShapeBorder.lerp(this.shape, b.shape, t))});
      }
      return super.lerpTo(b, t);
    }
    getInnerPath(rect, opts) {
      if (rect == null) dart.nullFailed(I[36], 539, 26, "rect");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return this.shape.getInnerPath(rect.deflate(this.side.width), {textDirection: textDirection});
    }
    getOuterPath(rect, opts) {
      if (rect == null) dart.nullFailed(I[36], 544, 26, "rect");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return this.shape.getOuterPath(rect, {textDirection: textDirection});
    }
    paint(canvas, rect, opts) {
      if (canvas == null) dart.nullFailed(I[36], 549, 21, "canvas");
      if (rect == null) dart.nullFailed(I[36], 549, 34, "rect");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      switch (this.side.style) {
        case C[158] || CT.C158:
        {
          break;
        }
        case C[1047] || CT.C1047:
        {
          canvas.drawPath(this.shape.getOuterPath(rect, {textDirection: textDirection}), this.side.toPaint());
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return outline_button._OutlineBorder.is(other) && dart.equals(other.side, this.side) && dart.equals(other.shape, this.shape);
    }
    get hashCode() {
      return ui.hashValues(this.side, this.shape);
    }
    resolve(states) {
      if (states == null) dart.nullFailed(I[36], 573, 42, "states");
      return new outline_button._OutlineBorder.new({shape: this.shape, side: this.side.copyWith({color: material_state.MaterialStateProperty.resolveAs(ui.Color, this.side.color, states)})});
    }
  };
  (outline_button._OutlineBorder.new = function(opts) {
    let shape = opts && 'shape' in opts ? opts.shape : null;
    if (shape == null) dart.nullFailed(I[36], 493, 19, "shape");
    let side = opts && 'side' in opts ? opts.side : null;
    if (side == null) dart.nullFailed(I[36], 494, 19, "side");
    this[S.shape$9] = shape;
    this[S.side] = side;
    if (!(shape != null)) dart.assertFailed(null, I[36], 495, 15, "shape != null");
    if (!(side != null)) dart.assertFailed(null, I[36], 496, 15, "side != null");
    outline_button._OutlineBorder.__proto__.new.call(this);
    ;
  }).prototype = outline_button._OutlineBorder.prototype;
  dart.addTypeTests(outline_button._OutlineBorder);
  dart.addTypeCaches(outline_button._OutlineBorder);
  outline_button._OutlineBorder[dart.implements] = () => [material_state.MaterialStateProperty$(borders.ShapeBorder)];
  dart.setMethodSignature(outline_button._OutlineBorder, () => ({
    __proto__: dart.getMethods(outline_button._OutlineBorder.__proto__),
    scale: dart.fnType(borders.ShapeBorder, [core.double]),
    getInnerPath: dart.fnType(ui.Path, [ui.Rect], {textDirection: dart.nullable(ui.TextDirection)}, {}),
    getOuterPath: dart.fnType(ui.Path, [ui.Rect], {textDirection: dart.nullable(ui.TextDirection)}, {}),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Rect], {textDirection: dart.nullable(ui.TextDirection)}, {}),
    resolve: dart.fnType(borders.ShapeBorder, [core.Set$(material_state.MaterialState)])
  }));
  dart.setGetterSignature(outline_button._OutlineBorder, () => ({
    __proto__: dart.getGetters(outline_button._OutlineBorder.__proto__),
    dimensions: edge_insets.EdgeInsetsGeometry
  }));
  dart.setLibraryUri(outline_button._OutlineBorder, I[37]);
  dart.setFieldSignature(outline_button._OutlineBorder, () => ({
    __proto__: dart.getFields(outline_button._OutlineBorder.__proto__),
    shape: dart.finalFieldType(borders.ShapeBorder),
    side: dart.finalFieldType(borders.BorderSide)
  }));
  dart.defineExtensionMethods(outline_button._OutlineBorder, ['_equals']);
  dart.defineExtensionAccessors(outline_button._OutlineBorder, ['hashCode']);
  dart.defineLazy(outline_button, {
    /*outline_button._kPressDuration*/get _kPressDuration() {
      return C[909] || CT.C909;
    },
    /*outline_button._kElevationDuration*/get _kElevationDuration() {
      return C[93] || CT.C93;
    }
  }, false);
  button.RawMaterialButton = class RawMaterialButton extends framework.StatefulWidget {
    get onPressed() {
      return this[S.onPressed$9];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S.onLongPress$4];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S.onHighlightChanged$1];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$5];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get textStyle() {
      return this[S.textStyle];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get fillColor() {
      return this[S.fillColor];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S.focusColor$5];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor$5];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S.highlightColor$3];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[S.splashColor$4];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get elevation() {
      return this[S.elevation$7];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get hoverElevation() {
      return this[S.hoverElevation$2];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get focusElevation() {
      return this[S.focusElevation$2];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get highlightElevation() {
      return this[S.highlightElevation$3];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[S.disabledElevation$2];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get padding() {
      return this[S.padding$5];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[S.visualDensity$5];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get constraints() {
      return this[S.constraints$1];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get shape() {
      return this[S.shape$10];
    }
    set shape(value) {
      super.shape = value;
    }
    get animationDuration() {
      return this[S.animationDuration$1];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get child() {
      return this[S.child$8];
    }
    set child(value) {
      super.child = value;
    }
    get materialTapTargetSize() {
      return this[S.materialTapTargetSize$3];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get focusNode() {
      return this[S.focusNode$6];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$6];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$7];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$4];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    createState() {
      return new button._RawMaterialButtonState.new();
    }
  };
  (button.RawMaterialButton.new = function(opts) {
    let t17;
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 2;
    if (elevation == null) dart.nullFailed(I[38], 63, 10, "elevation");
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : 4;
    if (focusElevation == null) dart.nullFailed(I[38], 64, 10, "focusElevation");
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : 4;
    if (hoverElevation == null) dart.nullFailed(I[38], 65, 10, "hoverElevation");
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : 8;
    if (highlightElevation == null) dart.nullFailed(I[38], 66, 10, "highlightElevation");
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : 0;
    if (disabledElevation == null) dart.nullFailed(I[38], 67, 10, "disabledElevation");
    let padding = opts && 'padding' in opts ? opts.padding : C[772] || CT.C772;
    if (padding == null) dart.nullFailed(I[38], 68, 10, "padding");
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : C[1048] || CT.C1048;
    if (visualDensity == null) dart.nullFailed(I[38], 69, 10, "visualDensity");
    let constraints = opts && 'constraints' in opts ? opts.constraints : C[1049] || CT.C1049;
    if (constraints == null) dart.nullFailed(I[38], 70, 10, "constraints");
    let shape = opts && 'shape' in opts ? opts.shape : C[1050] || CT.C1050;
    if (shape == null) dart.nullFailed(I[38], 71, 10, "shape");
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[334] || CT.C334;
    if (animationDuration == null) dart.nullFailed(I[38], 72, 10, "animationDuration");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[38], 73, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[38], 75, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    if (enableFeedback == null) dart.nullFailed(I[38], 78, 10, "enableFeedback");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.onPressed$9] = onPressed;
    this[S.onLongPress$4] = onLongPress;
    this[S.onHighlightChanged$1] = onHighlightChanged;
    this[S.mouseCursor$5] = mouseCursor;
    this[S.textStyle] = textStyle;
    this[S.fillColor] = fillColor;
    this[S.focusColor$5] = focusColor;
    this[S.hoverColor$5] = hoverColor;
    this[S.highlightColor$3] = highlightColor;
    this[S.splashColor$4] = splashColor;
    this[S.elevation$7] = elevation;
    this[S.focusElevation$2] = focusElevation;
    this[S.hoverElevation$2] = hoverElevation;
    this[S.highlightElevation$3] = highlightElevation;
    this[S.disabledElevation$2] = disabledElevation;
    this[S.padding$5] = padding;
    this[S.visualDensity$5] = visualDensity;
    this[S.constraints$1] = constraints;
    this[S.shape$10] = shape;
    this[S.animationDuration$1] = animationDuration;
    this[S.clipBehavior$7] = clipBehavior;
    this[S.focusNode$6] = focusNode;
    this[S.autofocus$6] = autofocus;
    this[S.child$8] = child;
    this[S.enableFeedback$4] = enableFeedback;
    this[S.materialTapTargetSize$3] = (t17 = materialTapTargetSize, t17 == null ? theme_data.MaterialTapTargetSize.padded : t17);
    if (!(shape != null)) dart.assertFailed(null, I[38], 80, 15, "shape != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[38], 81, 15, "elevation != null && elevation >= 0.0");
    if (!(focusElevation != null && dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[38], 82, 15, "focusElevation != null && focusElevation >= 0.0");
    if (!(hoverElevation != null && dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[38], 83, 15, "hoverElevation != null && hoverElevation >= 0.0");
    if (!(highlightElevation != null && dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[38], 84, 15, "highlightElevation != null && highlightElevation >= 0.0");
    if (!(disabledElevation != null && dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[38], 85, 15, "disabledElevation != null && disabledElevation >= 0.0");
    if (!(padding != null)) dart.assertFailed(null, I[38], 86, 15, "padding != null");
    if (!(constraints != null)) dart.assertFailed(null, I[38], 87, 15, "constraints != null");
    if (!(animationDuration != null)) dart.assertFailed(null, I[38], 88, 15, "animationDuration != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[38], 89, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[38], 90, 15, "autofocus != null");
    button.RawMaterialButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button.RawMaterialButton.prototype;
  dart.addTypeTests(button.RawMaterialButton);
  dart.addTypeCaches(button.RawMaterialButton);
  dart.setMethodSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getMethods(button.RawMaterialButton.__proto__),
    createState: dart.fnType(button._RawMaterialButtonState, [])
  }));
  dart.setGetterSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getGetters(button.RawMaterialButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(button.RawMaterialButton, I[39]);
  dart.setFieldSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getFields(button.RawMaterialButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(core.double),
    hoverElevation: dart.finalFieldType(core.double),
    focusElevation: dart.finalFieldType(core.double),
    highlightElevation: dart.finalFieldType(core.double),
    disabledElevation: dart.finalFieldType(core.double),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    visualDensity: dart.finalFieldType(theme_data.VisualDensity),
    constraints: dart.finalFieldType(box$.BoxConstraints),
    shape: dart.finalFieldType(borders.ShapeBorder),
    animationDuration: dart.finalFieldType(core.Duration),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    materialTapTargetSize: dart.finalFieldType(theme_data.MaterialTapTargetSize),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    clipBehavior: dart.finalFieldType(ui.Clip),
    enableFeedback: dart.finalFieldType(core.bool)
  }));
  button._RawMaterialButtonState = class _RawMaterialButtonState extends framework.State$(button.RawMaterialButton) {
    get [S._hovered$1]() {
      return this[S._states$1].contains(material_state.MaterialState.hovered);
    }
    get [S._focused$1]() {
      return this[S._states$1].contains(material_state.MaterialState.focused);
    }
    get [S._pressed$2]() {
      return this[S._states$1].contains(material_state.MaterialState.pressed);
    }
    get [S._disabled$1]() {
      return this[S._states$1].contains(material_state.MaterialState.disabled);
    }
    [S._updateState$1](state, value) {
      if (state == null) dart.nullFailed(I[38], 326, 35, "state");
      if (value == null) dart.nullFailed(I[38], 326, 47, "value");
      dart.test(value) ? this[S._states$1].add(state) : this[S._states$1].remove(state);
    }
    [S._handleHighlightChanged$2](value) {
      if (value == null) dart.nullFailed(I[38], 330, 37, "value");
      if (this[S._pressed$2] != value) {
        this.setState(dart.fn(() => {
          this[S._updateState$1](material_state.MaterialState.pressed, value);
          if (this.widget.onHighlightChanged != null) {
            dart.nullCheck(this.widget.onHighlightChanged)(value);
          }
        }, T$.VoidTovoid()));
      }
    }
    [S._handleHoveredChanged$1](value) {
      if (value == null) dart.nullFailed(I[38], 341, 35, "value");
      if (this[S._hovered$1] != value) {
        this.setState(dart.fn(() => {
          this[S._updateState$1](material_state.MaterialState.hovered, value);
        }, T$.VoidTovoid()));
      }
    }
    [S._handleFocusedChanged$1](value) {
      if (value == null) dart.nullFailed(I[38], 349, 35, "value");
      if (this[S._focused$1] != value) {
        this.setState(dart.fn(() => {
          this[S._updateState$1](material_state.MaterialState.focused, value);
        }, T$.VoidTovoid()));
      }
    }
    initState() {
      super.initState();
      this[S._updateState$1](material_state.MaterialState.disabled, !dart.test(this.widget.enabled));
    }
    didUpdateWidget(oldWidget) {
      button.RawMaterialButton.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[38], 364, 42, "oldWidget");
      super.didUpdateWidget(oldWidget);
      this[S._updateState$1](material_state.MaterialState.disabled, !dart.test(this.widget.enabled));
      if (dart.test(this[S._disabled$1]) && dart.test(this[S._pressed$2])) {
        this[S._handleHighlightChanged$2](false);
      }
    }
    get [S._effectiveElevation]() {
      if (dart.test(this[S._disabled$1])) {
        return this.widget.disabledElevation;
      }
      if (dart.test(this[S._pressed$2])) {
        return this.widget.highlightElevation;
      }
      if (dart.test(this[S._hovered$1])) {
        return this.widget.hoverElevation;
      }
      if (dart.test(this[S._focused$1])) {
        return this.widget.focusElevation;
      }
      return this.widget.elevation;
    }
    build(context) {
      let t17, t17$, t17$0;
      if (context == null) dart.nullFailed(I[38], 395, 29, "context");
      let effectiveTextColor = material_state.MaterialStateProperty.resolveAs(T$.ColorN(), (t17 = this.widget.textStyle, t17 == null ? null : t17.color), this[S._states$1]);
      let effectiveShape = material_state.MaterialStateProperty.resolveAs(T$.ShapeBorderN(), this.widget.shape, this[S._states$1]);
      let densityAdjustment = this.widget.visualDensity.baseSizeAdjustment;
      let effectiveConstraints = this.widget.visualDensity.effectiveConstraints(this.widget.constraints);
      let effectiveMouseCursor = material_state.MaterialStateProperty.resolveAs(T$.MouseCursorN(), (t17$ = this.widget.mouseCursor, t17$ == null ? material_state.MaterialStateMouseCursor.clickable : t17$), this[S._states$1]);
      let padding = this.widget.padding.add(new edge_insets.EdgeInsets.only({left: densityAdjustment.dx, top: densityAdjustment.dy, right: densityAdjustment.dx, bottom: densityAdjustment.dy})).clamp(edge_insets.EdgeInsets.zero, edge_insets.EdgeInsetsGeometry.infinity);
      let result = new basic.ConstrainedBox.new({constraints: effectiveConstraints, child: new material.Material.new({elevation: this[S._effectiveElevation], textStyle: (t17$0 = this.widget.textStyle, t17$0 == null ? null : t17$0.copyWith({color: effectiveTextColor})), shape: effectiveShape, color: this.widget.fillColor, type: this.widget.fillColor == null ? material.MaterialType.transparency : material.MaterialType.button, animationDuration: this.widget.animationDuration, clipBehavior: this.widget.clipBehavior, child: new ink_well.InkWell.new({focusNode: this.widget.focusNode, canRequestFocus: this.widget.enabled, onFocusChange: dart.bind(this, S._handleFocusedChanged$1), autofocus: this.widget.autofocus, onHighlightChanged: dart.bind(this, S._handleHighlightChanged$2), splashColor: this.widget.splashColor, highlightColor: this.widget.highlightColor, focusColor: this.widget.focusColor, hoverColor: this.widget.hoverColor, onHover: dart.bind(this, S._handleHoveredChanged$1), onTap: this.widget.onPressed, onLongPress: this.widget.onLongPress, enableFeedback: this.widget.enableFeedback, customBorder: effectiveShape, mouseCursor: effectiveMouseCursor, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: effectiveTextColor}), child: new container.Container.new({padding: padding, child: new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[1051] || CT.C1051}), $creationLocationd_0dea112b090073317d4: C[1056] || CT.C1056})}), $creationLocationd_0dea112b090073317d4: C[1060] || CT.C1060}), $creationLocationd_0dea112b090073317d4: C[1078] || CT.C1078}), $creationLocationd_0dea112b090073317d4: C[1088] || CT.C1088});
      let minSize = null;
      switch (this.widget.materialTapTargetSize) {
        case C[138] || CT.C138:
        {
          minSize = new ui.Size.new(48 + dart.notNull(densityAdjustment.dx), 48 + dart.notNull(densityAdjustment.dy));
          if (!(dart.notNull(minSize.width) >= 0.0)) dart.assertFailed(null, I[38], 461, 16, "minSize.width >= 0.0");
          if (!(dart.notNull(minSize.height) >= 0.0)) dart.assertFailed(null, I[38], 462, 16, "minSize.height >= 0.0");
          break;
        }
        case C[139] || CT.C139:
        {
          minSize = ui.Size.zero;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new basic.Semantics.new({container: true, button: true, enabled: this.widget.enabled, child: new button._InputPadding.new({minSize: minSize, child: result, $creationLocationd_0dea112b090073317d4: C[1092] || CT.C1092}), $creationLocationd_0dea112b090073317d4: C[1096] || CT.C1096});
    }
  };
  (button._RawMaterialButtonState.new = function() {
    this[S._states$1] = T$.LinkedHashSetOfMaterialState().new();
    button._RawMaterialButtonState.__proto__.new.call(this);
    ;
  }).prototype = button._RawMaterialButtonState.prototype;
  dart.addTypeTests(button._RawMaterialButtonState);
  dart.addTypeCaches(button._RawMaterialButtonState);
  dart.setMethodSignature(button._RawMaterialButtonState, () => ({
    __proto__: dart.getMethods(button._RawMaterialButtonState.__proto__),
    [S._updateState$1]: dart.fnType(dart.void, [material_state.MaterialState, core.bool]),
    [S._handleHighlightChanged$2]: dart.fnType(dart.void, [core.bool]),
    [S._handleHoveredChanged$1]: dart.fnType(dart.void, [core.bool]),
    [S._handleFocusedChanged$1]: dart.fnType(dart.void, [core.bool]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(button._RawMaterialButtonState, () => ({
    __proto__: dart.getGetters(button._RawMaterialButtonState.__proto__),
    [S._hovered$1]: core.bool,
    [S._focused$1]: core.bool,
    [S._pressed$2]: core.bool,
    [S._disabled$1]: core.bool,
    [S._effectiveElevation]: core.double
  }));
  dart.setLibraryUri(button._RawMaterialButtonState, I[39]);
  dart.setFieldSignature(button._RawMaterialButtonState, () => ({
    __proto__: dart.getFields(button._RawMaterialButtonState.__proto__),
    [S._states$1]: dart.finalFieldType(core.Set$(material_state.MaterialState))
  }));
  button._InputPadding = class _InputPadding extends framework.SingleChildRenderObjectWidget {
    get minSize() {
      return this[S.minSize$1];
    }
    set minSize(value) {
      super.minSize = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[38], 496, 48, "context");
      return new button._RenderInputPadding.new(this.minSize);
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(I[38], 501, 40, "context");
      button._RenderInputPadding.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[38], 501, 79, "renderObject");
      renderObject.minSize = this.minSize;
    }
  };
  (button._InputPadding.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let minSize = opts && 'minSize' in opts ? opts.minSize : null;
    if (minSize == null) dart.nullFailed(I[38], 490, 19, "minSize");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.minSize$1] = minSize;
    button._InputPadding.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button._InputPadding.prototype;
  dart.addTypeTests(button._InputPadding);
  dart.addTypeCaches(button._InputPadding);
  dart.setMethodSignature(button._InputPadding, () => ({
    __proto__: dart.getMethods(button._InputPadding.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(button._InputPadding, I[39]);
  dart.setFieldSignature(button._InputPadding, () => ({
    __proto__: dart.getFields(button._InputPadding.__proto__),
    minSize: dart.finalFieldType(ui.Size)
  }));
  button._RenderInputPadding = class _RenderInputPadding extends shifted_box.RenderShiftedBox {
    get minSize() {
      return this[S._minSize$1];
    }
    set minSize(value) {
      if (value == null) dart.nullFailed(I[38], 511, 20, "value");
      if (dart.equals(this[S._minSize$1], value)) return;
      this[S._minSize$1] = value;
      this.markNeedsLayout();
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[38], 519, 42, "height");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicWidth(height), this.minSize.width);
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[38], 526, 43, "width");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicHeight(width), this.minSize.height);
      return 0.0;
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[38], 533, 42, "height");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicWidth(height), this.minSize.width);
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[38], 540, 43, "width");
      if (this.child != null) return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicHeight(width), this.minSize.height);
      return 0.0;
    }
    [S._computeSize$1](opts) {
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      if (constraints == null) dart.nullFailed(I[38], 546, 46, "constraints");
      let layoutChild = opts && 'layoutChild' in opts ? opts.layoutChild : null;
      if (layoutChild == null) dart.nullFailed(I[38], 546, 82, "layoutChild");
      if (this.child != null) {
        let childSize = layoutChild(dart.nullCheck(this.child), constraints);
        let height = math.max(core.double, childSize.width, this.minSize.width);
        let width = math.max(core.double, childSize.height, this.minSize.height);
        return constraints.constrain(new ui.Size.new(height, width));
      }
      return ui.Size.zero;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[38], 557, 40, "constraints");
      return this[S._computeSize$1]({constraints: constraints, layoutChild: C[150] || CT.C150});
    }
    performLayout() {
      this.size = this[S._computeSize$1]({constraints: this.constraints, layoutChild: C[151] || CT.C151});
      if (this.child != null) {
        let childParentData = box$.BoxParentData.as(dart.nullCheck(dart.nullCheck(this.child).parentData));
        childParentData.offset = alignment.Alignment.center.alongOffset(ui.Offset.as(this.size['-'](dart.nullCheck(this.child).size)));
      }
    }
    hitTest(result, opts) {
      if (result == null) dart.nullFailed(I[38], 577, 33, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[38], 577, 59, "position");
      if (dart.test(super.hitTest(result, {position: position}))) {
        return true;
      }
      let center = dart.nullCheck(this.child).size.center(ui.Offset.zero);
      return result.addWithRawTransform({transform: matrix_utils.MatrixUtils.forceToPoint(center), position: center, hitTest: dart.fn((result, position) => {
          if (result == null) dart.nullFailed(I[38], 585, 34, "result");
          if (!dart.equals(position, center)) dart.assertFailed(null, I[38], 586, 16, "position == center");
          return dart.nullCheck(this.child).hitTest(result, {position: center});
        }, T$.BoxHitTestResultAndOffsetNTobool())});
    }
  };
  (button._RenderInputPadding.new = function(_minSize, child = null) {
    if (_minSize == null) dart.nullFailed(I[38], 507, 28, "_minSize");
    this[S._minSize$1] = _minSize;
    button._RenderInputPadding.__proto__.new.call(this, child);
    ;
  }).prototype = button._RenderInputPadding.prototype;
  dart.addTypeTests(button._RenderInputPadding);
  dart.addTypeCaches(button._RenderInputPadding);
  dart.setMethodSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getMethods(button._RenderInputPadding.__proto__),
    [S._computeSize$1]: dart.fnType(ui.Size, [], {}, {constraints: box$.BoxConstraints, layoutChild: dart.fnType(ui.Size, [box$.RenderBox, box$.BoxConstraints])})
  }));
  dart.setGetterSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getGetters(button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setSetterSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getSetters(button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setLibraryUri(button._RenderInputPadding, I[39]);
  dart.setFieldSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getFields(button._RenderInputPadding.__proto__),
    [S._minSize$1]: dart.fieldType(ui.Size)
  }));
  flat_button.FlatButton = class FlatButton extends material_button.MaterialButton {
    build(context) {
      let t17;
      if (context == null) dart.nullFailed(I[40], 127, 29, "context");
      let theme = theme$.Theme.of(context);
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new button.RawMaterialButton.new({onPressed: this.onPressed, onLongPress: this.onLongPress, onHighlightChanged: this.onHighlightChanged, mouseCursor: this.mouseCursor, fillColor: buttonTheme.getFillColor(this), textStyle: dart.nullCheck(theme.textTheme.button).copyWith({color: buttonTheme.getTextColor(this)}), focusColor: buttonTheme.getFocusColor(this), hoverColor: buttonTheme.getHoverColor(this), highlightColor: buttonTheme.getHighlightColor(this), splashColor: buttonTheme.getSplashColor(this), elevation: buttonTheme.getElevation(this), focusElevation: buttonTheme.getFocusElevation(this), hoverElevation: buttonTheme.getHoverElevation(this), highlightElevation: buttonTheme.getHighlightElevation(this), disabledElevation: buttonTheme.getDisabledElevation(this), padding: buttonTheme.getPadding(this), visualDensity: (t17 = this.visualDensity, t17 == null ? theme.visualDensity : t17), constraints: buttonTheme.getConstraints(this).copyWith({minWidth: this.minWidth, minHeight: this.height}), shape: buttonTheme.getShape(this), clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, materialTapTargetSize: buttonTheme.getMaterialTapTargetSize(this), animationDuration: buttonTheme.getAnimationDuration(this), child: this.child, $creationLocationd_0dea112b090073317d4: C[1102] || CT.C1102});
    }
  };
  (flat_button.FlatButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[40], 54, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[40], 56, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[40], 58, 21, "child");
    let height = opts && 'height' in opts ? opts.height : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(clipBehavior != null)) dart.assertFailed(null, I[40], 61, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[40], 62, 15, "autofocus != null");
    flat_button.FlatButton.__proto__.new.call(this, {key: key, height: height, minWidth: minWidth, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flat_button.FlatButton.prototype;
  dart.addTypeTests(flat_button.FlatButton);
  dart.addTypeCaches(flat_button.FlatButton);
  dart.setLibraryUri(flat_button.FlatButton, I[41]);
  const FlatButton_MaterialButtonWithIconMixin$36 = class FlatButton_MaterialButtonWithIconMixin extends flat_button.FlatButton {};
  (FlatButton_MaterialButtonWithIconMixin$36.new = function(opts) {
    FlatButton_MaterialButtonWithIconMixin$36.__proto__.new.call(this, opts);
  }).prototype = FlatButton_MaterialButtonWithIconMixin$36.prototype;
  dart.applyMixin(FlatButton_MaterialButtonWithIconMixin$36, material_button.MaterialButtonWithIconMixin);
  flat_button._FlatButtonWithIcon = class _FlatButtonWithIcon extends FlatButton_MaterialButtonWithIconMixin$36 {};
  (flat_button._FlatButtonWithIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[40], 186, 10, "clipBehavior");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[40], 188, 10, "autofocus");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[40], 190, 21, "icon");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[40], 191, 21, "label");
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(icon != null)) dart.assertFailed(null, I[40], 194, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[40], 195, 15, "label != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[40], 196, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[40], 197, 15, "autofocus != null");
    flat_button._FlatButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, padding: padding, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([icon, C[1129] || CT.C1129, label]), $creationLocationd_0dea112b090073317d4: C[1133] || CT.C1133}), minWidth: minWidth, height: height, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flat_button._FlatButtonWithIcon.prototype;
  dart.addTypeTests(flat_button._FlatButtonWithIcon);
  dart.addTypeCaches(flat_button._FlatButtonWithIcon);
  dart.setLibraryUri(flat_button._FlatButtonWithIcon, I[41]);
  const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36.new = function() {
  }).prototype = Object_Diagnosticable$36.prototype;
  dart.applyMixin(Object_Diagnosticable$36, diagnostics.Diagnosticable);
  toggle_buttons_theme.ToggleButtonsThemeData = class ToggleButtonsThemeData extends Object_Diagnosticable$36 {
    get textStyle() {
      return this[S.textStyle$1];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get constraints() {
      return this[S$.constraints$2];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get color() {
      return this[S$.color$7];
    }
    set color(value) {
      super.color = value;
    }
    get selectedColor() {
      return this[S$.selectedColor$1];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get disabledColor() {
      return this[S$.disabledColor$2];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get fillColor() {
      return this[S$.fillColor$1];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S$.focusColor$6];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get highlightColor() {
      return this[S$.highlightColor$4];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[S$.splashColor$5];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$6];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get borderColor() {
      return this[S$.borderColor];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get selectedBorderColor() {
      return this[S$.selectedBorderColor];
    }
    set selectedBorderColor(value) {
      super.selectedBorderColor = value;
    }
    get disabledBorderColor() {
      return this[S$.disabledBorderColor$2];
    }
    set disabledBorderColor(value) {
      super.disabledBorderColor = value;
    }
    get borderWidth() {
      return this[S$.borderWidth];
    }
    set borderWidth(value) {
      super.borderWidth = value;
    }
    get borderRadius() {
      return this[S$.borderRadius];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    copyWith(opts) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3, t17$4, t17$5, t17$6, t17$7, t17$8, t17$9, t17$10, t17$11, t17$12;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let selectedBorderColor = opts && 'selectedBorderColor' in opts ? opts.selectedBorderColor : null;
      let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
      return new toggle_buttons_theme.ToggleButtonsThemeData.new({textStyle: (t17 = textStyle, t17 == null ? this.textStyle : t17), constraints: (t17$ = constraints, t17$ == null ? this.constraints : t17$), color: (t17$0 = color, t17$0 == null ? this.color : t17$0), selectedColor: (t17$1 = selectedColor, t17$1 == null ? this.selectedColor : t17$1), disabledColor: (t17$2 = disabledColor, t17$2 == null ? this.disabledColor : t17$2), fillColor: (t17$3 = fillColor, t17$3 == null ? this.fillColor : t17$3), focusColor: (t17$4 = focusColor, t17$4 == null ? this.focusColor : t17$4), highlightColor: (t17$5 = highlightColor, t17$5 == null ? this.highlightColor : t17$5), hoverColor: (t17$6 = hoverColor, t17$6 == null ? this.hoverColor : t17$6), splashColor: (t17$7 = splashColor, t17$7 == null ? this.splashColor : t17$7), borderColor: (t17$8 = borderColor, t17$8 == null ? this.borderColor : t17$8), selectedBorderColor: (t17$9 = selectedBorderColor, t17$9 == null ? this.selectedBorderColor : t17$9), disabledBorderColor: (t17$10 = disabledBorderColor, t17$10 == null ? this.disabledBorderColor : t17$10), borderRadius: (t17$11 = borderRadius, t17$11 == null ? this.borderRadius : t17$11), borderWidth: (t17$12 = borderWidth, t17$12 == null ? this.borderWidth : t17$12)});
    }
    static lerp(a, b, t) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3, t17$4, t17$5, t17$6, t17$7, t17$8, t17$9, t17$10, t17$11, t17$12, t17$13, t17$14, t17$15, t17$16, t17$17, t17$18, t17$19, t17$20, t17$21, t17$22, t17$23, t17$24, t17$25, t17$26, t17$27;
      if (t == null) dart.nullFailed(I[42], 149, 100, "t");
      if (!(t != null)) dart.assertFailed(null, I[42], 150, 13, "t != null");
      if (a == null && b == null) return null;
      return new toggle_buttons_theme.ToggleButtonsThemeData.new({textStyle: text_style.TextStyle.lerp((t17 = a, t17 == null ? null : t17.textStyle), (t17$ = b, t17$ == null ? null : t17$.textStyle), t), constraints: box$.BoxConstraints.lerp((t17$0 = a, t17$0 == null ? null : t17$0.constraints), (t17$1 = b, t17$1 == null ? null : t17$1.constraints), t), color: ui.Color.lerp((t17$2 = a, t17$2 == null ? null : t17$2.color), (t17$3 = b, t17$3 == null ? null : t17$3.color), t), selectedColor: ui.Color.lerp((t17$4 = a, t17$4 == null ? null : t17$4.selectedColor), (t17$5 = b, t17$5 == null ? null : t17$5.selectedColor), t), disabledColor: ui.Color.lerp((t17$6 = a, t17$6 == null ? null : t17$6.disabledColor), (t17$7 = b, t17$7 == null ? null : t17$7.disabledColor), t), fillColor: ui.Color.lerp((t17$8 = a, t17$8 == null ? null : t17$8.fillColor), (t17$9 = b, t17$9 == null ? null : t17$9.fillColor), t), focusColor: ui.Color.lerp((t17$10 = a, t17$10 == null ? null : t17$10.focusColor), (t17$11 = b, t17$11 == null ? null : t17$11.focusColor), t), highlightColor: ui.Color.lerp((t17$12 = a, t17$12 == null ? null : t17$12.highlightColor), (t17$13 = b, t17$13 == null ? null : t17$13.highlightColor), t), hoverColor: ui.Color.lerp((t17$14 = a, t17$14 == null ? null : t17$14.hoverColor), (t17$15 = b, t17$15 == null ? null : t17$15.hoverColor), t), splashColor: ui.Color.lerp((t17$16 = a, t17$16 == null ? null : t17$16.splashColor), (t17$17 = b, t17$17 == null ? null : t17$17.splashColor), t), borderColor: ui.Color.lerp((t17$18 = a, t17$18 == null ? null : t17$18.borderColor), (t17$19 = b, t17$19 == null ? null : t17$19.borderColor), t), selectedBorderColor: ui.Color.lerp((t17$20 = a, t17$20 == null ? null : t17$20.selectedBorderColor), (t17$21 = b, t17$21 == null ? null : t17$21.selectedBorderColor), t), disabledBorderColor: ui.Color.lerp((t17$22 = a, t17$22 == null ? null : t17$22.disabledBorderColor), (t17$23 = b, t17$23 == null ? null : t17$23.disabledBorderColor), t), borderRadius: border_radius.BorderRadius.lerp((t17$24 = a, t17$24 == null ? null : t17$24.borderRadius), (t17$25 = b, t17$25 == null ? null : t17$25.borderRadius), t), borderWidth: ui.lerpDouble((t17$26 = a, t17$26 == null ? null : t17$26.borderWidth), (t17$27 = b, t17$27 == null ? null : t17$27.borderWidth), t)});
    }
    get hashCode() {
      return ui.hashValues(this.textStyle, this.constraints, this.color, this.selectedColor, this.disabledColor, this.fillColor, this.focusColor, this.highlightColor, this.hoverColor, this.splashColor, this.borderColor, this.selectedBorderColor, this.disabledBorderColor, this.borderRadius, this.borderWidth);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return toggle_buttons_theme.ToggleButtonsThemeData.is(other) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.constraints, this.constraints) && dart.equals(other.color, this.color) && dart.equals(other.selectedColor, this.selectedColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.highlightColor, this.highlightColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.splashColor, this.splashColor) && dart.equals(other.borderColor, this.borderColor) && dart.equals(other.selectedBorderColor, this.selectedBorderColor) && dart.equals(other.disabledBorderColor, this.disabledBorderColor) && dart.equals(other.borderRadius, this.borderRadius) && other.borderWidth == this.borderWidth;
    }
    debugFillProperties(properties) {
      let t17;
      if (properties == null) dart.nullFailed(I[42], 218, 56, "properties");
      super.debugFillProperties(properties);
      t17 = this.textStyle;
      t17 == null ? null : t17.debugFillProperties(properties, {prefix: "textStyle."});
      properties.add(new (T$.DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedColor", this.selectedColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("fillColor", this.fillColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("borderColor", this.borderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedBorderColor", this.selectedBorderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledBorderColor", this.disabledBorderColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderRadius()).new("borderRadius", this.borderRadius, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("borderWidth", this.borderWidth, {defaultValue: null}));
    }
  };
  (toggle_buttons_theme.ToggleButtonsThemeData.new = function(opts) {
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let selectedBorderColor = opts && 'selectedBorderColor' in opts ? opts.selectedBorderColor : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
    this[S.textStyle$1] = textStyle;
    this[S$.constraints$2] = constraints;
    this[S$.color$7] = color;
    this[S$.selectedColor$1] = selectedColor;
    this[S$.disabledColor$2] = disabledColor;
    this[S$.fillColor$1] = fillColor;
    this[S$.focusColor$6] = focusColor;
    this[S$.highlightColor$4] = highlightColor;
    this[S$.hoverColor$6] = hoverColor;
    this[S$.splashColor$5] = splashColor;
    this[S$.borderColor] = borderColor;
    this[S$.selectedBorderColor] = selectedBorderColor;
    this[S$.disabledBorderColor$2] = disabledBorderColor;
    this[S$.borderRadius] = borderRadius;
    this[S$.borderWidth] = borderWidth;
    ;
  }).prototype = toggle_buttons_theme.ToggleButtonsThemeData.prototype;
  dart.addTypeTests(toggle_buttons_theme.ToggleButtonsThemeData);
  dart.addTypeCaches(toggle_buttons_theme.ToggleButtonsThemeData);
  dart.setMethodSignature(toggle_buttons_theme.ToggleButtonsThemeData, () => ({
    __proto__: dart.getMethods(toggle_buttons_theme.ToggleButtonsThemeData.__proto__),
    copyWith: dart.fnType(toggle_buttons_theme.ToggleButtonsThemeData, [], {borderColor: dart.nullable(ui.Color), borderRadius: dart.nullable(border_radius.BorderRadius), borderWidth: dart.nullable(core.double), color: dart.nullable(ui.Color), constraints: dart.nullable(box$.BoxConstraints), disabledBorderColor: dart.nullable(ui.Color), disabledColor: dart.nullable(ui.Color), fillColor: dart.nullable(ui.Color), focusColor: dart.nullable(ui.Color), highlightColor: dart.nullable(ui.Color), hoverColor: dart.nullable(ui.Color), selectedBorderColor: dart.nullable(ui.Color), selectedColor: dart.nullable(ui.Color), splashColor: dart.nullable(ui.Color), textStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(toggle_buttons_theme.ToggleButtonsThemeData, I[43]);
  dart.setFieldSignature(toggle_buttons_theme.ToggleButtonsThemeData, () => ({
    __proto__: dart.getFields(toggle_buttons_theme.ToggleButtonsThemeData.__proto__),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderWidth: dart.finalFieldType(dart.nullable(core.double)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius))
  }));
  dart.defineExtensionMethods(toggle_buttons_theme.ToggleButtonsThemeData, ['_equals']);
  dart.defineExtensionAccessors(toggle_buttons_theme.ToggleButtonsThemeData, ['hashCode']);
  toggle_buttons_theme.ToggleButtonsTheme = class ToggleButtonsTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t17, t17$;
      if (context == null) dart.nullFailed(I[42], 267, 49, "context");
      let toggleButtonsTheme = context.dependOnInheritedWidgetOfExactType(toggle_buttons_theme.ToggleButtonsTheme);
      t17$ = (t17 = toggleButtonsTheme, t17 == null ? null : t17.data);
      return t17$ == null ? theme$.Theme.of(context).toggleButtonsTheme : t17$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[42], 273, 28, "context");
      if (child == null) dart.nullFailed(I[42], 273, 44, "child");
      return new toggle_buttons_theme.ToggleButtonsTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1137] || CT.C1137});
    }
    updateShouldNotify(oldWidget) {
      toggle_buttons_theme.ToggleButtonsTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[42], 278, 46, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (toggle_buttons_theme.ToggleButtonsTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[42], 250, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[42], 251, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data] = data;
    if (!(data != null)) dart.assertFailed(null, I[42], 252, 15, "data != null");
    toggle_buttons_theme.ToggleButtonsTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = toggle_buttons_theme.ToggleButtonsTheme.prototype;
  dart.addTypeTests(toggle_buttons_theme.ToggleButtonsTheme);
  dart.addTypeCaches(toggle_buttons_theme.ToggleButtonsTheme);
  dart.setMethodSignature(toggle_buttons_theme.ToggleButtonsTheme, () => ({
    __proto__: dart.getMethods(toggle_buttons_theme.ToggleButtonsTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(toggle_buttons_theme.ToggleButtonsTheme, I[43]);
  dart.setFieldSignature(toggle_buttons_theme.ToggleButtonsTheme, () => ({
    __proto__: dart.getFields(toggle_buttons_theme.ToggleButtonsTheme.__proto__),
    data: dart.finalFieldType(toggle_buttons_theme.ToggleButtonsThemeData)
  }));
  const Object_Diagnosticable$36$ = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$.new = function() {
  }).prototype = Object_Diagnosticable$36$.prototype;
  dart.applyMixin(Object_Diagnosticable$36$, diagnostics.Diagnosticable);
  time_picker_theme.TimePickerThemeData = class TimePickerThemeData extends Object_Diagnosticable$36$ {
    get backgroundColor() {
      return this[S$.backgroundColor$5];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get hourMinuteTextColor() {
      return this[S$.hourMinuteTextColor];
    }
    set hourMinuteTextColor(value) {
      super.hourMinuteTextColor = value;
    }
    get hourMinuteColor() {
      return this[S$.hourMinuteColor];
    }
    set hourMinuteColor(value) {
      super.hourMinuteColor = value;
    }
    get dayPeriodTextColor() {
      return this[S$.dayPeriodTextColor];
    }
    set dayPeriodTextColor(value) {
      super.dayPeriodTextColor = value;
    }
    get dayPeriodColor() {
      return this[S$.dayPeriodColor];
    }
    set dayPeriodColor(value) {
      super.dayPeriodColor = value;
    }
    get dialHandColor() {
      return this[S$.dialHandColor];
    }
    set dialHandColor(value) {
      super.dialHandColor = value;
    }
    get dialBackgroundColor() {
      return this[S$.dialBackgroundColor];
    }
    set dialBackgroundColor(value) {
      super.dialBackgroundColor = value;
    }
    get dialTextColor() {
      return this[S$.dialTextColor];
    }
    set dialTextColor(value) {
      super.dialTextColor = value;
    }
    get entryModeIconColor() {
      return this[S$.entryModeIconColor];
    }
    set entryModeIconColor(value) {
      super.entryModeIconColor = value;
    }
    get hourMinuteTextStyle() {
      return this[S$.hourMinuteTextStyle];
    }
    set hourMinuteTextStyle(value) {
      super.hourMinuteTextStyle = value;
    }
    get dayPeriodTextStyle() {
      return this[S$.dayPeriodTextStyle];
    }
    set dayPeriodTextStyle(value) {
      super.dayPeriodTextStyle = value;
    }
    get helpTextStyle() {
      return this[S$.helpTextStyle];
    }
    set helpTextStyle(value) {
      super.helpTextStyle = value;
    }
    get shape() {
      return this[S$.shape$11];
    }
    set shape(value) {
      super.shape = value;
    }
    get hourMinuteShape() {
      return this[S$.hourMinuteShape];
    }
    set hourMinuteShape(value) {
      super.hourMinuteShape = value;
    }
    get dayPeriodShape() {
      return this[S$.dayPeriodShape];
    }
    set dayPeriodShape(value) {
      super.dayPeriodShape = value;
    }
    get dayPeriodBorderSide() {
      return this[S$.dayPeriodBorderSide];
    }
    set dayPeriodBorderSide(value) {
      super.dayPeriodBorderSide = value;
    }
    get inputDecorationTheme() {
      return this[S$.inputDecorationTheme];
    }
    set inputDecorationTheme(value) {
      super.inputDecorationTheme = value;
    }
    copyWith(opts) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3, t17$4, t17$5, t17$6, t17$7, t17$8, t17$9, t17$10, t17$11, t17$12, t17$13, t17$14;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let hourMinuteTextColor = opts && 'hourMinuteTextColor' in opts ? opts.hourMinuteTextColor : null;
      let hourMinuteColor = opts && 'hourMinuteColor' in opts ? opts.hourMinuteColor : null;
      let dayPeriodTextColor = opts && 'dayPeriodTextColor' in opts ? opts.dayPeriodTextColor : null;
      let dayPeriodColor = opts && 'dayPeriodColor' in opts ? opts.dayPeriodColor : null;
      let dialHandColor = opts && 'dialHandColor' in opts ? opts.dialHandColor : null;
      let dialBackgroundColor = opts && 'dialBackgroundColor' in opts ? opts.dialBackgroundColor : null;
      let dialTextColor = opts && 'dialTextColor' in opts ? opts.dialTextColor : null;
      let entryModeIconColor = opts && 'entryModeIconColor' in opts ? opts.entryModeIconColor : null;
      let hourMinuteTextStyle = opts && 'hourMinuteTextStyle' in opts ? opts.hourMinuteTextStyle : null;
      let dayPeriodTextStyle = opts && 'dayPeriodTextStyle' in opts ? opts.dayPeriodTextStyle : null;
      let helpTextStyle = opts && 'helpTextStyle' in opts ? opts.helpTextStyle : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let hourMinuteShape = opts && 'hourMinuteShape' in opts ? opts.hourMinuteShape : null;
      let dayPeriodShape = opts && 'dayPeriodShape' in opts ? opts.dayPeriodShape : null;
      let dayPeriodBorderSide = opts && 'dayPeriodBorderSide' in opts ? opts.dayPeriodBorderSide : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      return new time_picker_theme.TimePickerThemeData.new({backgroundColor: (t17 = backgroundColor, t17 == null ? this.backgroundColor : t17), hourMinuteTextColor: (t17$ = hourMinuteTextColor, t17$ == null ? this.hourMinuteTextColor : t17$), hourMinuteColor: (t17$0 = hourMinuteColor, t17$0 == null ? this.hourMinuteColor : t17$0), dayPeriodTextColor: (t17$1 = dayPeriodTextColor, t17$1 == null ? this.dayPeriodTextColor : t17$1), dayPeriodColor: (t17$2 = dayPeriodColor, t17$2 == null ? this.dayPeriodColor : t17$2), dialHandColor: (t17$3 = dialHandColor, t17$3 == null ? this.dialHandColor : t17$3), dialBackgroundColor: (t17$4 = dialBackgroundColor, t17$4 == null ? this.dialBackgroundColor : t17$4), dialTextColor: (t17$5 = dialTextColor, t17$5 == null ? this.dialTextColor : t17$5), entryModeIconColor: (t17$6 = entryModeIconColor, t17$6 == null ? this.entryModeIconColor : t17$6), hourMinuteTextStyle: (t17$7 = hourMinuteTextStyle, t17$7 == null ? this.hourMinuteTextStyle : t17$7), dayPeriodTextStyle: (t17$8 = dayPeriodTextStyle, t17$8 == null ? this.dayPeriodTextStyle : t17$8), helpTextStyle: (t17$9 = helpTextStyle, t17$9 == null ? this.helpTextStyle : t17$9), shape: (t17$10 = shape, t17$10 == null ? this.shape : t17$10), hourMinuteShape: (t17$11 = hourMinuteShape, t17$11 == null ? this.hourMinuteShape : t17$11), dayPeriodShape: (t17$12 = dayPeriodShape, t17$12 == null ? this.dayPeriodShape : t17$12), dayPeriodBorderSide: (t17$13 = dayPeriodBorderSide, t17$13 == null ? this.dayPeriodBorderSide : t17$13), inputDecorationTheme: (t17$14 = inputDecorationTheme, t17$14 == null ? this.inputDecorationTheme : t17$14)});
    }
    static lerp(a, b, t) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3, t17$4, t17$5, t17$6, t17$7, t17$8, t17$9, t17$10, t17$11, t17$12, t17$13, t17$14, t17$15, t17$16, t17$17, t17$18, t17$19, t17$20, t17$21, t17$22, t17$23, t17$24, t17$25, t17$26, t17$27, t17$28, t17$29, t17$30, t17$31, t17$32, t17$33, t17$34, t17$35;
      if (t == null) dart.nullFailed(I[44], 246, 90, "t");
      if (!(t != null)) dart.assertFailed(null, I[44], 247, 12, "t != null");
      let lerpedBorderSide = null;
      if ((t17 = a, t17 == null ? null : t17.dayPeriodBorderSide) == null && (t17$ = b, t17$ == null ? null : t17$.dayPeriodBorderSide) == null) {
        lerpedBorderSide = null;
      } else if ((t17$0 = a, t17$0 == null ? null : t17$0.dayPeriodBorderSide) == null) {
        lerpedBorderSide = (t17$1 = b, t17$1 == null ? null : t17$1.dayPeriodBorderSide);
      } else if ((t17$2 = b, t17$2 == null ? null : t17$2.dayPeriodBorderSide) == null) {
        lerpedBorderSide = (t17$3 = a, t17$3 == null ? null : t17$3.dayPeriodBorderSide);
      } else {
        lerpedBorderSide = borders.BorderSide.lerp(dart.nullCheck(dart.nullCheck(a).dayPeriodBorderSide), dart.nullCheck(dart.nullCheck(b).dayPeriodBorderSide), t);
      }
      return new time_picker_theme.TimePickerThemeData.new({backgroundColor: ui.Color.lerp((t17$4 = a, t17$4 == null ? null : t17$4.backgroundColor), (t17$5 = b, t17$5 == null ? null : t17$5.backgroundColor), t), hourMinuteTextColor: ui.Color.lerp((t17$6 = a, t17$6 == null ? null : t17$6.hourMinuteTextColor), (t17$7 = b, t17$7 == null ? null : t17$7.hourMinuteTextColor), t), hourMinuteColor: ui.Color.lerp((t17$8 = a, t17$8 == null ? null : t17$8.hourMinuteColor), (t17$9 = b, t17$9 == null ? null : t17$9.hourMinuteColor), t), dayPeriodTextColor: ui.Color.lerp((t17$10 = a, t17$10 == null ? null : t17$10.dayPeriodTextColor), (t17$11 = b, t17$11 == null ? null : t17$11.dayPeriodTextColor), t), dayPeriodColor: ui.Color.lerp((t17$12 = a, t17$12 == null ? null : t17$12.dayPeriodColor), (t17$13 = b, t17$13 == null ? null : t17$13.dayPeriodColor), t), dialHandColor: ui.Color.lerp((t17$14 = a, t17$14 == null ? null : t17$14.dialHandColor), (t17$15 = b, t17$15 == null ? null : t17$15.dialHandColor), t), dialBackgroundColor: ui.Color.lerp((t17$16 = a, t17$16 == null ? null : t17$16.dialBackgroundColor), (t17$17 = b, t17$17 == null ? null : t17$17.dialBackgroundColor), t), dialTextColor: ui.Color.lerp((t17$18 = a, t17$18 == null ? null : t17$18.dialTextColor), (t17$19 = b, t17$19 == null ? null : t17$19.dialTextColor), t), entryModeIconColor: ui.Color.lerp((t17$20 = a, t17$20 == null ? null : t17$20.entryModeIconColor), (t17$21 = b, t17$21 == null ? null : t17$21.entryModeIconColor), t), hourMinuteTextStyle: text_style.TextStyle.lerp((t17$22 = a, t17$22 == null ? null : t17$22.hourMinuteTextStyle), (t17$23 = b, t17$23 == null ? null : t17$23.hourMinuteTextStyle), t), dayPeriodTextStyle: text_style.TextStyle.lerp((t17$24 = a, t17$24 == null ? null : t17$24.dayPeriodTextStyle), (t17$25 = b, t17$25 == null ? null : t17$25.dayPeriodTextStyle), t), helpTextStyle: text_style.TextStyle.lerp((t17$26 = a, t17$26 == null ? null : t17$26.helpTextStyle), (t17$27 = b, t17$27 == null ? null : t17$27.helpTextStyle), t), shape: borders.ShapeBorder.lerp((t17$28 = a, t17$28 == null ? null : t17$28.shape), (t17$29 = b, t17$29 == null ? null : t17$29.shape), t), hourMinuteShape: borders.ShapeBorder.lerp((t17$30 = a, t17$30 == null ? null : t17$30.hourMinuteShape), (t17$31 = b, t17$31 == null ? null : t17$31.hourMinuteShape), t), dayPeriodShape: T$.OutlinedBorderN().as(borders.ShapeBorder.lerp((t17$32 = a, t17$32 == null ? null : t17$32.dayPeriodShape), (t17$33 = b, t17$33 == null ? null : t17$33.dayPeriodShape), t)), dayPeriodBorderSide: lerpedBorderSide, inputDecorationTheme: dart.notNull(t) < 0.5 ? (t17$34 = a, t17$34 == null ? null : t17$34.inputDecorationTheme) : (t17$35 = b, t17$35 == null ? null : t17$35.inputDecorationTheme)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.hourMinuteTextColor, this.hourMinuteColor, this.dayPeriodTextColor, this.dayPeriodColor, this.dialHandColor, this.dialBackgroundColor, this.dialTextColor, this.entryModeIconColor, this.hourMinuteTextStyle, this.dayPeriodTextStyle, this.helpTextStyle, this.shape, this.hourMinuteShape, this.dayPeriodShape, this.dayPeriodBorderSide, this.inputDecorationTheme);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return time_picker_theme.TimePickerThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.hourMinuteTextColor, this.hourMinuteTextColor) && dart.equals(other.hourMinuteColor, this.hourMinuteColor) && dart.equals(other.dayPeriodTextColor, this.dayPeriodTextColor) && dart.equals(other.dayPeriodColor, this.dayPeriodColor) && dart.equals(other.dialHandColor, this.dialHandColor) && dart.equals(other.dialBackgroundColor, this.dialBackgroundColor) && dart.equals(other.dialTextColor, this.dialTextColor) && dart.equals(other.entryModeIconColor, this.entryModeIconColor) && dart.equals(other.hourMinuteTextStyle, this.hourMinuteTextStyle) && dart.equals(other.dayPeriodTextStyle, this.dayPeriodTextStyle) && dart.equals(other.helpTextStyle, this.helpTextStyle) && dart.equals(other.shape, this.shape) && dart.equals(other.hourMinuteShape, this.hourMinuteShape) && dart.equals(other.dayPeriodShape, this.dayPeriodShape) && dart.equals(other.dayPeriodBorderSide, this.dayPeriodBorderSide) && dart.equals(other.inputDecorationTheme, this.inputDecorationTheme);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[44], 331, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hourMinuteTextColor", this.hourMinuteTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hourMinuteColor", this.hourMinuteColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dayPeriodTextColor", this.dayPeriodTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dayPeriodColor", this.dayPeriodColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialHandColor", this.dialHandColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialBackgroundColor", this.dialBackgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialTextColor", this.dialTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("entryModeIconColor", this.entryModeIconColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("hourMinuteTextStyle", this.hourMinuteTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("dayPeriodTextStyle", this.dayPeriodTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("helpTextStyle", this.helpTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("hourMinuteShape", this.hourMinuteShape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("dayPeriodShape", this.dayPeriodShape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderSide()).new("dayPeriodBorderSide", this.dayPeriodBorderSide, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfInputDecorationTheme()).new("inputDecorationTheme", this.inputDecorationTheme, {defaultValue: null}));
    }
  };
  (time_picker_theme.TimePickerThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let hourMinuteTextColor = opts && 'hourMinuteTextColor' in opts ? opts.hourMinuteTextColor : null;
    let hourMinuteColor = opts && 'hourMinuteColor' in opts ? opts.hourMinuteColor : null;
    let dayPeriodTextColor = opts && 'dayPeriodTextColor' in opts ? opts.dayPeriodTextColor : null;
    let dayPeriodColor = opts && 'dayPeriodColor' in opts ? opts.dayPeriodColor : null;
    let dialHandColor = opts && 'dialHandColor' in opts ? opts.dialHandColor : null;
    let dialBackgroundColor = opts && 'dialBackgroundColor' in opts ? opts.dialBackgroundColor : null;
    let dialTextColor = opts && 'dialTextColor' in opts ? opts.dialTextColor : null;
    let entryModeIconColor = opts && 'entryModeIconColor' in opts ? opts.entryModeIconColor : null;
    let hourMinuteTextStyle = opts && 'hourMinuteTextStyle' in opts ? opts.hourMinuteTextStyle : null;
    let dayPeriodTextStyle = opts && 'dayPeriodTextStyle' in opts ? opts.dayPeriodTextStyle : null;
    let helpTextStyle = opts && 'helpTextStyle' in opts ? opts.helpTextStyle : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let hourMinuteShape = opts && 'hourMinuteShape' in opts ? opts.hourMinuteShape : null;
    let dayPeriodShape = opts && 'dayPeriodShape' in opts ? opts.dayPeriodShape : null;
    let dayPeriodBorderSide = opts && 'dayPeriodBorderSide' in opts ? opts.dayPeriodBorderSide : null;
    let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
    this[S$.backgroundColor$5] = backgroundColor;
    this[S$.hourMinuteTextColor] = hourMinuteTextColor;
    this[S$.hourMinuteColor] = hourMinuteColor;
    this[S$.dayPeriodTextColor] = dayPeriodTextColor;
    this[S$.dayPeriodColor] = dayPeriodColor;
    this[S$.dialHandColor] = dialHandColor;
    this[S$.dialBackgroundColor] = dialBackgroundColor;
    this[S$.dialTextColor] = dialTextColor;
    this[S$.entryModeIconColor] = entryModeIconColor;
    this[S$.hourMinuteTextStyle] = hourMinuteTextStyle;
    this[S$.dayPeriodTextStyle] = dayPeriodTextStyle;
    this[S$.helpTextStyle] = helpTextStyle;
    this[S$.shape$11] = shape;
    this[S$.hourMinuteShape] = hourMinuteShape;
    this[S$.dayPeriodShape] = dayPeriodShape;
    this[S$.dayPeriodBorderSide] = dayPeriodBorderSide;
    this[S$.inputDecorationTheme] = inputDecorationTheme;
    ;
  }).prototype = time_picker_theme.TimePickerThemeData.prototype;
  dart.addTypeTests(time_picker_theme.TimePickerThemeData);
  dart.addTypeCaches(time_picker_theme.TimePickerThemeData);
  dart.setMethodSignature(time_picker_theme.TimePickerThemeData, () => ({
    __proto__: dart.getMethods(time_picker_theme.TimePickerThemeData.__proto__),
    copyWith: dart.fnType(time_picker_theme.TimePickerThemeData, [], {backgroundColor: dart.nullable(ui.Color), dayPeriodBorderSide: dart.nullable(borders.BorderSide), dayPeriodColor: dart.nullable(ui.Color), dayPeriodShape: dart.nullable(borders.OutlinedBorder), dayPeriodTextColor: dart.nullable(ui.Color), dayPeriodTextStyle: dart.nullable(text_style.TextStyle), dialBackgroundColor: dart.nullable(ui.Color), dialHandColor: dart.nullable(ui.Color), dialTextColor: dart.nullable(ui.Color), entryModeIconColor: dart.nullable(ui.Color), helpTextStyle: dart.nullable(text_style.TextStyle), hourMinuteColor: dart.nullable(ui.Color), hourMinuteShape: dart.nullable(borders.ShapeBorder), hourMinuteTextColor: dart.nullable(ui.Color), hourMinuteTextStyle: dart.nullable(text_style.TextStyle), inputDecorationTheme: dart.nullable(input_decorator.InputDecorationTheme), shape: dart.nullable(borders.ShapeBorder)}, {})
  }));
  dart.setLibraryUri(time_picker_theme.TimePickerThemeData, I[45]);
  dart.setFieldSignature(time_picker_theme.TimePickerThemeData, () => ({
    __proto__: dart.getFields(time_picker_theme.TimePickerThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hourMinuteTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hourMinuteColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dayPeriodTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dayPeriodColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dialHandColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dialBackgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dialTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    entryModeIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hourMinuteTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    dayPeriodTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helpTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    hourMinuteShape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    dayPeriodShape: dart.finalFieldType(dart.nullable(borders.OutlinedBorder)),
    dayPeriodBorderSide: dart.finalFieldType(dart.nullable(borders.BorderSide)),
    inputDecorationTheme: dart.finalFieldType(dart.nullable(input_decorator.InputDecorationTheme))
  }));
  dart.defineExtensionMethods(time_picker_theme.TimePickerThemeData, ['_equals']);
  dart.defineExtensionAccessors(time_picker_theme.TimePickerThemeData, ['hashCode']);
  time_picker_theme.TimePickerTheme = class TimePickerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$1];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t17, t17$;
      if (context == null) dart.nullFailed(I[44], 381, 46, "context");
      let timePickerTheme = context.dependOnInheritedWidgetOfExactType(time_picker_theme.TimePickerTheme);
      t17$ = (t17 = timePickerTheme, t17 == null ? null : t17.data);
      return t17$ == null ? theme$.Theme.of(context).timePickerTheme : t17$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[44], 387, 28, "context");
      if (child == null) dart.nullFailed(I[44], 387, 44, "child");
      return new time_picker_theme.TimePickerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1141] || CT.C1141});
    }
    updateShouldNotify(oldWidget) {
      time_picker_theme.TimePickerTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[44], 392, 43, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (time_picker_theme.TimePickerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[44], 363, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[44], 364, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$1] = data;
    if (!(data != null)) dart.assertFailed(null, I[44], 365, 15, "data != null");
    time_picker_theme.TimePickerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = time_picker_theme.TimePickerTheme.prototype;
  dart.addTypeTests(time_picker_theme.TimePickerTheme);
  dart.addTypeCaches(time_picker_theme.TimePickerTheme);
  dart.setMethodSignature(time_picker_theme.TimePickerTheme, () => ({
    __proto__: dart.getMethods(time_picker_theme.TimePickerTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(time_picker_theme.TimePickerTheme, I[45]);
  dart.setFieldSignature(time_picker_theme.TimePickerTheme, () => ({
    __proto__: dart.getFields(time_picker_theme.TimePickerTheme.__proto__),
    data: dart.finalFieldType(time_picker_theme.TimePickerThemeData)
  }));
  const Object_Diagnosticable$36$0 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$0.new = function() {
  }).prototype = Object_Diagnosticable$36$0.prototype;
  dart.applyMixin(Object_Diagnosticable$36$0, diagnostics.Diagnosticable);
  text_selection_theme.TextSelectionThemeData = class TextSelectionThemeData extends Object_Diagnosticable$36$0 {
    get cursorColor() {
      return this[S$.cursorColor];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get selectionColor() {
      return this[S$.selectionColor];
    }
    set selectionColor(value) {
      super.selectionColor = value;
    }
    get selectionHandleColor() {
      return this[S$.selectionHandleColor];
    }
    set selectionHandleColor(value) {
      super.selectionHandleColor = value;
    }
    copyWith(opts) {
      let t17, t17$, t17$0;
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
      let selectionHandleColor = opts && 'selectionHandleColor' in opts ? opts.selectionHandleColor : null;
      return new text_selection_theme.TextSelectionThemeData.new({cursorColor: (t17 = cursorColor, t17 == null ? this.cursorColor : t17), selectionColor: (t17$ = selectionColor, t17$ == null ? this.selectionColor : t17$), selectionHandleColor: (t17$0 = selectionHandleColor, t17$0 == null ? this.selectionHandleColor : t17$0)});
    }
    static lerp(a, b, t) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3;
      if (t == null) dart.nullFailed(I[46], 68, 100, "t");
      if (a == null && b == null) return null;
      if (!(t != null)) dart.assertFailed(null, I[46], 71, 12, "t != null");
      return new text_selection_theme.TextSelectionThemeData.new({cursorColor: ui.Color.lerp((t17 = a, t17 == null ? null : t17.cursorColor), (t17$ = b, t17$ == null ? null : t17$.cursorColor), t), selectionColor: ui.Color.lerp((t17$0 = a, t17$0 == null ? null : t17$0.selectionColor), (t17$1 = b, t17$1 == null ? null : t17$1.selectionColor), t), selectionHandleColor: ui.Color.lerp((t17$2 = a, t17$2 == null ? null : t17$2.selectionHandleColor), (t17$3 = b, t17$3 == null ? null : t17$3.selectionHandleColor), t)});
    }
    get hashCode() {
      return ui.hashValues(this.cursorColor, this.selectionColor, this.selectionHandleColor);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return text_selection_theme.TextSelectionThemeData.is(other) && dart.equals(other.cursorColor, this.cursorColor) && dart.equals(other.selectionColor, this.selectionColor) && dart.equals(other.selectionHandleColor, this.selectionHandleColor);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[46], 101, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("cursorColor", this.cursorColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectionColor", this.selectionColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectionHandleColor", this.selectionHandleColor, {defaultValue: null}));
    }
  };
  (text_selection_theme.TextSelectionThemeData.new = function(opts) {
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let selectionHandleColor = opts && 'selectionHandleColor' in opts ? opts.selectionHandleColor : null;
    this[S$.cursorColor] = cursorColor;
    this[S$.selectionColor] = selectionColor;
    this[S$.selectionHandleColor] = selectionHandleColor;
    ;
  }).prototype = text_selection_theme.TextSelectionThemeData.prototype;
  dart.addTypeTests(text_selection_theme.TextSelectionThemeData);
  dart.addTypeCaches(text_selection_theme.TextSelectionThemeData);
  dart.setMethodSignature(text_selection_theme.TextSelectionThemeData, () => ({
    __proto__: dart.getMethods(text_selection_theme.TextSelectionThemeData.__proto__),
    copyWith: dart.fnType(text_selection_theme.TextSelectionThemeData, [], {cursorColor: dart.nullable(ui.Color), selectionColor: dart.nullable(ui.Color), selectionHandleColor: dart.nullable(ui.Color)}, {})
  }));
  dart.setLibraryUri(text_selection_theme.TextSelectionThemeData, I[47]);
  dart.setFieldSignature(text_selection_theme.TextSelectionThemeData, () => ({
    __proto__: dart.getFields(text_selection_theme.TextSelectionThemeData.__proto__),
    cursorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectionColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectionHandleColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(text_selection_theme.TextSelectionThemeData, ['_equals']);
  dart.defineExtensionAccessors(text_selection_theme.TextSelectionThemeData, ['hashCode']);
  text_selection_theme.TextSelectionTheme = class TextSelectionTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$2];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t17, t17$;
      if (context == null) dart.nullFailed(I[46], 153, 49, "context");
      let selectionTheme = context.dependOnInheritedWidgetOfExactType(text_selection_theme.TextSelectionTheme);
      t17$ = (t17 = selectionTheme, t17 == null ? null : t17.data);
      return t17$ == null ? theme$.Theme.of(context).textSelectionTheme : t17$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[46], 159, 28, "context");
      if (child == null) dart.nullFailed(I[46], 159, 44, "child");
      return new text_selection_theme.TextSelectionTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1145] || CT.C1145});
    }
    updateShouldNotify(oldWidget) {
      text_selection_theme.TextSelectionTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[46], 164, 46, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (text_selection_theme.TextSelectionTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[46], 137, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[46], 138, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$2] = data;
    if (!(data != null)) dart.assertFailed(null, I[46], 139, 15, "data != null");
    text_selection_theme.TextSelectionTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection_theme.TextSelectionTheme.prototype;
  dart.addTypeTests(text_selection_theme.TextSelectionTheme);
  dart.addTypeCaches(text_selection_theme.TextSelectionTheme);
  dart.setMethodSignature(text_selection_theme.TextSelectionTheme, () => ({
    __proto__: dart.getMethods(text_selection_theme.TextSelectionTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(text_selection_theme.TextSelectionTheme, I[47]);
  dart.setFieldSignature(text_selection_theme.TextSelectionTheme, () => ({
    __proto__: dart.getFields(text_selection_theme.TextSelectionTheme.__proto__),
    data: dart.finalFieldType(text_selection_theme.TextSelectionThemeData)
  }));
  const Object_Diagnosticable$36$1 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$1.new = function() {
  }).prototype = Object_Diagnosticable$36$1.prototype;
  dart.applyMixin(Object_Diagnosticable$36$1, diagnostics.Diagnosticable);
  text_button_theme.TextButtonThemeData = class TextButtonThemeData extends Object_Diagnosticable$36$1 {
    get style() {
      return this[S$.style$2];
    }
    set style(value) {
      super.style = value;
    }
    static lerp(a, b, t) {
      let t17, t17$;
      if (t == null) dart.nullFailed(I[48], 48, 91, "t");
      if (!(t != null)) dart.assertFailed(null, I[48], 49, 13, "t != null");
      if (a == null && b == null) return null;
      return new text_button_theme.TextButtonThemeData.new({style: button_style.ButtonStyle.lerp((t17 = a, t17 == null ? null : t17.style), (t17$ = b, t17$ == null ? null : t17$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return text_button_theme.TextButtonThemeData.is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[48], 72, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
    }
  };
  (text_button_theme.TextButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[S$.style$2] = style;
    ;
  }).prototype = text_button_theme.TextButtonThemeData.prototype;
  dart.addTypeTests(text_button_theme.TextButtonThemeData);
  dart.addTypeCaches(text_button_theme.TextButtonThemeData);
  dart.setLibraryUri(text_button_theme.TextButtonThemeData, I[49]);
  dart.setFieldSignature(text_button_theme.TextButtonThemeData, () => ({
    __proto__: dart.getFields(text_button_theme.TextButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(text_button_theme.TextButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(text_button_theme.TextButtonThemeData, ['hashCode']);
  text_button_theme.TextButtonTheme = class TextButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$3];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t17, t17$;
      if (context == null) dart.nullFailed(I[48], 112, 46, "context");
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(text_button_theme.TextButtonTheme);
      t17$ = (t17 = buttonTheme, t17 == null ? null : t17.data);
      return t17$ == null ? theme$.Theme.of(context).textButtonTheme : t17$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[48], 118, 28, "context");
      if (child == null) dart.nullFailed(I[48], 118, 44, "child");
      return new text_button_theme.TextButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1149] || CT.C1149});
    }
    updateShouldNotify(oldWidget) {
      text_button_theme.TextButtonTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[48], 123, 43, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (text_button_theme.TextButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[48], 95, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[48], 96, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$3] = data;
    if (!(data != null)) dart.assertFailed(null, I[48], 97, 15, "data != null");
    text_button_theme.TextButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button_theme.TextButtonTheme.prototype;
  dart.addTypeTests(text_button_theme.TextButtonTheme);
  dart.addTypeCaches(text_button_theme.TextButtonTheme);
  dart.setMethodSignature(text_button_theme.TextButtonTheme, () => ({
    __proto__: dart.getMethods(text_button_theme.TextButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(text_button_theme.TextButtonTheme, I[49]);
  dart.setFieldSignature(text_button_theme.TextButtonTheme, () => ({
    __proto__: dart.getFields(text_button_theme.TextButtonTheme.__proto__),
    data: dart.finalFieldType(text_button_theme.TextButtonThemeData)
  }));
  tabs$.TabBarIndicatorSize = class TabBarIndicatorSize extends core.Object {
    toString() {
      return this[S$._name$11];
    }
  };
  (tabs$.TabBarIndicatorSize.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[50], 36, 6, "index");
    if (_name == null) dart.nullFailed(I[50], 36, 6, "_name");
    this.index = index;
    this[S$._name$11] = _name;
    ;
  }).prototype = tabs$.TabBarIndicatorSize.prototype;
  dart.addTypeTests(tabs$.TabBarIndicatorSize);
  dart.addTypeCaches(tabs$.TabBarIndicatorSize);
  dart.setLibraryUri(tabs$.TabBarIndicatorSize, I[51]);
  dart.setFieldSignature(tabs$.TabBarIndicatorSize, () => ({
    __proto__: dart.getFields(tabs$.TabBarIndicatorSize.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$11]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(tabs$.TabBarIndicatorSize, ['toString']);
  tabs$.TabBarIndicatorSize.tab = C[1153] || CT.C1153;
  tabs$.TabBarIndicatorSize.label = C[1154] || CT.C1154;
  tabs$.TabBarIndicatorSize.values = C[1155] || CT.C1155;
  tabs$.Tab = class Tab extends framework.StatelessWidget {
    get text() {
      return this[S$.text];
    }
    set text(value) {
      super.text = value;
    }
    get child() {
      return this[S$.child$9];
    }
    set child(value) {
      super.child = value;
    }
    get icon() {
      return this[S$.icon$2];
    }
    set icon(value) {
      super.icon = value;
    }
    get iconMargin() {
      return this[S$.iconMargin];
    }
    set iconMargin(value) {
      super.iconMargin = value;
    }
    [S$._buildLabelText]() {
      let t17;
      t17 = this.child;
      return t17 == null ? new text$.Text.new(dart.nullCheck(this.text), {softWrap: false, overflow: paragraph.TextOverflow.fade, $creationLocationd_0dea112b090073317d4: C[1157] || CT.C1157}) : t17;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[50], 103, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, I[50], 104, 12, "debugCheckHasMaterial(context)");
      let height = null;
      let label = null;
      if (this.icon == null) {
        height = 46;
        label = this[S$._buildLabelText]();
      } else if (this.text == null && this.child == null) {
        height = 46;
        label = dart.nullCheck(this.icon);
      } else {
        height = 72;
        label = new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T$.JSArrayOfWidget().of([new container.Container.new({child: this.icon, margin: this.iconMargin, $creationLocationd_0dea112b090073317d4: C[1162] || CT.C1162}), this[S$._buildLabelText]()]), $creationLocationd_0dea112b090073317d4: C[1166] || CT.C1166});
      }
      return new basic.SizedBox.new({height: height, child: new basic.Center.new({child: label, widthFactor: 1.0, $creationLocationd_0dea112b090073317d4: C[1171] || CT.C1171}), $creationLocationd_0dea112b090073317d4: C[1175] || CT.C1175});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[50], 139, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.StringProperty.new("text", this.text, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfWidget()).new("icon", this.icon, {defaultValue: null}));
    }
  };
  (tabs$.Tab.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let iconMargin = opts && 'iconMargin' in opts ? opts.iconMargin : C[1156] || CT.C1156;
    if (iconMargin == null) dart.nullFailed(I[50], 71, 10, "iconMargin");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.text] = text;
    this[S$.icon$2] = icon;
    this[S$.iconMargin] = iconMargin;
    this[S$.child$9] = child;
    if (!(text != null || child != null || icon != null)) dart.assertFailed(null, I[50], 73, 15, "text != null || child != null || icon != null");
    if (!(text == null || child == null)) dart.assertFailed(null, I[50], 74, 15, "text == null || child == null");
    tabs$.Tab.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.Tab.prototype;
  dart.addTypeTests(tabs$.Tab);
  dart.addTypeCaches(tabs$.Tab);
  dart.setMethodSignature(tabs$.Tab, () => ({
    __proto__: dart.getMethods(tabs$.Tab.__proto__),
    [S$._buildLabelText]: dart.fnType(framework.Widget, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tabs$.Tab, I[51]);
  dart.setFieldSignature(tabs$.Tab, () => ({
    __proto__: dart.getFields(tabs$.Tab.__proto__),
    text: dart.finalFieldType(dart.nullable(core.String)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    icon: dart.finalFieldType(dart.nullable(framework.Widget)),
    iconMargin: dart.finalFieldType(edge_insets.EdgeInsetsGeometry)
  }));
  tabs$._TabStyle = class _TabStyle extends transitions.AnimatedWidget {
    get labelStyle() {
      return this[S$.labelStyle];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$.unselectedLabelStyle];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get selected() {
      return this[S$.selected$1];
    }
    set selected(value) {
      super.selected = value;
    }
    get labelColor() {
      return this[S$.labelColor];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get unselectedLabelColor() {
      return this[S$.unselectedLabelColor];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get child() {
      return this[S$.child$10];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3, t17$4, t17$5, t17$6;
      if (context == null) dart.nullFailed(I[50], 166, 29, "context");
      let themeData = theme$.Theme.of(context);
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(context);
      let animation = T$.AnimationOfdouble().as(this.listenable);
      let defaultStyle = (t17$ = (t17 = this.labelStyle, t17 == null ? tabBarTheme.labelStyle : t17), t17$ == null ? dart.nullCheck(themeData.primaryTextTheme.bodyText1) : t17$).copyWith({inherit: true});
      let defaultUnselectedStyle = (t17$2 = (t17$1 = (t17$0 = this.unselectedLabelStyle, t17$0 == null ? tabBarTheme.unselectedLabelStyle : t17$0), t17$1 == null ? this.labelStyle : t17$1), t17$2 == null ? dart.nullCheck(themeData.primaryTextTheme.bodyText1) : t17$2).copyWith({inherit: true});
      let textStyle = dart.test(this.selected) ? dart.nullCheck(text_style.TextStyle.lerp(defaultStyle, defaultUnselectedStyle, animation.value)) : dart.nullCheck(text_style.TextStyle.lerp(defaultUnselectedStyle, defaultStyle, animation.value));
      let selectedColor = (t17$4 = (t17$3 = this.labelColor, t17$3 == null ? tabBarTheme.labelColor : t17$3), t17$4 == null ? dart.nullCheck(dart.nullCheck(themeData.primaryTextTheme.bodyText1).color) : t17$4);
      let unselectedColor = (t17$6 = (t17$5 = this.unselectedLabelColor, t17$5 == null ? tabBarTheme.unselectedLabelColor : t17$5), t17$6 == null ? selectedColor.withAlpha(178) : t17$6);
      let color = dart.test(this.selected) ? dart.nullCheck(ui.Color.lerp(selectedColor, unselectedColor, animation.value)) : dart.nullCheck(ui.Color.lerp(unselectedColor, selectedColor, animation.value));
      return new text$.DefaultTextStyle.new({style: textStyle.copyWith({color: color}), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({size: 24.0, color: color}), child: this.child}), $creationLocationd_0dea112b090073317d4: C[1179] || CT.C1179});
    }
  };
  (tabs$._TabStyle.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[50], 149, 32, "animation");
    let selected = opts && 'selected' in opts ? opts.selected : null;
    if (selected == null) dart.nullFailed(I[50], 150, 19, "selected");
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[50], 155, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.selected$1] = selected;
    this[S$.labelColor] = labelColor;
    this[S$.unselectedLabelColor] = unselectedLabelColor;
    this[S$.labelStyle] = labelStyle;
    this[S$.unselectedLabelStyle] = unselectedLabelStyle;
    this[S$.child$10] = child;
    tabs$._TabStyle.__proto__.new.call(this, {key: key, listenable: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$._TabStyle.prototype;
  dart.addTypeTests(tabs$._TabStyle);
  dart.addTypeCaches(tabs$._TabStyle);
  dart.setMethodSignature(tabs$._TabStyle, () => ({
    __proto__: dart.getMethods(tabs$._TabStyle.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tabs$._TabStyle, I[51]);
  dart.setFieldSignature(tabs$._TabStyle, () => ({
    __proto__: dart.getFields(tabs$._TabStyle.__proto__),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selected: dart.finalFieldType(core.bool),
    labelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedLabelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    child: dart.finalFieldType(framework.Widget)
  }));
  tabs$._TabLabelBarRenderer = class _TabLabelBarRenderer extends flex.RenderFlex {
    performLayout() {
      let t19, t18, t17;
      super.performLayout();
      let child = this.firstChild;
      let xOffsets = T$.JSArrayOfdouble().of([]);
      while (child != null) {
        let childParentData = flex.FlexParentData.as(dart.nullCheck(child.parentData));
        xOffsets[S.$add](childParentData.offset.dx);
        if (!dart.equals(child.parentData, childParentData)) dart.assertFailed(null, I[50], 247, 14, "child.parentData == childParentData");
        child = childParentData.nextSibling;
      }
      if (!(this.textDirection != null)) dart.assertFailed(null, I[50], 250, 12, "textDirection != null");
      switch (dart.nullCheck(this.textDirection)) {
        case C[328] || CT.C328:
        {
          xOffsets[S$.$insert](0, this.size.width);
          break;
        }
        case C[329] || CT.C329:
        {
          xOffsets[S.$add](this.size.width);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      t17 = xOffsets;
      t18 = dart.nullCheck(this.textDirection);
      t19 = this.size.width;
      this.onPerformLayout(t17, t18, t19);
    }
  };
  (tabs$._TabLabelBarRenderer.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let direction = opts && 'direction' in opts ? opts.direction : null;
    if (direction == null) dart.nullFailed(I[50], 214, 19, "direction");
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
    if (mainAxisSize == null) dart.nullFailed(I[50], 215, 27, "mainAxisSize");
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : null;
    if (mainAxisAlignment == null) dart.nullFailed(I[50], 216, 32, "mainAxisAlignment");
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : null;
    if (crossAxisAlignment == null) dart.nullFailed(I[50], 217, 33, "crossAxisAlignment");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[50], 218, 28, "textDirection");
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : null;
    if (verticalDirection == null) dart.nullFailed(I[50], 219, 32, "verticalDirection");
    let onPerformLayout = opts && 'onPerformLayout' in opts ? opts.onPerformLayout : null;
    if (onPerformLayout == null) dart.nullFailed(I[50], 220, 19, "onPerformLayout");
    this.onPerformLayout = onPerformLayout;
    if (!(onPerformLayout != null)) dart.assertFailed(null, I[50], 221, 15, "onPerformLayout != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[50], 222, 15, "textDirection != null");
    tabs$._TabLabelBarRenderer.__proto__.new.call(this, {children: children, direction: direction, mainAxisSize: mainAxisSize, mainAxisAlignment: mainAxisAlignment, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection});
    ;
  }).prototype = tabs$._TabLabelBarRenderer.prototype;
  dart.addTypeTests(tabs$._TabLabelBarRenderer);
  dart.addTypeCaches(tabs$._TabLabelBarRenderer);
  dart.setLibraryUri(tabs$._TabLabelBarRenderer, I[51]);
  dart.setFieldSignature(tabs$._TabLabelBarRenderer, () => ({
    __proto__: dart.getFields(tabs$._TabLabelBarRenderer.__proto__),
    onPerformLayout: dart.fieldType(dart.fnType(dart.void, [core.List$(core.double), ui.TextDirection, core.double]))
  }));
  tabs$._TabLabelBar = class _TabLabelBar extends basic.Flex {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[50], 284, 46, "context");
      return new tabs$._TabLabelBarRenderer.new({direction: this.direction, mainAxisAlignment: this.mainAxisAlignment, mainAxisSize: this.mainAxisSize, crossAxisAlignment: this.crossAxisAlignment, textDirection: dart.nullCheck(this.getEffectiveTextDirection(context)), verticalDirection: this.verticalDirection, onPerformLayout: this.onPerformLayout});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(I[50], 297, 40, "context");
      tabs$._TabLabelBarRenderer.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[50], 297, 70, "renderObject");
      super.updateRenderObject(context, renderObject);
      renderObject.onPerformLayout = this.onPerformLayout;
    }
  };
  (tabs$._TabLabelBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : C[1183] || CT.C1183;
    if (children == null) dart.nullFailed(I[50], 269, 18, "children");
    let onPerformLayout = opts && 'onPerformLayout' in opts ? opts.onPerformLayout : null;
    if (onPerformLayout == null) dart.nullFailed(I[50], 270, 19, "onPerformLayout");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.onPerformLayout = onPerformLayout;
    tabs$._TabLabelBar.__proto__.new.call(this, {key: key, children: children, direction: basic_types.Axis.horizontal, mainAxisSize: flex.MainAxisSize.max, mainAxisAlignment: flex.MainAxisAlignment.start, crossAxisAlignment: flex.CrossAxisAlignment.center, verticalDirection: basic_types.VerticalDirection.down, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$._TabLabelBar.prototype;
  dart.addTypeTests(tabs$._TabLabelBar);
  dart.addTypeCaches(tabs$._TabLabelBar);
  dart.setLibraryUri(tabs$._TabLabelBar, I[51]);
  dart.setFieldSignature(tabs$._TabLabelBar, () => ({
    __proto__: dart.getFields(tabs$._TabLabelBar.__proto__),
    onPerformLayout: dart.finalFieldType(dart.fnType(dart.void, [core.List$(core.double), ui.TextDirection, core.double]))
  }));
  tabs$._IndicatorPainter = class _IndicatorPainter extends custom_paint.CustomPainter {
    markNeedsPaint() {
      this[S$._needsPaint] = true;
    }
    dispose() {
      let t17;
      t17 = this[S$._painter];
      t17 == null ? null : t17.dispose();
    }
    saveTabOffsets(tabOffsets, textDirection) {
      this[S$._currentTabOffsets] = tabOffsets;
      this[S$._currentTextDirection] = textDirection;
    }
    get maxTabIndex() {
      return dart.notNull(dart.nullCheck(this[S$._currentTabOffsets])[S.$length]) - 2;
    }
    centerOf(tabIndex) {
      if (tabIndex == null) dart.nullFailed(I[50], 364, 23, "tabIndex");
      if (!(this[S$._currentTabOffsets] != null)) dart.assertFailed(null, I[50], 365, 12, "_currentTabOffsets != null");
      if (!dart.test(dart.nullCheck(this[S$._currentTabOffsets])[S$.$isNotEmpty])) dart.assertFailed(null, I[50], 366, 12, "_currentTabOffsets!.isNotEmpty");
      if (!(dart.notNull(tabIndex) >= 0)) dart.assertFailed(null, I[50], 367, 12, "tabIndex >= 0");
      if (!(dart.notNull(tabIndex) <= dart.notNull(this.maxTabIndex))) dart.assertFailed(null, I[50], 368, 12, "tabIndex <= maxTabIndex");
      return (dart.notNull(dart.nullCheck(this[S$._currentTabOffsets])[S.$_get](tabIndex)) + dart.notNull(dart.nullCheck(this[S$._currentTabOffsets])[S.$_get](dart.notNull(tabIndex) + 1))) / 2.0;
    }
    indicatorRect(tabBarSize, tabIndex) {
      if (tabBarSize == null) dart.nullFailed(I[50], 372, 27, "tabBarSize");
      if (tabIndex == null) dart.nullFailed(I[50], 372, 43, "tabIndex");
      if (!(this[S$._currentTabOffsets] != null)) dart.assertFailed(null, I[50], 373, 12, "_currentTabOffsets != null");
      if (!(this[S$._currentTextDirection] != null)) dart.assertFailed(null, I[50], 374, 12, "_currentTextDirection != null");
      if (!dart.test(dart.nullCheck(this[S$._currentTabOffsets])[S$.$isNotEmpty])) dart.assertFailed(null, I[50], 375, 12, "_currentTabOffsets!.isNotEmpty");
      if (!(dart.notNull(tabIndex) >= 0)) dart.assertFailed(null, I[50], 376, 12, "tabIndex >= 0");
      if (!(dart.notNull(tabIndex) <= dart.notNull(this.maxTabIndex))) dart.assertFailed(null, I[50], 377, 12, "tabIndex <= maxTabIndex");
      let tabLeft = null;
      let tabRight = null;
      switch (dart.nullCheck(this[S$._currentTextDirection])) {
        case C[328] || CT.C328:
        {
          tabLeft = dart.nullCheck(this[S$._currentTabOffsets])[S.$_get](dart.notNull(tabIndex) + 1);
          tabRight = dart.nullCheck(this[S$._currentTabOffsets])[S.$_get](tabIndex);
          break;
        }
        case C[329] || CT.C329:
        {
          tabLeft = dart.nullCheck(this[S$._currentTabOffsets])[S.$_get](tabIndex);
          tabRight = dart.nullCheck(this[S$._currentTabOffsets])[S.$_get](dart.notNull(tabIndex) + 1);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (this.indicatorSize == tabs$.TabBarIndicatorSize.label) {
        let tabWidth = dart.nullCheck(dart.nullCheck(this.tabKeys[S.$_get](tabIndex).currentContext).size).width;
        let delta = (dart.notNull(tabRight) - dart.notNull(tabLeft) - dart.notNull(tabWidth)) / 2.0;
        tabLeft = dart.notNull(tabLeft) + delta;
        tabRight = dart.notNull(tabRight) - delta;
      }
      let insets = this.indicatorPadding.resolve(this[S$._currentTextDirection]);
      let rect = new ui.Rect.fromLTWH(tabLeft, 0.0, dart.notNull(tabRight) - dart.notNull(tabLeft), tabBarSize.height);
      if (!dart.test(rect.size['>='](insets.collapsedSize))) {
        dart.throw(assertions.FlutterError.new("indicatorPadding insets should be less than Tab Size\n" + "Rect Size : " + dart.str(rect.size) + ", Insets: " + dart.str(dart.toString(insets))));
      }
      return insets.deflateRect(rect);
    }
    paint(canvas, size) {
      if (canvas == null) dart.nullFailed(I[50], 410, 21, "canvas");
      if (size == null) dart.nullFailed(I[50], 410, 34, "size");
      this[S$._needsPaint] = false;
      this[S$._painter] == null ? this[S$._painter] = this.indicator.createBoxPainter(dart.bind(this, 'markNeedsPaint')) : null;
      let index = this.controller.index[S.$toDouble]();
      let value = dart.nullCheck(this.controller.animation).value;
      let ltr = index > dart.notNull(value);
      let from = (ltr ? value[S$.$floor]() : value[S$.$ceil]())[S.$clamp](0, this.maxTabIndex)[S$.$toInt]();
      let to = (ltr ? from + 1 : from - 1)[S.$clamp](0, this.maxTabIndex)[S$.$toInt]();
      let fromRect = this.indicatorRect(size, from);
      let toRect = this.indicatorRect(size, to);
      this[S$._currentRect] = ui.Rect.lerp(fromRect, toRect, (dart.notNull(value) - from)[S.$abs]());
      if (!(this[S$._currentRect] != null)) dart.assertFailed(null, I[50], 422, 12, "_currentRect != null");
      let configuration = new image_provider.ImageConfiguration.new({size: dart.nullCheck(this[S$._currentRect]).size, textDirection: this[S$._currentTextDirection]});
      dart.nullCheck(this[S$._painter]).paint(canvas, dart.nullCheck(this[S$._currentRect]).topLeft, configuration);
    }
    shouldRepaint(old) {
      tabs$._IndicatorPainter.as(old);
      if (old == null) dart.nullFailed(I[50], 432, 40, "old");
      return dart.test(this[S$._needsPaint]) || !dart.equals(this.controller, old.controller) || !dart.equals(this.indicator, old.indicator) || this.tabKeys[S.$length] != old.tabKeys[S.$length] || !dart.test(collections.listEquals(core.double, this[S$._currentTabOffsets], old[S$._currentTabOffsets])) || this[S$._currentTextDirection] != old[S$._currentTextDirection];
    }
  };
  (tabs$._IndicatorPainter.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[50], 319, 19, "controller");
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    if (indicator == null) dart.nullFailed(I[50], 320, 19, "indicator");
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let tabKeys = opts && 'tabKeys' in opts ? opts.tabKeys : null;
    if (tabKeys == null) dart.nullFailed(I[50], 322, 19, "tabKeys");
    let old = opts && 'old' in opts ? opts.old : null;
    let indicatorPadding = opts && 'indicatorPadding' in opts ? opts.indicatorPadding : null;
    if (indicatorPadding == null) dart.nullFailed(I[50], 324, 19, "indicatorPadding");
    this[S$._currentTabOffsets] = null;
    this[S$._currentTextDirection] = null;
    this[S$._currentRect] = null;
    this[S$._painter] = null;
    this[S$._needsPaint] = false;
    this.controller = controller;
    this.indicator = indicator;
    this.indicatorSize = indicatorSize;
    this.tabKeys = tabKeys;
    this.indicatorPadding = indicatorPadding;
    if (!(controller != null)) dart.assertFailed(null, I[50], 325, 15, "controller != null");
    if (!(indicator != null)) dart.assertFailed(null, I[50], 326, 15, "indicator != null");
    tabs$._IndicatorPainter.__proto__.new.call(this, {repaint: controller.animation});
    if (old != null) this.saveTabOffsets(old[S$._currentTabOffsets], old[S$._currentTextDirection]);
  }).prototype = tabs$._IndicatorPainter.prototype;
  dart.addTypeTests(tabs$._IndicatorPainter);
  dart.addTypeCaches(tabs$._IndicatorPainter);
  dart.setMethodSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getMethods(tabs$._IndicatorPainter.__proto__),
    markNeedsPaint: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, []),
    saveTabOffsets: dart.fnType(dart.void, [dart.nullable(core.List$(core.double)), dart.nullable(ui.TextDirection)]),
    centerOf: dart.fnType(core.double, [core.int]),
    indicatorRect: dart.fnType(ui.Rect, [ui.Size, core.int]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getGetters(tabs$._IndicatorPainter.__proto__),
    maxTabIndex: core.int
  }));
  dart.setLibraryUri(tabs$._IndicatorPainter, I[51]);
  dart.setFieldSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getFields(tabs$._IndicatorPainter.__proto__),
    controller: dart.finalFieldType(tab_controller.TabController),
    indicator: dart.finalFieldType(decoration.Decoration),
    indicatorSize: dart.finalFieldType(dart.nullable(tabs$.TabBarIndicatorSize)),
    indicatorPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    tabKeys: dart.finalFieldType(core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))),
    [S$._currentTabOffsets]: dart.fieldType(dart.nullable(core.List$(core.double))),
    [S$._currentTextDirection]: dart.fieldType(dart.nullable(ui.TextDirection)),
    [S$._currentRect]: dart.fieldType(dart.nullable(ui.Rect)),
    [S$._painter]: dart.fieldType(dart.nullable(decoration.BoxPainter)),
    [S$._needsPaint]: dart.fieldType(core.bool)
  }));
  const Animation_AnimationWithParentMixin$36 = class Animation_AnimationWithParentMixin extends animation.Animation$(core.double) {};
  (Animation_AnimationWithParentMixin$36.new = function() {
    Animation_AnimationWithParentMixin$36.__proto__.new.call(this);
  }).prototype = Animation_AnimationWithParentMixin$36.prototype;
  dart.applyMixin(Animation_AnimationWithParentMixin$36, animations.AnimationWithParentMixin$(core.double));
  tabs$._ChangeAnimation = class _ChangeAnimation extends Animation_AnimationWithParentMixin$36 {
    get parent() {
      return dart.nullCheck(this.controller.animation);
    }
    removeStatusListener(listener) {
      if (listener == null) dart.nullFailed(I[50], 451, 53, "listener");
      if (this.controller.animation != null) super.removeStatusListener(listener);
    }
    removeListener(listener) {
      if (listener == null) dart.nullFailed(I[50], 457, 36, "listener");
      if (this.controller.animation != null) super.removeListener(listener);
    }
    get value() {
      return tabs$._indexChangeProgress(this.controller);
    }
  };
  (tabs$._ChangeAnimation.new = function(controller) {
    if (controller == null) dart.nullFailed(I[50], 443, 25, "controller");
    this.controller = controller;
    tabs$._ChangeAnimation.__proto__.new.call(this);
    ;
  }).prototype = tabs$._ChangeAnimation.prototype;
  dart.addTypeTests(tabs$._ChangeAnimation);
  dart.addTypeCaches(tabs$._ChangeAnimation);
  dart.setGetterSignature(tabs$._ChangeAnimation, () => ({
    __proto__: dart.getGetters(tabs$._ChangeAnimation.__proto__),
    parent: animation.Animation$(core.double),
    value: core.double
  }));
  dart.setLibraryUri(tabs$._ChangeAnimation, I[51]);
  dart.setFieldSignature(tabs$._ChangeAnimation, () => ({
    __proto__: dart.getFields(tabs$._ChangeAnimation.__proto__),
    controller: dart.finalFieldType(tab_controller.TabController)
  }));
  const Animation_AnimationWithParentMixin$36$ = class Animation_AnimationWithParentMixin extends animation.Animation$(core.double) {};
  (Animation_AnimationWithParentMixin$36$.new = function() {
    Animation_AnimationWithParentMixin$36$.__proto__.new.call(this);
  }).prototype = Animation_AnimationWithParentMixin$36$.prototype;
  dart.applyMixin(Animation_AnimationWithParentMixin$36$, animations.AnimationWithParentMixin$(core.double));
  tabs$._DragAnimation = class _DragAnimation extends Animation_AnimationWithParentMixin$36$ {
    get parent() {
      return dart.nullCheck(this.controller.animation);
    }
    removeStatusListener(listener) {
      if (listener == null) dart.nullFailed(I[50], 476, 53, "listener");
      if (this.controller.animation != null) super.removeStatusListener(listener);
    }
    removeListener(listener) {
      if (listener == null) dart.nullFailed(I[50], 482, 36, "listener");
      if (this.controller.animation != null) super.removeListener(listener);
    }
    get value() {
      if (!!dart.test(this.controller.indexIsChanging)) dart.assertFailed(null, I[50], 489, 12, "!controller.indexIsChanging");
      let controllerMaxValue = (dart.notNull(this.controller.length) - 1)[S.$toDouble]();
      let controllerValue = dart.nullCheck(this.controller.animation).value[S.$clamp](0.0, controllerMaxValue);
      return (controllerValue - this.index[S.$toDouble]())[S.$abs]()[S.$clamp](0.0, 1.0);
    }
  };
  (tabs$._DragAnimation.new = function(controller, index) {
    if (controller == null) dart.nullFailed(I[50], 467, 23, "controller");
    if (index == null) dart.nullFailed(I[50], 467, 40, "index");
    this.controller = controller;
    this.index = index;
    tabs$._DragAnimation.__proto__.new.call(this);
    ;
  }).prototype = tabs$._DragAnimation.prototype;
  dart.addTypeTests(tabs$._DragAnimation);
  dart.addTypeCaches(tabs$._DragAnimation);
  dart.setGetterSignature(tabs$._DragAnimation, () => ({
    __proto__: dart.getGetters(tabs$._DragAnimation.__proto__),
    parent: animation.Animation$(core.double),
    value: core.double
  }));
  dart.setLibraryUri(tabs$._DragAnimation, I[51]);
  dart.setFieldSignature(tabs$._DragAnimation, () => ({
    __proto__: dart.getFields(tabs$._DragAnimation.__proto__),
    controller: dart.finalFieldType(tab_controller.TabController),
    index: dart.finalFieldType(core.int)
  }));
  tabs$._TabBarScrollPosition = class _TabBarScrollPosition extends scroll_position_with_single_context.ScrollPositionWithSingleContext {
    applyContentDimensions(minScrollExtent, maxScrollExtent) {
      if (minScrollExtent == null) dart.nullFailed(I[50], 518, 38, "minScrollExtent");
      if (maxScrollExtent == null) dart.nullFailed(I[50], 518, 62, "maxScrollExtent");
      let result = true;
      if (this[S$._initialViewportDimensionWasZero] !== true) {
        if (!(this.viewportDimension != null)) dart.assertFailed(null, I[50], 528, 14, "viewportDimension != null");
        this[S$._initialViewportDimensionWasZero] = this.viewportDimension !== 0.0;
        this.correctPixels(this.tabBar[S$._initialScrollOffset](this.viewportDimension, minScrollExtent, maxScrollExtent));
        result = false;
      }
      return dart.test(super.applyContentDimensions(minScrollExtent, maxScrollExtent)) && result;
    }
  };
  (tabs$._TabBarScrollPosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    if (physics == null) dart.nullFailed(I[50], 502, 28, "physics");
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(I[50], 503, 28, "context");
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let tabBar = opts && 'tabBar' in opts ? opts.tabBar : null;
    if (tabBar == null) dart.nullFailed(I[50], 505, 19, "tabBar");
    this[S$._initialViewportDimensionWasZero] = null;
    this.tabBar = tabBar;
    tabs$._TabBarScrollPosition.__proto__.new.call(this, {physics: physics, context: context, initialPixels: null, oldPosition: oldPosition});
    ;
  }).prototype = tabs$._TabBarScrollPosition.prototype;
  dart.addTypeTests(tabs$._TabBarScrollPosition);
  dart.addTypeCaches(tabs$._TabBarScrollPosition);
  dart.setLibraryUri(tabs$._TabBarScrollPosition, I[51]);
  dart.setFieldSignature(tabs$._TabBarScrollPosition, () => ({
    __proto__: dart.getFields(tabs$._TabBarScrollPosition.__proto__),
    tabBar: dart.finalFieldType(tabs$._TabBarState),
    [S$._initialViewportDimensionWasZero]: dart.fieldType(dart.nullable(core.bool))
  }));
  tabs$._TabBarScrollController = class _TabBarScrollController extends scroll_controller.ScrollController {
    createScrollPosition(physics, context, oldPosition) {
      if (physics == null) dart.nullFailed(I[50], 545, 53, "physics");
      if (context == null) dart.nullFailed(I[50], 545, 76, "context");
      return new tabs$._TabBarScrollPosition.new({physics: physics, context: context, oldPosition: oldPosition, tabBar: this.tabBar});
    }
  };
  (tabs$._TabBarScrollController.new = function(tabBar) {
    if (tabBar == null) dart.nullFailed(I[50], 540, 32, "tabBar");
    this.tabBar = tabBar;
    tabs$._TabBarScrollController.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarScrollController.prototype;
  dart.addTypeTests(tabs$._TabBarScrollController);
  dart.addTypeCaches(tabs$._TabBarScrollController);
  dart.setLibraryUri(tabs$._TabBarScrollController, I[51]);
  dart.setFieldSignature(tabs$._TabBarScrollController, () => ({
    __proto__: dart.getFields(tabs$._TabBarScrollController.__proto__),
    tabBar: dart.finalFieldType(tabs$._TabBarState)
  }));
  tabs$.TabBar = class TabBar extends framework.StatefulWidget {
    get tabs() {
      return this[S$.tabs];
    }
    set tabs(value) {
      super.tabs = value;
    }
    get controller() {
      return this[S$.controller];
    }
    set controller(value) {
      super.controller = value;
    }
    get isScrollable() {
      return this[S$.isScrollable];
    }
    set isScrollable(value) {
      super.isScrollable = value;
    }
    get indicatorColor() {
      return this[S$.indicatorColor];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get indicatorWeight() {
      return this[S$.indicatorWeight];
    }
    set indicatorWeight(value) {
      super.indicatorWeight = value;
    }
    get indicatorPadding() {
      return this[S$.indicatorPadding];
    }
    set indicatorPadding(value) {
      super.indicatorPadding = value;
    }
    get indicator() {
      return this[S$.indicator];
    }
    set indicator(value) {
      super.indicator = value;
    }
    get automaticIndicatorColorAdjustment() {
      return this[S$.automaticIndicatorColorAdjustment];
    }
    set automaticIndicatorColorAdjustment(value) {
      super.automaticIndicatorColorAdjustment = value;
    }
    get indicatorSize() {
      return this[S$.indicatorSize];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get labelColor() {
      return this[S$.labelColor$1];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get unselectedLabelColor() {
      return this[S$.unselectedLabelColor$1];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get labelStyle() {
      return this[S$.labelStyle$1];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get labelPadding() {
      return this[S$.labelPadding];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get unselectedLabelStyle() {
      return this[S$.unselectedLabelStyle$1];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get overlayColor() {
      return this[S$.overlayColor];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get dragStartBehavior() {
      return this[S$.dragStartBehavior$1];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get mouseCursor() {
      return this[S$.mouseCursor$6];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get enableFeedback() {
      return this[S$.enableFeedback$5];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get onTap() {
      return this[S$.onTap$1];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get physics() {
      return this[S$.physics];
    }
    set physics(value) {
      super.physics = value;
    }
    get preferredSize() {
      for (let item of this.tabs) {
        if (tabs$.Tab.is(item)) {
          let tab = item;
          if ((tab.text != null || tab.child != null) && tab.icon != null) return new ui.Size.fromHeight(72 + dart.notNull(this.indicatorWeight));
        }
      }
      return new ui.Size.fromHeight(46 + dart.notNull(this.indicatorWeight));
    }
    createState() {
      return new tabs$._TabBarState.new();
    }
  };
  (tabs$.TabBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tabs = opts && 'tabs' in opts ? opts.tabs : null;
    if (tabs == null) dart.nullFailed(I[50], 690, 19, "tabs");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let isScrollable = opts && 'isScrollable' in opts ? opts.isScrollable : false;
    if (isScrollable == null) dart.nullFailed(I[50], 692, 10, "isScrollable");
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let automaticIndicatorColorAdjustment = opts && 'automaticIndicatorColorAdjustment' in opts ? opts.automaticIndicatorColorAdjustment : true;
    if (automaticIndicatorColorAdjustment == null) dart.nullFailed(I[50], 694, 10, "automaticIndicatorColorAdjustment");
    let indicatorWeight = opts && 'indicatorWeight' in opts ? opts.indicatorWeight : 2;
    if (indicatorWeight == null) dart.nullFailed(I[50], 695, 10, "indicatorWeight");
    let indicatorPadding = opts && 'indicatorPadding' in opts ? opts.indicatorPadding : C[772] || CT.C772;
    if (indicatorPadding == null) dart.nullFailed(I[50], 696, 10, "indicatorPadding");
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[635] || CT.C635;
    if (dragStartBehavior == null) dart.nullFailed(I[50], 704, 10, "dragStartBehavior");
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.tabs] = tabs;
    this[S$.controller] = controller;
    this[S$.isScrollable] = isScrollable;
    this[S$.indicatorColor] = indicatorColor;
    this[S$.automaticIndicatorColorAdjustment] = automaticIndicatorColorAdjustment;
    this[S$.indicatorWeight] = indicatorWeight;
    this[S$.indicatorPadding] = indicatorPadding;
    this[S$.indicator] = indicator;
    this[S$.indicatorSize] = indicatorSize;
    this[S$.labelColor$1] = labelColor;
    this[S$.labelStyle$1] = labelStyle;
    this[S$.labelPadding] = labelPadding;
    this[S$.unselectedLabelColor$1] = unselectedLabelColor;
    this[S$.unselectedLabelStyle$1] = unselectedLabelStyle;
    this[S$.dragStartBehavior$1] = dragStartBehavior;
    this[S$.overlayColor] = overlayColor;
    this[S$.mouseCursor$6] = mouseCursor;
    this[S$.enableFeedback$5] = enableFeedback;
    this[S$.onTap$1] = onTap;
    this[S$.physics] = physics;
    if (!(tabs != null)) dart.assertFailed(null, I[50], 710, 15, "tabs != null");
    if (!(isScrollable != null)) dart.assertFailed(null, I[50], 711, 15, "isScrollable != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, I[50], 712, 15, "dragStartBehavior != null");
    if (!(indicator != null || indicatorWeight != null && dart.notNull(indicatorWeight) > 0.0)) dart.assertFailed(null, I[50], 713, 15, "indicator != null || (indicatorWeight != null && indicatorWeight > 0.0)");
    if (!(indicator != null || indicatorPadding != null)) dart.assertFailed(null, I[50], 714, 15, "indicator != null || (indicatorPadding != null)");
    tabs$.TabBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabBar.prototype;
  dart.addTypeTests(tabs$.TabBar);
  dart.addTypeCaches(tabs$.TabBar);
  tabs$.TabBar[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(tabs$.TabBar, () => ({
    __proto__: dart.getMethods(tabs$.TabBar.__proto__),
    createState: dart.fnType(tabs$._TabBarState, [])
  }));
  dart.setGetterSignature(tabs$.TabBar, () => ({
    __proto__: dart.getGetters(tabs$.TabBar.__proto__),
    preferredSize: ui.Size
  }));
  dart.setLibraryUri(tabs$.TabBar, I[51]);
  dart.setFieldSignature(tabs$.TabBar, () => ({
    __proto__: dart.getFields(tabs$.TabBar.__proto__),
    tabs: dart.finalFieldType(core.List$(framework.Widget)),
    controller: dart.finalFieldType(dart.nullable(tab_controller.TabController)),
    isScrollable: dart.finalFieldType(core.bool),
    indicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    indicatorWeight: dart.finalFieldType(core.double),
    indicatorPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    indicator: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    automaticIndicatorColorAdjustment: dart.finalFieldType(core.bool),
    indicatorSize: dart.finalFieldType(dart.nullable(tabs$.TabBarIndicatorSize)),
    labelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedLabelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    labelPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    physics: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics))
  }));
  tabs$._TabBarState = class _TabBarState extends framework.State$(tabs$.TabBar) {
    get [S$._tabStripWidth]() {
      let t17;
      return dart.test(this[S$.___TabBarState__tabStripWidth_isSet]) ? (t17 = this[S$.___TabBarState__tabStripWidth], t17) : dart.throw(new _internal.LateError.fieldNI("_tabStripWidth"));
    }
    set [S$._tabStripWidth](t17) {
      if (t17 == null) dart.nullFailed(I[50], 912, 15, "null");
      this[S$.___TabBarState__tabStripWidth_isSet] = true;
      this[S$.___TabBarState__tabStripWidth] = t17;
    }
    get [S$._tabKeys]() {
      let t18;
      return dart.test(this[S$.___TabBarState__tabKeys_isSet]) ? (t18 = this[S$.___TabBarState__tabKeys], t18) : dart.throw(new _internal.LateError.fieldNI("_tabKeys"));
    }
    set [S$._tabKeys](t18) {
      if (t18 == null) dart.nullFailed(I[50], 913, 24, "null");
      this[S$.___TabBarState__tabKeys_isSet] = true;
      this[S$.___TabBarState__tabKeys] = t18;
    }
    initState() {
      super.initState();
      this[S$._tabKeys] = this.widget.tabs[S$.$map](T$.GlobalKeyOfStateOfStatefulWidget(), dart.fn(tab => {
        if (tab == null) dart.nullFailed(I[50], 920, 40, "tab");
        return T$.GlobalKeyOfStateOfStatefulWidget().new();
      }, T$.WidgetToGlobalKeyOfStateOfStatefulWidget()))[S$.$toList]();
    }
    get [S$._indicator]() {
      let t19, t20, t19$;
      if (this.widget.indicator != null) return dart.nullCheck(this.widget.indicator);
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(this.context);
      if (tabBarTheme.indicator != null) return dart.nullCheck(tabBarTheme.indicator);
      let color = (t19 = this.widget.indicatorColor, t19 == null ? theme$.Theme.of(this.context).indicatorColor : t19);
      if (dart.test(this.widget.automaticIndicatorColorAdjustment) && color.value == (t19$ = material.Material.of(this.context), t19$ == null ? null : (t20 = t19$.color, t20 == null ? null : t20.value))) color = colors$.Colors.white;
      return new tab_indicator.UnderlineTabIndicator.new({borderSide: new borders.BorderSide.new({width: this.widget.indicatorWeight, color: color})});
    }
    get [S$._controllerIsValid]() {
      let t19;
      return (t19 = this[S$._controller$4], t19 == null ? null : t19.animation) != null;
    }
    [S$._updateTabController]() {
      let t19;
      let newController = (t19 = this.widget.controller, t19 == null ? tab_controller.DefaultTabController.of(this.context) : t19);
      if (!dart.test(dart.fn(() => {
        if (newController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "When creating a " + dart.str(dart.runtimeType(this.widget)) + ", you must either provide an explicit " + "TabController using the \"controller\" property, or you must ensure that there " + "is a DefaultTabController above the " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[50], 963, 12, "() {\r\n      if (newController == null) {\r\n        throw FlutterError(\r\n          'No TabController for ${widget.runtimeType}.\\n'\r\n          'When creating a ${widget.runtimeType}, you must either provide an explicit '\r\n          'TabController using the \"controller\" property, or you must ensure that there '\r\n          'is a DefaultTabController above the ${widget.runtimeType}.\\n'\r\n          'In this case, there was neither an explicit controller nor a default controller.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      if (dart.equals(newController, this[S$._controller$4])) return;
      if (dart.test(this[S$._controllerIsValid])) {
        dart.nullCheck(dart.nullCheck(this[S$._controller$4]).animation).removeListener(dart.bind(this, S$._handleTabControllerAnimationTick));
        dart.nullCheck(this[S$._controller$4]).removeListener(dart.bind(this, S$._handleTabControllerTick));
      }
      this[S$._controller$4] = newController;
      if (this[S$._controller$4] != null) {
        dart.nullCheck(dart.nullCheck(this[S$._controller$4]).animation).addListener(dart.bind(this, S$._handleTabControllerAnimationTick));
        dart.nullCheck(this[S$._controller$4]).addListener(dart.bind(this, S$._handleTabControllerTick));
        this[S$._currentIndex] = dart.nullCheck(this[S$._controller$4]).index;
      }
    }
    [S$._initIndicatorPainter]() {
      let t19;
      this[S$._indicatorPainter] = !dart.test(this[S$._controllerIsValid]) ? null : new tabs$._IndicatorPainter.new({controller: dart.nullCheck(this[S$._controller$4]), indicator: this[S$._indicator], indicatorSize: (t19 = this.widget.indicatorSize, t19 == null ? tab_bar_theme.TabBarTheme.of(this.context).indicatorSize : t19), indicatorPadding: this.widget.indicatorPadding, tabKeys: this[S$._tabKeys], old: this[S$._indicatorPainter]});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      if (!dart.test(debug$0.debugCheckHasMaterial(this.context))) dart.assertFailed(null, I[50], 1005, 12, "debugCheckHasMaterial(context)");
      this[S$._updateTabController]();
      this[S$._initIndicatorPainter]();
    }
    didUpdateWidget(oldWidget) {
      tabs$.TabBar.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[50], 1011, 31, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) {
        this[S$._updateTabController]();
        this[S$._initIndicatorPainter]();
      } else if (!dart.equals(this.widget.indicatorColor, oldWidget.indicatorColor) || this.widget.indicatorWeight != oldWidget.indicatorWeight || this.widget.indicatorSize != oldWidget.indicatorSize || !dart.equals(this.widget.indicator, oldWidget.indicator)) {
        this[S$._initIndicatorPainter]();
      }
      if (dart.notNull(this.widget.tabs[S.$length]) > dart.notNull(oldWidget.tabs[S.$length])) {
        let delta = dart.notNull(this.widget.tabs[S.$length]) - dart.notNull(oldWidget.tabs[S.$length]);
        this[S$._tabKeys][S$.$addAll](T$.ListOfGlobalKeyOfStateOfStatefulWidget().generate(delta, dart.fn(n => {
          if (n == null) dart.nullFailed(I[50], 1025, 60, "n");
          return T$.GlobalKeyOfStateOfStatefulWidget().new();
        }, T$.intToGlobalKeyOfStateOfStatefulWidget())));
      } else if (dart.notNull(this.widget.tabs[S.$length]) < dart.notNull(oldWidget.tabs[S.$length])) {
        this[S$._tabKeys][S$.$removeRange](this.widget.tabs[S.$length], oldWidget.tabs[S.$length]);
      }
    }
    dispose() {
      dart.nullCheck(this[S$._indicatorPainter]).dispose();
      if (dart.test(this[S$._controllerIsValid])) {
        dart.nullCheck(dart.nullCheck(this[S$._controller$4]).animation).removeListener(dart.bind(this, S$._handleTabControllerAnimationTick));
        dart.nullCheck(this[S$._controller$4]).removeListener(dart.bind(this, S$._handleTabControllerTick));
      }
      this[S$._controller$4] = null;
      super.dispose();
    }
    get maxTabIndex() {
      return dart.nullCheck(this[S$._indicatorPainter]).maxTabIndex;
    }
    [S$._tabScrollOffset](index, viewportWidth, minExtent, maxExtent) {
      if (index == null) dart.nullFailed(I[50], 1045, 31, "index");
      if (viewportWidth == null) dart.nullFailed(I[50], 1045, 45, "viewportWidth");
      if (minExtent == null) dart.nullFailed(I[50], 1045, 67, "minExtent");
      if (maxExtent == null) dart.nullFailed(I[50], 1045, 85, "maxExtent");
      if (!dart.test(this.widget.isScrollable)) return 0.0;
      let tabCenter = dart.nullCheck(this[S$._indicatorPainter]).centerOf(index);
      switch (basic.Directionality.of(this.context)) {
        case C[328] || CT.C328:
        {
          tabCenter = dart.notNull(this[S$._tabStripWidth]) - dart.notNull(tabCenter);
          break;
        }
        case C[329] || CT.C329:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return (dart.notNull(tabCenter) - dart.notNull(viewportWidth) / 2.0)[S.$clamp](minExtent, maxExtent);
    }
    [S$._tabCenteredScrollOffset](index) {
      if (index == null) dart.nullFailed(I[50], 1059, 39, "index");
      let position = dart.nullCheck(this[S$._scrollController]).position;
      return this[S$._tabScrollOffset](index, position.viewportDimension, position.minScrollExtent, position.maxScrollExtent);
    }
    [S$._initialScrollOffset](viewportWidth, minExtent, maxExtent) {
      if (viewportWidth == null) dart.nullFailed(I[50], 1064, 38, "viewportWidth");
      if (minExtent == null) dart.nullFailed(I[50], 1064, 60, "minExtent");
      if (maxExtent == null) dart.nullFailed(I[50], 1064, 78, "maxExtent");
      return this[S$._tabScrollOffset](dart.nullCheck(this[S$._currentIndex]), viewportWidth, minExtent, maxExtent);
    }
    [S$._scrollToCurrentIndex]() {
      let offset = this[S$._tabCenteredScrollOffset](dart.nullCheck(this[S$._currentIndex]));
      dart.nullCheck(this[S$._scrollController]).animateTo(offset, {duration: constants.kTabScrollDuration, curve: curves.Curves.ease});
    }
    [S$._scrollToControllerValue]() {
      let t19, t19$;
      let leadingPosition = dart.nullCheck(this[S$._currentIndex]) > 0 ? this[S$._tabCenteredScrollOffset](dart.nullCheck(this[S$._currentIndex]) - 1) : null;
      let middlePosition = this[S$._tabCenteredScrollOffset](dart.nullCheck(this[S$._currentIndex]));
      let trailingPosition = dart.nullCheck(this[S$._currentIndex]) < dart.notNull(this.maxTabIndex) ? this[S$._tabCenteredScrollOffset](dart.nullCheck(this[S$._currentIndex]) + 1) : null;
      let index = dart.nullCheck(this[S$._controller$4]).index[S.$toDouble]();
      let value = dart.nullCheck(dart.nullCheck(this[S$._controller$4]).animation).value;
      let offset = null;
      if (value === index - 1.0)
        offset = (t19 = leadingPosition, t19 == null ? middlePosition : t19);
      else if (value === index + 1.0)
        offset = (t19$ = trailingPosition, t19$ == null ? middlePosition : t19$);
      else if (value === index)
        offset = middlePosition;
      else if (dart.notNull(value) < index)
        offset = leadingPosition == null ? middlePosition : dart.nullCheck(ui.lerpDouble(middlePosition, leadingPosition, index - dart.notNull(value)));
      else
        offset = trailingPosition == null ? middlePosition : dart.nullCheck(ui.lerpDouble(middlePosition, trailingPosition, dart.notNull(value) - index));
      dart.nullCheck(this[S$._scrollController]).jumpTo(offset);
    }
    [S$._handleTabControllerAnimationTick]() {
      if (!dart.test(this.mounted)) dart.assertFailed(null, I[50], 1096, 12, "mounted");
      if (!dart.test(dart.nullCheck(this[S$._controller$4]).indexIsChanging) && dart.test(this.widget.isScrollable)) {
        this[S$._currentIndex] = dart.nullCheck(this[S$._controller$4]).index;
        this[S$._scrollToControllerValue]();
      }
    }
    [S$._handleTabControllerTick]() {
      if (dart.nullCheck(this[S$._controller$4]).index != this[S$._currentIndex]) {
        this[S$._currentIndex] = dart.nullCheck(this[S$._controller$4]).index;
        if (dart.test(this.widget.isScrollable)) this[S$._scrollToCurrentIndex]();
      }
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    [S$._saveTabOffsets](tabOffsets, textDirection, width) {
      let t19;
      if (tabOffsets == null) dart.nullFailed(I[50], 1117, 37, "tabOffsets");
      if (textDirection == null) dart.nullFailed(I[50], 1117, 63, "textDirection");
      if (width == null) dart.nullFailed(I[50], 1117, 85, "width");
      this[S$._tabStripWidth] = width;
      t19 = this[S$._indicatorPainter];
      t19 == null ? null : t19.saveTabOffsets(tabOffsets, textDirection);
    }
    [S$._handleTap](index) {
      if (index == null) dart.nullFailed(I[50], 1122, 23, "index");
      if (!(dart.notNull(index) >= 0 && dart.notNull(index) < dart.notNull(this.widget.tabs[S.$length]))) dart.assertFailed(null, I[50], 1123, 12, "index >= 0 && index < widget.tabs.length");
      dart.nullCheck(this[S$._controller$4]).animateTo(index);
      if (this.widget.onTap != null) {
        dart.nullCheck(this.widget.onTap)(index);
      }
    }
    [S$._buildStyledTab](child, selected, animation) {
      if (child == null) dart.nullFailed(I[50], 1130, 33, "child");
      if (selected == null) dart.nullFailed(I[50], 1130, 45, "selected");
      if (animation == null) dart.nullFailed(I[50], 1130, 73, "animation");
      return new tabs$._TabStyle.new({animation: animation, selected: selected, labelColor: this.widget.labelColor, unselectedLabelColor: this.widget.unselectedLabelColor, labelStyle: this.widget.labelStyle, unselectedLabelStyle: this.widget.unselectedLabelStyle, child: child, $creationLocationd_0dea112b090073317d4: C[1184] || CT.C1184});
    }
    build(context) {
      let t20, t20$, t20$0, t20$1;
      if (context == null) dart.nullFailed(I[50], 1143, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[50], 1144, 12, "debugCheckHasMaterialLocalizations(context)");
      if (!dart.test(dart.fn(() => {
        if (dart.nullCheck(this[S$._controller$4]).length != this.widget.tabs[S.$length]) {
          dart.throw(assertions.FlutterError.new("Controller's length property (" + dart.str(dart.nullCheck(this[S$._controller$4]).length) + ") does not match the " + "number of tabs (" + dart.str(this.widget.tabs[S.$length]) + ") present in TabBar's tabs property."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[50], 1145, 12, "() {\r\n      if (_controller!.length != widget.tabs.length) {\r\n        throw FlutterError(\r\n          \"Controller's length property (${_controller!.length}) does not match the \"\r\n          \"number of tabs (${widget.tabs.length}) present in TabBar's tabs property.\"\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let localizations = material_localizations.MaterialLocalizations.of(context);
      if (dart.nullCheck(this[S$._controller$4]).length === 0) {
        return new container.Container.new({height: 46 + dart.notNull(this.widget.indicatorWeight), $creationLocationd_0dea112b090073317d4: C[1193] || CT.C1193});
      }
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(context);
      let wrappedTabs = (() => {
        let t19 = T$.JSArrayOfWidget().of([]);
        for (let i = 0; i < dart.notNull(this.widget.tabs[S.$length]); i = i + 1)
          t19[S.$add](new basic.Center.new({heightFactor: 1.0, child: new basic.Padding.new({padding: (t20$ = (t20 = this.widget.labelPadding, t20 == null ? tabBarTheme.labelPadding : t20), t20$ == null ? constants.kTabLabelPadding : t20$), child: new basic.KeyedSubtree.new({key: this[S$._tabKeys][S.$_get](i), child: this.widget.tabs[S.$_get](i), $creationLocationd_0dea112b090073317d4: C[1196] || CT.C1196}), $creationLocationd_0dea112b090073317d4: C[1200] || CT.C1200}), $creationLocationd_0dea112b090073317d4: C[1204] || CT.C1204}));
        return t19;
      })();
      if (this[S$._controller$4] != null) {
        let previousIndex = dart.nullCheck(this[S$._controller$4]).previousIndex;
        if (dart.test(dart.nullCheck(this[S$._controller$4]).indexIsChanging)) {
          if (!(this[S$._currentIndex] != previousIndex)) dart.assertFailed(null, I[50], 1185, 16, "_currentIndex != previousIndex");
          let animation = new tabs$._ChangeAnimation.new(dart.nullCheck(this[S$._controller$4]));
          wrappedTabs[S.$_set](dart.nullCheck(this[S$._currentIndex]), this[S$._buildStyledTab](wrappedTabs[S.$_get](dart.nullCheck(this[S$._currentIndex])), true, animation));
          wrappedTabs[S.$_set](previousIndex, this[S$._buildStyledTab](wrappedTabs[S.$_get](previousIndex), false, animation));
        } else {
          let tabIndex = dart.nullCheck(this[S$._currentIndex]);
          let centerAnimation = new tabs$._DragAnimation.new(dart.nullCheck(this[S$._controller$4]), tabIndex);
          wrappedTabs[S.$_set](tabIndex, this[S$._buildStyledTab](wrappedTabs[S.$_get](tabIndex), true, centerAnimation));
          if (dart.nullCheck(this[S$._currentIndex]) > 0) {
            let tabIndex = dart.nullCheck(this[S$._currentIndex]) - 1;
            let previousAnimation = new animations.ReverseAnimation.new(new tabs$._DragAnimation.new(dart.nullCheck(this[S$._controller$4]), tabIndex));
            wrappedTabs[S.$_set](tabIndex, this[S$._buildStyledTab](wrappedTabs[S.$_get](tabIndex), false, previousAnimation));
          }
          if (dart.nullCheck(this[S$._currentIndex]) < dart.notNull(this.widget.tabs[S.$length]) - 1) {
            let tabIndex = dart.nullCheck(this[S$._currentIndex]) + 1;
            let nextAnimation = new animations.ReverseAnimation.new(new tabs$._DragAnimation.new(dart.nullCheck(this[S$._controller$4]), tabIndex));
            wrappedTabs[S.$_set](tabIndex, this[S$._buildStyledTab](wrappedTabs[S.$_get](tabIndex), false, nextAnimation));
          }
        }
      }
      let tabCount = this.widget.tabs[S.$length];
      for (let index = 0; index < dart.notNull(tabCount); index = index + 1) {
        wrappedTabs[S.$_set](index, new ink_well.InkWell.new({mouseCursor: (t20$0 = this.widget.mouseCursor, t20$0 == null ? mouse_cursor.SystemMouseCursors.click : t20$0), onTap: dart.fn(() => {
            this[S$._handleTap](index);
          }, T$.VoidTovoid()), enableFeedback: (t20$1 = this.widget.enableFeedback, t20$1 == null ? true : t20$1), overlayColor: this.widget.overlayColor, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: this.widget.indicatorWeight}), child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([wrappedTabs[S.$_get](index), new basic.Semantics.new({selected: index === this[S$._currentIndex], label: localizations.tabLabel({tabIndex: index + 1, tabCount: tabCount}), $creationLocationd_0dea112b090073317d4: C[1208] || CT.C1208})]), $creationLocationd_0dea112b090073317d4: C[1212] || CT.C1212}), $creationLocationd_0dea112b090073317d4: C[1215] || CT.C1215}), $creationLocationd_0dea112b090073317d4: C[1219] || CT.C1219}));
        if (!dart.test(this.widget.isScrollable)) wrappedTabs[S.$_set](index, new basic.Expanded.new({child: wrappedTabs[S.$_get](index), $creationLocationd_0dea112b090073317d4: C[1226] || CT.C1226}));
      }
      let tabBar = new basic.CustomPaint.new({painter: this[S$._indicatorPainter], child: new tabs$._TabStyle.new({animation: animations.kAlwaysDismissedAnimation, selected: false, labelColor: this.widget.labelColor, unselectedLabelColor: this.widget.unselectedLabelColor, labelStyle: this.widget.labelStyle, unselectedLabelStyle: this.widget.unselectedLabelStyle, child: new tabs$._TabLabelBar.new({onPerformLayout: dart.bind(this, S$._saveTabOffsets), children: wrappedTabs, $creationLocationd_0dea112b090073317d4: C[1229] || CT.C1229}), $creationLocationd_0dea112b090073317d4: C[1233] || CT.C1233}), $creationLocationd_0dea112b090073317d4: C[1242] || CT.C1242});
      if (dart.test(this.widget.isScrollable)) {
        this[S$._scrollController] == null ? this[S$._scrollController] = new tabs$._TabBarScrollController.new(this) : null;
        tabBar = new single_child_scroll_view.SingleChildScrollView.new({dragStartBehavior: this.widget.dragStartBehavior, scrollDirection: basic_types.Axis.horizontal, controller: this[S$._scrollController], physics: this.widget.physics, child: tabBar, $creationLocationd_0dea112b090073317d4: C[1246] || CT.C1246});
      }
      return tabBar;
    }
  };
  (tabs$._TabBarState.new = function() {
    this[S$._scrollController] = null;
    this[S$._controller$4] = null;
    this[S$._indicatorPainter] = null;
    this[S$._currentIndex] = null;
    this[S$.___TabBarState__tabStripWidth] = null;
    this[S$.___TabBarState__tabStripWidth_isSet] = false;
    this[S$.___TabBarState__tabKeys] = null;
    this[S$.___TabBarState__tabKeys_isSet] = false;
    tabs$._TabBarState.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarState.prototype;
  dart.addTypeTests(tabs$._TabBarState);
  dart.addTypeCaches(tabs$._TabBarState);
  dart.setMethodSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getMethods(tabs$._TabBarState.__proto__),
    [S$._updateTabController]: dart.fnType(dart.void, []),
    [S$._initIndicatorPainter]: dart.fnType(dart.void, []),
    [S$._tabScrollOffset]: dart.fnType(core.double, [core.int, core.double, core.double, core.double]),
    [S$._tabCenteredScrollOffset]: dart.fnType(core.double, [core.int]),
    [S$._initialScrollOffset]: dart.fnType(core.double, [core.double, core.double, core.double]),
    [S$._scrollToCurrentIndex]: dart.fnType(dart.void, []),
    [S$._scrollToControllerValue]: dart.fnType(dart.void, []),
    [S$._handleTabControllerAnimationTick]: dart.fnType(dart.void, []),
    [S$._handleTabControllerTick]: dart.fnType(dart.void, []),
    [S$._saveTabOffsets]: dart.fnType(dart.void, [core.List$(core.double), ui.TextDirection, core.double]),
    [S$._handleTap]: dart.fnType(dart.void, [core.int]),
    [S$._buildStyledTab]: dart.fnType(framework.Widget, [framework.Widget, core.bool, animation.Animation$(core.double)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getGetters(tabs$._TabBarState.__proto__),
    [S$._tabStripWidth]: core.double,
    [S$._tabKeys]: core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S$._indicator]: decoration.Decoration,
    [S$._controllerIsValid]: core.bool,
    maxTabIndex: core.int
  }));
  dart.setSetterSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getSetters(tabs$._TabBarState.__proto__),
    [S$._tabStripWidth]: core.double,
    [S$._tabKeys]: core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  dart.setLibraryUri(tabs$._TabBarState, I[51]);
  dart.setFieldSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getFields(tabs$._TabBarState.__proto__),
    [S$._scrollController]: dart.fieldType(dart.nullable(scroll_controller.ScrollController)),
    [S$._controller$4]: dart.fieldType(dart.nullable(tab_controller.TabController)),
    [S$._indicatorPainter]: dart.fieldType(dart.nullable(tabs$._IndicatorPainter)),
    [S$._currentIndex]: dart.fieldType(dart.nullable(core.int)),
    [S$.___TabBarState__tabStripWidth]: dart.fieldType(dart.nullable(core.double)),
    [S$.___TabBarState__tabStripWidth_isSet]: dart.fieldType(core.bool),
    [S$.___TabBarState__tabKeys]: dart.fieldType(dart.nullable(core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget))))),
    [S$.___TabBarState__tabKeys_isSet]: dart.fieldType(core.bool)
  }));
  tabs$.TabBarView = class TabBarView extends framework.StatefulWidget {
    get controller() {
      return this[S$.controller$1];
    }
    set controller(value) {
      super.controller = value;
    }
    get children() {
      return this[S$.children$1];
    }
    set children(value) {
      super.children = value;
    }
    get physics() {
      return this[S$.physics$1];
    }
    set physics(value) {
      super.physics = value;
    }
    get dragStartBehavior() {
      return this[S$.dragStartBehavior$2];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    createState() {
      return new tabs$._TabBarViewState.new();
    }
  };
  (tabs$.TabBarView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(I[50], 1285, 19, "children");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[635] || CT.C635;
    if (dragStartBehavior == null) dart.nullFailed(I[50], 1288, 10, "dragStartBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.children$1] = children;
    this[S$.controller$1] = controller;
    this[S$.physics$1] = physics;
    this[S$.dragStartBehavior$2] = dragStartBehavior;
    if (!(children != null)) dart.assertFailed(null, I[50], 1289, 15, "children != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, I[50], 1290, 15, "dragStartBehavior != null");
    tabs$.TabBarView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabBarView.prototype;
  dart.addTypeTests(tabs$.TabBarView);
  dart.addTypeCaches(tabs$.TabBarView);
  dart.setMethodSignature(tabs$.TabBarView, () => ({
    __proto__: dart.getMethods(tabs$.TabBarView.__proto__),
    createState: dart.fnType(tabs$._TabBarViewState, [])
  }));
  dart.setLibraryUri(tabs$.TabBarView, I[51]);
  dart.setFieldSignature(tabs$.TabBarView, () => ({
    __proto__: dart.getFields(tabs$.TabBarView.__proto__),
    controller: dart.finalFieldType(dart.nullable(tab_controller.TabController)),
    children: dart.finalFieldType(core.List$(framework.Widget)),
    physics: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics)),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  tabs$._TabBarViewState = class _TabBarViewState extends framework.State$(tabs$.TabBarView) {
    get [S$._pageController]() {
      let t20;
      return dart.test(this[S$.___TabBarViewState__pageController_isSet]) ? (t20 = this[S$.___TabBarViewState__pageController], t20) : dart.throw(new _internal.LateError.fieldNI("_pageController"));
    }
    set [S$._pageController](t20) {
      if (t20 == null) dart.nullFailed(I[50], 1325, 23, "null");
      this[S$.___TabBarViewState__pageController_isSet] = true;
      this[S$.___TabBarViewState__pageController] = t20;
    }
    get [S$._children$1]() {
      let t21;
      return dart.test(this[S$.___TabBarViewState__children_isSet]) ? (t21 = this[S$.___TabBarViewState__children], t21) : dart.throw(new _internal.LateError.fieldNI("_children"));
    }
    set [S$._children$1](t21) {
      if (t21 == null) dart.nullFailed(I[50], 1326, 21, "null");
      this[S$.___TabBarViewState__children_isSet] = true;
      this[S$.___TabBarViewState__children] = t21;
    }
    get [S$._childrenWithKey]() {
      let t22;
      return dart.test(this[S$.___TabBarViewState__childrenWithKey_isSet]) ? (t22 = this[S$.___TabBarViewState__childrenWithKey], t22) : dart.throw(new _internal.LateError.fieldNI("_childrenWithKey"));
    }
    set [S$._childrenWithKey](t22) {
      if (t22 == null) dart.nullFailed(I[50], 1327, 21, "null");
      this[S$.___TabBarViewState__childrenWithKey_isSet] = true;
      this[S$.___TabBarViewState__childrenWithKey] = t22;
    }
    get [S$._controllerIsValid]() {
      let t23;
      return (t23 = this[S$._controller$4], t23 == null ? null : t23.animation) != null;
    }
    [S$._updateTabController]() {
      let t23;
      let newController = (t23 = this.widget.controller, t23 == null ? tab_controller.DefaultTabController.of(this.context) : t23);
      if (!dart.test(dart.fn(() => {
        if (newController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "When creating a " + dart.str(dart.runtimeType(this.widget)) + ", you must either provide an explicit " + "TabController using the \"controller\" property, or you must ensure that there " + "is a DefaultTabController above the " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[50], 1338, 12, "() {\r\n      if (newController == null) {\r\n        throw FlutterError(\r\n          'No TabController for ${widget.runtimeType}.\\n'\r\n          'When creating a ${widget.runtimeType}, you must either provide an explicit '\r\n          'TabController using the \"controller\" property, or you must ensure that there '\r\n          'is a DefaultTabController above the ${widget.runtimeType}.\\n'\r\n          'In this case, there was neither an explicit controller nor a default controller.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      if (dart.equals(newController, this[S$._controller$4])) return;
      if (dart.test(this[S$._controllerIsValid])) dart.nullCheck(dart.nullCheck(this[S$._controller$4]).animation).removeListener(dart.bind(this, S$._handleTabControllerAnimationTick));
      this[S$._controller$4] = newController;
      if (this[S$._controller$4] != null) dart.nullCheck(dart.nullCheck(this[S$._controller$4]).animation).addListener(dart.bind(this, S$._handleTabControllerAnimationTick));
    }
    initState() {
      super.initState();
      this[S$._updateChildren]();
    }
    didChangeDependencies() {
      let t23, t23$;
      super.didChangeDependencies();
      this[S$._updateTabController]();
      this[S$._currentIndex] = (t23 = this[S$._controller$4], t23 == null ? null : t23.index);
      this[S$._pageController] = new page_view.PageController.new({initialPage: (t23$ = this[S$._currentIndex], t23$ == null ? 0 : t23$)});
    }
    didUpdateWidget(oldWidget) {
      tabs$.TabBarView.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[50], 1376, 35, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) this[S$._updateTabController]();
      if (!dart.equals(this.widget.children, oldWidget.children) && this[S$._warpUnderwayCount] === 0) this[S$._updateChildren]();
    }
    dispose() {
      if (dart.test(this[S$._controllerIsValid])) dart.nullCheck(dart.nullCheck(this[S$._controller$4]).animation).removeListener(dart.bind(this, S$._handleTabControllerAnimationTick));
      this[S$._controller$4] = null;
      super.dispose();
    }
    [S$._updateChildren]() {
      this[S$._children$1] = this.widget.children;
      this[S$._childrenWithKey] = basic.KeyedSubtree.ensureUniqueKeysForList(this.widget.children);
    }
    [S$._handleTabControllerAnimationTick]() {
      if (dart.notNull(this[S$._warpUnderwayCount]) > 0 || !dart.test(dart.nullCheck(this[S$._controller$4]).indexIsChanging)) return;
      if (dart.nullCheck(this[S$._controller$4]).index != this[S$._currentIndex]) {
        this[S$._currentIndex] = dart.nullCheck(this[S$._controller$4]).index;
        this[S$._warpToCurrentIndex]();
      }
    }
    [S$._warpToCurrentIndex]() {
      return async.async(dart.void, (function* _warpToCurrentIndex() {
        if (!dart.test(this.mounted)) return T$.FutureOfvoid().value();
        if (this[S$._pageController].page === dart.nullCheck(this[S$._currentIndex])[S.$toDouble]()) return T$.FutureOfvoid().value();
        let previousIndex = dart.nullCheck(this[S$._controller$4]).previousIndex;
        if ((dart.nullCheck(this[S$._currentIndex]) - dart.notNull(previousIndex))[S.$abs]() === 1) {
          this[S$._warpUnderwayCount] = dart.notNull(this[S$._warpUnderwayCount]) + 1;
          yield this[S$._pageController].animateToPage(dart.nullCheck(this[S$._currentIndex]), {duration: constants.kTabScrollDuration, curve: curves.Curves.ease});
          this[S$._warpUnderwayCount] = dart.notNull(this[S$._warpUnderwayCount]) - 1;
          return T$.FutureOfvoid().value();
        }
        if (!((dart.nullCheck(this[S$._currentIndex]) - dart.notNull(previousIndex))[S.$abs]() > 1)) dart.assertFailed(null, I[50], 1423, 12, "(_currentIndex! - previousIndex).abs() > 1");
        let initialPage = dart.nullCheck(this[S$._currentIndex]) > dart.notNull(previousIndex) ? dart.nullCheck(this[S$._currentIndex]) - 1 : dart.nullCheck(this[S$._currentIndex]) + 1;
        let originalChildren = this[S$._childrenWithKey];
        this.setState(dart.fn(() => {
          this[S$._warpUnderwayCount] = dart.notNull(this[S$._warpUnderwayCount]) + 1;
          this[S$._childrenWithKey] = T$.ListOfWidget().from(this[S$._childrenWithKey], {growable: false});
          let temp = this[S$._childrenWithKey][S.$_get](initialPage);
          this[S$._childrenWithKey][S.$_set](initialPage, this[S$._childrenWithKey][S.$_get](previousIndex));
          this[S$._childrenWithKey][S.$_set](previousIndex, temp);
        }, T$.VoidTovoid()));
        this[S$._pageController].jumpToPage(initialPage);
        yield this[S$._pageController].animateToPage(dart.nullCheck(this[S$._currentIndex]), {duration: constants.kTabScrollDuration, curve: curves.Curves.ease});
        if (!dart.test(this.mounted)) return T$.FutureOfvoid().value();
        this.setState(dart.fn(() => {
          this[S$._warpUnderwayCount] = dart.notNull(this[S$._warpUnderwayCount]) - 1;
          if (!dart.equals(this.widget.children, this[S$._children$1])) {
            this[S$._updateChildren]();
          } else {
            this[S$._childrenWithKey] = originalChildren;
          }
        }, T$.VoidTovoid()));
      }).bind(this));
    }
    [S$._handleScrollNotification](notification) {
      if (notification == null) dart.nullFailed(I[50], 1452, 53, "notification");
      if (dart.notNull(this[S$._warpUnderwayCount]) > 0) return false;
      if (notification.depth !== 0) return false;
      this[S$._warpUnderwayCount] = dart.notNull(this[S$._warpUnderwayCount]) + 1;
      if (scroll_notification.ScrollUpdateNotification.is(notification) && !dart.test(dart.nullCheck(this[S$._controller$4]).indexIsChanging)) {
        if ((dart.nullCheck(this[S$._pageController].page) - dart.notNull(dart.nullCheck(this[S$._controller$4]).index))[S.$abs]() > 1.0) {
          dart.nullCheck(this[S$._controller$4]).index = dart.nullCheck(this[S$._pageController].page)[S$.$floor]();
          this[S$._currentIndex] = dart.nullCheck(this[S$._controller$4]).index;
        }
        dart.nullCheck(this[S$._controller$4]).offset = (dart.nullCheck(this[S$._pageController].page) - dart.notNull(dart.nullCheck(this[S$._controller$4]).index))[S.$clamp](-1.0, 1.0);
      } else if (scroll_notification.ScrollEndNotification.is(notification)) {
        dart.nullCheck(this[S$._controller$4]).index = dart.nullCheck(this[S$._pageController].page)[S$.$round]();
        this[S$._currentIndex] = dart.nullCheck(this[S$._controller$4]).index;
        if (!dart.test(dart.nullCheck(this[S$._controller$4]).indexIsChanging)) dart.nullCheck(this[S$._controller$4]).offset = (dart.nullCheck(this[S$._pageController].page) - dart.notNull(dart.nullCheck(this[S$._controller$4]).index))[S.$clamp](-1.0, 1.0);
      }
      this[S$._warpUnderwayCount] = dart.notNull(this[S$._warpUnderwayCount]) - 1;
      return false;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[50], 1478, 29, "context");
      if (!dart.test(dart.fn(() => {
        if (dart.nullCheck(this[S$._controller$4]).length != this.widget.children[S.$length]) {
          dart.throw(assertions.FlutterError.new("Controller's length property (" + dart.str(dart.nullCheck(this[S$._controller$4]).length) + ") does not match the " + "number of tabs (" + dart.str(this.widget.children[S.$length]) + ") present in TabBar's tabs property."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[50], 1479, 12, "() {\r\n      if (_controller!.length != widget.children.length) {\r\n        throw FlutterError(\r\n          \"Controller's length property (${_controller!.length}) does not match the \"\r\n          \"number of tabs (${widget.children.length}) present in TabBar's tabs property.\"\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return new (T$.NotificationListenerOfScrollNotification()).new({onNotification: dart.bind(this, S$._handleScrollNotification), child: new page_view.PageView.new({dragStartBehavior: this.widget.dragStartBehavior, controller: this[S$._pageController], physics: this.widget.physics == null ? (C[1253] || CT.C1253).applyTo(C[1254] || CT.C1254) : (C[1253] || CT.C1253).applyTo(this.widget.physics), children: this[S$._childrenWithKey], $creationLocationd_0dea112b090073317d4: C[1255] || CT.C1255}), $creationLocationd_0dea112b090073317d4: C[1261] || CT.C1261});
    }
  };
  (tabs$._TabBarViewState.new = function() {
    this[S$._controller$4] = null;
    this[S$.___TabBarViewState__pageController] = null;
    this[S$.___TabBarViewState__pageController_isSet] = false;
    this[S$.___TabBarViewState__children] = null;
    this[S$.___TabBarViewState__children_isSet] = false;
    this[S$.___TabBarViewState__childrenWithKey] = null;
    this[S$.___TabBarViewState__childrenWithKey_isSet] = false;
    this[S$._currentIndex] = null;
    this[S$._warpUnderwayCount] = 0;
    tabs$._TabBarViewState.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarViewState.prototype;
  dart.addTypeTests(tabs$._TabBarViewState);
  dart.addTypeCaches(tabs$._TabBarViewState);
  dart.setMethodSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getMethods(tabs$._TabBarViewState.__proto__),
    [S$._updateTabController]: dart.fnType(dart.void, []),
    [S$._updateChildren]: dart.fnType(dart.void, []),
    [S$._handleTabControllerAnimationTick]: dart.fnType(dart.void, []),
    [S$._warpToCurrentIndex]: dart.fnType(async.Future$(dart.void), []),
    [S$._handleScrollNotification]: dart.fnType(core.bool, [scroll_notification.ScrollNotification]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getGetters(tabs$._TabBarViewState.__proto__),
    [S$._pageController]: page_view.PageController,
    [S$._children$1]: core.List$(framework.Widget),
    [S$._childrenWithKey]: core.List$(framework.Widget),
    [S$._controllerIsValid]: core.bool
  }));
  dart.setSetterSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getSetters(tabs$._TabBarViewState.__proto__),
    [S$._pageController]: page_view.PageController,
    [S$._children$1]: core.List$(framework.Widget),
    [S$._childrenWithKey]: core.List$(framework.Widget)
  }));
  dart.setLibraryUri(tabs$._TabBarViewState, I[51]);
  dart.setFieldSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getFields(tabs$._TabBarViewState.__proto__),
    [S$._controller$4]: dart.fieldType(dart.nullable(tab_controller.TabController)),
    [S$.___TabBarViewState__pageController]: dart.fieldType(dart.nullable(page_view.PageController)),
    [S$.___TabBarViewState__pageController_isSet]: dart.fieldType(core.bool),
    [S$.___TabBarViewState__children]: dart.fieldType(dart.nullable(core.List$(framework.Widget))),
    [S$.___TabBarViewState__children_isSet]: dart.fieldType(core.bool),
    [S$.___TabBarViewState__childrenWithKey]: dart.fieldType(dart.nullable(core.List$(framework.Widget))),
    [S$.___TabBarViewState__childrenWithKey_isSet]: dart.fieldType(core.bool),
    [S$._currentIndex]: dart.fieldType(dart.nullable(core.int)),
    [S$._warpUnderwayCount]: dart.fieldType(core.int)
  }));
  tabs$.TabPageSelectorIndicator = class TabPageSelectorIndicator extends framework.StatelessWidget {
    get backgroundColor() {
      return this[S$.backgroundColor$6];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get borderColor() {
      return this[S$.borderColor$1];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get size() {
      return this[S$.size];
    }
    set size(value) {
      super.size = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[50], 1529, 29, "context");
      return new container.Container.new({width: this.size, height: this.size, margin: C[1265] || CT.C1265, decoration: new box_decoration.BoxDecoration.new({color: this.backgroundColor, border: box_border.Border.all({color: this.borderColor}), shape: box_border.BoxShape.circle}), $creationLocationd_0dea112b090073317d4: C[1266] || CT.C1266});
    }
  };
  (tabs$.TabPageSelectorIndicator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    if (backgroundColor == null) dart.nullFailed(I[50], 1511, 19, "backgroundColor");
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    if (borderColor == null) dart.nullFailed(I[50], 1512, 19, "borderColor");
    let size = opts && 'size' in opts ? opts.size : null;
    if (size == null) dart.nullFailed(I[50], 1513, 19, "size");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.backgroundColor$6] = backgroundColor;
    this[S$.borderColor$1] = borderColor;
    this[S$.size] = size;
    if (!(backgroundColor != null)) dart.assertFailed(null, I[50], 1514, 15, "backgroundColor != null");
    if (!(borderColor != null)) dart.assertFailed(null, I[50], 1515, 15, "borderColor != null");
    if (!(size != null)) dart.assertFailed(null, I[50], 1516, 15, "size != null");
    tabs$.TabPageSelectorIndicator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabPageSelectorIndicator.prototype;
  dart.addTypeTests(tabs$.TabPageSelectorIndicator);
  dart.addTypeCaches(tabs$.TabPageSelectorIndicator);
  dart.setMethodSignature(tabs$.TabPageSelectorIndicator, () => ({
    __proto__: dart.getMethods(tabs$.TabPageSelectorIndicator.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tabs$.TabPageSelectorIndicator, I[51]);
  dart.setFieldSignature(tabs$.TabPageSelectorIndicator, () => ({
    __proto__: dart.getFields(tabs$.TabPageSelectorIndicator.__proto__),
    backgroundColor: dart.finalFieldType(ui.Color),
    borderColor: dart.finalFieldType(ui.Color),
    size: dart.finalFieldType(core.double)
  }));
  tabs$.TabPageSelector = class TabPageSelector extends framework.StatelessWidget {
    get controller() {
      return this[S$.controller$2];
    }
    set controller(value) {
      super.controller = value;
    }
    get indicatorSize() {
      return this[S$.indicatorSize$1];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get color() {
      return this[S$.color$8];
    }
    set color(value) {
      super.color = value;
    }
    get selectedColor() {
      return this[S$.selectedColor$2];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    [S$._buildTabIndicator](tabIndex, tabController, selectedColorTween, previousColorTween) {
      if (tabIndex == null) dart.nullFailed(I[50], 1583, 9, "tabIndex");
      if (tabController == null) dart.nullFailed(I[50], 1584, 19, "tabController");
      if (selectedColorTween == null) dart.nullFailed(I[50], 1585, 16, "selectedColorTween");
      if (previousColorTween == null) dart.nullFailed(I[50], 1586, 16, "previousColorTween");
      let background = null;
      if (dart.test(tabController.indexIsChanging)) {
        let t = 1.0 - dart.notNull(tabs$._indexChangeProgress(tabController));
        if (tabController.index == tabIndex)
          background = dart.nullCheck(selectedColorTween.lerp(t));
        else if (tabController.previousIndex == tabIndex)
          background = dart.nullCheck(previousColorTween.lerp(t));
        else
          background = dart.nullCheck(selectedColorTween.begin);
      } else {
        let offset = tabController.offset;
        if (tabController.index == tabIndex) {
          background = dart.nullCheck(selectedColorTween.lerp(1.0 - offset[S.$abs]()));
        } else if (tabController.index === dart.notNull(tabIndex) - 1 && dart.notNull(offset) > 0.0) {
          background = dart.nullCheck(selectedColorTween.lerp(offset));
        } else if (tabController.index === dart.notNull(tabIndex) + 1 && dart.notNull(offset) < 0.0) {
          background = dart.nullCheck(selectedColorTween.lerp(-dart.notNull(offset)));
        } else {
          background = dart.nullCheck(selectedColorTween.begin);
        }
      }
      return new tabs$.TabPageSelectorIndicator.new({backgroundColor: background, borderColor: dart.nullCheck(selectedColorTween.end), size: this.indicatorSize, $creationLocationd_0dea112b090073317d4: C[1272] || CT.C1272});
    }
    build(context) {
      let t23, t23$, t23$0;
      if (context == null) dart.nullFailed(I[50], 1620, 29, "context");
      let fixColor = (t23 = this.color, t23 == null ? colors$.Colors.transparent : t23);
      let fixSelectedColor = (t23$ = this.selectedColor, t23$ == null ? theme$.Theme.of(context).accentColor : t23$);
      let selectedColorTween = new tween.ColorTween.new({begin: fixColor, end: fixSelectedColor});
      let previousColorTween = new tween.ColorTween.new({begin: fixSelectedColor, end: fixColor});
      let tabController = (t23$0 = this.controller, t23$0 == null ? tab_controller.DefaultTabController.of(context) : t23$0);
      if (!dart.test(dart.fn(() => {
        if (tabController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(this[S.$runtimeType]) + ".\n" + "When creating a " + dart.str(this[S.$runtimeType]) + ", you must either provide an explicit TabController " + "using the \"controller\" property, or you must ensure that there is a " + "DefaultTabController above the " + dart.str(this[S.$runtimeType]) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[50], 1626, 12, "() {\r\n      if (tabController == null) {\r\n        throw FlutterError(\r\n          'No TabController for $runtimeType.\\n'\r\n          'When creating a $runtimeType, you must either provide an explicit TabController '\r\n          'using the \"controller\" property, or you must ensure that there is a '\r\n          'DefaultTabController above the $runtimeType.\\n'\r\n          'In this case, there was neither an explicit controller nor a default controller.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let animation = new animations.CurvedAnimation.new({parent: dart.nullCheck(dart.nullCheck(tabController).animation), curve: curves.Curves.fastOutSlowIn});
      return new transitions.AnimatedBuilder.new({animation: animation, builder: dart.fn((context, child) => {
          if (context == null) dart.nullFailed(I[50], 1644, 30, "context");
          return new basic.Semantics.new({label: "Page " + dart.str(dart.notNull(tabController.index) + 1) + " of " + dart.str(tabController.length), child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.ListOfWidget().generate(tabController.length, dart.fn(tabIndex => {
                if (tabIndex == null) dart.nullFailed(I[50], 1649, 72, "tabIndex");
                return this[S$._buildTabIndicator](tabIndex, tabController, selectedColorTween, previousColorTween);
              }, T$.intToWidget()))[S$.$toList](), $creationLocationd_0dea112b090073317d4: C[1277] || CT.C1277}), $creationLocationd_0dea112b090073317d4: C[1281] || CT.C1281});
        }, T$.BuildContextAndWidgetNToSemantics()), $creationLocationd_0dea112b090073317d4: C[1285] || CT.C1285});
    }
  };
  (tabs$.TabPageSelector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : 12;
    if (indicatorSize == null) dart.nullFailed(I[50], 1555, 10, "indicatorSize");
    let color = opts && 'color' in opts ? opts.color : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.controller$2] = controller;
    this[S$.indicatorSize$1] = indicatorSize;
    this[S$.color$8] = color;
    this[S$.selectedColor$2] = selectedColor;
    if (!(indicatorSize != null && dart.notNull(indicatorSize) > 0.0)) dart.assertFailed(null, I[50], 1558, 15, "indicatorSize != null && indicatorSize > 0.0");
    tabs$.TabPageSelector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabPageSelector.prototype;
  dart.addTypeTests(tabs$.TabPageSelector);
  dart.addTypeCaches(tabs$.TabPageSelector);
  dart.setMethodSignature(tabs$.TabPageSelector, () => ({
    __proto__: dart.getMethods(tabs$.TabPageSelector.__proto__),
    [S$._buildTabIndicator]: dart.fnType(framework.Widget, [core.int, tab_controller.TabController, tween.ColorTween, tween.ColorTween]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tabs$.TabPageSelector, I[51]);
  dart.setFieldSignature(tabs$.TabPageSelector, () => ({
    __proto__: dart.getFields(tabs$.TabPageSelector.__proto__),
    controller: dart.finalFieldType(dart.nullable(tab_controller.TabController)),
    indicatorSize: dart.finalFieldType(core.double),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  tabs$._indexChangeProgress = function _indexChangeProgress(controller) {
    if (controller == null) dart.nullFailed(I[50], 303, 43, "controller");
    let controllerValue = dart.nullCheck(controller.animation).value;
    let previousIndex = controller.previousIndex[S.$toDouble]();
    let currentIndex = controller.index[S.$toDouble]();
    if (!dart.test(controller.indexIsChanging)) return (currentIndex - dart.notNull(controllerValue))[S.$abs]()[S.$clamp](0.0, 1.0);
    return (dart.notNull(controllerValue) - currentIndex)[S.$abs]() / (currentIndex - previousIndex)[S.$abs]();
  };
  dart.defineLazy(tabs$, {
    /*tabs$._kTabHeight*/get _kTabHeight() {
      return 46;
    },
    /*tabs$._kTextAndIconTabHeight*/get _kTextAndIconTabHeight() {
      return 72;
    }
  }, false);
  const Object_Diagnosticable$36$2 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$2.new = function() {
  }).prototype = Object_Diagnosticable$36$2.prototype;
  dart.applyMixin(Object_Diagnosticable$36$2, diagnostics.Diagnosticable);
  tab_bar_theme.TabBarTheme = class TabBarTheme extends Object_Diagnosticable$36$2 {
    get indicator() {
      return this[S$.indicator$1];
    }
    set indicator(value) {
      super.indicator = value;
    }
    get indicatorSize() {
      return this[S$.indicatorSize$2];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get labelColor() {
      return this[S$.labelColor$2];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get labelPadding() {
      return this[S$.labelPadding$1];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get labelStyle() {
      return this[S$.labelStyle$2];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get unselectedLabelColor() {
      return this[S$.unselectedLabelColor$2];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get unselectedLabelStyle() {
      return this[S$.unselectedLabelStyle$2];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    copyWith(opts) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3, t23$4;
      let indicator = opts && 'indicator' in opts ? opts.indicator : null;
      let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
      let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      return new tab_bar_theme.TabBarTheme.new({indicator: (t23 = indicator, t23 == null ? this.indicator : t23), indicatorSize: (t23$ = indicatorSize, t23$ == null ? this.indicatorSize : t23$), labelColor: (t23$0 = labelColor, t23$0 == null ? this.labelColor : t23$0), labelPadding: (t23$1 = labelPadding, t23$1 == null ? this.labelPadding : t23$1), labelStyle: (t23$2 = labelStyle, t23$2 == null ? this.labelStyle : t23$2), unselectedLabelColor: (t23$3 = unselectedLabelColor, t23$3 == null ? this.unselectedLabelColor : t23$3), unselectedLabelStyle: (t23$4 = unselectedLabelStyle, t23$4 == null ? this.unselectedLabelStyle : t23$4)});
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[52], 83, 38, "context");
      return theme$.Theme.of(context).tabBarTheme;
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[52], 92, 39, "a");
      if (b == null) dart.nullFailed(I[52], 92, 54, "b");
      if (t == null) dart.nullFailed(I[52], 92, 64, "t");
      if (!(a != null)) dart.assertFailed(null, I[52], 93, 12, "a != null");
      if (!(b != null)) dart.assertFailed(null, I[52], 94, 12, "b != null");
      if (!(t != null)) dart.assertFailed(null, I[52], 95, 12, "t != null");
      return new tab_bar_theme.TabBarTheme.new({indicator: decoration.Decoration.lerp(a.indicator, b.indicator, t), indicatorSize: dart.notNull(t) < 0.5 ? a.indicatorSize : b.indicatorSize, labelColor: ui.Color.lerp(a.labelColor, b.labelColor, t), labelPadding: edge_insets.EdgeInsetsGeometry.lerp(a.labelPadding, b.labelPadding, t), labelStyle: text_style.TextStyle.lerp(a.labelStyle, b.labelStyle, t), unselectedLabelColor: ui.Color.lerp(a.unselectedLabelColor, b.unselectedLabelColor, t), unselectedLabelStyle: text_style.TextStyle.lerp(a.unselectedLabelStyle, b.unselectedLabelStyle, t)});
    }
    get hashCode() {
      return ui.hashValues(this.indicator, this.indicatorSize, this.labelColor, this.labelPadding, this.labelStyle, this.unselectedLabelColor, this.unselectedLabelStyle);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return tab_bar_theme.TabBarTheme.is(other) && dart.equals(other.indicator, this.indicator) && other.indicatorSize == this.indicatorSize && dart.equals(other.labelColor, this.labelColor) && dart.equals(other.labelPadding, this.labelPadding) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.unselectedLabelColor, this.unselectedLabelColor) && dart.equals(other.unselectedLabelStyle, this.unselectedLabelStyle);
    }
  };
  (tab_bar_theme.TabBarTheme.new = function(opts) {
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    this[S$.indicator$1] = indicator;
    this[S$.indicatorSize$2] = indicatorSize;
    this[S$.labelColor$2] = labelColor;
    this[S$.labelPadding$1] = labelPadding;
    this[S$.labelStyle$2] = labelStyle;
    this[S$.unselectedLabelColor$2] = unselectedLabelColor;
    this[S$.unselectedLabelStyle$2] = unselectedLabelStyle;
    ;
  }).prototype = tab_bar_theme.TabBarTheme.prototype;
  dart.addTypeTests(tab_bar_theme.TabBarTheme);
  dart.addTypeCaches(tab_bar_theme.TabBarTheme);
  dart.setMethodSignature(tab_bar_theme.TabBarTheme, () => ({
    __proto__: dart.getMethods(tab_bar_theme.TabBarTheme.__proto__),
    copyWith: dart.fnType(tab_bar_theme.TabBarTheme, [], {indicator: dart.nullable(decoration.Decoration), indicatorSize: dart.nullable(tabs$.TabBarIndicatorSize), labelColor: dart.nullable(ui.Color), labelPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), labelStyle: dart.nullable(text_style.TextStyle), unselectedLabelColor: dart.nullable(ui.Color), unselectedLabelStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(tab_bar_theme.TabBarTheme, I[53]);
  dart.setFieldSignature(tab_bar_theme.TabBarTheme, () => ({
    __proto__: dart.getFields(tab_bar_theme.TabBarTheme.__proto__),
    indicator: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    indicatorSize: dart.finalFieldType(dart.nullable(tabs$.TabBarIndicatorSize)),
    labelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    labelPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle))
  }));
  dart.defineExtensionMethods(tab_bar_theme.TabBarTheme, ['_equals']);
  dart.defineExtensionAccessors(tab_bar_theme.TabBarTheme, ['hashCode']);
  const Object_Diagnosticable$36$3 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$3.new = function() {
  }).prototype = Object_Diagnosticable$36$3.prototype;
  dart.applyMixin(Object_Diagnosticable$36$3, diagnostics.Diagnosticable);
  switch_theme.SwitchThemeData = class SwitchThemeData extends Object_Diagnosticable$36$3 {
    get thumbColor() {
      return this[S$.thumbColor];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get trackColor() {
      return this[S$.trackColor];
    }
    set trackColor(value) {
      super.trackColor = value;
    }
    get materialTapTargetSize() {
      return this[S$.materialTapTargetSize$4];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get mouseCursor() {
      return this[S$.mouseCursor$7];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get overlayColor() {
      return this[S$.overlayColor$1];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashRadius() {
      return this[S$.splashRadius$1];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    copyWith(opts) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      return new switch_theme.SwitchThemeData.new({thumbColor: (t23 = thumbColor, t23 == null ? this.thumbColor : t23), trackColor: (t23$ = trackColor, t23$ == null ? this.trackColor : t23$), materialTapTargetSize: (t23$0 = materialTapTargetSize, t23$0 == null ? this.materialTapTargetSize : t23$0), mouseCursor: (t23$1 = mouseCursor, t23$1 == null ? this.mouseCursor : t23$1), overlayColor: (t23$2 = overlayColor, t23$2 == null ? this.overlayColor : t23$2), splashRadius: (t23$3 = splashRadius, t23$3 == null ? this.splashRadius : t23$3)});
    }
    static lerp(a, b, t) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3, t23$4, t23$5, t23$6, t23$7, t23$8, t23$9;
      if (t == null) dart.nullFailed(I[54], 99, 78, "t");
      return new switch_theme.SwitchThemeData.new({thumbColor: switch_theme.SwitchThemeData._lerpProperties(T$.ColorN(), (t23 = a, t23 == null ? null : t23.thumbColor), (t23$ = b, t23$ == null ? null : t23$.thumbColor), t, C[1289] || CT.C1289), trackColor: switch_theme.SwitchThemeData._lerpProperties(T$.ColorN(), (t23$0 = a, t23$0 == null ? null : t23$0.trackColor), (t23$1 = b, t23$1 == null ? null : t23$1.trackColor), t, C[1289] || CT.C1289), materialTapTargetSize: dart.notNull(t) < 0.5 ? (t23$2 = a, t23$2 == null ? null : t23$2.materialTapTargetSize) : (t23$3 = b, t23$3 == null ? null : t23$3.materialTapTargetSize), mouseCursor: dart.notNull(t) < 0.5 ? (t23$4 = a, t23$4 == null ? null : t23$4.mouseCursor) : (t23$5 = b, t23$5 == null ? null : t23$5.mouseCursor), overlayColor: switch_theme.SwitchThemeData._lerpProperties(T$.ColorN(), (t23$6 = a, t23$6 == null ? null : t23$6.overlayColor), (t23$7 = b, t23$7 == null ? null : t23$7.overlayColor), t, C[1289] || CT.C1289), splashRadius: ui.lerpDouble((t23$8 = a, t23$8 == null ? null : t23$8.splashRadius), (t23$9 = b, t23$9 == null ? null : t23$9.splashRadius), t)});
    }
    get hashCode() {
      return ui.hashValues(this.thumbColor, this.trackColor, this.materialTapTargetSize, this.mouseCursor, this.overlayColor, this.splashRadius);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return switch_theme.SwitchThemeData.is(other) && dart.equals(other.thumbColor, this.thumbColor) && dart.equals(other.trackColor, this.trackColor) && other.materialTapTargetSize == this.materialTapTargetSize && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.overlayColor, this.overlayColor) && other.splashRadius == this.splashRadius;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[54], 138, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("thumbColor", this.thumbColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("trackColor", this.trackColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("splashRadius", this.splashRadius, {defaultValue: null}));
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[54], 151, 12, "t");
      if (lerpFunction == null) dart.nullFailed(I[54], 152, 32, "lerpFunction");
      if (a == null && b == null) return null;
      return new (switch_theme._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
  };
  (switch_theme.SwitchThemeData.new = function(opts) {
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    this[S$.thumbColor] = thumbColor;
    this[S$.trackColor] = trackColor;
    this[S$.materialTapTargetSize$4] = materialTapTargetSize;
    this[S$.mouseCursor$7] = mouseCursor;
    this[S$.overlayColor$1] = overlayColor;
    this[S$.splashRadius$1] = splashRadius;
    ;
  }).prototype = switch_theme.SwitchThemeData.prototype;
  dart.addTypeTests(switch_theme.SwitchThemeData);
  dart.addTypeCaches(switch_theme.SwitchThemeData);
  dart.setMethodSignature(switch_theme.SwitchThemeData, () => ({
    __proto__: dart.getMethods(switch_theme.SwitchThemeData.__proto__),
    copyWith: dart.fnType(switch_theme.SwitchThemeData, [], {materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), splashRadius: dart.nullable(core.double), thumbColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), trackColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))}, {})
  }));
  dart.setLibraryUri(switch_theme.SwitchThemeData, I[55]);
  dart.setFieldSignature(switch_theme.SwitchThemeData, () => ({
    __proto__: dart.getFields(switch_theme.SwitchThemeData.__proto__),
    thumbColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    trackColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashRadius: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(switch_theme.SwitchThemeData, ['_equals']);
  dart.defineExtensionAccessors(switch_theme.SwitchThemeData, ['hashCode']);
  const _is__LerpProperties_default = Symbol('_is__LerpProperties_default');
  switch_theme._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S$.a];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S$.b];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S$.t];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S$.lerpFunction];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t23, t23$, t25, t24, t23$0;
        if (states == null) dart.nullFailed(I[54], 170, 32, "states");
        let resolvedA = (t23 = this.a, t23 == null ? null : t23.resolve(states));
        let resolvedB = (t23$ = this.b, t23$ == null ? null : t23$.resolve(states));
        t23$0 = resolvedA;
        t24 = resolvedB;
        t25 = this.t;
        return this.lerpFunction(t23$0, t24, t25);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[54], 162, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[54], 162, 54, "lerpFunction");
      this[S$.a] = a;
      this[S$.b] = b;
      this[S$.t] = t;
      this[S$.lerpFunction] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(T)];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(T, [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[55]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(T, [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  switch_theme._LerpProperties = switch_theme._LerpProperties$();
  dart.addTypeTests(switch_theme._LerpProperties, _is__LerpProperties_default);
  switch_theme.SwitchTheme = class SwitchTheme extends framework.InheritedWidget {
    get data() {
      return this[S$.data$4];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t23, t23$;
      if (context == null) dart.nullFailed(I[54], 209, 42, "context");
      let switchTheme = context.dependOnInheritedWidgetOfExactType(switch_theme.SwitchTheme);
      t23$ = (t23 = switchTheme, t23 == null ? null : t23.data);
      return t23$ == null ? theme$.Theme.of(context).switchTheme : t23$;
    }
    updateShouldNotify(oldWidget) {
      switch_theme.SwitchTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[54], 215, 39, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (switch_theme.SwitchTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[54], 194, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[54], 195, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$4] = data;
    switch_theme.SwitchTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = switch_theme.SwitchTheme.prototype;
  dart.addTypeTests(switch_theme.SwitchTheme);
  dart.addTypeCaches(switch_theme.SwitchTheme);
  dart.setMethodSignature(switch_theme.SwitchTheme, () => ({
    __proto__: dart.getMethods(switch_theme.SwitchTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(switch_theme.SwitchTheme, I[55]);
  dart.setFieldSignature(switch_theme.SwitchTheme, () => ({
    __proto__: dart.getFields(switch_theme.SwitchTheme.__proto__),
    data: dart.finalFieldType(switch_theme.SwitchThemeData)
  }));
  snack_bar_theme.SnackBarBehavior = class SnackBarBehavior extends core.Object {
    toString() {
      return this[S$._name$12];
    }
  };
  (snack_bar_theme.SnackBarBehavior.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[56], 15, 6, "index");
    if (_name == null) dart.nullFailed(I[56], 15, 6, "_name");
    this.index = index;
    this[S$._name$12] = _name;
    ;
  }).prototype = snack_bar_theme.SnackBarBehavior.prototype;
  dart.addTypeTests(snack_bar_theme.SnackBarBehavior);
  dart.addTypeCaches(snack_bar_theme.SnackBarBehavior);
  dart.setLibraryUri(snack_bar_theme.SnackBarBehavior, I[57]);
  dart.setFieldSignature(snack_bar_theme.SnackBarBehavior, () => ({
    __proto__: dart.getFields(snack_bar_theme.SnackBarBehavior.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$12]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(snack_bar_theme.SnackBarBehavior, ['toString']);
  snack_bar_theme.SnackBarBehavior.fixed = C[1290] || CT.C1290;
  snack_bar_theme.SnackBarBehavior.floating = C[1291] || CT.C1291;
  snack_bar_theme.SnackBarBehavior.values = C[1292] || CT.C1292;
  const Object_Diagnosticable$36$4 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$4.new = function() {
  }).prototype = Object_Diagnosticable$36$4.prototype;
  dart.applyMixin(Object_Diagnosticable$36$4, diagnostics.Diagnosticable);
  snack_bar_theme.SnackBarThemeData = class SnackBarThemeData extends Object_Diagnosticable$36$4 {
    get backgroundColor() {
      return this[S$.backgroundColor$7];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get actionTextColor() {
      return this[S$.actionTextColor];
    }
    set actionTextColor(value) {
      super.actionTextColor = value;
    }
    get disabledActionTextColor() {
      return this[S$.disabledActionTextColor];
    }
    set disabledActionTextColor(value) {
      super.disabledActionTextColor = value;
    }
    get contentTextStyle() {
      return this[S$.contentTextStyle$1];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get elevation() {
      return this[S$.elevation$8];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$.shape$12];
    }
    set shape(value) {
      super.shape = value;
    }
    get behavior() {
      return this[S$.behavior$1];
    }
    set behavior(value) {
      super.behavior = value;
    }
    copyWith(opts) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3, t23$4;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let actionTextColor = opts && 'actionTextColor' in opts ? opts.actionTextColor : null;
      let disabledActionTextColor = opts && 'disabledActionTextColor' in opts ? opts.disabledActionTextColor : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let behavior = opts && 'behavior' in opts ? opts.behavior : null;
      return new snack_bar_theme.SnackBarThemeData.new({backgroundColor: (t23 = backgroundColor, t23 == null ? this.backgroundColor : t23), actionTextColor: (t23$ = actionTextColor, t23$ == null ? this.actionTextColor : t23$), disabledActionTextColor: (t23$0 = disabledActionTextColor, t23$0 == null ? this.disabledActionTextColor : t23$0), contentTextStyle: (t23$1 = contentTextStyle, t23$1 == null ? this.contentTextStyle : t23$1), elevation: (t23$2 = elevation, t23$2 == null ? this.elevation : t23$2), shape: (t23$3 = shape, t23$3 == null ? this.shape : t23$3), behavior: (t23$4 = behavior, t23$4 == null ? this.behavior : t23$4)});
    }
    static lerp(a, b, t) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3, t23$4, t23$5, t23$6, t23$7, t23$8, t23$9, t23$10, t23$11;
      if (t == null) dart.nullFailed(I[56], 134, 84, "t");
      if (!(t != null)) dart.assertFailed(null, I[56], 135, 12, "t != null");
      return new snack_bar_theme.SnackBarThemeData.new({backgroundColor: ui.Color.lerp((t23 = a, t23 == null ? null : t23.backgroundColor), (t23$ = b, t23$ == null ? null : t23$.backgroundColor), t), actionTextColor: ui.Color.lerp((t23$0 = a, t23$0 == null ? null : t23$0.actionTextColor), (t23$1 = b, t23$1 == null ? null : t23$1.actionTextColor), t), disabledActionTextColor: ui.Color.lerp((t23$2 = a, t23$2 == null ? null : t23$2.disabledActionTextColor), (t23$3 = b, t23$3 == null ? null : t23$3.disabledActionTextColor), t), contentTextStyle: text_style.TextStyle.lerp((t23$4 = a, t23$4 == null ? null : t23$4.contentTextStyle), (t23$5 = b, t23$5 == null ? null : t23$5.contentTextStyle), t), elevation: ui.lerpDouble((t23$6 = a, t23$6 == null ? null : t23$6.elevation), (t23$7 = b, t23$7 == null ? null : t23$7.elevation), t), shape: borders.ShapeBorder.lerp((t23$8 = a, t23$8 == null ? null : t23$8.shape), (t23$9 = b, t23$9 == null ? null : t23$9.shape), t), behavior: dart.notNull(t) < 0.5 ? (t23$10 = a, t23$10 == null ? null : t23$10.behavior) : (t23$11 = b, t23$11 == null ? null : t23$11.behavior)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.actionTextColor, this.disabledActionTextColor, this.contentTextStyle, this.elevation, this.shape, this.behavior);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return snack_bar_theme.SnackBarThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.actionTextColor, this.actionTextColor) && dart.equals(other.disabledActionTextColor, this.disabledActionTextColor) && dart.equals(other.contentTextStyle, this.contentTextStyle) && other.elevation == this.elevation && dart.equals(other.shape, this.shape) && other.behavior == this.behavior;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[56], 177, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("actionTextColor", this.actionTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledActionTextColor", this.disabledActionTextColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfSnackBarBehavior()).new("behavior", this.behavior, {defaultValue: null}));
    }
  };
  (snack_bar_theme.SnackBarThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let actionTextColor = opts && 'actionTextColor' in opts ? opts.actionTextColor : null;
    let disabledActionTextColor = opts && 'disabledActionTextColor' in opts ? opts.disabledActionTextColor : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    this[S$.backgroundColor$7] = backgroundColor;
    this[S$.actionTextColor] = actionTextColor;
    this[S$.disabledActionTextColor] = disabledActionTextColor;
    this[S$.contentTextStyle$1] = contentTextStyle;
    this[S$.elevation$8] = elevation;
    this[S$.shape$12] = shape;
    this[S$.behavior$1] = behavior;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[56], 63, 15, "elevation == null || elevation >= 0.0");
    ;
  }).prototype = snack_bar_theme.SnackBarThemeData.prototype;
  dart.addTypeTests(snack_bar_theme.SnackBarThemeData);
  dart.addTypeCaches(snack_bar_theme.SnackBarThemeData);
  dart.setMethodSignature(snack_bar_theme.SnackBarThemeData, () => ({
    __proto__: dart.getMethods(snack_bar_theme.SnackBarThemeData.__proto__),
    copyWith: dart.fnType(snack_bar_theme.SnackBarThemeData, [], {actionTextColor: dart.nullable(ui.Color), backgroundColor: dart.nullable(ui.Color), behavior: dart.nullable(snack_bar_theme.SnackBarBehavior), contentTextStyle: dart.nullable(text_style.TextStyle), disabledActionTextColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), shape: dart.nullable(borders.ShapeBorder)}, {})
  }));
  dart.setLibraryUri(snack_bar_theme.SnackBarThemeData, I[57]);
  dart.setFieldSignature(snack_bar_theme.SnackBarThemeData, () => ({
    __proto__: dart.getFields(snack_bar_theme.SnackBarThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    actionTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledActionTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    behavior: dart.finalFieldType(dart.nullable(snack_bar_theme.SnackBarBehavior))
  }));
  dart.defineExtensionMethods(snack_bar_theme.SnackBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(snack_bar_theme.SnackBarThemeData, ['hashCode']);
  slider_theme.SliderTheme = class SliderTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$5];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[58], 113, 42, "context");
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(slider_theme.SliderTheme);
      return inheritedTheme != null ? inheritedTheme.data : theme$.Theme.of(context).sliderTheme;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[58], 119, 28, "context");
      if (child == null) dart.nullFailed(I[58], 119, 44, "child");
      return new slider_theme.SliderTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1293] || CT.C1293});
    }
    updateShouldNotify(oldWidget) {
      slider_theme.SliderTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[58], 124, 39, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (slider_theme.SliderTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[58], 69, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[58], 70, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$5] = data;
    if (!(child != null)) dart.assertFailed(null, I[58], 71, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, I[58], 72, 15, "data != null");
    slider_theme.SliderTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slider_theme.SliderTheme.prototype;
  dart.addTypeTests(slider_theme.SliderTheme);
  dart.addTypeCaches(slider_theme.SliderTheme);
  dart.setMethodSignature(slider_theme.SliderTheme, () => ({
    __proto__: dart.getMethods(slider_theme.SliderTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(slider_theme.SliderTheme, I[59]);
  dart.setFieldSignature(slider_theme.SliderTheme, () => ({
    __proto__: dart.getFields(slider_theme.SliderTheme.__proto__),
    data: dart.finalFieldType(slider_theme.SliderThemeData)
  }));
  slider_theme.ShowValueIndicator = class ShowValueIndicator extends core.Object {
    toString() {
      return this[S$._name$13];
    }
  };
  (slider_theme.ShowValueIndicator.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[58], 135, 6, "index");
    if (_name == null) dart.nullFailed(I[58], 135, 6, "_name");
    this.index = index;
    this[S$._name$13] = _name;
    ;
  }).prototype = slider_theme.ShowValueIndicator.prototype;
  dart.addTypeTests(slider_theme.ShowValueIndicator);
  dart.addTypeCaches(slider_theme.ShowValueIndicator);
  dart.setLibraryUri(slider_theme.ShowValueIndicator, I[59]);
  dart.setFieldSignature(slider_theme.ShowValueIndicator, () => ({
    __proto__: dart.getFields(slider_theme.ShowValueIndicator.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$13]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(slider_theme.ShowValueIndicator, ['toString']);
  slider_theme.ShowValueIndicator.onlyForDiscrete = C[1297] || CT.C1297;
  slider_theme.ShowValueIndicator.onlyForContinuous = C[1298] || CT.C1298;
  slider_theme.ShowValueIndicator.always = C[1299] || CT.C1299;
  slider_theme.ShowValueIndicator.never = C[1300] || CT.C1300;
  slider_theme.ShowValueIndicator.values = C[1301] || CT.C1301;
  slider_theme.Thumb = class Thumb extends core.Object {
    toString() {
      return this[S$._name$13];
    }
  };
  (slider_theme.Thumb.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[58], 158, 6, "index");
    if (_name == null) dart.nullFailed(I[58], 158, 6, "_name");
    this.index = index;
    this[S$._name$13] = _name;
    ;
  }).prototype = slider_theme.Thumb.prototype;
  dart.addTypeTests(slider_theme.Thumb);
  dart.addTypeCaches(slider_theme.Thumb);
  dart.setLibraryUri(slider_theme.Thumb, I[59]);
  dart.setFieldSignature(slider_theme.Thumb, () => ({
    __proto__: dart.getFields(slider_theme.Thumb.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$13]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(slider_theme.Thumb, ['toString']);
  slider_theme.Thumb.start = C[1302] || CT.C1302;
  slider_theme.Thumb.end = C[1303] || CT.C1303;
  slider_theme.Thumb.values = C[1304] || CT.C1304;
  const Object_Diagnosticable$36$5 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$5.new = function() {
  }).prototype = Object_Diagnosticable$36$5.prototype;
  dart.applyMixin(Object_Diagnosticable$36$5, diagnostics.Diagnosticable);
  slider_theme.SliderThemeData = class SliderThemeData extends Object_Diagnosticable$36$5 {
    get trackHeight() {
      return this[S$.trackHeight];
    }
    set trackHeight(value) {
      super.trackHeight = value;
    }
    get activeTrackColor() {
      return this[S$.activeTrackColor];
    }
    set activeTrackColor(value) {
      super.activeTrackColor = value;
    }
    get inactiveTrackColor() {
      return this[S$.inactiveTrackColor];
    }
    set inactiveTrackColor(value) {
      super.inactiveTrackColor = value;
    }
    get disabledActiveTrackColor() {
      return this[S$.disabledActiveTrackColor];
    }
    set disabledActiveTrackColor(value) {
      super.disabledActiveTrackColor = value;
    }
    get disabledInactiveTrackColor() {
      return this[S$.disabledInactiveTrackColor];
    }
    set disabledInactiveTrackColor(value) {
      super.disabledInactiveTrackColor = value;
    }
    get activeTickMarkColor() {
      return this[S$.activeTickMarkColor];
    }
    set activeTickMarkColor(value) {
      super.activeTickMarkColor = value;
    }
    get inactiveTickMarkColor() {
      return this[S$.inactiveTickMarkColor];
    }
    set inactiveTickMarkColor(value) {
      super.inactiveTickMarkColor = value;
    }
    get disabledActiveTickMarkColor() {
      return this[S$.disabledActiveTickMarkColor];
    }
    set disabledActiveTickMarkColor(value) {
      super.disabledActiveTickMarkColor = value;
    }
    get disabledInactiveTickMarkColor() {
      return this[S$.disabledInactiveTickMarkColor];
    }
    set disabledInactiveTickMarkColor(value) {
      super.disabledInactiveTickMarkColor = value;
    }
    get thumbColor() {
      return this[S$.thumbColor$1];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get overlappingShapeStrokeColor() {
      return this[S$.overlappingShapeStrokeColor];
    }
    set overlappingShapeStrokeColor(value) {
      super.overlappingShapeStrokeColor = value;
    }
    get disabledThumbColor() {
      return this[S$.disabledThumbColor];
    }
    set disabledThumbColor(value) {
      super.disabledThumbColor = value;
    }
    get overlayColor() {
      return this[S$.overlayColor$2];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get valueIndicatorColor() {
      return this[S$.valueIndicatorColor];
    }
    set valueIndicatorColor(value) {
      super.valueIndicatorColor = value;
    }
    get overlayShape() {
      return this[S$.overlayShape];
    }
    set overlayShape(value) {
      super.overlayShape = value;
    }
    get tickMarkShape() {
      return this[S$.tickMarkShape];
    }
    set tickMarkShape(value) {
      super.tickMarkShape = value;
    }
    get thumbShape() {
      return this[S$.thumbShape];
    }
    set thumbShape(value) {
      super.thumbShape = value;
    }
    get trackShape() {
      return this[S$.trackShape];
    }
    set trackShape(value) {
      super.trackShape = value;
    }
    get valueIndicatorShape() {
      return this[S$.valueIndicatorShape];
    }
    set valueIndicatorShape(value) {
      super.valueIndicatorShape = value;
    }
    get rangeTickMarkShape() {
      return this[S$.rangeTickMarkShape];
    }
    set rangeTickMarkShape(value) {
      super.rangeTickMarkShape = value;
    }
    get rangeThumbShape() {
      return this[S$.rangeThumbShape];
    }
    set rangeThumbShape(value) {
      super.rangeThumbShape = value;
    }
    get rangeTrackShape() {
      return this[S$.rangeTrackShape];
    }
    set rangeTrackShape(value) {
      super.rangeTrackShape = value;
    }
    get rangeValueIndicatorShape() {
      return this[S$.rangeValueIndicatorShape];
    }
    set rangeValueIndicatorShape(value) {
      super.rangeValueIndicatorShape = value;
    }
    get showValueIndicator() {
      return this[S$.showValueIndicator];
    }
    set showValueIndicator(value) {
      super.showValueIndicator = value;
    }
    get valueIndicatorTextStyle() {
      return this[S$.valueIndicatorTextStyle];
    }
    set valueIndicatorTextStyle(value) {
      super.valueIndicatorTextStyle = value;
    }
    get minThumbSeparation() {
      return this[S$.minThumbSeparation];
    }
    set minThumbSeparation(value) {
      super.minThumbSeparation = value;
    }
    get thumbSelector() {
      return this[S$.thumbSelector];
    }
    set thumbSelector(value) {
      super.thumbSelector = value;
    }
    static fromPrimaryColors(opts) {
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      if (primaryColor == null) dart.nullFailed(I[58], 308, 20, "primaryColor");
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      if (primaryColorDark == null) dart.nullFailed(I[58], 309, 20, "primaryColorDark");
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      if (primaryColorLight == null) dart.nullFailed(I[58], 310, 20, "primaryColorLight");
      let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
      if (valueIndicatorTextStyle == null) dart.nullFailed(I[58], 311, 24, "valueIndicatorTextStyle");
      if (!(primaryColor != null)) dart.assertFailed(null, I[58], 313, 12, "primaryColor != null");
      if (!(primaryColorDark != null)) dart.assertFailed(null, I[58], 314, 12, "primaryColorDark != null");
      if (!(primaryColorLight != null)) dart.assertFailed(null, I[58], 315, 12, "primaryColorLight != null");
      if (!(valueIndicatorTextStyle != null)) dart.assertFailed(null, I[58], 316, 12, "valueIndicatorTextStyle != null");
      return new slider_theme.SliderThemeData.new({trackHeight: 2.0, activeTrackColor: primaryColor.withAlpha(255), inactiveTrackColor: primaryColor.withAlpha(61), disabledActiveTrackColor: primaryColorDark.withAlpha(82), disabledInactiveTrackColor: primaryColorDark.withAlpha(31), activeTickMarkColor: primaryColorLight.withAlpha(138), inactiveTickMarkColor: primaryColor.withAlpha(138), disabledActiveTickMarkColor: primaryColorLight.withAlpha(31), disabledInactiveTickMarkColor: primaryColorDark.withAlpha(31), thumbColor: primaryColor.withAlpha(255), overlappingShapeStrokeColor: colors$.Colors.white, disabledThumbColor: primaryColorDark.withAlpha(82), overlayColor: primaryColor.withAlpha(31), valueIndicatorColor: primaryColor.withAlpha(255), overlayShape: C[1305] || CT.C1305, tickMarkShape: C[1306] || CT.C1306, thumbShape: C[1307] || CT.C1307, trackShape: C[1308] || CT.C1308, valueIndicatorShape: C[1309] || CT.C1309, rangeTickMarkShape: C[1310] || CT.C1310, rangeThumbShape: C[1311] || CT.C1311, rangeTrackShape: C[1312] || CT.C1312, rangeValueIndicatorShape: C[1313] || CT.C1313, valueIndicatorTextStyle: valueIndicatorTextStyle, showValueIndicator: slider_theme.ShowValueIndicator.onlyForDiscrete});
    }
    copyWith(opts) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3, t23$4, t23$5, t23$6, t23$7, t23$8, t23$9, t23$10, t23$11, t23$12, t23$13, t23$14, t23$15, t23$16, t23$17, t23$18, t23$19, t23$20, t23$21, t23$22, t23$23, t23$24;
      let trackHeight = opts && 'trackHeight' in opts ? opts.trackHeight : null;
      let activeTrackColor = opts && 'activeTrackColor' in opts ? opts.activeTrackColor : null;
      let inactiveTrackColor = opts && 'inactiveTrackColor' in opts ? opts.inactiveTrackColor : null;
      let disabledActiveTrackColor = opts && 'disabledActiveTrackColor' in opts ? opts.disabledActiveTrackColor : null;
      let disabledInactiveTrackColor = opts && 'disabledInactiveTrackColor' in opts ? opts.disabledInactiveTrackColor : null;
      let activeTickMarkColor = opts && 'activeTickMarkColor' in opts ? opts.activeTickMarkColor : null;
      let inactiveTickMarkColor = opts && 'inactiveTickMarkColor' in opts ? opts.inactiveTickMarkColor : null;
      let disabledActiveTickMarkColor = opts && 'disabledActiveTickMarkColor' in opts ? opts.disabledActiveTickMarkColor : null;
      let disabledInactiveTickMarkColor = opts && 'disabledInactiveTickMarkColor' in opts ? opts.disabledInactiveTickMarkColor : null;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let overlappingShapeStrokeColor = opts && 'overlappingShapeStrokeColor' in opts ? opts.overlappingShapeStrokeColor : null;
      let disabledThumbColor = opts && 'disabledThumbColor' in opts ? opts.disabledThumbColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let valueIndicatorColor = opts && 'valueIndicatorColor' in opts ? opts.valueIndicatorColor : null;
      let overlayShape = opts && 'overlayShape' in opts ? opts.overlayShape : null;
      let tickMarkShape = opts && 'tickMarkShape' in opts ? opts.tickMarkShape : null;
      let thumbShape = opts && 'thumbShape' in opts ? opts.thumbShape : null;
      let trackShape = opts && 'trackShape' in opts ? opts.trackShape : null;
      let valueIndicatorShape = opts && 'valueIndicatorShape' in opts ? opts.valueIndicatorShape : null;
      let rangeTickMarkShape = opts && 'rangeTickMarkShape' in opts ? opts.rangeTickMarkShape : null;
      let rangeThumbShape = opts && 'rangeThumbShape' in opts ? opts.rangeThumbShape : null;
      let rangeTrackShape = opts && 'rangeTrackShape' in opts ? opts.rangeTrackShape : null;
      let rangeValueIndicatorShape = opts && 'rangeValueIndicatorShape' in opts ? opts.rangeValueIndicatorShape : null;
      let showValueIndicator = opts && 'showValueIndicator' in opts ? opts.showValueIndicator : null;
      let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
      let minThumbSeparation = opts && 'minThumbSeparation' in opts ? opts.minThumbSeparation : null;
      let thumbSelector = opts && 'thumbSelector' in opts ? opts.thumbSelector : null;
      return new slider_theme.SliderThemeData.new({trackHeight: (t23 = trackHeight, t23 == null ? this.trackHeight : t23), activeTrackColor: (t23$ = activeTrackColor, t23$ == null ? this.activeTrackColor : t23$), inactiveTrackColor: (t23$0 = inactiveTrackColor, t23$0 == null ? this.inactiveTrackColor : t23$0), disabledActiveTrackColor: (t23$1 = disabledActiveTrackColor, t23$1 == null ? this.disabledActiveTrackColor : t23$1), disabledInactiveTrackColor: (t23$2 = disabledInactiveTrackColor, t23$2 == null ? this.disabledInactiveTrackColor : t23$2), activeTickMarkColor: (t23$3 = activeTickMarkColor, t23$3 == null ? this.activeTickMarkColor : t23$3), inactiveTickMarkColor: (t23$4 = inactiveTickMarkColor, t23$4 == null ? this.inactiveTickMarkColor : t23$4), disabledActiveTickMarkColor: (t23$5 = disabledActiveTickMarkColor, t23$5 == null ? this.disabledActiveTickMarkColor : t23$5), disabledInactiveTickMarkColor: (t23$6 = disabledInactiveTickMarkColor, t23$6 == null ? this.disabledInactiveTickMarkColor : t23$6), thumbColor: (t23$7 = thumbColor, t23$7 == null ? this.thumbColor : t23$7), overlappingShapeStrokeColor: (t23$8 = overlappingShapeStrokeColor, t23$8 == null ? this.overlappingShapeStrokeColor : t23$8), disabledThumbColor: (t23$9 = disabledThumbColor, t23$9 == null ? this.disabledThumbColor : t23$9), overlayColor: (t23$10 = overlayColor, t23$10 == null ? this.overlayColor : t23$10), valueIndicatorColor: (t23$11 = valueIndicatorColor, t23$11 == null ? this.valueIndicatorColor : t23$11), overlayShape: (t23$12 = overlayShape, t23$12 == null ? this.overlayShape : t23$12), tickMarkShape: (t23$13 = tickMarkShape, t23$13 == null ? this.tickMarkShape : t23$13), thumbShape: (t23$14 = thumbShape, t23$14 == null ? this.thumbShape : t23$14), trackShape: (t23$15 = trackShape, t23$15 == null ? this.trackShape : t23$15), valueIndicatorShape: (t23$16 = valueIndicatorShape, t23$16 == null ? this.valueIndicatorShape : t23$16), rangeTickMarkShape: (t23$17 = rangeTickMarkShape, t23$17 == null ? this.rangeTickMarkShape : t23$17), rangeThumbShape: (t23$18 = rangeThumbShape, t23$18 == null ? this.rangeThumbShape : t23$18), rangeTrackShape: (t23$19 = rangeTrackShape, t23$19 == null ? this.rangeTrackShape : t23$19), rangeValueIndicatorShape: (t23$20 = rangeValueIndicatorShape, t23$20 == null ? this.rangeValueIndicatorShape : t23$20), showValueIndicator: (t23$21 = showValueIndicator, t23$21 == null ? this.showValueIndicator : t23$21), valueIndicatorTextStyle: (t23$22 = valueIndicatorTextStyle, t23$22 == null ? this.valueIndicatorTextStyle : t23$22), minThumbSeparation: (t23$23 = minThumbSeparation, t23$23 == null ? this.minThumbSeparation : t23$23), thumbSelector: (t23$24 = thumbSelector, t23$24 == null ? this.thumbSelector : t23$24)});
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[58], 634, 47, "a");
      if (b == null) dart.nullFailed(I[58], 634, 66, "b");
      if (t == null) dart.nullFailed(I[58], 634, 76, "t");
      if (!(a != null)) dart.assertFailed(null, I[58], 635, 12, "a != null");
      if (!(b != null)) dart.assertFailed(null, I[58], 636, 12, "b != null");
      if (!(t != null)) dart.assertFailed(null, I[58], 637, 12, "t != null");
      return new slider_theme.SliderThemeData.new({trackHeight: ui.lerpDouble(a.trackHeight, b.trackHeight, t), activeTrackColor: ui.Color.lerp(a.activeTrackColor, b.activeTrackColor, t), inactiveTrackColor: ui.Color.lerp(a.inactiveTrackColor, b.inactiveTrackColor, t), disabledActiveTrackColor: ui.Color.lerp(a.disabledActiveTrackColor, b.disabledActiveTrackColor, t), disabledInactiveTrackColor: ui.Color.lerp(a.disabledInactiveTrackColor, b.disabledInactiveTrackColor, t), activeTickMarkColor: ui.Color.lerp(a.activeTickMarkColor, b.activeTickMarkColor, t), inactiveTickMarkColor: ui.Color.lerp(a.inactiveTickMarkColor, b.inactiveTickMarkColor, t), disabledActiveTickMarkColor: ui.Color.lerp(a.disabledActiveTickMarkColor, b.disabledActiveTickMarkColor, t), disabledInactiveTickMarkColor: ui.Color.lerp(a.disabledInactiveTickMarkColor, b.disabledInactiveTickMarkColor, t), thumbColor: ui.Color.lerp(a.thumbColor, b.thumbColor, t), overlappingShapeStrokeColor: ui.Color.lerp(a.overlappingShapeStrokeColor, b.overlappingShapeStrokeColor, t), disabledThumbColor: ui.Color.lerp(a.disabledThumbColor, b.disabledThumbColor, t), overlayColor: ui.Color.lerp(a.overlayColor, b.overlayColor, t), valueIndicatorColor: ui.Color.lerp(a.valueIndicatorColor, b.valueIndicatorColor, t), overlayShape: dart.notNull(t) < 0.5 ? a.overlayShape : b.overlayShape, tickMarkShape: dart.notNull(t) < 0.5 ? a.tickMarkShape : b.tickMarkShape, thumbShape: dart.notNull(t) < 0.5 ? a.thumbShape : b.thumbShape, trackShape: dart.notNull(t) < 0.5 ? a.trackShape : b.trackShape, valueIndicatorShape: dart.notNull(t) < 0.5 ? a.valueIndicatorShape : b.valueIndicatorShape, rangeTickMarkShape: dart.notNull(t) < 0.5 ? a.rangeTickMarkShape : b.rangeTickMarkShape, rangeThumbShape: dart.notNull(t) < 0.5 ? a.rangeThumbShape : b.rangeThumbShape, rangeTrackShape: dart.notNull(t) < 0.5 ? a.rangeTrackShape : b.rangeTrackShape, rangeValueIndicatorShape: dart.notNull(t) < 0.5 ? a.rangeValueIndicatorShape : b.rangeValueIndicatorShape, showValueIndicator: dart.notNull(t) < 0.5 ? a.showValueIndicator : b.showValueIndicator, valueIndicatorTextStyle: text_style.TextStyle.lerp(a.valueIndicatorTextStyle, b.valueIndicatorTextStyle, t), minThumbSeparation: ui.lerpDouble(a.minThumbSeparation, b.minThumbSeparation, t), thumbSelector: dart.notNull(t) < 0.5 ? a.thumbSelector : b.thumbSelector});
    }
    get hashCode() {
      return ui.hashList(T$.JSArrayOfObjectN().of([this.trackHeight, this.activeTrackColor, this.inactiveTrackColor, this.disabledActiveTrackColor, this.disabledInactiveTrackColor, this.activeTickMarkColor, this.inactiveTickMarkColor, this.disabledActiveTickMarkColor, this.disabledInactiveTickMarkColor, this.thumbColor, this.overlappingShapeStrokeColor, this.disabledThumbColor, this.overlayColor, this.valueIndicatorColor, this.overlayShape, this.tickMarkShape, this.thumbShape, this.trackShape, this.valueIndicatorShape, this.rangeTickMarkShape, this.rangeThumbShape, this.rangeTrackShape, this.rangeValueIndicatorShape, this.showValueIndicator, this.valueIndicatorTextStyle, this.minThumbSeparation, this.thumbSelector]));
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) {
        return false;
      }
      return slider_theme.SliderThemeData.is(other) && other.trackHeight == this.trackHeight && dart.equals(other.activeTrackColor, this.activeTrackColor) && dart.equals(other.inactiveTrackColor, this.inactiveTrackColor) && dart.equals(other.disabledActiveTrackColor, this.disabledActiveTrackColor) && dart.equals(other.disabledInactiveTrackColor, this.disabledInactiveTrackColor) && dart.equals(other.activeTickMarkColor, this.activeTickMarkColor) && dart.equals(other.inactiveTickMarkColor, this.inactiveTickMarkColor) && dart.equals(other.disabledActiveTickMarkColor, this.disabledActiveTickMarkColor) && dart.equals(other.disabledInactiveTickMarkColor, this.disabledInactiveTickMarkColor) && dart.equals(other.thumbColor, this.thumbColor) && dart.equals(other.overlappingShapeStrokeColor, this.overlappingShapeStrokeColor) && dart.equals(other.disabledThumbColor, this.disabledThumbColor) && dart.equals(other.overlayColor, this.overlayColor) && dart.equals(other.valueIndicatorColor, this.valueIndicatorColor) && dart.equals(other.overlayShape, this.overlayShape) && dart.equals(other.tickMarkShape, this.tickMarkShape) && dart.equals(other.thumbShape, this.thumbShape) && dart.equals(other.trackShape, this.trackShape) && dart.equals(other.valueIndicatorShape, this.valueIndicatorShape) && dart.equals(other.rangeTickMarkShape, this.rangeTickMarkShape) && dart.equals(other.rangeThumbShape, this.rangeThumbShape) && dart.equals(other.rangeTrackShape, this.rangeTrackShape) && dart.equals(other.rangeValueIndicatorShape, this.rangeValueIndicatorShape) && other.showValueIndicator == this.showValueIndicator && dart.equals(other.valueIndicatorTextStyle, this.valueIndicatorTextStyle) && other.minThumbSeparation == this.minThumbSeparation && dart.equals(other.thumbSelector, this.thumbSelector);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[58], 741, 56, "properties");
      super.debugFillProperties(properties);
      let defaultData = C[1314] || CT.C1314;
      properties.add(new diagnostics.DoubleProperty.new("trackHeight", this.trackHeight, {defaultValue: defaultData.trackHeight}));
      properties.add(new colors.ColorProperty.new("activeTrackColor", this.activeTrackColor, {defaultValue: defaultData.activeTrackColor}));
      properties.add(new colors.ColorProperty.new("inactiveTrackColor", this.inactiveTrackColor, {defaultValue: defaultData.inactiveTrackColor}));
      properties.add(new colors.ColorProperty.new("disabledActiveTrackColor", this.disabledActiveTrackColor, {defaultValue: defaultData.disabledActiveTrackColor}));
      properties.add(new colors.ColorProperty.new("disabledInactiveTrackColor", this.disabledInactiveTrackColor, {defaultValue: defaultData.disabledInactiveTrackColor}));
      properties.add(new colors.ColorProperty.new("activeTickMarkColor", this.activeTickMarkColor, {defaultValue: defaultData.activeTickMarkColor}));
      properties.add(new colors.ColorProperty.new("inactiveTickMarkColor", this.inactiveTickMarkColor, {defaultValue: defaultData.inactiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("disabledActiveTickMarkColor", this.disabledActiveTickMarkColor, {defaultValue: defaultData.disabledActiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("disabledInactiveTickMarkColor", this.disabledInactiveTickMarkColor, {defaultValue: defaultData.disabledInactiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("thumbColor", this.thumbColor, {defaultValue: defaultData.thumbColor}));
      properties.add(new colors.ColorProperty.new("overlappingShapeStrokeColor", this.overlappingShapeStrokeColor, {defaultValue: defaultData.overlappingShapeStrokeColor}));
      properties.add(new colors.ColorProperty.new("disabledThumbColor", this.disabledThumbColor, {defaultValue: defaultData.disabledThumbColor}));
      properties.add(new colors.ColorProperty.new("overlayColor", this.overlayColor, {defaultValue: defaultData.overlayColor}));
      properties.add(new colors.ColorProperty.new("valueIndicatorColor", this.valueIndicatorColor, {defaultValue: defaultData.valueIndicatorColor}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderComponentShape()).new("overlayShape", this.overlayShape, {defaultValue: defaultData.overlayShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderTickMarkShape()).new("tickMarkShape", this.tickMarkShape, {defaultValue: defaultData.tickMarkShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderComponentShape()).new("thumbShape", this.thumbShape, {defaultValue: defaultData.thumbShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderTrackShape()).new("trackShape", this.trackShape, {defaultValue: defaultData.trackShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderComponentShape()).new("valueIndicatorShape", this.valueIndicatorShape, {defaultValue: defaultData.valueIndicatorShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderTickMarkShape()).new("rangeTickMarkShape", this.rangeTickMarkShape, {defaultValue: defaultData.rangeTickMarkShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderThumbShape()).new("rangeThumbShape", this.rangeThumbShape, {defaultValue: defaultData.rangeThumbShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderTrackShape()).new("rangeTrackShape", this.rangeTrackShape, {defaultValue: defaultData.rangeTrackShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderValueIndicatorShape()).new("rangeValueIndicatorShape", this.rangeValueIndicatorShape, {defaultValue: defaultData.rangeValueIndicatorShape}));
      properties.add(new (T$.EnumPropertyOfShowValueIndicator()).new("showValueIndicator", this.showValueIndicator, {defaultValue: defaultData.showValueIndicator}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("valueIndicatorTextStyle", this.valueIndicatorTextStyle, {defaultValue: defaultData.valueIndicatorTextStyle}));
      properties.add(new diagnostics.DoubleProperty.new("minThumbSeparation", this.minThumbSeparation, {defaultValue: defaultData.minThumbSeparation}));
      properties.add(new (T$.DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN()).new("thumbSelector", this.thumbSelector, {defaultValue: defaultData.thumbSelector}));
    }
  };
  (slider_theme.SliderThemeData.new = function(opts) {
    let trackHeight = opts && 'trackHeight' in opts ? opts.trackHeight : null;
    let activeTrackColor = opts && 'activeTrackColor' in opts ? opts.activeTrackColor : null;
    let inactiveTrackColor = opts && 'inactiveTrackColor' in opts ? opts.inactiveTrackColor : null;
    let disabledActiveTrackColor = opts && 'disabledActiveTrackColor' in opts ? opts.disabledActiveTrackColor : null;
    let disabledInactiveTrackColor = opts && 'disabledInactiveTrackColor' in opts ? opts.disabledInactiveTrackColor : null;
    let activeTickMarkColor = opts && 'activeTickMarkColor' in opts ? opts.activeTickMarkColor : null;
    let inactiveTickMarkColor = opts && 'inactiveTickMarkColor' in opts ? opts.inactiveTickMarkColor : null;
    let disabledActiveTickMarkColor = opts && 'disabledActiveTickMarkColor' in opts ? opts.disabledActiveTickMarkColor : null;
    let disabledInactiveTickMarkColor = opts && 'disabledInactiveTickMarkColor' in opts ? opts.disabledInactiveTickMarkColor : null;
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    let overlappingShapeStrokeColor = opts && 'overlappingShapeStrokeColor' in opts ? opts.overlappingShapeStrokeColor : null;
    let disabledThumbColor = opts && 'disabledThumbColor' in opts ? opts.disabledThumbColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let valueIndicatorColor = opts && 'valueIndicatorColor' in opts ? opts.valueIndicatorColor : null;
    let overlayShape = opts && 'overlayShape' in opts ? opts.overlayShape : null;
    let tickMarkShape = opts && 'tickMarkShape' in opts ? opts.tickMarkShape : null;
    let thumbShape = opts && 'thumbShape' in opts ? opts.thumbShape : null;
    let trackShape = opts && 'trackShape' in opts ? opts.trackShape : null;
    let valueIndicatorShape = opts && 'valueIndicatorShape' in opts ? opts.valueIndicatorShape : null;
    let rangeTickMarkShape = opts && 'rangeTickMarkShape' in opts ? opts.rangeTickMarkShape : null;
    let rangeThumbShape = opts && 'rangeThumbShape' in opts ? opts.rangeThumbShape : null;
    let rangeTrackShape = opts && 'rangeTrackShape' in opts ? opts.rangeTrackShape : null;
    let rangeValueIndicatorShape = opts && 'rangeValueIndicatorShape' in opts ? opts.rangeValueIndicatorShape : null;
    let showValueIndicator = opts && 'showValueIndicator' in opts ? opts.showValueIndicator : null;
    let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
    let minThumbSeparation = opts && 'minThumbSeparation' in opts ? opts.minThumbSeparation : null;
    let thumbSelector = opts && 'thumbSelector' in opts ? opts.thumbSelector : null;
    this[S$.trackHeight] = trackHeight;
    this[S$.activeTrackColor] = activeTrackColor;
    this[S$.inactiveTrackColor] = inactiveTrackColor;
    this[S$.disabledActiveTrackColor] = disabledActiveTrackColor;
    this[S$.disabledInactiveTrackColor] = disabledInactiveTrackColor;
    this[S$.activeTickMarkColor] = activeTickMarkColor;
    this[S$.inactiveTickMarkColor] = inactiveTickMarkColor;
    this[S$.disabledActiveTickMarkColor] = disabledActiveTickMarkColor;
    this[S$.disabledInactiveTickMarkColor] = disabledInactiveTickMarkColor;
    this[S$.thumbColor$1] = thumbColor;
    this[S$.overlappingShapeStrokeColor] = overlappingShapeStrokeColor;
    this[S$.disabledThumbColor] = disabledThumbColor;
    this[S$.overlayColor$2] = overlayColor;
    this[S$.valueIndicatorColor] = valueIndicatorColor;
    this[S$.overlayShape] = overlayShape;
    this[S$.tickMarkShape] = tickMarkShape;
    this[S$.thumbShape] = thumbShape;
    this[S$.trackShape] = trackShape;
    this[S$.valueIndicatorShape] = valueIndicatorShape;
    this[S$.rangeTickMarkShape] = rangeTickMarkShape;
    this[S$.rangeThumbShape] = rangeThumbShape;
    this[S$.rangeTrackShape] = rangeTrackShape;
    this[S$.rangeValueIndicatorShape] = rangeValueIndicatorShape;
    this[S$.showValueIndicator] = showValueIndicator;
    this[S$.valueIndicatorTextStyle] = valueIndicatorTextStyle;
    this[S$.minThumbSeparation] = minThumbSeparation;
    this[S$.thumbSelector] = thumbSelector;
    ;
  }).prototype = slider_theme.SliderThemeData.prototype;
  dart.addTypeTests(slider_theme.SliderThemeData);
  dart.addTypeCaches(slider_theme.SliderThemeData);
  dart.setMethodSignature(slider_theme.SliderThemeData, () => ({
    __proto__: dart.getMethods(slider_theme.SliderThemeData.__proto__),
    copyWith: dart.fnType(slider_theme.SliderThemeData, [], {activeTickMarkColor: dart.nullable(ui.Color), activeTrackColor: dart.nullable(ui.Color), disabledActiveTickMarkColor: dart.nullable(ui.Color), disabledActiveTrackColor: dart.nullable(ui.Color), disabledInactiveTickMarkColor: dart.nullable(ui.Color), disabledInactiveTrackColor: dart.nullable(ui.Color), disabledThumbColor: dart.nullable(ui.Color), inactiveTickMarkColor: dart.nullable(ui.Color), inactiveTrackColor: dart.nullable(ui.Color), minThumbSeparation: dart.nullable(core.double), overlappingShapeStrokeColor: dart.nullable(ui.Color), overlayColor: dart.nullable(ui.Color), overlayShape: dart.nullable(slider_theme.SliderComponentShape), rangeThumbShape: dart.nullable(slider_theme.RangeSliderThumbShape), rangeTickMarkShape: dart.nullable(slider_theme.RangeSliderTickMarkShape), rangeTrackShape: dart.nullable(slider_theme.RangeSliderTrackShape), rangeValueIndicatorShape: dart.nullable(slider_theme.RangeSliderValueIndicatorShape), showValueIndicator: dart.nullable(slider_theme.ShowValueIndicator), thumbColor: dart.nullable(ui.Color), thumbSelector: dart.nullable(dart.fnType(dart.nullable(slider_theme.Thumb), [ui.TextDirection, slider_theme.RangeValues, core.double, ui.Size, ui.Size, core.double])), thumbShape: dart.nullable(slider_theme.SliderComponentShape), tickMarkShape: dart.nullable(slider_theme.SliderTickMarkShape), trackHeight: dart.nullable(core.double), trackShape: dart.nullable(slider_theme.SliderTrackShape), valueIndicatorColor: dart.nullable(ui.Color), valueIndicatorShape: dart.nullable(slider_theme.SliderComponentShape), valueIndicatorTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(slider_theme.SliderThemeData, I[59]);
  dart.setFieldSignature(slider_theme.SliderThemeData, () => ({
    __proto__: dart.getFields(slider_theme.SliderThemeData.__proto__),
    trackHeight: dart.finalFieldType(dart.nullable(core.double)),
    activeTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    inactiveTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledActiveTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledInactiveTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    activeTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    inactiveTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledActiveTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledInactiveTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    thumbColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlappingShapeStrokeColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledThumbColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayColor: dart.finalFieldType(dart.nullable(ui.Color)),
    valueIndicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayShape: dart.finalFieldType(dart.nullable(slider_theme.SliderComponentShape)),
    tickMarkShape: dart.finalFieldType(dart.nullable(slider_theme.SliderTickMarkShape)),
    thumbShape: dart.finalFieldType(dart.nullable(slider_theme.SliderComponentShape)),
    trackShape: dart.finalFieldType(dart.nullable(slider_theme.SliderTrackShape)),
    valueIndicatorShape: dart.finalFieldType(dart.nullable(slider_theme.SliderComponentShape)),
    rangeTickMarkShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderTickMarkShape)),
    rangeThumbShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderThumbShape)),
    rangeTrackShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderTrackShape)),
    rangeValueIndicatorShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderValueIndicatorShape)),
    showValueIndicator: dart.finalFieldType(dart.nullable(slider_theme.ShowValueIndicator)),
    valueIndicatorTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    minThumbSeparation: dart.finalFieldType(dart.nullable(core.double)),
    thumbSelector: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(slider_theme.Thumb), [ui.TextDirection, slider_theme.RangeValues, core.double, ui.Size, ui.Size, core.double])))
  }));
  dart.defineExtensionMethods(slider_theme.SliderThemeData, ['_equals']);
  dart.defineExtensionAccessors(slider_theme.SliderThemeData, ['hashCode']);
  slider_theme.SliderComponentShape = class SliderComponentShape extends core.Object {};
  (slider_theme.SliderComponentShape.new = function() {
    ;
  }).prototype = slider_theme.SliderComponentShape.prototype;
  dart.addTypeTests(slider_theme.SliderComponentShape);
  dart.addTypeCaches(slider_theme.SliderComponentShape);
  dart.setLibraryUri(slider_theme.SliderComponentShape, I[59]);
  dart.defineLazy(slider_theme.SliderComponentShape, {
    /*slider_theme.SliderComponentShape.noThumb*/get noThumb() {
      return new slider_theme._EmptySliderComponentShape.new();
    },
    /*slider_theme.SliderComponentShape.noOverlay*/get noOverlay() {
      return new slider_theme._EmptySliderComponentShape.new();
    }
  }, false);
  slider_theme.SliderTickMarkShape = class SliderTickMarkShape extends core.Object {};
  (slider_theme.SliderTickMarkShape.new = function() {
    ;
  }).prototype = slider_theme.SliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.SliderTickMarkShape);
  dart.addTypeCaches(slider_theme.SliderTickMarkShape);
  dart.setLibraryUri(slider_theme.SliderTickMarkShape, I[59]);
  dart.defineLazy(slider_theme.SliderTickMarkShape, {
    /*slider_theme.SliderTickMarkShape.noTickMark*/get noTickMark() {
      return new slider_theme._EmptySliderTickMarkShape.new();
    }
  }, false);
  slider_theme.SliderTrackShape = class SliderTrackShape extends core.Object {};
  (slider_theme.SliderTrackShape.new = function() {
    ;
  }).prototype = slider_theme.SliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.SliderTrackShape);
  dart.addTypeCaches(slider_theme.SliderTrackShape);
  dart.setLibraryUri(slider_theme.SliderTrackShape, I[59]);
  slider_theme.RangeSliderThumbShape = class RangeSliderThumbShape extends core.Object {};
  (slider_theme.RangeSliderThumbShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderThumbShape);
  dart.addTypeCaches(slider_theme.RangeSliderThumbShape);
  dart.setLibraryUri(slider_theme.RangeSliderThumbShape, I[59]);
  slider_theme.RangeSliderValueIndicatorShape = class RangeSliderValueIndicatorShape extends core.Object {
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return 0.0;
    }
  };
  (slider_theme.RangeSliderValueIndicatorShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RangeSliderValueIndicatorShape.__proto__),
    getHorizontalShift: dart.fnType(core.double, [], {activationAnimation: dart.nullable(animation.Animation$(core.double)), center: dart.nullable(ui.Offset), labelPainter: dart.nullable(text_painter.TextPainter), parentBox: dart.nullable(box$.RenderBox), sizeWithOverflow: dart.nullable(ui.Size), textScaleFactor: dart.nullable(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.RangeSliderValueIndicatorShape, I[59]);
  slider_theme.RangeSliderTickMarkShape = class RangeSliderTickMarkShape extends core.Object {};
  (slider_theme.RangeSliderTickMarkShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RangeSliderTickMarkShape);
  dart.setLibraryUri(slider_theme.RangeSliderTickMarkShape, I[59]);
  slider_theme.RangeSliderTrackShape = class RangeSliderTrackShape extends core.Object {};
  (slider_theme.RangeSliderTrackShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RangeSliderTrackShape);
  dart.setLibraryUri(slider_theme.RangeSliderTrackShape, I[59]);
  slider_theme.BaseSliderTrackShape = class BaseSliderTrackShape extends core.Object {
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 1438, 24, "parentBox");
      let offset = opts && 'offset' in opts ? opts.offset : C[1315] || CT.C1315;
      if (offset == null) dart.nullFailed(I[58], 1439, 12, "offset");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 1440, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[58], 1441, 10, "isEnabled");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[58], 1442, 10, "isDiscrete");
      if (!(isEnabled != null)) dart.assertFailed(null, I[58], 1444, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[58], 1445, 12, "isDiscrete != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 1446, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 1447, 12, "sliderTheme != null");
      let thumbWidth = dart.nullCheck(sliderTheme.thumbShape).getPreferredSize(isEnabled, isDiscrete).width;
      let overlayWidth = dart.nullCheck(sliderTheme.overlayShape).getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = dart.nullCheck(sliderTheme.trackHeight);
      if (!(dart.notNull(overlayWidth) >= 0)) dart.assertFailed(null, I[58], 1451, 12, "overlayWidth >= 0");
      if (!(trackHeight >= 0)) dart.assertFailed(null, I[58], 1452, 12, "trackHeight >= 0");
      let trackLeft = dart.notNull(offset.dx) + dart.notNull(overlayWidth) / 2;
      let trackTop = dart.notNull(offset.dy) + (dart.notNull(parentBox.size.height) - trackHeight) / 2;
      let trackRight = trackLeft + dart.notNull(parentBox.size.width) - math.max(core.num, thumbWidth, overlayWidth);
      let trackBottom = trackTop + trackHeight;
      return new ui.Rect.fromLTRB(math.min(core.double, trackLeft, trackRight), trackTop, math.max(core.double, trackLeft, trackRight), trackBottom);
    }
  };
  (slider_theme.BaseSliderTrackShape.new = function() {
    ;
  }).prototype = slider_theme.BaseSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.BaseSliderTrackShape);
  dart.addTypeCaches(slider_theme.BaseSliderTrackShape);
  dart.setMethodSignature(slider_theme.BaseSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.BaseSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(ui.Rect, [], {isDiscrete: core.bool, isEnabled: core.bool, offset: ui.Offset}, {parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData})
  }));
  dart.setLibraryUri(slider_theme.BaseSliderTrackShape, I[59]);
  const SliderTrackShape_BaseSliderTrackShape$36 = class SliderTrackShape_BaseSliderTrackShape extends slider_theme.SliderTrackShape {};
  (SliderTrackShape_BaseSliderTrackShape$36.new = function() {
    SliderTrackShape_BaseSliderTrackShape$36.__proto__.new.call(this);
  }).prototype = SliderTrackShape_BaseSliderTrackShape$36.prototype;
  dart.applyMixin(SliderTrackShape_BaseSliderTrackShape$36, slider_theme.BaseSliderTrackShape);
  slider_theme.RectangularSliderTrackShape = class RectangularSliderTrackShape extends SliderTrackShape_BaseSliderTrackShape$36 {
    get disabledThumbGapWidth() {
      return this[S$.disabledThumbGapWidth];
    }
    set disabledThumbGapWidth(value) {
      super.disabledThumbGapWidth = value;
    }
    paint(context, offset, opts) {
      let t23, t23$;
      if (context == null) dart.nullFailed(I[58], 1506, 21, "context");
      if (offset == null) dart.nullFailed(I[58], 1507, 12, "offset");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 1508, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 1509, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 1510, 32, "enableAnimation");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 1511, 28, "textDirection");
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      if (thumbCenter == null) dart.nullFailed(I[58], 1512, 21, "thumbCenter");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[58], 1513, 10, "isDiscrete");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[58], 1514, 10, "isEnabled");
      if (!(context != null)) dart.assertFailed(null, I[58], 1516, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, I[58], 1517, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 1518, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 1519, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[58], 1520, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[58], 1521, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[58], 1522, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[58], 1523, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.thumbShape != null)) dart.assertFailed(null, I[58], 1524, 12, "sliderTheme.thumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 1525, 12, "enableAnimation != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[58], 1526, 12, "textDirection != null");
      if (!(thumbCenter != null)) dart.assertFailed(null, I[58], 1527, 12, "thumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[58], 1528, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[58], 1529, 12, "isDiscrete != null");
      if (dart.nullCheck(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t23 = ui.Paint.new(), (() => {
        t23.color = dart.nullCheck(activeTrackColorTween.evaluate(enableAnimation));
        return t23;
      })());
      let inactivePaint = (t23$ = ui.Paint.new(), (() => {
        t23$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t23$;
      })());
      let leftTrackPaint = null;
      let rightTrackPaint = null;
      switch (textDirection) {
        case C[329] || CT.C329:
        {
          leftTrackPaint = activePaint;
          rightTrackPaint = inactivePaint;
          break;
        }
        case C[328] || CT.C328:
        {
          leftTrackPaint = inactivePaint;
          rightTrackPaint = activePaint;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let leftTrackSegment = new ui.Rect.fromLTRB(trackRect.left, trackRect.top, thumbCenter.dx, trackRect.bottom);
      if (!dart.test(leftTrackSegment.isEmpty)) context.canvas.drawRect(leftTrackSegment, leftTrackPaint);
      let rightTrackSegment = new ui.Rect.fromLTRB(thumbCenter.dx, trackRect.top, trackRect.right, trackRect.bottom);
      if (!dart.test(rightTrackSegment.isEmpty)) context.canvas.drawRect(rightTrackSegment, rightTrackPaint);
    }
  };
  (slider_theme.RectangularSliderTrackShape.new = function(opts) {
    let disabledThumbGapWidth = opts && 'disabledThumbGapWidth' in opts ? opts.disabledThumbGapWidth : 2;
    if (disabledThumbGapWidth == null) dart.nullFailed(I[58], 1490, 44, "disabledThumbGapWidth");
    this[S$.disabledThumbGapWidth] = disabledThumbGapWidth;
    slider_theme.RectangularSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RectangularSliderTrackShape);
  dart.addTypeCaches(slider_theme.RectangularSliderTrackShape);
  dart.setMethodSignature(slider_theme.RectangularSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularSliderTrackShape.__proto__),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: animation.Animation$(core.double), parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme.RectangularSliderTrackShape, I[59]);
  dart.setFieldSignature(slider_theme.RectangularSliderTrackShape, () => ({
    __proto__: dart.getFields(slider_theme.RectangularSliderTrackShape.__proto__),
    disabledThumbGapWidth: dart.finalFieldType(core.double)
  }));
  const SliderTrackShape_BaseSliderTrackShape$36$ = class SliderTrackShape_BaseSliderTrackShape extends slider_theme.SliderTrackShape {};
  (SliderTrackShape_BaseSliderTrackShape$36$.new = function() {
    SliderTrackShape_BaseSliderTrackShape$36$.__proto__.new.call(this);
  }).prototype = SliderTrackShape_BaseSliderTrackShape$36$.prototype;
  dart.applyMixin(SliderTrackShape_BaseSliderTrackShape$36$, slider_theme.BaseSliderTrackShape);
  slider_theme.RoundedRectSliderTrackShape = class RoundedRectSliderTrackShape extends SliderTrackShape_BaseSliderTrackShape$36$ {
    paint(context, offset, opts) {
      let t23, t23$;
      if (context == null) dart.nullFailed(I[58], 1604, 21, "context");
      if (offset == null) dart.nullFailed(I[58], 1605, 12, "offset");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 1606, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 1607, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 1608, 32, "enableAnimation");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 1609, 28, "textDirection");
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      if (thumbCenter == null) dart.nullFailed(I[58], 1610, 21, "thumbCenter");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[58], 1611, 10, "isDiscrete");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[58], 1612, 10, "isEnabled");
      let additionalActiveTrackHeight = opts && 'additionalActiveTrackHeight' in opts ? opts.additionalActiveTrackHeight : 2;
      if (additionalActiveTrackHeight == null) dart.nullFailed(I[58], 1613, 12, "additionalActiveTrackHeight");
      if (!(context != null)) dart.assertFailed(null, I[58], 1615, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, I[58], 1616, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 1617, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 1618, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[58], 1619, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[58], 1620, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[58], 1621, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[58], 1622, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.thumbShape != null)) dart.assertFailed(null, I[58], 1623, 12, "sliderTheme.thumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 1624, 12, "enableAnimation != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[58], 1625, 12, "textDirection != null");
      if (!(thumbCenter != null)) dart.assertFailed(null, I[58], 1626, 12, "thumbCenter != null");
      if (sliderTheme.trackHeight == null || dart.nullCheck(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t23 = ui.Paint.new(), (() => {
        t23.color = dart.nullCheck(activeTrackColorTween.evaluate(enableAnimation));
        return t23;
      })());
      let inactivePaint = (t23$ = ui.Paint.new(), (() => {
        t23$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t23$;
      })());
      let leftTrackPaint = null;
      let rightTrackPaint = null;
      switch (textDirection) {
        case C[329] || CT.C329:
        {
          leftTrackPaint = activePaint;
          rightTrackPaint = inactivePaint;
          break;
        }
        case C[328] || CT.C328:
        {
          leftTrackPaint = inactivePaint;
          rightTrackPaint = activePaint;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let trackRadius = new ui.Radius.circular(dart.notNull(trackRect.height) / 2);
      let activeTrackRadius = new ui.Radius.circular(dart.notNull(trackRect.height) / 2 + 1);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(trackRect.left, textDirection == ui.TextDirection.ltr ? dart.notNull(trackRect.top) - dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.top, thumbCenter.dx, textDirection == ui.TextDirection.ltr ? dart.notNull(trackRect.bottom) + dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.bottom, {topLeft: textDirection == ui.TextDirection.ltr ? activeTrackRadius : trackRadius, bottomLeft: textDirection == ui.TextDirection.ltr ? activeTrackRadius : trackRadius}), leftTrackPaint);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(thumbCenter.dx, textDirection == ui.TextDirection.rtl ? dart.notNull(trackRect.top) - dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.top, trackRect.right, textDirection == ui.TextDirection.rtl ? dart.notNull(trackRect.bottom) + dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.bottom, {topRight: textDirection == ui.TextDirection.rtl ? activeTrackRadius : trackRadius, bottomRight: textDirection == ui.TextDirection.rtl ? activeTrackRadius : trackRadius}), rightTrackPaint);
    }
  };
  (slider_theme.RoundedRectSliderTrackShape.new = function() {
    slider_theme.RoundedRectSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundedRectSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RoundedRectSliderTrackShape);
  dart.addTypeCaches(slider_theme.RoundedRectSliderTrackShape);
  dart.setMethodSignature(slider_theme.RoundedRectSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundedRectSliderTrackShape.__proto__),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {additionalActiveTrackHeight: core.double, isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: animation.Animation$(core.double), parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme.RoundedRectSliderTrackShape, I[59]);
  slider_theme.RectangularRangeSliderTrackShape = class RectangularRangeSliderTrackShape extends slider_theme.RangeSliderTrackShape {
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 1723, 24, "parentBox");
      let offset = opts && 'offset' in opts ? opts.offset : C[1315] || CT.C1315;
      if (offset == null) dart.nullFailed(I[58], 1724, 12, "offset");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 1725, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[58], 1726, 10, "isEnabled");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[58], 1727, 10, "isDiscrete");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 1729, 12, "parentBox != null");
      if (!(offset != null)) dart.assertFailed(null, I[58], 1730, 12, "offset != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 1731, 12, "sliderTheme != null");
      if (!(sliderTheme.overlayShape != null)) dart.assertFailed(null, I[58], 1732, 12, "sliderTheme.overlayShape != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[58], 1733, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[58], 1734, 12, "isDiscrete != null");
      let overlayWidth = dart.nullCheck(sliderTheme.overlayShape).getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = dart.nullCheck(sliderTheme.trackHeight);
      if (!(dart.notNull(overlayWidth) >= 0)) dart.assertFailed(null, I[58], 1737, 12, "overlayWidth >= 0");
      if (!(trackHeight >= 0)) dart.assertFailed(null, I[58], 1738, 12, "trackHeight >= 0");
      let trackLeft = dart.notNull(offset.dx) + dart.notNull(overlayWidth) / 2;
      let trackTop = dart.notNull(offset.dy) + (dart.notNull(parentBox.size.height) - trackHeight) / 2;
      let trackRight = trackLeft + dart.notNull(parentBox.size.width) - dart.notNull(overlayWidth);
      let trackBottom = trackTop + trackHeight;
      return new ui.Rect.fromLTRB(math.min(core.double, trackLeft, trackRight), trackTop, math.max(core.double, trackLeft, trackRight), trackBottom);
    }
    paint(context, offset, opts) {
      let t23, t23$;
      if (context == null) dart.nullFailed(I[58], 1750, 21, "context");
      if (offset == null) dart.nullFailed(I[58], 1751, 12, "offset");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 1752, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 1753, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      if (startThumbCenter == null) dart.nullFailed(I[58], 1755, 21, "startThumbCenter");
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      if (endThumbCenter == null) dart.nullFailed(I[58], 1756, 21, "endThumbCenter");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[58], 1757, 10, "isEnabled");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[58], 1758, 10, "isDiscrete");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 1759, 28, "textDirection");
      if (!(context != null)) dart.assertFailed(null, I[58], 1761, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, I[58], 1762, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 1763, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 1764, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[58], 1765, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[58], 1766, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[58], 1767, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[58], 1768, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.rangeThumbShape != null)) dart.assertFailed(null, I[58], 1769, 12, "sliderTheme.rangeThumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 1770, 12, "enableAnimation != null");
      if (!(startThumbCenter != null)) dart.assertFailed(null, I[58], 1771, 12, "startThumbCenter != null");
      if (!(endThumbCenter != null)) dart.assertFailed(null, I[58], 1772, 12, "endThumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[58], 1773, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[58], 1774, 12, "isDiscrete != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[58], 1775, 12, "textDirection != null");
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t23 = ui.Paint.new(), (() => {
        t23.color = dart.nullCheck(activeTrackColorTween.evaluate(dart.nullCheck(enableAnimation)));
        return t23;
      })());
      let inactivePaint = (t23$ = ui.Paint.new(), (() => {
        t23$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t23$;
      })());
      let leftThumbOffset = null;
      let rightThumbOffset = null;
      switch (textDirection) {
        case C[329] || CT.C329:
        {
          leftThumbOffset = startThumbCenter;
          rightThumbOffset = endThumbCenter;
          break;
        }
        case C[328] || CT.C328:
        {
          leftThumbOffset = endThumbCenter;
          rightThumbOffset = startThumbCenter;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let leftTrackSegment = new ui.Rect.fromLTRB(trackRect.left, trackRect.top, leftThumbOffset.dx, trackRect.bottom);
      if (!dart.test(leftTrackSegment.isEmpty)) context.canvas.drawRect(leftTrackSegment, inactivePaint);
      let middleTrackSegment = new ui.Rect.fromLTRB(leftThumbOffset.dx, trackRect.top, rightThumbOffset.dx, trackRect.bottom);
      if (!dart.test(middleTrackSegment.isEmpty)) context.canvas.drawRect(middleTrackSegment, activePaint);
      let rightTrackSegment = new ui.Rect.fromLTRB(rightThumbOffset.dx, trackRect.top, trackRect.right, trackRect.bottom);
      if (!dart.test(rightTrackSegment.isEmpty)) context.canvas.drawRect(rightTrackSegment, inactivePaint);
    }
  };
  (slider_theme.RectangularRangeSliderTrackShape.new = function() {
    slider_theme.RectangularRangeSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularRangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RectangularRangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RectangularRangeSliderTrackShape);
  dart.setMethodSignature(slider_theme.RectangularRangeSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularRangeSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(ui.Rect, [], {isDiscrete: core.bool, isEnabled: core.bool, offset: ui.Offset}, {parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: dart.nullable(animation.Animation$(core.double)), endThumbCenter: ui.Offset, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, startThumbCenter: ui.Offset, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(slider_theme.RectangularRangeSliderTrackShape, I[59]);
  slider_theme.RoundedRectRangeSliderTrackShape = class RoundedRectRangeSliderTrackShape extends slider_theme.RangeSliderTrackShape {
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 1850, 24, "parentBox");
      let offset = opts && 'offset' in opts ? opts.offset : C[1315] || CT.C1315;
      if (offset == null) dart.nullFailed(I[58], 1851, 12, "offset");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 1852, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[58], 1853, 10, "isEnabled");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[58], 1854, 10, "isDiscrete");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 1856, 12, "parentBox != null");
      if (!(offset != null)) dart.assertFailed(null, I[58], 1857, 12, "offset != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 1858, 12, "sliderTheme != null");
      if (!(sliderTheme.overlayShape != null)) dart.assertFailed(null, I[58], 1859, 12, "sliderTheme.overlayShape != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, I[58], 1860, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[58], 1861, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[58], 1862, 12, "isDiscrete != null");
      let overlayWidth = dart.nullCheck(sliderTheme.overlayShape).getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = dart.nullCheck(sliderTheme.trackHeight);
      if (!(dart.notNull(overlayWidth) >= 0)) dart.assertFailed(null, I[58], 1865, 12, "overlayWidth >= 0");
      if (!(trackHeight >= 0)) dart.assertFailed(null, I[58], 1866, 12, "trackHeight >= 0");
      let trackLeft = dart.notNull(offset.dx) + dart.notNull(overlayWidth) / 2;
      let trackTop = dart.notNull(offset.dy) + (dart.notNull(parentBox.size.height) - trackHeight) / 2;
      let trackRight = trackLeft + dart.notNull(parentBox.size.width) - dart.notNull(overlayWidth);
      let trackBottom = trackTop + trackHeight;
      return new ui.Rect.fromLTRB(math.min(core.double, trackLeft, trackRight), trackTop, math.max(core.double, trackLeft, trackRight), trackBottom);
    }
    paint(context, offset, opts) {
      let t23, t23$;
      if (context == null) dart.nullFailed(I[58], 1878, 21, "context");
      if (offset == null) dart.nullFailed(I[58], 1879, 12, "offset");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 1880, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 1881, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 1882, 32, "enableAnimation");
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      if (startThumbCenter == null) dart.nullFailed(I[58], 1883, 21, "startThumbCenter");
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      if (endThumbCenter == null) dart.nullFailed(I[58], 1884, 21, "endThumbCenter");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[58], 1885, 10, "isEnabled");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[58], 1886, 10, "isDiscrete");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 1887, 28, "textDirection");
      let additionalActiveTrackHeight = opts && 'additionalActiveTrackHeight' in opts ? opts.additionalActiveTrackHeight : 2;
      if (additionalActiveTrackHeight == null) dart.nullFailed(I[58], 1888, 12, "additionalActiveTrackHeight");
      if (!(context != null)) dart.assertFailed(null, I[58], 1890, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, I[58], 1891, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 1892, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 1893, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[58], 1894, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[58], 1895, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[58], 1896, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[58], 1897, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.rangeThumbShape != null)) dart.assertFailed(null, I[58], 1898, 12, "sliderTheme.rangeThumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 1899, 12, "enableAnimation != null");
      if (!(startThumbCenter != null)) dart.assertFailed(null, I[58], 1900, 12, "startThumbCenter != null");
      if (!(endThumbCenter != null)) dart.assertFailed(null, I[58], 1901, 12, "endThumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[58], 1902, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, I[58], 1903, 12, "isDiscrete != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[58], 1904, 12, "textDirection != null");
      if (sliderTheme.trackHeight == null || dart.nullCheck(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t23 = ui.Paint.new(), (() => {
        t23.color = dart.nullCheck(activeTrackColorTween.evaluate(enableAnimation));
        return t23;
      })());
      let inactivePaint = (t23$ = ui.Paint.new(), (() => {
        t23$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t23$;
      })());
      let leftThumbOffset = null;
      let rightThumbOffset = null;
      switch (textDirection) {
        case C[329] || CT.C329:
        {
          leftThumbOffset = startThumbCenter;
          rightThumbOffset = endThumbCenter;
          break;
        }
        case C[328] || CT.C328:
        {
          leftThumbOffset = endThumbCenter;
          rightThumbOffset = startThumbCenter;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let thumbSize = dart.nullCheck(sliderTheme.rangeThumbShape).getPreferredSize(isEnabled, isDiscrete);
      let thumbRadius = dart.notNull(thumbSize.width) / 2;
      if (!(thumbRadius > 0)) dart.assertFailed(null, I[58], 1937, 12, "thumbRadius > 0");
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let trackRadius = new ui.Radius.circular(dart.notNull(trackRect.height) / 2);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(trackRect.left, trackRect.top, leftThumbOffset.dx, trackRect.bottom, {topLeft: trackRadius, bottomLeft: trackRadius}), inactivePaint);
      context.canvas.drawRect(new ui.Rect.fromLTRB(leftThumbOffset.dx, dart.notNull(trackRect.top) - dart.notNull(additionalActiveTrackHeight) / 2, rightThumbOffset.dx, dart.notNull(trackRect.bottom) + dart.notNull(additionalActiveTrackHeight) / 2), activePaint);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(rightThumbOffset.dx, trackRect.top, trackRect.right, trackRect.bottom, {topRight: trackRadius, bottomRight: trackRadius}), inactivePaint);
    }
  };
  (slider_theme.RoundedRectRangeSliderTrackShape.new = function() {
    slider_theme.RoundedRectRangeSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundedRectRangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RoundedRectRangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RoundedRectRangeSliderTrackShape);
  dart.setMethodSignature(slider_theme.RoundedRectRangeSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundedRectRangeSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(ui.Rect, [], {isDiscrete: core.bool, isEnabled: core.bool, offset: ui.Offset}, {parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {additionalActiveTrackHeight: core.double, isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: animation.Animation$(core.double), endThumbCenter: ui.Offset, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, startThumbCenter: ui.Offset, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(slider_theme.RoundedRectRangeSliderTrackShape, I[59]);
  slider_theme.RoundSliderTickMarkShape = class RoundSliderTickMarkShape extends slider_theme.SliderTickMarkShape {
    get tickMarkRadius() {
      return this[S$.tickMarkRadius];
    }
    set tickMarkRadius(value) {
      super.tickMarkRadius = value;
    }
    getPreferredSize(opts) {
      let t23;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2017, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      if (isEnabled == null) dart.nullFailed(I[58], 2018, 19, "isEnabled");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 2020, 12, "sliderTheme != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, I[58], 2021, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[58], 2022, 12, "isEnabled != null");
      return new ui.Size.fromRadius((t23 = this.tickMarkRadius, t23 == null ? dart.nullCheck(sliderTheme.trackHeight) / 4 : t23));
    }
    paint(context, center, opts) {
      let t23;
      if (context == null) dart.nullFailed(I[58], 2031, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2032, 12, "center");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2033, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2034, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 2035, 32, "enableAnimation");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 2036, 28, "textDirection");
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      if (thumbCenter == null) dart.nullFailed(I[58], 2037, 21, "thumbCenter");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      if (isEnabled == null) dart.nullFailed(I[58], 2038, 19, "isEnabled");
      if (!(context != null)) dart.assertFailed(null, I[58], 2040, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[58], 2041, 12, "center != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 2042, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 2043, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTickMarkColor != null)) dart.assertFailed(null, I[58], 2044, 12, "sliderTheme.disabledActiveTickMarkColor != null");
      if (!(sliderTheme.disabledInactiveTickMarkColor != null)) dart.assertFailed(null, I[58], 2045, 12, "sliderTheme.disabledInactiveTickMarkColor != null");
      if (!(sliderTheme.activeTickMarkColor != null)) dart.assertFailed(null, I[58], 2046, 12, "sliderTheme.activeTickMarkColor != null");
      if (!(sliderTheme.inactiveTickMarkColor != null)) dart.assertFailed(null, I[58], 2047, 12, "sliderTheme.inactiveTickMarkColor != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 2048, 12, "enableAnimation != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[58], 2049, 12, "textDirection != null");
      if (!(thumbCenter != null)) dart.assertFailed(null, I[58], 2050, 12, "thumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[58], 2051, 12, "isEnabled != null");
      let begin = null;
      let end = null;
      switch (textDirection) {
        case C[329] || CT.C329:
        {
          let isTickMarkRightOfThumb = dart.notNull(center.dx) > dart.notNull(thumbCenter.dx);
          begin = isTickMarkRightOfThumb ? sliderTheme.disabledInactiveTickMarkColor : sliderTheme.disabledActiveTickMarkColor;
          end = isTickMarkRightOfThumb ? sliderTheme.inactiveTickMarkColor : sliderTheme.activeTickMarkColor;
          break;
        }
        case C[328] || CT.C328:
        {
          let isTickMarkLeftOfThumb = dart.notNull(center.dx) < dart.notNull(thumbCenter.dx);
          begin = isTickMarkLeftOfThumb ? sliderTheme.disabledInactiveTickMarkColor : sliderTheme.disabledActiveTickMarkColor;
          end = isTickMarkLeftOfThumb ? sliderTheme.inactiveTickMarkColor : sliderTheme.activeTickMarkColor;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let paint = (t23 = ui.Paint.new(), (() => {
        t23.color = dart.nullCheck(new tween.ColorTween.new({begin: begin, end: end}).evaluate(enableAnimation));
        return t23;
      })());
      let tickMarkRadius = dart.notNull(this.getPreferredSize({isEnabled: isEnabled, sliderTheme: sliderTheme}).width) / 2;
      if (tickMarkRadius > 0) {
        context.canvas.drawCircle(center, tickMarkRadius, paint);
      }
    }
  };
  (slider_theme.RoundSliderTickMarkShape.new = function(opts) {
    let tickMarkRadius = opts && 'tickMarkRadius' in opts ? opts.tickMarkRadius : null;
    this[S$.tickMarkRadius] = tickMarkRadius;
    slider_theme.RoundSliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RoundSliderTickMarkShape);
  dart.setMethodSignature(slider_theme.RoundSliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [], {}, {isEnabled: core.bool, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {enableAnimation: animation.Animation$(core.double), isEnabled: core.bool, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme.RoundSliderTickMarkShape, I[59]);
  dart.setFieldSignature(slider_theme.RoundSliderTickMarkShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderTickMarkShape.__proto__),
    tickMarkRadius: dart.finalFieldType(dart.nullable(core.double))
  }));
  slider_theme.RoundRangeSliderTickMarkShape = class RoundRangeSliderTickMarkShape extends slider_theme.RangeSliderTickMarkShape {
    get tickMarkRadius() {
      return this[S$.tickMarkRadius$1];
    }
    set tickMarkRadius(value) {
      super.tickMarkRadius = value;
    }
    getPreferredSize(opts) {
      let t23;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2115, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[58], 2116, 10, "isEnabled");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 2118, 12, "sliderTheme != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, I[58], 2119, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[58], 2120, 12, "isEnabled != null");
      return new ui.Size.fromRadius((t23 = this.tickMarkRadius, t23 == null ? dart.nullCheck(sliderTheme.trackHeight) / 4 : t23));
    }
    paint(context, center, opts) {
      let t23;
      if (context == null) dart.nullFailed(I[58], 2126, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2127, 12, "center");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2128, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2129, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 2130, 32, "enableAnimation");
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      if (startThumbCenter == null) dart.nullFailed(I[58], 2131, 21, "startThumbCenter");
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      if (endThumbCenter == null) dart.nullFailed(I[58], 2132, 21, "endThumbCenter");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[58], 2133, 10, "isEnabled");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 2134, 28, "textDirection");
      if (!(context != null)) dart.assertFailed(null, I[58], 2136, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[58], 2137, 12, "center != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 2138, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 2139, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTickMarkColor != null)) dart.assertFailed(null, I[58], 2140, 12, "sliderTheme.disabledActiveTickMarkColor != null");
      if (!(sliderTheme.disabledInactiveTickMarkColor != null)) dart.assertFailed(null, I[58], 2141, 12, "sliderTheme.disabledInactiveTickMarkColor != null");
      if (!(sliderTheme.activeTickMarkColor != null)) dart.assertFailed(null, I[58], 2142, 12, "sliderTheme.activeTickMarkColor != null");
      if (!(sliderTheme.inactiveTickMarkColor != null)) dart.assertFailed(null, I[58], 2143, 12, "sliderTheme.inactiveTickMarkColor != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 2144, 12, "enableAnimation != null");
      if (!(startThumbCenter != null)) dart.assertFailed(null, I[58], 2145, 12, "startThumbCenter != null");
      if (!(endThumbCenter != null)) dart.assertFailed(null, I[58], 2146, 12, "endThumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, I[58], 2147, 12, "isEnabled != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[58], 2148, 12, "textDirection != null");
      let isBetweenThumbs = null;
      switch (textDirection) {
        case C[329] || CT.C329:
        {
          isBetweenThumbs = dart.notNull(startThumbCenter.dx) < dart.notNull(center.dx) && dart.notNull(center.dx) < dart.notNull(endThumbCenter.dx);
          break;
        }
        case C[328] || CT.C328:
        {
          isBetweenThumbs = dart.notNull(endThumbCenter.dx) < dart.notNull(center.dx) && dart.notNull(center.dx) < dart.notNull(startThumbCenter.dx);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let begin = dart.test(isBetweenThumbs) ? sliderTheme.disabledActiveTickMarkColor : sliderTheme.disabledInactiveTickMarkColor;
      let end = dart.test(isBetweenThumbs) ? sliderTheme.activeTickMarkColor : sliderTheme.inactiveTickMarkColor;
      let paint = (t23 = ui.Paint.new(), (() => {
        t23.color = dart.nullCheck(new tween.ColorTween.new({begin: begin, end: end}).evaluate(enableAnimation));
        return t23;
      })());
      let tickMarkRadius = dart.notNull(this.getPreferredSize({isEnabled: isEnabled, sliderTheme: sliderTheme}).width) / 2;
      if (tickMarkRadius > 0) {
        context.canvas.drawCircle(center, tickMarkRadius, paint);
      }
    }
  };
  (slider_theme.RoundRangeSliderTickMarkShape.new = function(opts) {
    let tickMarkRadius = opts && 'tickMarkRadius' in opts ? opts.tickMarkRadius : null;
    this[S$.tickMarkRadius$1] = tickMarkRadius;
    slider_theme.RoundRangeSliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundRangeSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RoundRangeSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RoundRangeSliderTickMarkShape);
  dart.setMethodSignature(slider_theme.RoundRangeSliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundRangeSliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [], {isEnabled: core.bool}, {sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isEnabled: core.bool}, {enableAnimation: animation.Animation$(core.double), endThumbCenter: ui.Offset, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, startThumbCenter: ui.Offset, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(slider_theme.RoundRangeSliderTickMarkShape, I[59]);
  dart.setFieldSignature(slider_theme.RoundRangeSliderTickMarkShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundRangeSliderTickMarkShape.__proto__),
    tickMarkRadius: dart.finalFieldType(dart.nullable(core.double))
  }));
  slider_theme._EmptySliderTickMarkShape = class _EmptySliderTickMarkShape extends slider_theme.SliderTickMarkShape {
    getPreferredSize(opts) {
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2184, 30, "sliderTheme");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      if (isEnabled == null) dart.nullFailed(I[58], 2185, 19, "isEnabled");
      return ui.Size.zero;
    }
    paint(context, center, opts) {
      if (context == null) dart.nullFailed(I[58], 2192, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2193, 12, "center");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2194, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2195, 30, "sliderTheme");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 2196, 32, "enableAnimation");
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      if (thumbCenter == null) dart.nullFailed(I[58], 2197, 21, "thumbCenter");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      if (isEnabled == null) dart.nullFailed(I[58], 2198, 19, "isEnabled");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 2199, 28, "textDirection");
    }
  };
  (slider_theme._EmptySliderTickMarkShape.new = function() {
    slider_theme._EmptySliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme._EmptySliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme._EmptySliderTickMarkShape);
  dart.addTypeCaches(slider_theme._EmptySliderTickMarkShape);
  dart.setMethodSignature(slider_theme._EmptySliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme._EmptySliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [], {}, {isEnabled: core.bool, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {enableAnimation: animation.Animation$(core.double), isEnabled: core.bool, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme._EmptySliderTickMarkShape, I[59]);
  slider_theme._EmptySliderComponentShape = class _EmptySliderComponentShape extends slider_theme.SliderComponentShape {
    getPreferredSize(isEnabled, isDiscrete) {
      if (isEnabled == null) dart.nullFailed(I[58], 2216, 30, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[58], 2216, 46, "isDiscrete");
      return ui.Size.zero;
    }
    paint(context, center, opts) {
      if (context == null) dart.nullFailed(I[58], 2220, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2221, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[58], 2222, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 2223, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      if (isDiscrete == null) dart.nullFailed(I[58], 2224, 19, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 2225, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2226, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2227, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 2228, 28, "textDirection");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[58], 2229, 21, "value");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[58], 2230, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[58], 2231, 19, "sizeWithOverflow");
    }
  };
  (slider_theme._EmptySliderComponentShape.new = function() {
    slider_theme._EmptySliderComponentShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme._EmptySliderComponentShape.prototype;
  dart.addTypeTests(slider_theme._EmptySliderComponentShape);
  dart.addTypeCaches(slider_theme._EmptySliderComponentShape);
  dart.setMethodSignature(slider_theme._EmptySliderComponentShape, () => ({
    __proto__: dart.getMethods(slider_theme._EmptySliderComponentShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme._EmptySliderComponentShape, I[59]);
  slider_theme.RoundSliderThumbShape = class RoundSliderThumbShape extends slider_theme.SliderComponentShape {
    get enabledThumbRadius() {
      return this[S$.enabledThumbRadius];
    }
    set enabledThumbRadius(value) {
      super.enabledThumbRadius = value;
    }
    get disabledThumbRadius() {
      return this[S$.disabledThumbRadius];
    }
    set disabledThumbRadius(value) {
      super.disabledThumbRadius = value;
    }
    get elevation() {
      return this[S$.elevation$9];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressedElevation() {
      return this[S$.pressedElevation];
    }
    set pressedElevation(value) {
      super.pressedElevation = value;
    }
    get [S$._disabledThumbRadius]() {
      let t23;
      t23 = this.disabledThumbRadius;
      return t23 == null ? this.enabledThumbRadius : t23;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      if (isEnabled == null) dart.nullFailed(I[58], 2288, 30, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[58], 2288, 46, "isDiscrete");
      return new ui.Size.fromRadius(isEnabled === true ? this.enabledThumbRadius : this[S$._disabledThumbRadius]);
    }
    paint(context, center, opts) {
      let t23, t23$;
      if (context == null) dart.nullFailed(I[58], 2294, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2295, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[58], 2296, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 2297, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      if (isDiscrete == null) dart.nullFailed(I[58], 2298, 19, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 2299, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2300, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2301, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 2302, 28, "textDirection");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[58], 2303, 21, "value");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[58], 2304, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[58], 2305, 19, "sizeWithOverflow");
      if (!(context != null)) dart.assertFailed(null, I[58], 2307, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[58], 2308, 12, "center != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 2309, 12, "enableAnimation != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 2310, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledThumbColor != null)) dart.assertFailed(null, I[58], 2311, 12, "sliderTheme.disabledThumbColor != null");
      if (!(sliderTheme.thumbColor != null)) dart.assertFailed(null, I[58], 2312, 12, "sliderTheme.thumbColor != null");
      let canvas = context.canvas;
      let radiusTween = new (T$.TweenOfdouble()).new({begin: this[S$._disabledThumbRadius], end: this.enabledThumbRadius});
      let colorTween = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.thumbColor});
      let color = dart.nullCheck(colorTween.evaluate(enableAnimation));
      let radius = radiusTween.evaluate(enableAnimation);
      let elevationTween = new (T$.TweenOfdouble()).new({begin: this.elevation, end: this.pressedElevation});
      let evaluatedElevation = elevationTween.evaluate(activationAnimation);
      let path = (t23 = ui.Path.new(), (() => {
        t23.addArc(new ui.Rect.fromCenter({center: center, width: 2 * dart.notNull(radius), height: 2 * dart.notNull(radius)}), 0.0, 3.141592653589793 * 2);
        return t23;
      })());
      canvas.drawShadow(path, colors$.Colors.black, evaluatedElevation, true);
      canvas.drawCircle(center, radius, (t23$ = ui.Paint.new(), (() => {
        t23$.color = color;
        return t23$;
      })()));
    }
  };
  (slider_theme.RoundSliderThumbShape.new = function(opts) {
    let enabledThumbRadius = opts && 'enabledThumbRadius' in opts ? opts.enabledThumbRadius : 10;
    if (enabledThumbRadius == null) dart.nullFailed(I[58], 2252, 10, "enabledThumbRadius");
    let disabledThumbRadius = opts && 'disabledThumbRadius' in opts ? opts.disabledThumbRadius : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 1;
    if (elevation == null) dart.nullFailed(I[58], 2254, 10, "elevation");
    let pressedElevation = opts && 'pressedElevation' in opts ? opts.pressedElevation : 6;
    if (pressedElevation == null) dart.nullFailed(I[58], 2255, 10, "pressedElevation");
    this[S$.enabledThumbRadius] = enabledThumbRadius;
    this[S$.disabledThumbRadius] = disabledThumbRadius;
    this[S$.elevation$9] = elevation;
    this[S$.pressedElevation] = pressedElevation;
    slider_theme.RoundSliderThumbShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderThumbShape);
  dart.addTypeCaches(slider_theme.RoundSliderThumbShape);
  dart.setMethodSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderThumbShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setGetterSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getGetters(slider_theme.RoundSliderThumbShape.__proto__),
    [S$._disabledThumbRadius]: core.double
  }));
  dart.setLibraryUri(slider_theme.RoundSliderThumbShape, I[59]);
  dart.setFieldSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderThumbShape.__proto__),
    enabledThumbRadius: dart.finalFieldType(core.double),
    disabledThumbRadius: dart.finalFieldType(dart.nullable(core.double)),
    elevation: dart.finalFieldType(core.double),
    pressedElevation: dart.finalFieldType(core.double)
  }));
  slider_theme.RoundRangeSliderThumbShape = class RoundRangeSliderThumbShape extends slider_theme.RangeSliderThumbShape {
    get enabledThumbRadius() {
      return this[S$.enabledThumbRadius$1];
    }
    set enabledThumbRadius(value) {
      super.enabledThumbRadius = value;
    }
    get disabledThumbRadius() {
      return this[S$.disabledThumbRadius$1];
    }
    set disabledThumbRadius(value) {
      super.disabledThumbRadius = value;
    }
    get elevation() {
      return this[S$.elevation$10];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressedElevation() {
      return this[S$.pressedElevation$1];
    }
    set pressedElevation(value) {
      super.pressedElevation = value;
    }
    get [S$._disabledThumbRadius]() {
      let t23;
      t23 = this.disabledThumbRadius;
      return t23 == null ? this.enabledThumbRadius : t23;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      if (isEnabled == null) dart.nullFailed(I[58], 2389, 30, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[58], 2389, 46, "isDiscrete");
      return new ui.Size.fromRadius(isEnabled === true ? this.enabledThumbRadius : this[S$._disabledThumbRadius]);
    }
    paint(context, center, opts) {
      let t23, t23$, t23$0;
      if (context == null) dart.nullFailed(I[58], 2395, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2396, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[58], 2397, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 2398, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (isDiscrete == null) dart.nullFailed(I[58], 2399, 10, "isDiscrete");
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (isEnabled == null) dart.nullFailed(I[58], 2400, 10, "isEnabled");
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2402, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let isPressed = opts && 'isPressed' in opts ? opts.isPressed : null;
      if (!(context != null)) dart.assertFailed(null, I[58], 2407, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[58], 2408, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, I[58], 2409, 12, "activationAnimation != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 2410, 12, "sliderTheme != null");
      if (!(sliderTheme.showValueIndicator != null)) dart.assertFailed(null, I[58], 2411, 12, "sliderTheme.showValueIndicator != null");
      if (!(sliderTheme.overlappingShapeStrokeColor != null)) dart.assertFailed(null, I[58], 2412, 12, "sliderTheme.overlappingShapeStrokeColor != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 2413, 12, "enableAnimation != null");
      let canvas = context.canvas;
      let radiusTween = new (T$.TweenOfdouble()).new({begin: this[S$._disabledThumbRadius], end: this.enabledThumbRadius});
      let colorTween = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.thumbColor});
      let radius = radiusTween.evaluate(enableAnimation);
      let elevationTween = new (T$.TweenOfdouble()).new({begin: this.elevation, end: this.pressedElevation});
      if (isOnTop === true) {
        let strokePaint = (t23 = ui.Paint.new(), (() => {
          t23.color = dart.nullCheck(sliderTheme.overlappingShapeStrokeColor);
          t23.strokeWidth = 1.0;
          t23.style = ui.PaintingStyle.stroke;
          return t23;
        })());
        canvas.drawCircle(center, radius, strokePaint);
      }
      let color = dart.nullCheck(colorTween.evaluate(enableAnimation));
      let evaluatedElevation = dart.nullCheck(isPressed) ? elevationTween.evaluate(activationAnimation) : this.elevation;
      let shadowPath = (t23$ = ui.Path.new(), (() => {
        t23$.addArc(new ui.Rect.fromCenter({center: center, width: 2 * dart.notNull(radius), height: 2 * dart.notNull(radius)}), 0.0, 3.141592653589793 * 2);
        return t23$;
      })());
      canvas.drawShadow(shadowPath, colors$.Colors.black, evaluatedElevation, true);
      canvas.drawCircle(center, radius, (t23$0 = ui.Paint.new(), (() => {
        t23$0.color = color;
        return t23$0;
      })()));
    }
  };
  (slider_theme.RoundRangeSliderThumbShape.new = function(opts) {
    let enabledThumbRadius = opts && 'enabledThumbRadius' in opts ? opts.enabledThumbRadius : 10;
    if (enabledThumbRadius == null) dart.nullFailed(I[58], 2360, 10, "enabledThumbRadius");
    let disabledThumbRadius = opts && 'disabledThumbRadius' in opts ? opts.disabledThumbRadius : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 1;
    if (elevation == null) dart.nullFailed(I[58], 2362, 10, "elevation");
    let pressedElevation = opts && 'pressedElevation' in opts ? opts.pressedElevation : 6;
    if (pressedElevation == null) dart.nullFailed(I[58], 2363, 10, "pressedElevation");
    this[S$.enabledThumbRadius$1] = enabledThumbRadius;
    this[S$.disabledThumbRadius$1] = disabledThumbRadius;
    this[S$.elevation$10] = elevation;
    this[S$.pressedElevation$1] = pressedElevation;
    if (!(enabledThumbRadius != null)) dart.assertFailed(null, I[58], 2364, 15, "enabledThumbRadius != null");
    slider_theme.RoundRangeSliderThumbShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundRangeSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RoundRangeSliderThumbShape);
  dart.addTypeCaches(slider_theme.RoundRangeSliderThumbShape);
  dart.setMethodSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundRangeSliderThumbShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: core.bool, isEnabled: core.bool, isOnTop: dart.nullable(core.bool), isPressed: dart.nullable(core.bool), textDirection: dart.nullable(ui.TextDirection), thumb: dart.nullable(slider_theme.Thumb)}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), sliderTheme: slider_theme.SliderThemeData})
  }));
  dart.setGetterSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getGetters(slider_theme.RoundRangeSliderThumbShape.__proto__),
    [S$._disabledThumbRadius]: core.double
  }));
  dart.setLibraryUri(slider_theme.RoundRangeSliderThumbShape, I[59]);
  dart.setFieldSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundRangeSliderThumbShape.__proto__),
    enabledThumbRadius: dart.finalFieldType(core.double),
    disabledThumbRadius: dart.finalFieldType(dart.nullable(core.double)),
    elevation: dart.finalFieldType(core.double),
    pressedElevation: dart.finalFieldType(core.double)
  }));
  slider_theme.RoundSliderOverlayShape = class RoundSliderOverlayShape extends slider_theme.SliderComponentShape {
    get overlayRadius() {
      return this[S$.overlayRadius];
    }
    set overlayRadius(value) {
      super.overlayRadius = value;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      if (isEnabled == null) dart.nullFailed(I[58], 2480, 30, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[58], 2480, 46, "isDiscrete");
      return new ui.Size.fromRadius(this.overlayRadius);
    }
    paint(context, center, opts) {
      let t23;
      if (context == null) dart.nullFailed(I[58], 2486, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2487, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[58], 2488, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 2489, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      if (isDiscrete == null) dart.nullFailed(I[58], 2490, 19, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 2491, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2492, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2493, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 2494, 28, "textDirection");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[58], 2495, 21, "value");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[58], 2496, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[58], 2497, 19, "sizeWithOverflow");
      if (!(context != null)) dart.assertFailed(null, I[58], 2499, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[58], 2500, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, I[58], 2501, 12, "activationAnimation != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 2502, 12, "enableAnimation != null");
      if (!(labelPainter != null)) dart.assertFailed(null, I[58], 2503, 12, "labelPainter != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 2504, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 2505, 12, "sliderTheme != null");
      if (!(textDirection != null)) dart.assertFailed(null, I[58], 2506, 12, "textDirection != null");
      if (!(value != null)) dart.assertFailed(null, I[58], 2507, 12, "value != null");
      let canvas = context.canvas;
      let radiusTween = new (T$.TweenOfdouble()).new({begin: 0.0, end: this.overlayRadius});
      canvas.drawCircle(center, radiusTween.evaluate(activationAnimation), (t23 = ui.Paint.new(), (() => {
        t23.color = dart.nullCheck(sliderTheme.overlayColor);
        return t23;
      })()));
    }
  };
  (slider_theme.RoundSliderOverlayShape.new = function(opts) {
    let overlayRadius = opts && 'overlayRadius' in opts ? opts.overlayRadius : 24;
    if (overlayRadius == null) dart.nullFailed(I[58], 2471, 40, "overlayRadius");
    this[S$.overlayRadius] = overlayRadius;
    slider_theme.RoundSliderOverlayShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderOverlayShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderOverlayShape);
  dart.addTypeCaches(slider_theme.RoundSliderOverlayShape);
  dart.setMethodSignature(slider_theme.RoundSliderOverlayShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderOverlayShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme.RoundSliderOverlayShape, I[59]);
  dart.setFieldSignature(slider_theme.RoundSliderOverlayShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderOverlayShape.__proto__),
    overlayRadius: dart.finalFieldType(core.double)
  }));
  slider_theme.RectangularSliderValueIndicatorShape = class RectangularSliderValueIndicatorShape extends slider_theme.SliderComponentShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      if (isEnabled == null) dart.nullFailed(I[58], 2541, 11, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[58], 2542, 11, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter != null)) dart.assertFailed(null, I[58], 2546, 13, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[58], 2547, 13, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.RectangularSliderValueIndicatorShape._pathPainter.getPreferredSize(dart.nullCheck(labelPainter), dart.nullCheck(textScaleFactor));
    }
    paint(context, center, opts) {
      if (context == null) dart.nullFailed(I[58], 2553, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2554, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[58], 2555, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 2556, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      if (isDiscrete == null) dart.nullFailed(I[58], 2557, 19, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 2558, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2559, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2560, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 2561, 28, "textDirection");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[58], 2562, 21, "value");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[58], 2563, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[58], 2564, 19, "sizeWithOverflow");
      let canvas = context.canvas;
      let scale = activationAnimation.value;
      slider_theme.RectangularSliderValueIndicatorShape._pathPainter.paint({parentBox: parentBox, canvas: canvas, center: center, scale: scale, labelPainter: labelPainter, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow, backgroundPaintColor: dart.nullCheck(sliderTheme.valueIndicatorColor)});
    }
  };
  (slider_theme.RectangularSliderValueIndicatorShape.new = function() {
    slider_theme.RectangularSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RectangularSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RectangularSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RectangularSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {labelPainter: dart.nullable(text_painter.TextPainter), textScaleFactor: dart.nullable(core.double)}, {}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme.RectangularSliderValueIndicatorShape, I[59]);
  dart.defineLazy(slider_theme.RectangularSliderValueIndicatorShape, {
    /*slider_theme.RectangularSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[1316] || CT.C1316;
    }
  }, false);
  slider_theme.RectangularRangeSliderValueIndicatorShape = class RectangularRangeSliderValueIndicatorShape extends slider_theme.RangeSliderValueIndicatorShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      if (isEnabled == null) dart.nullFailed(I[58], 2599, 10, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[58], 2600, 10, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 2601, 26, "labelPainter");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[58], 2602, 21, "textScaleFactor");
      if (!(labelPainter != null)) dart.assertFailed(null, I[58], 2604, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[58], 2605, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.getPreferredSize(labelPainter, textScaleFactor);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.getHorizontalShift({parentBox: dart.nullCheck(parentBox), center: dart.nullCheck(center), labelPainter: dart.nullCheck(labelPainter), textScaleFactor: dart.nullCheck(textScaleFactor), sizeWithOverflow: dart.nullCheck(sizeWithOverflow), scale: dart.nullCheck(activationAnimation).value});
    }
    paint(context, center, opts) {
      if (context == null) dart.nullFailed(I[58], 2630, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2631, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let canvas = context.canvas;
      let scale = dart.nullCheck(activationAnimation).value;
      slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.paint({parentBox: dart.nullCheck(parentBox), canvas: canvas, center: center, scale: scale, labelPainter: dart.nullCheck(labelPainter), textScaleFactor: dart.nullCheck(textScaleFactor), sizeWithOverflow: dart.nullCheck(sizeWithOverflow), backgroundPaintColor: dart.nullCheck(dart.nullCheck(sliderTheme).valueIndicatorColor), strokePaintColor: dart.nullCheck(isOnTop) ? sliderTheme.overlappingShapeStrokeColor : null});
    }
  };
  (slider_theme.RectangularRangeSliderValueIndicatorShape.new = function() {
    slider_theme.RectangularRangeSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularRangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RectangularRangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RectangularRangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RectangularRangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularRangeSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {}, {labelPainter: text_painter.TextPainter, textScaleFactor: core.double}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {activationAnimation: dart.nullable(animation.Animation$(core.double)), enableAnimation: dart.nullable(animation.Animation$(core.double)), isDiscrete: dart.nullable(core.bool), isOnTop: dart.nullable(core.bool), labelPainter: dart.nullable(text_painter.TextPainter), parentBox: dart.nullable(box$.RenderBox), sizeWithOverflow: dart.nullable(ui.Size), sliderTheme: dart.nullable(slider_theme.SliderThemeData), textDirection: dart.nullable(ui.TextDirection), textScaleFactor: dart.nullable(core.double), thumb: dart.nullable(slider_theme.Thumb), value: dart.nullable(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.RectangularRangeSliderValueIndicatorShape, I[59]);
  dart.defineLazy(slider_theme.RectangularRangeSliderValueIndicatorShape, {
    /*slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[1316] || CT.C1316;
    }
  }, false);
  slider_theme._RectangularSliderValueIndicatorPathPainter = class _RectangularSliderValueIndicatorPathPainter extends core.Object {
    getPreferredSize(labelPainter, textScaleFactor) {
      if (labelPainter == null) dart.nullFailed(I[58], 2673, 17, "labelPainter");
      if (textScaleFactor == null) dart.nullFailed(I[58], 2674, 12, "textScaleFactor");
      if (!(labelPainter != null)) dart.assertFailed(null, I[58], 2676, 12, "labelPainter != null");
      return new ui.Size.new(this[S$._upperRectangleWidth](labelPainter, 1.0, textScaleFactor), dart.notNull(labelPainter.height) + 16);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2684, 24, "parentBox");
      let center = opts && 'center' in opts ? opts.center : null;
      if (center == null) dart.nullFailed(I[58], 2685, 21, "center");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 2686, 26, "labelPainter");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[58], 2687, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[58], 2688, 19, "sizeWithOverflow");
      let scale = opts && 'scale' in opts ? opts.scale : null;
      if (scale == null) dart.nullFailed(I[58], 2689, 21, "scale");
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, I[58], 2691, 12, "!sizeWithOverflow.isEmpty");
      let rectangleWidth = this[S$._upperRectangleWidth](labelPainter, scale, textScaleFactor);
      let globalCenter = parentBox.localToGlobal(center);
      let overflowLeft = math.max(core.double, 0.0, dart.notNull(rectangleWidth) / 2 - dart.notNull(globalCenter.dx) + 8);
      let overflowRight = math.max(core.double, 0.0, dart.notNull(rectangleWidth) / 2 - (dart.notNull(sizeWithOverflow.width) - dart.notNull(globalCenter.dx) - 8));
      if (dart.notNull(rectangleWidth) < dart.notNull(sizeWithOverflow.width)) {
        return overflowLeft - overflowRight;
      } else if (overflowLeft - overflowRight > 0) {
        return overflowLeft - 8 * dart.notNull(textScaleFactor);
      } else {
        return -overflowRight + 8 * dart.notNull(textScaleFactor);
      }
    }
    [S$._upperRectangleWidth](labelPainter, scale, textScaleFactor) {
      if (labelPainter == null) dart.nullFailed(I[58], 2715, 43, "labelPainter");
      if (scale == null) dart.nullFailed(I[58], 2715, 64, "scale");
      if (textScaleFactor == null) dart.nullFailed(I[58], 2715, 78, "textScaleFactor");
      let unscaledWidth = math.max(core.double, 16 * dart.notNull(textScaleFactor), labelPainter.width) + 16 * 2;
      return unscaledWidth * dart.notNull(scale);
    }
    paint(opts) {
      let t23, t23$, t23$0;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2721, 24, "parentBox");
      let canvas = opts && 'canvas' in opts ? opts.canvas : null;
      if (canvas == null) dart.nullFailed(I[58], 2722, 21, "canvas");
      let center = opts && 'center' in opts ? opts.center : null;
      if (center == null) dart.nullFailed(I[58], 2723, 21, "center");
      let scale = opts && 'scale' in opts ? opts.scale : null;
      if (scale == null) dart.nullFailed(I[58], 2724, 21, "scale");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 2725, 26, "labelPainter");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[58], 2726, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[58], 2727, 19, "sizeWithOverflow");
      let backgroundPaintColor = opts && 'backgroundPaintColor' in opts ? opts.backgroundPaintColor : null;
      if (backgroundPaintColor == null) dart.nullFailed(I[58], 2728, 20, "backgroundPaintColor");
      let strokePaintColor = opts && 'strokePaintColor' in opts ? opts.strokePaintColor : null;
      if (scale === 0.0) {
        return;
      }
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, I[58], 2735, 12, "!sizeWithOverflow.isEmpty");
      let rectangleWidth = this[S$._upperRectangleWidth](labelPainter, scale, textScaleFactor);
      let horizontalShift = this.getHorizontalShift({parentBox: parentBox, center: center, labelPainter: labelPainter, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow, scale: scale});
      let rectHeight = dart.notNull(labelPainter.height) + 16;
      let upperRect = new ui.Rect.fromLTWH(-dart.notNull(rectangleWidth) / 2 + dart.notNull(horizontalShift), -8 - rectHeight, rectangleWidth, rectHeight);
      let trianglePath = (t23 = ui.Path.new(), (() => {
        t23.lineTo(-8, -8);
        t23.lineTo(8, -8);
        t23.close();
        return t23;
      })());
      let fillPaint = (t23$ = ui.Paint.new(), (() => {
        t23$.color = backgroundPaintColor;
        return t23$;
      })());
      let upperRRect = new ui.RRect.fromRectAndRadius(upperRect, C[161] || CT.C161);
      trianglePath.addRRect(upperRRect);
      canvas.save();
      canvas.translate(center.dx, dart.notNull(center.dy) - 14);
      canvas.scale(scale, scale);
      if (strokePaintColor != null) {
        let strokePaint = (t23$0 = ui.Paint.new(), (() => {
          t23$0.color = strokePaintColor;
          t23$0.strokeWidth = 1.0;
          t23$0.style = ui.PaintingStyle.stroke;
          return t23$0;
        })());
        canvas.drawPath(trianglePath, strokePaint);
      }
      canvas.drawPath(trianglePath, fillPaint);
      let bottomTipToUpperRectTranslateY = -16 / 2 - dart.notNull(upperRect.height);
      canvas.translate(0.0, bottomTipToUpperRectTranslateY);
      let boxCenter = new ui.Offset.new(horizontalShift, dart.notNull(upperRect.height) / 2);
      let halfLabelPainterOffset = new ui.Offset.new(dart.notNull(labelPainter.width) / 2, dart.notNull(labelPainter.height) / 2);
      let labelOffset = boxCenter['-'](halfLabelPainterOffset);
      labelPainter.paint(canvas, labelOffset);
      canvas.restore();
    }
  };
  (slider_theme._RectangularSliderValueIndicatorPathPainter.new = function() {
    ;
  }).prototype = slider_theme._RectangularSliderValueIndicatorPathPainter.prototype;
  dart.addTypeTests(slider_theme._RectangularSliderValueIndicatorPathPainter);
  dart.addTypeCaches(slider_theme._RectangularSliderValueIndicatorPathPainter);
  dart.setMethodSignature(slider_theme._RectangularSliderValueIndicatorPathPainter, () => ({
    __proto__: dart.getMethods(slider_theme._RectangularSliderValueIndicatorPathPainter.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [text_painter.TextPainter, core.double]),
    getHorizontalShift: dart.fnType(core.double, [], {}, {center: ui.Offset, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, scale: core.double, sizeWithOverflow: ui.Size, textScaleFactor: core.double}),
    [S$._upperRectangleWidth]: dart.fnType(core.double, [text_painter.TextPainter, core.double, core.double]),
    paint: dart.fnType(dart.void, [], {strokePaintColor: dart.nullable(ui.Color)}, {backgroundPaintColor: ui.Color, canvas: ui.Canvas, center: ui.Offset, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, scale: core.double, sizeWithOverflow: ui.Size, textScaleFactor: core.double})
  }));
  dart.setLibraryUri(slider_theme._RectangularSliderValueIndicatorPathPainter, I[59]);
  dart.defineLazy(slider_theme._RectangularSliderValueIndicatorPathPainter, {
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._triangleHeight*/get _triangleHeight() {
      return 8;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._labelPadding*/get _labelPadding() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._preferredHeight*/get _preferredHeight() {
      return 32;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._minLabelWidth*/get _minLabelWidth() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._bottomTipYOffset*/get _bottomTipYOffset() {
      return 14;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._preferredHalfHeight*/get _preferredHalfHeight() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._upperRectRadius*/get _upperRectRadius() {
      return 4;
    }
  }, false);
  slider_theme.PaddleSliderValueIndicatorShape = class PaddleSliderValueIndicatorShape extends slider_theme.SliderComponentShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      if (isEnabled == null) dart.nullFailed(I[58], 2807, 10, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[58], 2808, 10, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter != null)) dart.assertFailed(null, I[58], 2812, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[58], 2813, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.PaddleSliderValueIndicatorShape._pathPainter.getPreferredSize(dart.nullCheck(labelPainter), dart.nullCheck(textScaleFactor));
    }
    paint(context, center, opts) {
      let t23;
      if (context == null) dart.nullFailed(I[58], 2819, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2820, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[58], 2821, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 2822, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      if (isDiscrete == null) dart.nullFailed(I[58], 2823, 19, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 2824, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2825, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2826, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[58], 2827, 28, "textDirection");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[58], 2828, 21, "value");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[58], 2829, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[58], 2830, 19, "sizeWithOverflow");
      if (!(context != null)) dart.assertFailed(null, I[58], 2832, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[58], 2833, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, I[58], 2834, 12, "activationAnimation != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 2835, 12, "enableAnimation != null");
      if (!(labelPainter != null)) dart.assertFailed(null, I[58], 2836, 12, "labelPainter != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 2837, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 2838, 12, "sliderTheme != null");
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, I[58], 2839, 12, "!sizeWithOverflow.isEmpty");
      let enableColor = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.valueIndicatorColor});
      slider_theme.PaddleSliderValueIndicatorShape._pathPainter.paint(context.canvas, center, (t23 = ui.Paint.new(), (() => {
        t23.color = dart.nullCheck(enableColor.evaluate(enableAnimation));
        return t23;
      })()), activationAnimation.value, labelPainter, textScaleFactor, sizeWithOverflow, null);
    }
  };
  (slider_theme.PaddleSliderValueIndicatorShape.new = function() {
    slider_theme.PaddleSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.PaddleSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.PaddleSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.PaddleSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.PaddleSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.PaddleSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {labelPainter: dart.nullable(text_painter.TextPainter), textScaleFactor: dart.nullable(core.double)}, {}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme.PaddleSliderValueIndicatorShape, I[59]);
  dart.defineLazy(slider_theme.PaddleSliderValueIndicatorShape, {
    /*slider_theme.PaddleSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[1317] || CT.C1317;
    }
  }, false);
  slider_theme.PaddleRangeSliderValueIndicatorShape = class PaddleRangeSliderValueIndicatorShape extends slider_theme.RangeSliderValueIndicatorShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      if (isEnabled == null) dart.nullFailed(I[58], 2876, 10, "isEnabled");
      if (isDiscrete == null) dart.nullFailed(I[58], 2877, 10, "isDiscrete");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 2878, 26, "labelPainter");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[58], 2879, 21, "textScaleFactor");
      if (!(labelPainter != null)) dart.assertFailed(null, I[58], 2881, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[58], 2882, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.getPreferredSize(labelPainter, textScaleFactor);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.getHorizontalShift({center: dart.nullCheck(center), labelPainter: dart.nullCheck(labelPainter), scale: dart.nullCheck(activationAnimation).value, textScaleFactor: dart.nullCheck(textScaleFactor), sizeWithOverflow: dart.nullCheck(sizeWithOverflow)});
    }
    paint(context, center, opts) {
      let t23;
      if (context == null) dart.nullFailed(I[58], 2906, 21, "context");
      if (center == null) dart.nullFailed(I[58], 2907, 12, "center");
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      if (activationAnimation == null) dart.nullFailed(I[58], 2908, 32, "activationAnimation");
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      if (enableAnimation == null) dart.nullFailed(I[58], 2909, 32, "enableAnimation");
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : false;
      if (isOnTop == null) dart.nullFailed(I[58], 2911, 10, "isOnTop");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 2912, 26, "labelPainter");
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      if (parentBox == null) dart.nullFailed(I[58], 2913, 24, "parentBox");
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      if (sliderTheme == null) dart.nullFailed(I[58], 2914, 30, "sliderTheme");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!(context != null)) dart.assertFailed(null, I[58], 2921, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, I[58], 2922, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, I[58], 2923, 12, "activationAnimation != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[58], 2924, 12, "enableAnimation != null");
      if (!(labelPainter != null)) dart.assertFailed(null, I[58], 2925, 12, "labelPainter != null");
      if (!(parentBox != null)) dart.assertFailed(null, I[58], 2926, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, I[58], 2927, 12, "sliderTheme != null");
      if (!!dart.test(dart.nullCheck(sizeWithOverflow).isEmpty)) dart.assertFailed(null, I[58], 2928, 12, "!sizeWithOverflow!.isEmpty");
      let enableColor = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.valueIndicatorColor});
      slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.paint(context.canvas, center, (t23 = ui.Paint.new(), (() => {
        t23.color = dart.nullCheck(enableColor.evaluate(enableAnimation));
        return t23;
      })()), activationAnimation.value, labelPainter, dart.nullCheck(textScaleFactor), dart.nullCheck(sizeWithOverflow), dart.test(isOnTop) ? sliderTheme.overlappingShapeStrokeColor : null);
    }
  };
  (slider_theme.PaddleRangeSliderValueIndicatorShape.new = function() {
    slider_theme.PaddleRangeSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.PaddleRangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.PaddleRangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.PaddleRangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.PaddleRangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.PaddleRangeSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {}, {labelPainter: text_painter.TextPainter, textScaleFactor: core.double}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: dart.nullable(core.bool), isOnTop: core.bool, sizeWithOverflow: dart.nullable(ui.Size), textDirection: dart.nullable(ui.TextDirection), textScaleFactor: dart.nullable(core.double), thumb: dart.nullable(slider_theme.Thumb), value: dart.nullable(core.double)}, {activationAnimation: animation.Animation$(core.double), enableAnimation: animation.Animation$(core.double), labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData})
  }));
  dart.setLibraryUri(slider_theme.PaddleRangeSliderValueIndicatorShape, I[59]);
  dart.defineLazy(slider_theme.PaddleRangeSliderValueIndicatorShape, {
    /*slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[1317] || CT.C1317;
    }
  }, false);
  slider_theme._PaddleSliderValueIndicatorPathPainter = class _PaddleSliderValueIndicatorPathPainter extends core.Object {
    getPreferredSize(labelPainter, textScaleFactor) {
      if (labelPainter == null) dart.nullFailed(I[58], 2988, 17, "labelPainter");
      if (textScaleFactor == null) dart.nullFailed(I[58], 2989, 12, "textScaleFactor");
      if (!(labelPainter != null)) dart.assertFailed(null, I[58], 2991, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[58], 2992, 12, "textScaleFactor != null && textScaleFactor >= 0");
      let width = math.max(core.double, 16 * dart.notNull(textScaleFactor), labelPainter.width) + 8 * 2 * dart.notNull(textScaleFactor);
      return new ui.Size.new(width, 66 * dart.notNull(textScaleFactor));
    }
    static _addArc(path, center, radius, startAngle, endAngle) {
      if (path == null) dart.nullFailed(I[58], 2999, 28, "path");
      if (center == null) dart.nullFailed(I[58], 2999, 41, "center");
      if (radius == null) dart.nullFailed(I[58], 2999, 56, "radius");
      if (startAngle == null) dart.nullFailed(I[58], 2999, 71, "startAngle");
      if (endAngle == null) dart.nullFailed(I[58], 2999, 90, "endAngle");
      if (!dart.test(center.isFinite)) dart.assertFailed(null, I[58], 3000, 12, "center.isFinite");
      let arcRect = new ui.Rect.fromCircle({center: center, radius: radius});
      path.arcTo(arcRect, startAngle, dart.notNull(endAngle) - dart.notNull(startAngle), false);
    }
    getHorizontalShift(opts) {
      let center = opts && 'center' in opts ? opts.center : null;
      if (center == null) dart.nullFailed(I[58], 3006, 21, "center");
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      if (labelPainter == null) dart.nullFailed(I[58], 3007, 26, "labelPainter");
      let scale = opts && 'scale' in opts ? opts.scale : null;
      if (scale == null) dart.nullFailed(I[58], 3008, 21, "scale");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (textScaleFactor == null) dart.nullFailed(I[58], 3009, 21, "textScaleFactor");
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (sizeWithOverflow == null) dart.nullFailed(I[58], 3010, 19, "sizeWithOverflow");
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, I[58], 3012, 12, "!sizeWithOverflow.isEmpty");
      let inverseTextScale = textScaleFactor !== 0 ? 1.0 / dart.notNull(textScaleFactor) : 0.0;
      let labelHalfWidth = dart.notNull(labelPainter.width) / 2.0;
      let halfWidthNeeded = math.max(core.double, 0.0, inverseTextScale * labelHalfWidth - (16 - 8));
      let shift = this[S$._getIdealOffset](halfWidthNeeded, dart.notNull(textScaleFactor) * dart.notNull(scale), center, sizeWithOverflow.width);
      return dart.notNull(shift) * dart.notNull(textScaleFactor);
    }
    [S$._getIdealOffset](halfWidthNeeded, scale, center, widthWithOverflow) {
      if (halfWidthNeeded == null) dart.nullFailed(I[58], 3026, 12, "halfWidthNeeded");
      if (scale == null) dart.nullFailed(I[58], 3027, 12, "scale");
      if (center == null) dart.nullFailed(I[58], 3028, 12, "center");
      if (widthWithOverflow == null) dart.nullFailed(I[58], 3029, 12, "widthWithOverflow");
      let topLobeRect = new ui.Rect.fromLTWH(-16 - dart.notNull(halfWidthNeeded), -16 - 40, 2.0 * (16 + dart.notNull(halfWidthNeeded)), 2.0 * 16);
      let topLeft = topLobeRect.topLeft['*'](scale)['+'](center);
      let bottomRight = topLobeRect.bottomRight['*'](scale)['+'](center);
      let shift = 0.0;
      if (dart.notNull(topLeft.dx) < 8) {
        shift = 8 - dart.notNull(topLeft.dx);
      }
      let endGlobal = widthWithOverflow;
      if (dart.notNull(bottomRight.dx) > dart.notNull(endGlobal) - 8) {
        shift = dart.notNull(endGlobal) - 8 - dart.notNull(bottomRight.dx);
      }
      shift = scale === 0.0 ? 0.0 : shift / dart.notNull(scale);
      if (shift < 0.0) {
        shift = math.max(core.double, shift, -dart.notNull(halfWidthNeeded));
      } else {
        shift = math.min(core.double, shift, halfWidthNeeded);
      }
      return shift;
    }
    paint(canvas, center, paint, scale, labelPainter, textScaleFactor, sizeWithOverflow, strokePaintColor) {
      let t23, t23$;
      if (canvas == null) dart.nullFailed(I[58], 3065, 12, "canvas");
      if (center == null) dart.nullFailed(I[58], 3066, 12, "center");
      if (paint == null) dart.nullFailed(I[58], 3067, 11, "paint");
      if (scale == null) dart.nullFailed(I[58], 3068, 12, "scale");
      if (labelPainter == null) dart.nullFailed(I[58], 3069, 17, "labelPainter");
      if (textScaleFactor == null) dart.nullFailed(I[58], 3070, 12, "textScaleFactor");
      if (sizeWithOverflow == null) dart.nullFailed(I[58], 3071, 10, "sizeWithOverflow");
      if (scale === 0.0) {
        return;
      }
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, I[58], 3079, 12, "!sizeWithOverflow.isEmpty");
      let overallScale = dart.notNull(scale) * dart.notNull(textScaleFactor);
      let inverseTextScale = textScaleFactor !== 0 ? 1.0 / dart.notNull(textScaleFactor) : 0.0;
      let labelHalfWidth = dart.notNull(labelPainter.width) / 2.0;
      canvas.save();
      canvas.translate(center.dx, center.dy);
      canvas.scale(overallScale, overallScale);
      let bottomNeckTriangleHypotenuse = 4.5 + 10 / overallScale;
      let rightBottomNeckCenterY = -math.sqrt(math.pow(bottomNeckTriangleHypotenuse, 2) - math.pow(6, 2));
      let rightBottomNeckAngleEnd = 3.141592653589793 + math.atan(rightBottomNeckCenterY / 6);
      let path = (t23 = ui.Path.new(), (() => {
        t23.moveTo(3 / 2, rightBottomNeckCenterY);
        return t23;
      })());
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, new ui.Offset.new(6, rightBottomNeckCenterY), 4.5, 3.141592653589793, rightBottomNeckAngleEnd);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, ui.Offset.zero, 10 / overallScale, rightBottomNeckAngleEnd - 3.141592653589793, 2 * 3.141592653589793 - rightBottomNeckAngleEnd);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, new ui.Offset.new(-6, rightBottomNeckCenterY), 4.5, 3.141592653589793 - rightBottomNeckAngleEnd, 0.0);
      let halfWidthNeeded = math.max(core.double, 0.0, inverseTextScale * labelHalfWidth - (16 - 8));
      let shift = this[S$._getIdealOffset](halfWidthNeeded, overallScale, center, sizeWithOverflow.width);
      let leftWidthNeeded = halfWidthNeeded - dart.notNull(shift);
      let rightWidthNeeded = halfWidthNeeded + dart.notNull(shift);
      let leftAmount = math.max(core.double, 0.0, math.min(core.double, 1.0, leftWidthNeeded / 14.5));
      let rightAmount = math.max(core.double, 0.0, math.min(core.double, 1.0, rightWidthNeeded / 14.5));
      let leftTheta = (1.0 - leftAmount) * 0.5235987755982988;
      let rightTheta = (1.0 - rightAmount) * 0.5235987755982988;
      let leftTopNeckCenter = new ui.Offset.new(-14.5, dart.notNull(slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter.dy) + math.cos(leftTheta) * 29);
      let neckRightCenter = new ui.Offset.new(14.5, dart.notNull(slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter.dy) + math.cos(rightTheta) * 29);
      let leftNeckArcAngle = 1.5707963267948966 - leftTheta;
      let rightNeckArcAngle = 3.141592653589793 + 1.5707963267948966 - rightTheta;
      let neckStretchBaseline = math.max(core.double, 0.0, rightBottomNeckCenterY - math.max(core.num, leftTopNeckCenter.dy, neckRightCenter.dy));
      let t = math.pow(inverseTextScale, 3.0);
      let stretch = (neckStretchBaseline * t)[S.$clamp](0.0, 10.0 * neckStretchBaseline);
      let neckStretch = new ui.Offset.new(0.0, neckStretchBaseline - stretch);
      if (!(!false || dart.test(dart.fn(() => {
        let t23;
        let leftCenter = slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['-'](new ui.Offset.new(leftWidthNeeded, 0.0))['+'](neckStretch);
        let rightCenter = slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['+'](new ui.Offset.new(rightWidthNeeded, 0.0))['+'](neckStretch);
        let valueRect = new ui.Rect.fromLTRB(dart.notNull(leftCenter.dx) - 16, dart.notNull(leftCenter.dy) - 16, dart.notNull(rightCenter.dx) + 16, dart.notNull(rightCenter.dy) + 16);
        let outlinePaint = (t23 = ui.Paint.new(), (() => {
          t23.color = C[1318] || CT.C1318;
          t23.style = ui.PaintingStyle.stroke;
          t23.strokeWidth = 1.0;
          return t23;
        })());
        canvas.drawRect(valueRect, outlinePaint);
        return true;
      }, T$.VoidTobool())()))) dart.assertFailed(null, I[58], 3156, 12, "!_debuggingLabelLocation || () {\r\n      final Offset leftCenter = _topLobeCenter - Offset(leftWidthNeeded, 0.0) + neckStretch;\r\n      final Offset rightCenter = _topLobeCenter + Offset(rightWidthNeeded, 0.0) + neckStretch;\r\n      final Rect valueRect = Rect.fromLTRB(\r\n        leftCenter.dx - _topLobeRadius,\r\n        leftCenter.dy - _topLobeRadius,\r\n        rightCenter.dx + _topLobeRadius,\r\n        rightCenter.dy + _topLobeRadius,\r\n      );\r\n      final Paint outlinePaint = Paint()\r\n        ..color = const Color(0xffff0000)\r\n        ..style = PaintingStyle.stroke\r\n        ..strokeWidth = 1.0;\r\n      canvas.drawRect(valueRect, outlinePaint);\r\n      return true;\r\n    }()");
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, leftTopNeckCenter['+'](neckStretch), 13, 0.0, -leftNeckArcAngle);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['-'](new ui.Offset.new(leftWidthNeeded, 0.0))['+'](neckStretch), 16, 1.5707963267948966 + leftTheta, 4.71238898038469);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['+'](new ui.Offset.new(rightWidthNeeded, 0.0))['+'](neckStretch), 16, 4.71238898038469, 4.71238898038469 + 3.141592653589793 - rightTheta);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, neckRightCenter['+'](neckStretch), 13, rightNeckArcAngle, 3.141592653589793);
      if (strokePaintColor != null) {
        let strokePaint = (t23$ = ui.Paint.new(), (() => {
          t23$.color = strokePaintColor;
          t23$.strokeWidth = 1.0;
          t23$.style = ui.PaintingStyle.stroke;
          return t23$;
        })());
        canvas.drawPath(path, strokePaint);
      }
      canvas.drawPath(path, paint);
      canvas.save();
      canvas.translate(shift, -40 + dart.notNull(neckStretch.dy));
      canvas.scale(inverseTextScale, inverseTextScale);
      labelPainter.paint(canvas, ui.Offset.zero['-'](new ui.Offset.new(labelHalfWidth, dart.notNull(labelPainter.height) / 2.0)));
      canvas.restore();
      canvas.restore();
    }
  };
  (slider_theme._PaddleSliderValueIndicatorPathPainter.new = function() {
    ;
  }).prototype = slider_theme._PaddleSliderValueIndicatorPathPainter.prototype;
  dart.addTypeTests(slider_theme._PaddleSliderValueIndicatorPathPainter);
  dart.addTypeCaches(slider_theme._PaddleSliderValueIndicatorPathPainter);
  dart.setMethodSignature(slider_theme._PaddleSliderValueIndicatorPathPainter, () => ({
    __proto__: dart.getMethods(slider_theme._PaddleSliderValueIndicatorPathPainter.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [text_painter.TextPainter, core.double]),
    getHorizontalShift: dart.fnType(core.double, [], {}, {center: ui.Offset, labelPainter: text_painter.TextPainter, scale: core.double, sizeWithOverflow: ui.Size, textScaleFactor: core.double}),
    [S$._getIdealOffset]: dart.fnType(core.double, [core.double, core.double, ui.Offset, core.double]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Offset, ui.Paint, core.double, text_painter.TextPainter, core.double, ui.Size, dart.nullable(ui.Color)])
  }));
  dart.setLibraryUri(slider_theme._PaddleSliderValueIndicatorPathPainter, I[59]);
  dart.defineLazy(slider_theme._PaddleSliderValueIndicatorPathPainter, {
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeRadius*/get _topLobeRadius() {
      return 16;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._minLabelWidth*/get _minLabelWidth() {
      return 16;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._bottomLobeRadius*/get _bottomLobeRadius() {
      return 10;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._labelPadding*/get _labelPadding() {
      return 8;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._distanceBetweenTopBottomCenters*/get _distanceBetweenTopBottomCenters() {
      return 40;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._middleNeckWidth*/get _middleNeckWidth() {
      return 3;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._bottomNeckRadius*/get _bottomNeckRadius() {
      return 4.5;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._neckTriangleBase*/get _neckTriangleBase() {
      return 14.5;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._rightBottomNeckCenterX*/get _rightBottomNeckCenterX() {
      return 6;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._rightBottomNeckAngleStart*/get _rightBottomNeckAngleStart() {
      return 3.141592653589793;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter*/get _topLobeCenter() {
      return C[1319] || CT.C1319;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topNeckRadius*/get _topNeckRadius() {
      return 13;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._neckTriangleHypotenuse*/get _neckTriangleHypotenuse() {
      return 29;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._twoSeventyDegrees*/get _twoSeventyDegrees() {
      return 4.71238898038469;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._ninetyDegrees*/get _ninetyDegrees() {
      return 1.5707963267948966;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._thirtyDegrees*/get _thirtyDegrees() {
      return 0.5235987755982988;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._preferredHeight*/get _preferredHeight() {
      return 66;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._debuggingLabelLocation*/get _debuggingLabelLocation() {
      return false;
    }
  }, false);
  slider_theme.RangeValues = class RangeValues extends core.Object {
    get start() {
      return this[S$.start];
    }
    set start(value) {
      super.start = value;
    }
    get end() {
      return this[S$.end];
    }
    set end(value) {
      super.end = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return slider_theme.RangeValues.is(other) && other.start == this.start && other.end == this.end;
    }
    get hashCode() {
      return ui.hashValues(this.start, this.end);
    }
    toString() {
      return dart.str(object$.objectRuntimeType(this, "RangeValues")) + "(" + dart.str(this.start) + ", " + dart.str(this.end) + ")";
    }
  };
  (slider_theme.RangeValues.new = function(start, end) {
    if (start == null) dart.nullFailed(I[58], 3254, 26, "start");
    if (end == null) dart.nullFailed(I[58], 3254, 38, "end");
    this[S$.start] = start;
    this[S$.end] = end;
    ;
  }).prototype = slider_theme.RangeValues.prototype;
  dart.addTypeTests(slider_theme.RangeValues);
  dart.addTypeCaches(slider_theme.RangeValues);
  dart.setLibraryUri(slider_theme.RangeValues, I[59]);
  dart.setFieldSignature(slider_theme.RangeValues, () => ({
    __proto__: dart.getFields(slider_theme.RangeValues.__proto__),
    start: dart.finalFieldType(core.double),
    end: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(slider_theme.RangeValues, ['_equals', 'toString']);
  dart.defineExtensionAccessors(slider_theme.RangeValues, ['hashCode']);
  slider_theme.RangeLabels = class RangeLabels extends core.Object {
    get start() {
      return this[S$.start$1];
    }
    set start(value) {
      super.start = value;
    }
    get end() {
      return this[S$.end$1];
    }
    set end(value) {
      super.end = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return slider_theme.RangeLabels.is(other) && other.start == this.start && other.end == this.end;
    }
    get hashCode() {
      return ui.hashValues(this.start, this.end);
    }
    toString() {
      return dart.str(object$.objectRuntimeType(this, "RangeLabels")) + "(" + dart.str(this.start) + ", " + dart.str(this.end) + ")";
    }
  };
  (slider_theme.RangeLabels.new = function(start, end) {
    if (start == null) dart.nullFailed(I[58], 3294, 26, "start");
    if (end == null) dart.nullFailed(I[58], 3294, 38, "end");
    this[S$.start$1] = start;
    this[S$.end$1] = end;
    ;
  }).prototype = slider_theme.RangeLabels.prototype;
  dart.addTypeTests(slider_theme.RangeLabels);
  dart.addTypeCaches(slider_theme.RangeLabels);
  dart.setLibraryUri(slider_theme.RangeLabels, I[59]);
  dart.setFieldSignature(slider_theme.RangeLabels, () => ({
    __proto__: dart.getFields(slider_theme.RangeLabels.__proto__),
    start: dart.finalFieldType(core.String),
    end: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(slider_theme.RangeLabels, ['_equals', 'toString']);
  dart.defineExtensionAccessors(slider_theme.RangeLabels, ['hashCode']);
  const Object_Diagnosticable$36$6 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$6.new = function() {
  }).prototype = Object_Diagnosticable$36$6.prototype;
  dart.applyMixin(Object_Diagnosticable$36$6, diagnostics.Diagnosticable);
  scrollbar_theme.ScrollbarThemeData = class ScrollbarThemeData extends Object_Diagnosticable$36$6 {
    get thickness() {
      return this[S$.thickness$2];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get showTrackOnHover() {
      return this[S$.showTrackOnHover];
    }
    set showTrackOnHover(value) {
      super.showTrackOnHover = value;
    }
    get isAlwaysShown() {
      return this[S$.isAlwaysShown];
    }
    set isAlwaysShown(value) {
      super.isAlwaysShown = value;
    }
    get radius() {
      return this[S$.radius];
    }
    set radius(value) {
      super.radius = value;
    }
    get thumbColor() {
      return this[S$.thumbColor$2];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get trackColor() {
      return this[S$.trackColor$1];
    }
    set trackColor(value) {
      super.trackColor = value;
    }
    get trackBorderColor() {
      return this[S$.trackBorderColor];
    }
    set trackBorderColor(value) {
      super.trackBorderColor = value;
    }
    get crossAxisMargin() {
      return this[S$.crossAxisMargin];
    }
    set crossAxisMargin(value) {
      super.crossAxisMargin = value;
    }
    get mainAxisMargin() {
      return this[S$.mainAxisMargin];
    }
    set mainAxisMargin(value) {
      super.mainAxisMargin = value;
    }
    get minThumbLength() {
      return this[S$.minThumbLength];
    }
    set minThumbLength(value) {
      super.minThumbLength = value;
    }
    copyWith(opts) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3, t23$4, t23$5, t23$6, t23$7;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
      let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
      let trackBorderColor = opts && 'trackBorderColor' in opts ? opts.trackBorderColor : null;
      let crossAxisMargin = opts && 'crossAxisMargin' in opts ? opts.crossAxisMargin : null;
      let mainAxisMargin = opts && 'mainAxisMargin' in opts ? opts.mainAxisMargin : null;
      let minThumbLength = opts && 'minThumbLength' in opts ? opts.minThumbLength : null;
      return new scrollbar_theme.ScrollbarThemeData.new({thickness: (t23 = thickness, t23 == null ? this.thickness : t23), showTrackOnHover: (t23$ = showTrackOnHover, t23$ == null ? this.showTrackOnHover : t23$), isAlwaysShown: (t23$0 = isAlwaysShown, t23$0 == null ? this.isAlwaysShown : t23$0), radius: (t23$1 = radius, t23$1 == null ? this.radius : t23$1), thumbColor: (t23$2 = thumbColor, t23$2 == null ? this.thumbColor : t23$2), trackColor: (t23$3 = trackColor, t23$3 == null ? this.trackColor : t23$3), trackBorderColor: (t23$4 = trackBorderColor, t23$4 == null ? this.trackBorderColor : t23$4), crossAxisMargin: (t23$5 = crossAxisMargin, t23$5 == null ? this.crossAxisMargin : t23$5), mainAxisMargin: (t23$6 = mainAxisMargin, t23$6 == null ? this.mainAxisMargin : t23$6), minThumbLength: (t23$7 = minThumbLength, t23$7 == null ? this.minThumbLength : t23$7)});
    }
    static lerp(a, b, t) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3, t23$4, t23$5, t23$6, t23$7, t23$8, t23$9, t23$10, t23$11, t23$12, t23$13, t23$14, t23$15, t23$16, t23$17;
      if (t == null) dart.nullFailed(I[60], 149, 87, "t");
      if (!(t != null)) dart.assertFailed(null, I[60], 150, 12, "t != null");
      return new scrollbar_theme.ScrollbarThemeData.new({thickness: scrollbar_theme.ScrollbarThemeData._lerpProperties(T$.doubleN(), (t23 = a, t23 == null ? null : t23.thickness), (t23$ = b, t23$ == null ? null : t23$.thickness), t, C[1320] || CT.C1320), showTrackOnHover: dart.notNull(t) < 0.5 ? (t23$0 = a, t23$0 == null ? null : t23$0.showTrackOnHover) : (t23$1 = b, t23$1 == null ? null : t23$1.showTrackOnHover), isAlwaysShown: dart.notNull(t) < 0.5 ? (t23$2 = a, t23$2 == null ? null : t23$2.isAlwaysShown) : (t23$3 = b, t23$3 == null ? null : t23$3.isAlwaysShown), radius: ui.Radius.lerp((t23$4 = a, t23$4 == null ? null : t23$4.radius), (t23$5 = b, t23$5 == null ? null : t23$5.radius), t), thumbColor: scrollbar_theme.ScrollbarThemeData._lerpProperties(T$.ColorN(), (t23$6 = a, t23$6 == null ? null : t23$6.thumbColor), (t23$7 = b, t23$7 == null ? null : t23$7.thumbColor), t, C[1289] || CT.C1289), trackColor: scrollbar_theme.ScrollbarThemeData._lerpProperties(T$.ColorN(), (t23$8 = a, t23$8 == null ? null : t23$8.trackColor), (t23$9 = b, t23$9 == null ? null : t23$9.trackColor), t, C[1289] || CT.C1289), trackBorderColor: scrollbar_theme.ScrollbarThemeData._lerpProperties(T$.ColorN(), (t23$10 = a, t23$10 == null ? null : t23$10.trackBorderColor), (t23$11 = b, t23$11 == null ? null : t23$11.trackBorderColor), t, C[1289] || CT.C1289), crossAxisMargin: ui.lerpDouble((t23$12 = a, t23$12 == null ? null : t23$12.crossAxisMargin), (t23$13 = b, t23$13 == null ? null : t23$13.crossAxisMargin), t), mainAxisMargin: ui.lerpDouble((t23$14 = a, t23$14 == null ? null : t23$14.mainAxisMargin), (t23$15 = b, t23$15 == null ? null : t23$15.mainAxisMargin), t), minThumbLength: ui.lerpDouble((t23$16 = a, t23$16 == null ? null : t23$16.minThumbLength), (t23$17 = b, t23$17 == null ? null : t23$17.minThumbLength), t)});
    }
    get hashCode() {
      return ui.hashValues(this.thickness, this.showTrackOnHover, this.isAlwaysShown, this.radius, this.thumbColor, this.trackColor, this.trackBorderColor, this.crossAxisMargin, this.mainAxisMargin, this.minThumbLength);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return scrollbar_theme.ScrollbarThemeData.is(other) && dart.equals(other.thickness, this.thickness) && other.showTrackOnHover == this.showTrackOnHover && other.isAlwaysShown == this.isAlwaysShown && dart.equals(other.radius, this.radius) && dart.equals(other.thumbColor, this.thumbColor) && dart.equals(other.trackColor, this.trackColor) && dart.equals(other.trackBorderColor, this.trackBorderColor) && other.crossAxisMargin == this.crossAxisMargin && other.mainAxisMargin == this.mainAxisMargin && other.minThumbLength == this.minThumbLength;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[60], 201, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN()).new("thickness", this.thickness, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("showTrackOnHover", this.showTrackOnHover, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isAlwaysShown", this.isAlwaysShown, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfRadius()).new("radius", this.radius, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("thumbColor", this.thumbColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("trackColor", this.trackColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("trackBorderColor", this.trackBorderColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("crossAxisMargin", this.crossAxisMargin, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("mainAxisMargin", this.mainAxisMargin, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("minThumbLength", this.minThumbLength, {defaultValue: null}));
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[60], 218, 12, "t");
      if (lerpFunction == null) dart.nullFailed(I[60], 219, 32, "lerpFunction");
      if (a == null && b == null) return null;
      return new (scrollbar_theme._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
  };
  (scrollbar_theme.ScrollbarThemeData.new = function(opts) {
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
    let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
    let trackBorderColor = opts && 'trackBorderColor' in opts ? opts.trackBorderColor : null;
    let crossAxisMargin = opts && 'crossAxisMargin' in opts ? opts.crossAxisMargin : null;
    let mainAxisMargin = opts && 'mainAxisMargin' in opts ? opts.mainAxisMargin : null;
    let minThumbLength = opts && 'minThumbLength' in opts ? opts.minThumbLength : null;
    this[S$.thickness$2] = thickness;
    this[S$.showTrackOnHover] = showTrackOnHover;
    this[S$.isAlwaysShown] = isAlwaysShown;
    this[S$.radius] = radius;
    this[S$.thumbColor$2] = thumbColor;
    this[S$.trackColor$1] = trackColor;
    this[S$.trackBorderColor] = trackBorderColor;
    this[S$.crossAxisMargin] = crossAxisMargin;
    this[S$.mainAxisMargin] = mainAxisMargin;
    this[S$.minThumbLength] = minThumbLength;
    ;
  }).prototype = scrollbar_theme.ScrollbarThemeData.prototype;
  dart.addTypeTests(scrollbar_theme.ScrollbarThemeData);
  dart.addTypeCaches(scrollbar_theme.ScrollbarThemeData);
  dart.setMethodSignature(scrollbar_theme.ScrollbarThemeData, () => ({
    __proto__: dart.getMethods(scrollbar_theme.ScrollbarThemeData.__proto__),
    copyWith: dart.fnType(scrollbar_theme.ScrollbarThemeData, [], {crossAxisMargin: dart.nullable(core.double), isAlwaysShown: dart.nullable(core.bool), mainAxisMargin: dart.nullable(core.double), minThumbLength: dart.nullable(core.double), radius: dart.nullable(ui.Radius), showTrackOnHover: dart.nullable(core.bool), thickness: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double))), thumbColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), trackBorderColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), trackColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))}, {})
  }));
  dart.setLibraryUri(scrollbar_theme.ScrollbarThemeData, I[61]);
  dart.setFieldSignature(scrollbar_theme.ScrollbarThemeData, () => ({
    __proto__: dart.getFields(scrollbar_theme.ScrollbarThemeData.__proto__),
    thickness: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double)))),
    showTrackOnHover: dart.finalFieldType(dart.nullable(core.bool)),
    isAlwaysShown: dart.finalFieldType(dart.nullable(core.bool)),
    radius: dart.finalFieldType(dart.nullable(ui.Radius)),
    thumbColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    trackColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    trackBorderColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    crossAxisMargin: dart.finalFieldType(dart.nullable(core.double)),
    mainAxisMargin: dart.finalFieldType(dart.nullable(core.double)),
    minThumbLength: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(scrollbar_theme.ScrollbarThemeData, ['_equals']);
  dart.defineExtensionAccessors(scrollbar_theme.ScrollbarThemeData, ['hashCode']);
  const _is__LerpProperties_default$ = Symbol('_is__LerpProperties_default');
  scrollbar_theme._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S$.a$1];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S$.b$1];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S$.t$1];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S$.lerpFunction$1];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t23, t23$, t25, t24, t23$0;
        if (states == null) dart.nullFailed(I[60], 237, 32, "states");
        let resolvedA = (t23 = this.a, t23 == null ? null : t23.resolve(states));
        let resolvedB = (t23$ = this.b, t23$ == null ? null : t23$.resolve(states));
        t23$0 = resolvedA;
        t24 = resolvedB;
        t25 = this.t;
        return this.lerpFunction(t23$0, t24, t25);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[60], 229, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[60], 229, 54, "lerpFunction");
      this[S$.a$1] = a;
      this[S$.b$1] = b;
      this[S$.t$1] = t;
      this[S$.lerpFunction$1] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default$] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(T)];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(T, [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[61]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(T, [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  scrollbar_theme._LerpProperties = scrollbar_theme._LerpProperties$();
  dart.addTypeTests(scrollbar_theme._LerpProperties, _is__LerpProperties_default$);
  scrollbar_theme.ScrollbarTheme = class ScrollbarTheme extends framework.InheritedWidget {
    get data() {
      return this[S$.data$6];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t23, t23$;
      if (context == null) dart.nullFailed(I[60], 277, 45, "context");
      let scrollbarTheme = context.dependOnInheritedWidgetOfExactType(scrollbar_theme.ScrollbarTheme);
      t23$ = (t23 = scrollbarTheme, t23 == null ? null : t23.data);
      return t23$ == null ? theme$.Theme.of(context).scrollbarTheme : t23$;
    }
    updateShouldNotify(oldWidget) {
      scrollbar_theme.ScrollbarTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[60], 283, 42, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (scrollbar_theme.ScrollbarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[60], 262, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[60], 263, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$6] = data;
    scrollbar_theme.ScrollbarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollbar_theme.ScrollbarTheme.prototype;
  dart.addTypeTests(scrollbar_theme.ScrollbarTheme);
  dart.addTypeCaches(scrollbar_theme.ScrollbarTheme);
  dart.setMethodSignature(scrollbar_theme.ScrollbarTheme, () => ({
    __proto__: dart.getMethods(scrollbar_theme.ScrollbarTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scrollbar_theme.ScrollbarTheme, I[61]);
  dart.setFieldSignature(scrollbar_theme.ScrollbarTheme, () => ({
    __proto__: dart.getFields(scrollbar_theme.ScrollbarTheme.__proto__),
    data: dart.finalFieldType(scrollbar_theme.ScrollbarThemeData)
  }));
  const Object_Diagnosticable$36$7 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$7.new = function() {
  }).prototype = Object_Diagnosticable$36$7.prototype;
  dart.applyMixin(Object_Diagnosticable$36$7, diagnostics.Diagnosticable);
  radio_theme.RadioThemeData = class RadioThemeData extends Object_Diagnosticable$36$7 {
    get mouseCursor() {
      return this[S$.mouseCursor$8];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get fillColor() {
      return this[S$.fillColor$2];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get overlayColor() {
      return this[S$.overlayColor$3];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashRadius() {
      return this[S$.splashRadius$2];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    get materialTapTargetSize() {
      return this[S$.materialTapTargetSize$5];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get visualDensity() {
      return this[S$.visualDensity$6];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    copyWith(opts) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      return new radio_theme.RadioThemeData.new({mouseCursor: (t23 = mouseCursor, t23 == null ? this.mouseCursor : t23), fillColor: (t23$ = fillColor, t23$ == null ? this.fillColor : t23$), overlayColor: (t23$0 = overlayColor, t23$0 == null ? this.overlayColor : t23$0), splashRadius: (t23$1 = splashRadius, t23$1 == null ? this.splashRadius : t23$1), materialTapTargetSize: (t23$2 = materialTapTargetSize, t23$2 == null ? this.materialTapTargetSize : t23$2), visualDensity: (t23$3 = visualDensity, t23$3 == null ? this.visualDensity : t23$3)});
    }
    static lerp(a, b, t) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3, t23$4, t23$5, t23$6, t23$7, t23$8, t23$9;
      if (t == null) dart.nullFailed(I[62], 99, 75, "t");
      return new radio_theme.RadioThemeData.new({mouseCursor: dart.notNull(t) < 0.5 ? (t23 = a, t23 == null ? null : t23.mouseCursor) : (t23$ = b, t23$ == null ? null : t23$.mouseCursor), fillColor: radio_theme.RadioThemeData._lerpProperties(T$.ColorN(), (t23$0 = a, t23$0 == null ? null : t23$0.fillColor), (t23$1 = b, t23$1 == null ? null : t23$1.fillColor), t, C[1289] || CT.C1289), materialTapTargetSize: dart.notNull(t) < 0.5 ? (t23$2 = a, t23$2 == null ? null : t23$2.materialTapTargetSize) : (t23$3 = b, t23$3 == null ? null : t23$3.materialTapTargetSize), overlayColor: radio_theme.RadioThemeData._lerpProperties(T$.ColorN(), (t23$4 = a, t23$4 == null ? null : t23$4.overlayColor), (t23$5 = b, t23$5 == null ? null : t23$5.overlayColor), t, C[1289] || CT.C1289), splashRadius: ui.lerpDouble((t23$6 = a, t23$6 == null ? null : t23$6.splashRadius), (t23$7 = b, t23$7 == null ? null : t23$7.splashRadius), t), visualDensity: dart.notNull(t) < 0.5 ? (t23$8 = a, t23$8 == null ? null : t23$8.visualDensity) : (t23$9 = b, t23$9 == null ? null : t23$9.visualDensity)});
    }
    get hashCode() {
      return ui.hashValues(this.mouseCursor, this.fillColor, this.overlayColor, this.splashRadius, this.materialTapTargetSize, this.visualDensity);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return radio_theme.RadioThemeData.is(other) && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.overlayColor, this.overlayColor) && other.splashRadius == this.splashRadius && other.materialTapTargetSize == this.materialTapTargetSize && dart.equals(other.visualDensity, this.visualDensity);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[62], 138, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("fillColor", this.fillColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("splashRadius", this.splashRadius, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[62], 151, 12, "t");
      if (lerpFunction == null) dart.nullFailed(I[62], 152, 32, "lerpFunction");
      if (a == null && b == null) return null;
      return new (radio_theme._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
  };
  (radio_theme.RadioThemeData.new = function(opts) {
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    this[S$.mouseCursor$8] = mouseCursor;
    this[S$.fillColor$2] = fillColor;
    this[S$.overlayColor$3] = overlayColor;
    this[S$.splashRadius$2] = splashRadius;
    this[S$.materialTapTargetSize$5] = materialTapTargetSize;
    this[S$.visualDensity$6] = visualDensity;
    ;
  }).prototype = radio_theme.RadioThemeData.prototype;
  dart.addTypeTests(radio_theme.RadioThemeData);
  dart.addTypeCaches(radio_theme.RadioThemeData);
  dart.setMethodSignature(radio_theme.RadioThemeData, () => ({
    __proto__: dart.getMethods(radio_theme.RadioThemeData.__proto__),
    copyWith: dart.fnType(radio_theme.RadioThemeData, [], {fillColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), splashRadius: dart.nullable(core.double), visualDensity: dart.nullable(theme_data.VisualDensity)}, {})
  }));
  dart.setLibraryUri(radio_theme.RadioThemeData, I[63]);
  dart.setFieldSignature(radio_theme.RadioThemeData, () => ({
    __proto__: dart.getFields(radio_theme.RadioThemeData.__proto__),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    fillColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashRadius: dart.finalFieldType(dart.nullable(core.double)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity))
  }));
  dart.defineExtensionMethods(radio_theme.RadioThemeData, ['_equals']);
  dart.defineExtensionAccessors(radio_theme.RadioThemeData, ['hashCode']);
  const _is__LerpProperties_default$0 = Symbol('_is__LerpProperties_default');
  radio_theme._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S$.a$2];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S$.b$2];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S$.t$2];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S$.lerpFunction$2];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t23, t23$, t25, t24, t23$0;
        if (states == null) dart.nullFailed(I[62], 170, 32, "states");
        let resolvedA = (t23 = this.a, t23 == null ? null : t23.resolve(states));
        let resolvedB = (t23$ = this.b, t23$ == null ? null : t23$.resolve(states));
        t23$0 = resolvedA;
        t24 = resolvedB;
        t25 = this.t;
        return this.lerpFunction(t23$0, t24, t25);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[62], 162, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[62], 162, 54, "lerpFunction");
      this[S$.a$2] = a;
      this[S$.b$2] = b;
      this[S$.t$2] = t;
      this[S$.lerpFunction$2] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default$0] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(T)];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(T, [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[63]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(T, [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  radio_theme._LerpProperties = radio_theme._LerpProperties$();
  dart.addTypeTests(radio_theme._LerpProperties, _is__LerpProperties_default$0);
  radio_theme.RadioTheme = class RadioTheme extends framework.InheritedWidget {
    get data() {
      return this[S$.data$7];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t23, t23$;
      if (context == null) dart.nullFailed(I[62], 209, 41, "context");
      let radioTheme = context.dependOnInheritedWidgetOfExactType(radio_theme.RadioTheme);
      t23$ = (t23 = radioTheme, t23 == null ? null : t23.data);
      return t23$ == null ? theme$.Theme.of(context).radioTheme : t23$;
    }
    updateShouldNotify(oldWidget) {
      radio_theme.RadioTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[62], 215, 38, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (radio_theme.RadioTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[62], 194, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[62], 195, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$7] = data;
    radio_theme.RadioTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = radio_theme.RadioTheme.prototype;
  dart.addTypeTests(radio_theme.RadioTheme);
  dart.addTypeCaches(radio_theme.RadioTheme);
  dart.setMethodSignature(radio_theme.RadioTheme, () => ({
    __proto__: dart.getMethods(radio_theme.RadioTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(radio_theme.RadioTheme, I[63]);
  dart.setFieldSignature(radio_theme.RadioTheme, () => ({
    __proto__: dart.getFields(radio_theme.RadioTheme.__proto__),
    data: dart.finalFieldType(radio_theme.RadioThemeData)
  }));
  const Object_Diagnosticable$36$8 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$8.new = function() {
  }).prototype = Object_Diagnosticable$36$8.prototype;
  dart.applyMixin(Object_Diagnosticable$36$8, diagnostics.Diagnosticable);
  popup_menu_theme.PopupMenuThemeData = class PopupMenuThemeData extends Object_Diagnosticable$36$8 {
    get color() {
      return this[S$.color$9];
    }
    set color(value) {
      super.color = value;
    }
    get shape() {
      return this[S$.shape$13];
    }
    set shape(value) {
      super.shape = value;
    }
    get elevation() {
      return this[S$.elevation$11];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get textStyle() {
      return this[S$.textStyle$2];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get enableFeedback() {
      return this[S$.enableFeedback$6];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    copyWith(opts) {
      let t23, t23$, t23$0, t23$1, t23$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      return new popup_menu_theme.PopupMenuThemeData.new({color: (t23 = color, t23 == null ? this.color : t23), shape: (t23$ = shape, t23$ == null ? this.shape : t23$), elevation: (t23$0 = elevation, t23$0 == null ? this.elevation : t23$0), textStyle: (t23$1 = textStyle, t23$1 == null ? this.textStyle : t23$1), enableFeedback: (t23$2 = enableFeedback, t23$2 == null ? this.enableFeedback : t23$2)});
    }
    static lerp(a, b, t) {
      let t23, t23$, t23$0, t23$1, t23$2, t23$3, t23$4, t23$5, t23$6, t23$7;
      if (t == null) dart.nullFailed(I[64], 83, 88, "t");
      if (!(t != null)) dart.assertFailed(null, I[64], 84, 12, "t != null");
      if (a == null && b == null) return null;
      return new popup_menu_theme.PopupMenuThemeData.new({color: ui.Color.lerp((t23 = a, t23 == null ? null : t23.color), (t23$ = b, t23$ == null ? null : t23$.color), t), shape: borders.ShapeBorder.lerp((t23$0 = a, t23$0 == null ? null : t23$0.shape), (t23$1 = b, t23$1 == null ? null : t23$1.shape), t), elevation: ui.lerpDouble((t23$2 = a, t23$2 == null ? null : t23$2.elevation), (t23$3 = b, t23$3 == null ? null : t23$3.elevation), t), textStyle: text_style.TextStyle.lerp((t23$4 = a, t23$4 == null ? null : t23$4.textStyle), (t23$5 = b, t23$5 == null ? null : t23$5.textStyle), t), enableFeedback: dart.notNull(t) < 0.5 ? (t23$6 = a, t23$6 == null ? null : t23$6.enableFeedback) : (t23$7 = b, t23$7 == null ? null : t23$7.enableFeedback)});
    }
    get hashCode() {
      return ui.hashValues(this.color, this.shape, this.elevation, this.textStyle, this.enableFeedback);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return popup_menu_theme.PopupMenuThemeData.is(other) && other.elevation == this.elevation && dart.equals(other.color, this.color) && dart.equals(other.shape, this.shape) && dart.equals(other.textStyle, this.textStyle) && other.enableFeedback == this.enableFeedback;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[64], 122, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("text style", this.textStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("enableFeedback", this.enableFeedback, {defaultValue: null}));
    }
  };
  (popup_menu_theme.PopupMenuThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    this[S$.color$9] = color;
    this[S$.shape$13] = shape;
    this[S$.elevation$11] = elevation;
    this[S$.textStyle$2] = textStyle;
    this[S$.enableFeedback$6] = enableFeedback;
    ;
  }).prototype = popup_menu_theme.PopupMenuThemeData.prototype;
  dart.addTypeTests(popup_menu_theme.PopupMenuThemeData);
  dart.addTypeCaches(popup_menu_theme.PopupMenuThemeData);
  dart.setMethodSignature(popup_menu_theme.PopupMenuThemeData, () => ({
    __proto__: dart.getMethods(popup_menu_theme.PopupMenuThemeData.__proto__),
    copyWith: dart.fnType(popup_menu_theme.PopupMenuThemeData, [], {color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), enableFeedback: dart.nullable(core.bool), shape: dart.nullable(borders.ShapeBorder), textStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(popup_menu_theme.PopupMenuThemeData, I[65]);
  dart.setFieldSignature(popup_menu_theme.PopupMenuThemeData, () => ({
    __proto__: dart.getFields(popup_menu_theme.PopupMenuThemeData.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool))
  }));
  dart.defineExtensionMethods(popup_menu_theme.PopupMenuThemeData, ['_equals']);
  dart.defineExtensionAccessors(popup_menu_theme.PopupMenuThemeData, ['hashCode']);
  popup_menu_theme.PopupMenuTheme = class PopupMenuTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$8];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t23, t23$;
      if (context == null) dart.nullFailed(I[64], 160, 45, "context");
      let popupMenuTheme = context.dependOnInheritedWidgetOfExactType(popup_menu_theme.PopupMenuTheme);
      t23$ = (t23 = popupMenuTheme, t23 == null ? null : t23.data);
      return t23$ == null ? theme$.Theme.of(context).popupMenuTheme : t23$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[64], 166, 28, "context");
      if (child == null) dart.nullFailed(I[64], 166, 44, "child");
      return new popup_menu_theme.PopupMenuTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1321] || CT.C1321});
    }
    updateShouldNotify(oldWidget) {
      popup_menu_theme.PopupMenuTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[64], 171, 42, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (popup_menu_theme.PopupMenuTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[64], 144, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[64], 145, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$8] = data;
    if (!(data != null)) dart.assertFailed(null, I[64], 146, 15, "data != null");
    popup_menu_theme.PopupMenuTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = popup_menu_theme.PopupMenuTheme.prototype;
  dart.addTypeTests(popup_menu_theme.PopupMenuTheme);
  dart.addTypeCaches(popup_menu_theme.PopupMenuTheme);
  dart.setMethodSignature(popup_menu_theme.PopupMenuTheme, () => ({
    __proto__: dart.getMethods(popup_menu_theme.PopupMenuTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(popup_menu_theme.PopupMenuTheme, I[65]);
  dart.setFieldSignature(popup_menu_theme.PopupMenuTheme, () => ({
    __proto__: dart.getFields(popup_menu_theme.PopupMenuTheme.__proto__),
    data: dart.finalFieldType(popup_menu_theme.PopupMenuThemeData)
  }));
  page_transitions_theme._FadeUpwardsPageTransition = class _FadeUpwardsPageTransition extends framework.StatelessWidget {
    build(context) {
      if (context == null) dart.nullFailed(I[66], 36, 29, "context");
      return new transitions.SlideTransition.new({position: this[S$._positionAnimation], child: new transitions.FadeTransition.new({opacity: this[S$._opacityAnimation], child: this.child, $creationLocationd_0dea112b090073317d4: C[1325] || CT.C1325}), $creationLocationd_0dea112b090073317d4: C[1329] || CT.C1329});
    }
  };
  (page_transitions_theme._FadeUpwardsPageTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let routeAnimation = opts && 'routeAnimation' in opts ? opts.routeAnimation : null;
    if (routeAnimation == null) dart.nullFailed(I[66], 17, 32, "routeAnimation");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[66], 18, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.child = child;
    this[S$._positionAnimation] = routeAnimation.drive(ui.Offset, page_transitions_theme._FadeUpwardsPageTransition._bottomUpTween.chain(page_transitions_theme._FadeUpwardsPageTransition._fastOutSlowInTween));
    this[S$._opacityAnimation] = routeAnimation.drive(core.double, page_transitions_theme._FadeUpwardsPageTransition._easeInTween);
    page_transitions_theme._FadeUpwardsPageTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._FadeUpwardsPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._FadeUpwardsPageTransition);
  dart.addTypeCaches(page_transitions_theme._FadeUpwardsPageTransition);
  dart.setMethodSignature(page_transitions_theme._FadeUpwardsPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._FadeUpwardsPageTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._FadeUpwardsPageTransition, I[67]);
  dart.setFieldSignature(page_transitions_theme._FadeUpwardsPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._FadeUpwardsPageTransition.__proto__),
    [S$._positionAnimation]: dart.finalFieldType(animation.Animation$(ui.Offset)),
    [S$._opacityAnimation]: dart.finalFieldType(animation.Animation$(core.double)),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.defineLazy(page_transitions_theme._FadeUpwardsPageTransition, {
    /*page_transitions_theme._FadeUpwardsPageTransition._bottomUpTween*/get _bottomUpTween() {
      return new (T$.TweenOfOffset()).new({begin: C[1333] || CT.C1333, end: ui.Offset.zero});
    },
    /*page_transitions_theme._FadeUpwardsPageTransition._fastOutSlowInTween*/get _fastOutSlowInTween() {
      return new tween.CurveTween.new({curve: curves.Curves.fastOutSlowIn});
    },
    /*page_transitions_theme._FadeUpwardsPageTransition._easeInTween*/get _easeInTween() {
      return new tween.CurveTween.new({curve: curves.Curves.easeIn});
    }
  }, false);
  page_transitions_theme._OpenUpwardsPageTransition = class _OpenUpwardsPageTransition extends framework.StatelessWidget {
    get animation() {
      return this[S$.animation$1];
    }
    set animation(value) {
      super.animation = value;
    }
    get secondaryAnimation() {
      return this[S$.secondaryAnimation];
    }
    set secondaryAnimation(value) {
      super.secondaryAnimation = value;
    }
    get child() {
      return this[S$.child$11];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[66], 84, 29, "context");
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          if (context == null) dart.nullFailed(I[66], 86, 30, "context");
          if (constraints == null) dart.nullFailed(I[66], 86, 54, "constraints");
          let size = constraints.biggest;
          let primaryAnimation = new animations.CurvedAnimation.new({parent: this.animation, curve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve, reverseCurve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve.flipped});
          let clipAnimation = new (T$.TweenOfdouble()).new({begin: 0.0, end: size.height}).animate(primaryAnimation);
          let opacityAnimation = page_transitions_theme._OpenUpwardsPageTransition._scrimOpacityTween.animate(primaryAnimation);
          let primaryTranslationAnimation = page_transitions_theme._OpenUpwardsPageTransition._primaryTranslationTween.animate(primaryAnimation);
          let secondaryTranslationAnimation = page_transitions_theme._OpenUpwardsPageTransition._secondaryTranslationTween.animate(new animations.CurvedAnimation.new({parent: this.secondaryAnimation, curve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve, reverseCurve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve.flipped}));
          return new transitions.AnimatedBuilder.new({animation: this.animation, builder: dart.fn((context, child) => {
              if (context == null) dart.nullFailed(I[66], 114, 34, "context");
              return new container.Container.new({color: colors$.Colors.black.withOpacity(opacityAnimation.value), alignment: alignment.Alignment.bottomLeft, child: new basic.ClipRect.new({child: new basic.SizedBox.new({height: clipAnimation.value, child: new basic.OverflowBox.new({alignment: alignment.Alignment.bottomLeft, maxHeight: size.height, child: child, $creationLocationd_0dea112b090073317d4: C[1334] || CT.C1334}), $creationLocationd_0dea112b090073317d4: C[1339] || CT.C1339}), $creationLocationd_0dea112b090073317d4: C[1343] || CT.C1343}), $creationLocationd_0dea112b090073317d4: C[1346] || CT.C1346});
            }, T$.BuildContextAndWidgetNToContainer()), child: new transitions.AnimatedBuilder.new({animation: this.secondaryAnimation, child: new basic.FractionalTranslation.new({translation: primaryTranslationAnimation.value, child: this.child, $creationLocationd_0dea112b090073317d4: C[1351] || CT.C1351}), builder: dart.fn((context, child) => {
                if (context == null) dart.nullFailed(I[66], 136, 36, "context");
                return new basic.FractionalTranslation.new({translation: secondaryTranslationAnimation.value, child: child, $creationLocationd_0dea112b090073317d4: C[1355] || CT.C1355});
              }, T$.BuildContextAndWidgetNToFractionalTranslation()), $creationLocationd_0dea112b090073317d4: C[1359] || CT.C1359}), $creationLocationd_0dea112b090073317d4: C[1364] || CT.C1364});
        }, T$.BuildContextAndBoxConstraintsToAnimatedBuilder()), $creationLocationd_0dea112b090073317d4: C[1369] || CT.C1369});
    }
  };
  (page_transitions_theme._OpenUpwardsPageTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[66], 52, 19, "animation");
    let secondaryAnimation = opts && 'secondaryAnimation' in opts ? opts.secondaryAnimation : null;
    if (secondaryAnimation == null) dart.nullFailed(I[66], 53, 19, "secondaryAnimation");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[66], 54, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.animation$1] = animation;
    this[S$.secondaryAnimation] = secondaryAnimation;
    this[S$.child$11] = child;
    page_transitions_theme._OpenUpwardsPageTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._OpenUpwardsPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._OpenUpwardsPageTransition);
  dart.addTypeCaches(page_transitions_theme._OpenUpwardsPageTransition);
  dart.setMethodSignature(page_transitions_theme._OpenUpwardsPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._OpenUpwardsPageTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._OpenUpwardsPageTransition, I[67]);
  dart.setFieldSignature(page_transitions_theme._OpenUpwardsPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._OpenUpwardsPageTransition.__proto__),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    secondaryAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.defineLazy(page_transitions_theme._OpenUpwardsPageTransition, {
    /*page_transitions_theme._OpenUpwardsPageTransition._primaryTranslationTween*/get _primaryTranslationTween() {
      return new (T$.TweenOfOffset()).new({begin: C[1372] || CT.C1372, end: ui.Offset.zero});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._secondaryTranslationTween*/get _secondaryTranslationTween() {
      return new (T$.TweenOfOffset()).new({begin: ui.Offset.zero, end: C[1373] || CT.C1373});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._scrimOpacityTween*/get _scrimOpacityTween() {
      return new (T$.TweenOfdouble()).new({begin: 0.0, end: 0.25});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._transitionCurve*/get _transitionCurve() {
      return C[1374] || CT.C1374;
    }
  }, false);
  page_transitions_theme._ZoomPageTransition = class _ZoomPageTransition extends framework.StatelessWidget {
    get animation() {
      return this[S$.animation$2];
    }
    set animation(value) {
      super.animation = value;
    }
    get secondaryAnimation() {
      return this[S$.secondaryAnimation$1];
    }
    set secondaryAnimation(value) {
      super.secondaryAnimation = value;
    }
    get child() {
      return this[S$.child$12];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[66], 205, 29, "context");
      return new dual_transition_builder.DualTransitionBuilder.new({animation: this.animation, forwardBuilder: dart.fn((context, animation, child) => {
          if (context == null) dart.nullFailed(I[66], 209, 22, "context");
          if (animation == null) dart.nullFailed(I[66], 210, 27, "animation");
          return new page_transitions_theme._ZoomEnterTransition.new({animation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[1375] || CT.C1375});
        }, T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition()), reverseBuilder: dart.fn((context, animation, child) => {
          if (context == null) dart.nullFailed(I[66], 219, 22, "context");
          if (animation == null) dart.nullFailed(I[66], 220, 27, "animation");
          return new page_transitions_theme._ZoomExitTransition.new({animation: animation, reverse: true, child: child, $creationLocationd_0dea112b090073317d4: C[1379] || CT.C1379});
        }, T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition()), child: new dual_transition_builder.DualTransitionBuilder.new({animation: new animations.ReverseAnimation.new(this.secondaryAnimation), forwardBuilder: dart.fn((context, animation, child) => {
            if (context == null) dart.nullFailed(I[66], 232, 24, "context");
            if (animation == null) dart.nullFailed(I[66], 233, 29, "animation");
            return new page_transitions_theme._ZoomEnterTransition.new({animation: animation, reverse: true, child: child, $creationLocationd_0dea112b090073317d4: C[1384] || CT.C1384});
          }, T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition()), reverseBuilder: dart.fn((context, animation, child) => {
            if (context == null) dart.nullFailed(I[66], 243, 24, "context");
            if (animation == null) dart.nullFailed(I[66], 244, 29, "animation");
            return new page_transitions_theme._ZoomExitTransition.new({animation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[1389] || CT.C1389});
          }, T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition()), child: this.child, $creationLocationd_0dea112b090073317d4: C[1393] || CT.C1393}), $creationLocationd_0dea112b090073317d4: C[1399] || CT.C1399});
    }
  };
  (page_transitions_theme._ZoomPageTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[66], 158, 19, "animation");
    let secondaryAnimation = opts && 'secondaryAnimation' in opts ? opts.secondaryAnimation : null;
    if (secondaryAnimation == null) dart.nullFailed(I[66], 159, 19, "secondaryAnimation");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.animation$2] = animation;
    this[S$.secondaryAnimation$1] = secondaryAnimation;
    this[S$.child$12] = child;
    if (!(animation != null)) dart.assertFailed(null, I[66], 161, 15, "animation != null");
    if (!(secondaryAnimation != null)) dart.assertFailed(null, I[66], 162, 15, "secondaryAnimation != null");
    page_transitions_theme._ZoomPageTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomPageTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomPageTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomPageTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomPageTransition, I[67]);
  dart.setFieldSignature(page_transitions_theme._ZoomPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomPageTransition.__proto__),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    secondaryAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  dart.defineLazy(page_transitions_theme._ZoomPageTransition, {
    /*page_transitions_theme._ZoomPageTransition.fastOutExtraSlowInTweenSequenceItems*/get fastOutExtraSlowInTweenSequenceItems() {
      return T$.JSArrayOfTweenSequenceItemOfdouble().of([new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 0.0, end: 0.4}).chain(new tween.CurveTween.new({curve: C[1405] || CT.C1405})), weight: 0.166666}), new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 0.4, end: 1.0}).chain(new tween.CurveTween.new({curve: C[1406] || CT.C1406})), weight: 1.0 - 0.166666})]);
    },
    /*page_transitions_theme._ZoomPageTransition._scaleCurveSequence*/get _scaleCurveSequence() {
      return new (T$.TweenSequenceOfdouble()).new(page_transitions_theme._ZoomPageTransition.fastOutExtraSlowInTweenSequenceItems);
    }
  }, false);
  page_transitions_theme._ZoomEnterTransition = class _ZoomEnterTransition extends framework.StatelessWidget {
    get animation() {
      return this[S$.animation$3];
    }
    set animation(value) {
      super.animation = value;
    }
    get child() {
      return this[S$.child$13];
    }
    set child(value) {
      super.child = value;
    }
    get reverse() {
      return this[S$.reverse];
    }
    set reverse(value) {
      super.reverse = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[66], 293, 29, "context");
      let opacity = 0.0;
      if (!dart.test(this.reverse) && this.animation.status != animation.AnimationStatus.completed) {
        opacity = dart.nullCheck(page_transitions_theme._ZoomEnterTransition._scrimOpacityTween.evaluate(this.animation));
      }
      let fadeTransition = dart.test(this.reverse) ? animations.kAlwaysCompleteAnimation : page_transitions_theme._ZoomEnterTransition._fadeInTransition.animate(this.animation);
      let scaleTransition = (dart.test(this.reverse) ? page_transitions_theme._ZoomEnterTransition._scaleDownTransition : page_transitions_theme._ZoomEnterTransition._scaleUpTransition).animate(this.animation);
      return new transitions.AnimatedBuilder.new({animation: this.animation, builder: dart.fn((context, child) => {
          if (context == null) dart.nullFailed(I[66], 320, 30, "context");
          return new container.Container.new({color: colors$.Colors.black.withOpacity(opacity), child: child, $creationLocationd_0dea112b090073317d4: C[1407] || CT.C1407});
        }, T$.BuildContextAndWidgetNToContainer()), child: new transitions.FadeTransition.new({opacity: fadeTransition, child: new transitions.ScaleTransition.new({scale: scaleTransition, child: this.child, $creationLocationd_0dea112b090073317d4: C[1411] || CT.C1411}), $creationLocationd_0dea112b090073317d4: C[1415] || CT.C1415}), $creationLocationd_0dea112b090073317d4: C[1419] || CT.C1419});
    }
  };
  (page_transitions_theme._ZoomEnterTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[66], 261, 19, "animation");
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    if (reverse == null) dart.nullFailed(I[66], 262, 10, "reverse");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.animation$3] = animation;
    this[S$.reverse] = reverse;
    this[S$.child$13] = child;
    if (!(animation != null)) dart.assertFailed(null, I[66], 264, 15, "animation != null");
    if (!(reverse != null)) dart.assertFailed(null, I[66], 265, 15, "reverse != null");
    page_transitions_theme._ZoomEnterTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomEnterTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomEnterTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomEnterTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomEnterTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomEnterTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomEnterTransition, I[67]);
  dart.setFieldSignature(page_transitions_theme._ZoomEnterTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomEnterTransition.__proto__),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    reverse: dart.finalFieldType(core.bool)
  }));
  dart.defineLazy(page_transitions_theme._ZoomEnterTransition, {
    /*page_transitions_theme._ZoomEnterTransition._fadeInTransition*/get _fadeInTransition() {
      return new (T$.TweenOfdouble()).new({begin: 0.0, end: 1.0}).chain(new tween.CurveTween.new({curve: C[1424] || CT.C1424}));
    },
    /*page_transitions_theme._ZoomEnterTransition._scaleDownTransition*/get _scaleDownTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.1, end: 1.0}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomEnterTransition._scaleUpTransition*/get _scaleUpTransition() {
      return new (T$.TweenOfdouble()).new({begin: 0.85, end: 1.0}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomEnterTransition._scrimOpacityTween*/get _scrimOpacityTween() {
      return new (T$.TweenOfdoubleN()).new({begin: 0.0, end: 0.6}).chain(new tween.CurveTween.new({curve: C[1425] || CT.C1425}));
    }
  }, false);
  page_transitions_theme._ZoomExitTransition = class _ZoomExitTransition extends framework.StatelessWidget {
    get animation() {
      return this[S$.animation$4];
    }
    set animation(value) {
      super.animation = value;
    }
    get reverse() {
      return this[S$.reverse$1];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get child() {
      return this[S$.child$14];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[66], 367, 29, "context");
      let fadeTransition = dart.test(this.reverse) ? page_transitions_theme._ZoomExitTransition._fadeOutTransition.animate(this.animation) : animations.kAlwaysCompleteAnimation;
      let scaleTransition = (dart.test(this.reverse) ? page_transitions_theme._ZoomExitTransition._scaleDownTransition : page_transitions_theme._ZoomExitTransition._scaleUpTransition).animate(this.animation);
      return new transitions.FadeTransition.new({opacity: fadeTransition, child: new transitions.ScaleTransition.new({scale: scaleTransition, child: this.child, $creationLocationd_0dea112b090073317d4: C[1426] || CT.C1426}), $creationLocationd_0dea112b090073317d4: C[1430] || CT.C1430});
    }
  };
  (page_transitions_theme._ZoomExitTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[66], 340, 19, "animation");
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    if (reverse == null) dart.nullFailed(I[66], 341, 10, "reverse");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.animation$4] = animation;
    this[S$.reverse$1] = reverse;
    this[S$.child$14] = child;
    if (!(animation != null)) dart.assertFailed(null, I[66], 343, 15, "animation != null");
    if (!(reverse != null)) dart.assertFailed(null, I[66], 344, 15, "reverse != null");
    page_transitions_theme._ZoomExitTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomExitTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomExitTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomExitTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomExitTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomExitTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomExitTransition, I[67]);
  dart.setFieldSignature(page_transitions_theme._ZoomExitTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomExitTransition.__proto__),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    reverse: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  dart.defineLazy(page_transitions_theme._ZoomExitTransition, {
    /*page_transitions_theme._ZoomExitTransition._fadeOutTransition*/get _fadeOutTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.0}).chain(new tween.CurveTween.new({curve: C[1434] || CT.C1434}));
    },
    /*page_transitions_theme._ZoomExitTransition._scaleUpTransition*/get _scaleUpTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 1.05}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomExitTransition._scaleDownTransition*/get _scaleDownTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.9}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    }
  }, false);
  page_transitions_theme.PageTransitionsBuilder = class PageTransitionsBuilder extends core.Object {};
  (page_transitions_theme.PageTransitionsBuilder.new = function() {
    ;
  }).prototype = page_transitions_theme.PageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.PageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.PageTransitionsBuilder);
  dart.setLibraryUri(page_transitions_theme.PageTransitionsBuilder, I[67]);
  page_transitions_theme.FadeUpwardsPageTransitionsBuilder = class FadeUpwardsPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      if (animation == null) dart.nullFailed(I[66], 445, 23, "animation");
      if (child == null) dart.nullFailed(I[66], 447, 12, "child");
      return new page_transitions_theme._FadeUpwardsPageTransition.new({routeAnimation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[1435] || CT.C1435});
    }
  };
  (page_transitions_theme.FadeUpwardsPageTransitionsBuilder.new = function() {
    page_transitions_theme.FadeUpwardsPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.FadeUpwardsPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.FadeUpwardsPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.FadeUpwardsPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.FadeUpwardsPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.FadeUpwardsPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [dart.nullable(pages.PageRoute$(T)), dart.nullable(framework.BuildContext), animation.Animation$(core.double), dart.nullable(animation.Animation$(core.double)), framework.Widget]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.FadeUpwardsPageTransitionsBuilder, I[67]);
  page_transitions_theme.OpenUpwardsPageTransitionsBuilder = class OpenUpwardsPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      if (animation == null) dart.nullFailed(I[66], 472, 23, "animation");
      if (secondaryAnimation == null) dart.nullFailed(I[66], 473, 23, "secondaryAnimation");
      if (child == null) dart.nullFailed(I[66], 474, 12, "child");
      return new page_transitions_theme._OpenUpwardsPageTransition.new({animation: animation, secondaryAnimation: secondaryAnimation, child: child, $creationLocationd_0dea112b090073317d4: C[1439] || CT.C1439});
    }
  };
  (page_transitions_theme.OpenUpwardsPageTransitionsBuilder.new = function() {
    page_transitions_theme.OpenUpwardsPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.OpenUpwardsPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.OpenUpwardsPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.OpenUpwardsPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.OpenUpwardsPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.OpenUpwardsPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [dart.nullable(pages.PageRoute$(T)), dart.nullable(framework.BuildContext), animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.OpenUpwardsPageTransitionsBuilder, I[67]);
  page_transitions_theme.ZoomPageTransitionsBuilder = class ZoomPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      if (animation == null) dart.nullFailed(I[66], 503, 23, "animation");
      if (secondaryAnimation == null) dart.nullFailed(I[66], 504, 23, "secondaryAnimation");
      return new page_transitions_theme._ZoomPageTransition.new({animation: animation, secondaryAnimation: secondaryAnimation, child: child, $creationLocationd_0dea112b090073317d4: C[1444] || CT.C1444});
    }
  };
  (page_transitions_theme.ZoomPageTransitionsBuilder.new = function() {
    page_transitions_theme.ZoomPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.ZoomPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.ZoomPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.ZoomPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.ZoomPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.ZoomPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [dart.nullable(pages.PageRoute$(T)), dart.nullable(framework.BuildContext), animation.Animation$(core.double), animation.Animation$(core.double), dart.nullable(framework.Widget)]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.ZoomPageTransitionsBuilder, I[67]);
  page_transitions_theme.CupertinoPageTransitionsBuilder = class CupertinoPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      if (route == null) dart.nullFailed(I[66], 531, 18, "route");
      if (context == null) dart.nullFailed(I[66], 532, 18, "context");
      if (animation == null) dart.nullFailed(I[66], 533, 23, "animation");
      if (secondaryAnimation == null) dart.nullFailed(I[66], 534, 23, "secondaryAnimation");
      if (child == null) dart.nullFailed(I[66], 535, 12, "child");
      return route$.CupertinoRouteTransitionMixin.buildPageTransitions(T, route, context, animation, secondaryAnimation, child);
    }
  };
  (page_transitions_theme.CupertinoPageTransitionsBuilder.new = function() {
    page_transitions_theme.CupertinoPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.CupertinoPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.CupertinoPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.CupertinoPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.CupertinoPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.CupertinoPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [pages.PageRoute$(T), framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.CupertinoPageTransitionsBuilder, I[67]);
  const Object_Diagnosticable$36$9 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$9.new = function() {
  }).prototype = Object_Diagnosticable$36$9.prototype;
  dart.applyMixin(Object_Diagnosticable$36$9, diagnostics.Diagnosticable);
  page_transitions_theme.PageTransitionsTheme = class PageTransitionsTheme extends Object_Diagnosticable$36$9 {
    get [S$._builders$1]() {
      return this[S$._builders];
    }
    set [S$._builders$1](value) {
      super[S$._builders$1] = value;
    }
    get builders() {
      let t23;
      t23 = this[S$._builders$1];
      return t23 == null ? page_transitions_theme.PageTransitionsTheme._defaultBuilders : t23;
    }
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      let t23;
      if (route == null) dart.nullFailed(I[66], 586, 18, "route");
      if (context == null) dart.nullFailed(I[66], 587, 18, "context");
      if (animation == null) dart.nullFailed(I[66], 588, 23, "animation");
      if (secondaryAnimation == null) dart.nullFailed(I[66], 589, 23, "secondaryAnimation");
      if (child == null) dart.nullFailed(I[66], 590, 12, "child");
      let platform = theme$.Theme.of(context).platform;
      if (dart.test(route$.CupertinoRouteTransitionMixin.isPopGestureInProgress(route))) platform = platform$.TargetPlatform.iOS;
      let matchingBuilder = (t23 = this.builders[S.$_get](platform), t23 == null ? C[1449] || CT.C1449 : t23);
      return matchingBuilder.buildTransitions(T, route, context, animation, secondaryAnimation, child);
    }
    [S$._all](builders) {
      if (builders == null) dart.nullFailed(I[66], 604, 82, "builders");
      return platform$.TargetPlatform.values[S$.$map](T$.PageTransitionsBuilderN(), dart.fn(platform => {
        if (platform == null) dart.nullFailed(I[66], 605, 54, "platform");
        return builders[S.$_get](platform);
      }, T$.TargetPlatformToPageTransitionsBuilderN()))[S$.$toList]();
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      if (page_transitions_theme.PageTransitionsTheme.is(other) && this.builders == other.builders) return true;
      return page_transitions_theme.PageTransitionsTheme.is(other) && dart.test(collections.listEquals(T$.PageTransitionsBuilderN(), this[S$._all](other.builders), this[S$._all](this.builders)));
    }
    get hashCode() {
      return ui.hashList(this[S$._all](this.builders));
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[66], 624, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder()).new("builders", this.builders, {defaultValue: page_transitions_theme.PageTransitionsTheme._defaultBuilders}));
    }
  };
  (page_transitions_theme.PageTransitionsTheme.new = function(opts) {
    let builders = opts && 'builders' in opts ? opts.builders : null;
    this[S$._builders] = builders;
    ;
  }).prototype = page_transitions_theme.PageTransitionsTheme.prototype;
  dart.addTypeTests(page_transitions_theme.PageTransitionsTheme);
  dart.addTypeCaches(page_transitions_theme.PageTransitionsTheme);
  dart.setMethodSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getMethods(page_transitions_theme.PageTransitionsTheme.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [pages.PageRoute$(T), framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget]], T => [dart.nullable(core.Object)]),
    [S$._all]: dart.fnType(core.List$(dart.nullable(page_transitions_theme.PageTransitionsBuilder)), [core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)])
  }));
  dart.setGetterSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getGetters(page_transitions_theme.PageTransitionsTheme.__proto__),
    builders: core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)
  }));
  dart.setLibraryUri(page_transitions_theme.PageTransitionsTheme, I[67]);
  dart.setFieldSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getFields(page_transitions_theme.PageTransitionsTheme.__proto__),
    [S$._builders$1]: dart.finalFieldType(dart.nullable(core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)))
  }));
  dart.defineExtensionMethods(page_transitions_theme.PageTransitionsTheme, ['_equals']);
  dart.defineExtensionAccessors(page_transitions_theme.PageTransitionsTheme, ['hashCode']);
  dart.defineLazy(page_transitions_theme.PageTransitionsTheme, {
    /*page_transitions_theme.PageTransitionsTheme._defaultBuilders*/get _defaultBuilders() {
      return C[1450] || CT.C1450;
    }
  }, false);
  const Object_Diagnosticable$36$10 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$10.new = function() {
  }).prototype = Object_Diagnosticable$36$10.prototype;
  dart.applyMixin(Object_Diagnosticable$36$10, diagnostics.Diagnosticable);
  outlined_button_theme.OutlinedButtonThemeData = class OutlinedButtonThemeData extends Object_Diagnosticable$36$10 {
    get style() {
      return this[S$.style$3];
    }
    set style(value) {
      super.style = value;
    }
    static lerp(a, b, t) {
      let t23, t23$;
      if (t == null) dart.nullFailed(I[68], 48, 103, "t");
      if (!(t != null)) dart.assertFailed(null, I[68], 49, 13, "t != null");
      if (a == null && b == null) return null;
      return new outlined_button_theme.OutlinedButtonThemeData.new({style: button_style.ButtonStyle.lerp((t23 = a, t23 == null ? null : t23.style), (t23$ = b, t23$ == null ? null : t23$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return outlined_button_theme.OutlinedButtonThemeData.is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[68], 72, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
    }
  };
  (outlined_button_theme.OutlinedButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[S$.style$3] = style;
    ;
  }).prototype = outlined_button_theme.OutlinedButtonThemeData.prototype;
  dart.addTypeTests(outlined_button_theme.OutlinedButtonThemeData);
  dart.addTypeCaches(outlined_button_theme.OutlinedButtonThemeData);
  dart.setLibraryUri(outlined_button_theme.OutlinedButtonThemeData, I[69]);
  dart.setFieldSignature(outlined_button_theme.OutlinedButtonThemeData, () => ({
    __proto__: dart.getFields(outlined_button_theme.OutlinedButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(outlined_button_theme.OutlinedButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(outlined_button_theme.OutlinedButtonThemeData, ['hashCode']);
  outlined_button_theme.OutlinedButtonTheme = class OutlinedButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$9];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t23, t23$;
      if (context == null) dart.nullFailed(I[68], 112, 50, "context");
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(outlined_button_theme.OutlinedButtonTheme);
      t23$ = (t23 = buttonTheme, t23 == null ? null : t23.data);
      return t23$ == null ? theme$.Theme.of(context).outlinedButtonTheme : t23$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[68], 118, 28, "context");
      if (child == null) dart.nullFailed(I[68], 118, 44, "child");
      return new outlined_button_theme.OutlinedButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1452] || CT.C1452});
    }
    updateShouldNotify(oldWidget) {
      outlined_button_theme.OutlinedButtonTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[68], 123, 47, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (outlined_button_theme.OutlinedButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[68], 95, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[68], 96, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$9] = data;
    if (!(data != null)) dart.assertFailed(null, I[68], 97, 15, "data != null");
    outlined_button_theme.OutlinedButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outlined_button_theme.OutlinedButtonTheme.prototype;
  dart.addTypeTests(outlined_button_theme.OutlinedButtonTheme);
  dart.addTypeCaches(outlined_button_theme.OutlinedButtonTheme);
  dart.setMethodSignature(outlined_button_theme.OutlinedButtonTheme, () => ({
    __proto__: dart.getMethods(outlined_button_theme.OutlinedButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(outlined_button_theme.OutlinedButtonTheme, I[69]);
  dart.setFieldSignature(outlined_button_theme.OutlinedButtonTheme, () => ({
    __proto__: dart.getFields(outlined_button_theme.OutlinedButtonTheme.__proto__),
    data: dart.finalFieldType(outlined_button_theme.OutlinedButtonThemeData)
  }));
  navigation_rail.NavigationRail = class NavigationRail extends framework.StatefulWidget {
    get backgroundColor() {
      return this[S$.backgroundColor$8];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get extended() {
      return this[S$.extended];
    }
    set extended(value) {
      super.extended = value;
    }
    get leading() {
      return this[S$.leading$2];
    }
    set leading(value) {
      super.leading = value;
    }
    get trailing() {
      return this[S$.trailing$2];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get destinations() {
      return this[S$.destinations];
    }
    set destinations(value) {
      super.destinations = value;
    }
    get selectedIndex() {
      return this[S$.selectedIndex];
    }
    set selectedIndex(value) {
      super.selectedIndex = value;
    }
    get onDestinationSelected() {
      return this[S$.onDestinationSelected];
    }
    set onDestinationSelected(value) {
      super.onDestinationSelected = value;
    }
    get elevation() {
      return this[S$.elevation$12];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get groupAlignment() {
      return this[S$.groupAlignment];
    }
    set groupAlignment(value) {
      super.groupAlignment = value;
    }
    get labelType() {
      return this[S$.labelType];
    }
    set labelType(value) {
      super.labelType = value;
    }
    get unselectedLabelTextStyle() {
      return this[S$.unselectedLabelTextStyle];
    }
    set unselectedLabelTextStyle(value) {
      super.unselectedLabelTextStyle = value;
    }
    get selectedLabelTextStyle() {
      return this[S$.selectedLabelTextStyle];
    }
    set selectedLabelTextStyle(value) {
      super.selectedLabelTextStyle = value;
    }
    get unselectedIconTheme() {
      return this[S$.unselectedIconTheme];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedIconTheme() {
      return this[S$.selectedIconTheme];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get minWidth() {
      return this[S$.minWidth$1];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get minExtendedWidth() {
      return this[S$.minExtendedWidth];
    }
    set minExtendedWidth(value) {
      super.minExtendedWidth = value;
    }
    static extendedAnimation(context) {
      if (context == null) dart.nullFailed(I[70], 381, 59, "context");
      return dart.nullCheck(context.dependOnInheritedWidgetOfExactType(navigation_rail._ExtendedNavigationRailAnimation)).animation;
    }
    createState() {
      return new navigation_rail._NavigationRailState.new();
    }
  };
  (navigation_rail.NavigationRail.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let extended = opts && 'extended' in opts ? opts.extended : false;
    if (extended == null) dart.nullFailed(I[70], 130, 10, "extended");
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let destinations = opts && 'destinations' in opts ? opts.destinations : null;
    if (destinations == null) dart.nullFailed(I[70], 133, 19, "destinations");
    let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
    if (selectedIndex == null) dart.nullFailed(I[70], 134, 19, "selectedIndex");
    let onDestinationSelected = opts && 'onDestinationSelected' in opts ? opts.onDestinationSelected : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
    let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.backgroundColor$8] = backgroundColor;
    this[S$.extended] = extended;
    this[S$.leading$2] = leading;
    this[S$.trailing$2] = trailing;
    this[S$.destinations] = destinations;
    this[S$.selectedIndex] = selectedIndex;
    this[S$.onDestinationSelected] = onDestinationSelected;
    this[S$.elevation$12] = elevation;
    this[S$.groupAlignment] = groupAlignment;
    this[S$.labelType] = labelType;
    this[S$.unselectedLabelTextStyle] = unselectedLabelTextStyle;
    this[S$.selectedLabelTextStyle] = selectedLabelTextStyle;
    this[S$.unselectedIconTheme] = unselectedIconTheme;
    this[S$.selectedIconTheme] = selectedIconTheme;
    this[S$.minWidth$1] = minWidth;
    this[S$.minExtendedWidth] = minExtendedWidth;
    if (!(destinations != null && dart.notNull(destinations[S.$length]) >= 2)) dart.assertFailed(null, I[70], 145, 16, "destinations != null && destinations.length >= 2");
    if (!(selectedIndex != null)) dart.assertFailed(null, I[70], 146, 16, "selectedIndex != null");
    if (!(0 <= dart.notNull(selectedIndex) && dart.notNull(selectedIndex) < dart.notNull(destinations[S.$length]))) dart.assertFailed(null, I[70], 147, 16, "0 <= selectedIndex && selectedIndex < destinations.length");
    if (!(elevation == null || dart.notNull(elevation) > 0)) dart.assertFailed(null, I[70], 148, 16, "elevation == null || elevation > 0");
    if (!(minWidth == null || dart.notNull(minWidth) > 0)) dart.assertFailed(null, I[70], 149, 16, "minWidth == null || minWidth > 0");
    if (!(minExtendedWidth == null || dart.notNull(minExtendedWidth) > 0)) dart.assertFailed(null, I[70], 150, 16, "minExtendedWidth == null || minExtendedWidth > 0");
    if (!(minWidth == null || minExtendedWidth == null || dart.notNull(minExtendedWidth) >= dart.notNull(minWidth))) dart.assertFailed(null, I[70], 151, 16, "(minWidth == null || minExtendedWidth == null) || minExtendedWidth >= minWidth");
    if (!(extended != null)) dart.assertFailed(null, I[70], 152, 16, "extended != null");
    if (!(!dart.test(extended) || labelType == null || labelType == navigation_rail.NavigationRailLabelType.none)) dart.assertFailed(null, I[70], 153, 16, "!extended || (labelType == null || labelType == NavigationRailLabelType.none)");
    navigation_rail.NavigationRail.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail.NavigationRail.prototype;
  dart.addTypeTests(navigation_rail.NavigationRail);
  dart.addTypeCaches(navigation_rail.NavigationRail);
  dart.setMethodSignature(navigation_rail.NavigationRail, () => ({
    __proto__: dart.getMethods(navigation_rail.NavigationRail.__proto__),
    createState: dart.fnType(navigation_rail._NavigationRailState, [])
  }));
  dart.setLibraryUri(navigation_rail.NavigationRail, I[71]);
  dart.setFieldSignature(navigation_rail.NavigationRail, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRail.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    extended: dart.finalFieldType(core.bool),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    trailing: dart.finalFieldType(dart.nullable(framework.Widget)),
    destinations: dart.finalFieldType(core.List$(navigation_rail.NavigationRailDestination)),
    selectedIndex: dart.finalFieldType(core.int),
    onDestinationSelected: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    groupAlignment: dart.finalFieldType(dart.nullable(core.double)),
    labelType: dart.finalFieldType(dart.nullable(navigation_rail.NavigationRailLabelType)),
    unselectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    minWidth: dart.finalFieldType(dart.nullable(core.double)),
    minExtendedWidth: dart.finalFieldType(dart.nullable(core.double))
  }));
  const State_TickerProviderStateMixin$36$ = class State_TickerProviderStateMixin extends framework.State$(navigation_rail.NavigationRail) {};
  (State_TickerProviderStateMixin$36$.new = function() {
    ticker_provider.TickerProviderStateMixin$(navigation_rail.NavigationRail)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$, ticker_provider.TickerProviderStateMixin$(navigation_rail.NavigationRail));
  navigation_rail._NavigationRailState = class _NavigationRailState extends State_TickerProviderStateMixin$36$ {
    get [S$._destinationControllers]() {
      let t23;
      return dart.test(this[S$.___NavigationRailState__destinationControllers_isSet]) ? (t23 = this[S$.___NavigationRailState__destinationControllers], t23) : dart.throw(new _internal.LateError.fieldNI("_destinationControllers"));
    }
    set [S$._destinationControllers](t23) {
      if (t23 == null) dart.nullFailed(I[70], 390, 34, "null");
      this[S$.___NavigationRailState__destinationControllers_isSet] = true;
      this[S$.___NavigationRailState__destinationControllers] = t23;
    }
    get [S$._destinationAnimations]() {
      let t24;
      return dart.test(this[S$.___NavigationRailState__destinationAnimations_isSet]) ? (t24 = this[S$.___NavigationRailState__destinationAnimations], t24) : dart.throw(new _internal.LateError.fieldNI("_destinationAnimations"));
    }
    set [S$._destinationAnimations](t24) {
      if (t24 == null) dart.nullFailed(I[70], 391, 32, "null");
      this[S$.___NavigationRailState__destinationAnimations_isSet] = true;
      this[S$.___NavigationRailState__destinationAnimations] = t24;
    }
    get [S$._extendedController]() {
      let t25;
      return dart.test(this[S$.___NavigationRailState__extendedController_isSet]) ? (t25 = this[S$.___NavigationRailState__extendedController], t25) : dart.throw(new _internal.LateError.fieldNI("_extendedController"));
    }
    set [S$._extendedController](t25) {
      if (t25 == null) dart.nullFailed(I[70], 392, 28, "null");
      this[S$.___NavigationRailState__extendedController_isSet] = true;
      this[S$.___NavigationRailState__extendedController] = t25;
    }
    get [S$._extendedAnimation]() {
      let t26;
      return dart.test(this[S$.___NavigationRailState__extendedAnimation_isSet]) ? (t26 = this[S$.___NavigationRailState__extendedAnimation], t26) : dart.throw(new _internal.LateError.fieldNI("_extendedAnimation"));
    }
    set [S$._extendedAnimation](t26) {
      if (t26 == null) dart.nullFailed(I[70], 393, 26, "null");
      this[S$.___NavigationRailState__extendedAnimation_isSet] = true;
      this[S$.___NavigationRailState__extendedAnimation] = t26;
    }
    initState() {
      super.initState();
      this[S$._initControllers]();
    }
    dispose() {
      this[S$._disposeControllers]();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      navigation_rail.NavigationRail.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[70], 408, 39, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this.widget.extended != oldWidget.extended) {
        if (dart.test(this.widget.extended)) {
          this[S$._extendedController].forward();
        } else {
          this[S$._extendedController].reverse();
        }
      }
      if (this.widget.destinations[S.$length] != oldWidget.destinations[S.$length]) {
        this[S$._resetState]();
        return;
      }
      if (this.widget.selectedIndex != oldWidget.selectedIndex) {
        this[S$._destinationControllers][S.$_get](oldWidget.selectedIndex).reverse();
        this[S$._destinationControllers][S.$_get](this.widget.selectedIndex).forward();
        return;
      }
    }
    build(context) {
      let t27, t27$, t27$0, t27$1, t27$2, t27$3, t27$4, t27$5, t27$6, t27$7, t27$8, t27$9, t27$10, t27$11, t27$12, t27$13, t27$14, t27$15, t27$16, t27$17, t27$18, t27$19, t27$20, t27$21, t27$22, t27$23;
      if (context == null) dart.nullFailed(I[70], 433, 29, "context");
      let theme = theme$.Theme.of(context);
      let navigationRailTheme = navigation_rail_theme.NavigationRailTheme.of(context);
      let localizations = material_localizations.MaterialLocalizations.of(context);
      let backgroundColor = (t27$ = (t27 = this.widget.backgroundColor, t27 == null ? navigationRailTheme.backgroundColor : t27), t27$ == null ? theme.colorScheme.surface : t27$);
      let elevation = (t27$1 = (t27$0 = this.widget.elevation, t27$0 == null ? navigationRailTheme.elevation : t27$0), t27$1 == null ? 0.0 : t27$1);
      let minWidth = (t27$2 = this.widget.minWidth, t27$2 == null ? 72 : t27$2);
      let minExtendedWidth = (t27$3 = this.widget.minExtendedWidth, t27$3 == null ? 256 : t27$3);
      let baseSelectedColor = theme.colorScheme.primary;
      let baseUnselectedColor = theme.colorScheme.onSurface.withOpacity(0.64);
      let defaultUnselectedIconTheme = (t27$4 = this.widget.unselectedIconTheme, t27$4 == null ? navigationRailTheme.unselectedIconTheme : t27$4);
      let unselectedIconTheme = new icon_theme_data.IconThemeData.new({size: (t27$6 = (t27$5 = defaultUnselectedIconTheme, t27$5 == null ? null : t27$5.size), t27$6 == null ? 24.0 : t27$6), color: (t27$8 = (t27$7 = defaultUnselectedIconTheme, t27$7 == null ? null : t27$7.color), t27$8 == null ? theme.colorScheme.onSurface : t27$8), opacity: (t27$10 = (t27$9 = defaultUnselectedIconTheme, t27$9 == null ? null : t27$9.opacity), t27$10 == null ? 0.64 : t27$10)});
      let defaultSelectedIconTheme = (t27$11 = this.widget.selectedIconTheme, t27$11 == null ? navigationRailTheme.selectedIconTheme : t27$11);
      let selectedIconTheme = new icon_theme_data.IconThemeData.new({size: (t27$13 = (t27$12 = defaultSelectedIconTheme, t27$12 == null ? null : t27$12.size), t27$13 == null ? 24.0 : t27$13), color: (t27$15 = (t27$14 = defaultSelectedIconTheme, t27$14 == null ? null : t27$14.color), t27$15 == null ? theme.colorScheme.primary : t27$15), opacity: (t27$17 = (t27$16 = defaultSelectedIconTheme, t27$16 == null ? null : t27$16.opacity), t27$17 == null ? 1.0 : t27$17)});
      let unselectedLabelTextStyle = dart.nullCheck(theme.textTheme.bodyText1).copyWith({color: baseUnselectedColor}).merge((t27$18 = this.widget.unselectedLabelTextStyle, t27$18 == null ? navigationRailTheme.unselectedLabelTextStyle : t27$18));
      let selectedLabelTextStyle = dart.nullCheck(theme.textTheme.bodyText1).copyWith({color: baseSelectedColor}).merge((t27$19 = this.widget.selectedLabelTextStyle, t27$19 == null ? navigationRailTheme.selectedLabelTextStyle : t27$19));
      let groupAlignment = (t27$21 = (t27$20 = this.widget.groupAlignment, t27$20 == null ? navigationRailTheme.groupAlignment : t27$20), t27$21 == null ? -1.0 : t27$21);
      let labelType = (t27$23 = (t27$22 = this.widget.labelType, t27$22 == null ? navigationRailTheme.labelType : t27$22), t27$23 == null ? navigation_rail.NavigationRailLabelType.none : t27$23);
      return new navigation_rail._ExtendedNavigationRailAnimation.new({animation: this[S$._extendedAnimation], child: new basic.Semantics.new({explicitChildNodes: true, child: new material.Material.new({elevation: elevation, color: backgroundColor, child: new basic.Column.new({children: (() => {
                let t27 = T$.JSArrayOfWidget().of([navigation_rail._verticalSpacer]);
                if (this.widget.leading != null) t27[S$.$addAll](T$.JSArrayOfWidget().of([new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minWidth: dart.nullCheck(ui.lerpDouble(minWidth, minExtendedWidth, this[S$._extendedAnimation].value))}), child: this.widget.leading, $creationLocationd_0dea112b090073317d4: C[1456] || CT.C1456}), navigation_rail._verticalSpacer]));
                t27[S.$add](new basic.Expanded.new({child: new basic.Align.new({alignment: new alignment.Alignment.new(0.0, groupAlignment), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: (() => {
                        let t28 = T$.JSArrayOfWidget().of([]);
                        for (let i = 0; i < dart.notNull(this.widget.destinations[S.$length]); i = i + 1)
                          t28[S.$add](new navigation_rail._RailDestination.new({minWidth: minWidth, minExtendedWidth: minExtendedWidth, extendedTransitionAnimation: this[S$._extendedAnimation], selected: this.widget.selectedIndex === i, icon: this.widget.selectedIndex === i ? this.widget.destinations[S.$_get](i).selectedIcon : this.widget.destinations[S.$_get](i).icon, label: dart.nullCheck(this.widget.destinations[S.$_get](i).label), destinationAnimation: this[S$._destinationAnimations][S.$_get](i), labelType: labelType, iconTheme: this.widget.selectedIndex === i ? selectedIconTheme : unselectedIconTheme, labelTextStyle: this.widget.selectedIndex === i ? selectedLabelTextStyle : unselectedLabelTextStyle, padding: this.widget.destinations[S.$_get](i).padding, onTap: dart.fn(() => {
                              dart.nullCheck(this.widget.onDestinationSelected)(i);
                            }, T$.VoidTovoid()), indexLabel: localizations.tabLabel({tabIndex: i + 1, tabCount: this.widget.destinations[S.$length]}), $creationLocationd_0dea112b090073317d4: C[1460] || CT.C1460}));
                        if (this.widget.trailing != null) t28[S.$add](new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minWidth: dart.nullCheck(ui.lerpDouble(minWidth, minExtendedWidth, this[S$._extendedAnimation].value))}), child: this.widget.trailing, $creationLocationd_0dea112b090073317d4: C[1475] || CT.C1475}));
                        return t28;
                      })(), $creationLocationd_0dea112b090073317d4: C[1479] || CT.C1479}), $creationLocationd_0dea112b090073317d4: C[1483] || CT.C1483}), $creationLocationd_0dea112b090073317d4: C[1487] || CT.C1487}));
                return t27;
              })(), $creationLocationd_0dea112b090073317d4: C[1490] || CT.C1490}), $creationLocationd_0dea112b090073317d4: C[1493] || CT.C1493}), $creationLocationd_0dea112b090073317d4: C[1497] || CT.C1497}), $creationLocationd_0dea112b090073317d4: C[1501] || CT.C1501});
    }
    [S$._disposeControllers]() {
      for (let controller of this[S$._destinationControllers]) {
        controller.dispose();
      }
      this[S$._extendedController].dispose();
    }
    [S$._initControllers]() {
      this[S$._destinationControllers] = T$.ListOfAnimationController().generate(this.widget.destinations[S.$length], dart.fn(index => {
        let t29;
        if (index == null) dart.nullFailed(I[70], 534, 99, "index");
        t29 = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this});
        return (() => {
          t29.addListener(dart.bind(this, S$._rebuild));
          return t29;
        })();
      }, T$.intToAnimationController()));
      this[S$._destinationAnimations] = this[S$._destinationControllers][S$.$map](T$.AnimationOfdouble(), dart.fn(controller => {
        if (controller == null) dart.nullFailed(I[70], 540, 79, "controller");
        return controller.view;
      }, T$.AnimationControllerToAnimationOfdouble()))[S$.$toList]();
      this[S$._destinationControllers][S.$_get](this.widget.selectedIndex).value = 1.0;
      this[S$._extendedController] = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this, value: dart.test(this.widget.extended) ? 1.0 : 0.0});
      this[S$._extendedAnimation] = new animations.CurvedAnimation.new({parent: this[S$._extendedController], curve: curves.Curves.easeInOut});
      this[S$._extendedController].addListener(dart.fn(() => {
        this[S$._rebuild]();
      }, T$.VoidTovoid()));
    }
    [S$._resetState]() {
      this[S$._disposeControllers]();
      this[S$._initControllers]();
    }
    [S$._rebuild]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
  };
  (navigation_rail._NavigationRailState.new = function() {
    this[S$.___NavigationRailState__destinationControllers] = null;
    this[S$.___NavigationRailState__destinationControllers_isSet] = false;
    this[S$.___NavigationRailState__destinationAnimations] = null;
    this[S$.___NavigationRailState__destinationAnimations_isSet] = false;
    this[S$.___NavigationRailState__extendedController] = null;
    this[S$.___NavigationRailState__extendedController_isSet] = false;
    this[S$.___NavigationRailState__extendedAnimation] = null;
    this[S$.___NavigationRailState__extendedAnimation_isSet] = false;
    navigation_rail._NavigationRailState.__proto__.new.call(this);
    ;
  }).prototype = navigation_rail._NavigationRailState.prototype;
  dart.addTypeTests(navigation_rail._NavigationRailState);
  dart.addTypeCaches(navigation_rail._NavigationRailState);
  dart.setMethodSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getMethods(navigation_rail._NavigationRailState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$._disposeControllers]: dart.fnType(dart.void, []),
    [S$._initControllers]: dart.fnType(dart.void, []),
    [S$._resetState]: dart.fnType(dart.void, []),
    [S$._rebuild]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getGetters(navigation_rail._NavigationRailState.__proto__),
    [S$._destinationControllers]: core.List$(animation_controller.AnimationController),
    [S$._destinationAnimations]: core.List$(animation.Animation$(core.double)),
    [S$._extendedController]: animation_controller.AnimationController,
    [S$._extendedAnimation]: animation.Animation$(core.double)
  }));
  dart.setSetterSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getSetters(navigation_rail._NavigationRailState.__proto__),
    [S$._destinationControllers]: core.List$(animation_controller.AnimationController),
    [S$._destinationAnimations]: core.List$(animation.Animation$(core.double)),
    [S$._extendedController]: animation_controller.AnimationController,
    [S$._extendedAnimation]: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(navigation_rail._NavigationRailState, I[71]);
  dart.setFieldSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getFields(navigation_rail._NavigationRailState.__proto__),
    [S$.___NavigationRailState__destinationControllers]: dart.fieldType(dart.nullable(core.List$(animation_controller.AnimationController))),
    [S$.___NavigationRailState__destinationControllers_isSet]: dart.fieldType(core.bool),
    [S$.___NavigationRailState__destinationAnimations]: dart.fieldType(dart.nullable(core.List$(animation.Animation$(core.double)))),
    [S$.___NavigationRailState__destinationAnimations_isSet]: dart.fieldType(core.bool),
    [S$.___NavigationRailState__extendedController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___NavigationRailState__extendedController_isSet]: dart.fieldType(core.bool),
    [S$.___NavigationRailState__extendedAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$.___NavigationRailState__extendedAnimation_isSet]: dart.fieldType(core.bool)
  }));
  navigation_rail._RailDestination = class _RailDestination extends framework.StatelessWidget {
    build(context) {
      let t29, t29$, t29$0, t29$1;
      if (context == null) dart.nullFailed(I[70], 619, 29, "context");
      let themedIcon = new icon_theme.IconTheme.new({data: this.iconTheme, child: this.icon, $creationLocationd_0dea112b090073317d4: C[1505] || CT.C1505});
      let styledLabel = new text$.DefaultTextStyle.new({style: this.labelTextStyle, child: this.label, $creationLocationd_0dea112b090073317d4: C[1509] || CT.C1509});
      let content = null;
      switch (this.labelType) {
        case C[1567] || CT.C1567:
        {
          let iconPart = new basic.SizedBox.new({width: this.minWidth, height: this.minWidth, child: new basic.Align.new({alignment: alignment.Alignment.center, child: themedIcon, $creationLocationd_0dea112b090073317d4: C[1513] || CT.C1513}), $creationLocationd_0dea112b090073317d4: C[1517] || CT.C1517});
          if (this.extendedTransitionAnimation.value === 0) {
            content = new basic.Padding.new({padding: (t29 = this.padding, t29 == null ? edge_insets.EdgeInsets.zero : t29), child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([iconPart, new basic.SizedBox.new({width: 0.0, height: 0.0, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: 0.0, child: this.label, $creationLocationd_0dea112b090073317d4: C[1522] || CT.C1522}), $creationLocationd_0dea112b090073317d4: C[1527] || CT.C1527})]), $creationLocationd_0dea112b090073317d4: C[1532] || CT.C1532}), $creationLocationd_0dea112b090073317d4: C[1535] || CT.C1535});
          } else {
            content = new basic.Padding.new({padding: (t29$ = this.padding, t29$ == null ? edge_insets.EdgeInsets.zero : t29$), child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minWidth: dart.nullCheck(ui.lerpDouble(this.minWidth, this.minExtendedWidth, this.extendedTransitionAnimation.value))}), child: new basic.ClipRect.new({child: new basic.Row.new({children: T$.JSArrayOfWidget().of([iconPart, new basic.Align.new({heightFactor: 1.0, widthFactor: this.extendedTransitionAnimation.value, alignment: alignment.AlignmentDirectional.centerStart, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: this[S$._extendedLabelFadeValue](), child: styledLabel, $creationLocationd_0dea112b090073317d4: C[1539] || CT.C1539}), $creationLocationd_0dea112b090073317d4: C[1544] || CT.C1544}), new basic.SizedBox.new({width: 8 * dart.notNull(this.extendedTransitionAnimation.value), $creationLocationd_0dea112b090073317d4: C[1550] || CT.C1550})]), $creationLocationd_0dea112b090073317d4: C[1553] || CT.C1553}), $creationLocationd_0dea112b090073317d4: C[1556] || CT.C1556}), $creationLocationd_0dea112b090073317d4: C[1559] || CT.C1559}), $creationLocationd_0dea112b090073317d4: C[1563] || CT.C1563});
          }
          break;
        }
        case C[1598] || CT.C1598:
        {
          let appearingAnimationValue = 1 - dart.notNull(this[S$._positionAnimation$1].value);
          let verticalPadding = dart.nullCheck(ui.lerpDouble(24, 16, appearingAnimationValue));
          content = new container.Container.new({constraints: new box$.BoxConstraints.new({minWidth: this.minWidth, minHeight: this.minWidth}), padding: (t29$0 = this.padding, t29$0 == null ? C[153] || CT.C153 : t29$0), child: new basic.ClipRect.new({child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({height: verticalPadding, $creationLocationd_0dea112b090073317d4: C[1568] || CT.C1568}), themedIcon, new basic.Align.new({alignment: alignment.Alignment.topCenter, heightFactor: appearingAnimationValue, widthFactor: 1.0, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: dart.test(this.selected) ? this[S$._normalLabelFadeInValue]() : this[S$._normalLabelFadeOutValue](), child: styledLabel, $creationLocationd_0dea112b090073317d4: C[1571] || CT.C1571}), $creationLocationd_0dea112b090073317d4: C[1576] || CT.C1576}), new basic.SizedBox.new({height: verticalPadding, $creationLocationd_0dea112b090073317d4: C[1582] || CT.C1582})]), $creationLocationd_0dea112b090073317d4: C[1585] || CT.C1585}), $creationLocationd_0dea112b090073317d4: C[1590] || CT.C1590}), $creationLocationd_0dea112b090073317d4: C[1593] || CT.C1593});
          break;
        }
        case C[1615] || CT.C1615:
        {
          content = new container.Container.new({constraints: new box$.BoxConstraints.new({minWidth: this.minWidth, minHeight: this.minWidth}), padding: (t29$1 = this.padding, t29$1 == null ? C[153] || CT.C153 : t29$1), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([C[1599] || CT.C1599, themedIcon, styledLabel, C[1603] || CT.C1603]), $creationLocationd_0dea112b090073317d4: C[1607] || CT.C1607}), $creationLocationd_0dea112b090073317d4: C[1610] || CT.C1610});
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let colors = theme$.Theme.of(context).colorScheme;
      return new basic.Semantics.new({container: true, selected: this.selected, child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new material.Material.new({type: material.MaterialType.transparency, clipBehavior: ui.Clip.none, child: new ink_well.InkResponse.new({onTap: this.onTap, onHover: dart.fn(_ => {
                  if (_ == null) dart.nullFailed(I[70], 749, 25, "_");
                }, T$.boolTovoid()), highlightShape: box_border.BoxShape.rectangle, borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(dart.notNull(this.minWidth) / 2.0)), containedInkWell: true, splashColor: colors.primary.withOpacity(0.12), hoverColor: colors.primary.withOpacity(0.04), child: content, $creationLocationd_0dea112b090073317d4: C[1616] || CT.C1616}), $creationLocationd_0dea112b090073317d4: C[1626] || CT.C1626}), new basic.Semantics.new({label: this.indexLabel, $creationLocationd_0dea112b090073317d4: C[1631] || CT.C1631})]), $creationLocationd_0dea112b090073317d4: C[1634] || CT.C1634}), $creationLocationd_0dea112b090073317d4: C[1637] || CT.C1637});
    }
    [S$._normalLabelFadeInValue]() {
      if (dart.notNull(this.destinationAnimation.value) < 0.25) {
        return 0.0;
      } else if (dart.notNull(this.destinationAnimation.value) < 0.75) {
        return (dart.notNull(this.destinationAnimation.value) - 0.25) * 2;
      } else {
        return 1.0;
      }
    }
    [S$._normalLabelFadeOutValue]() {
      if (dart.notNull(this.destinationAnimation.value) > 0.75) {
        return (dart.notNull(this.destinationAnimation.value) - 0.75) * 4.0;
      } else {
        return 0.0;
      }
    }
    [S$._extendedLabelFadeValue]() {
      return dart.notNull(this.extendedTransitionAnimation.value) < 0.25 ? dart.notNull(this.extendedTransitionAnimation.value) * 4.0 : 1.0;
    }
  };
  (navigation_rail._RailDestination.new = function(opts) {
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    if (minWidth == null) dart.nullFailed(I[70], 571, 19, "minWidth");
    let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
    if (minExtendedWidth == null) dart.nullFailed(I[70], 572, 19, "minExtendedWidth");
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[70], 573, 19, "icon");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[70], 574, 19, "label");
    let destinationAnimation = opts && 'destinationAnimation' in opts ? opts.destinationAnimation : null;
    if (destinationAnimation == null) dart.nullFailed(I[70], 575, 19, "destinationAnimation");
    let extendedTransitionAnimation = opts && 'extendedTransitionAnimation' in opts ? opts.extendedTransitionAnimation : null;
    if (extendedTransitionAnimation == null) dart.nullFailed(I[70], 576, 19, "extendedTransitionAnimation");
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    if (labelType == null) dart.nullFailed(I[70], 577, 19, "labelType");
    let selected = opts && 'selected' in opts ? opts.selected : null;
    if (selected == null) dart.nullFailed(I[70], 578, 19, "selected");
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    if (iconTheme == null) dart.nullFailed(I[70], 579, 19, "iconTheme");
    let labelTextStyle = opts && 'labelTextStyle' in opts ? opts.labelTextStyle : null;
    if (labelTextStyle == null) dart.nullFailed(I[70], 580, 19, "labelTextStyle");
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    if (onTap == null) dart.nullFailed(I[70], 581, 19, "onTap");
    let indexLabel = opts && 'indexLabel' in opts ? opts.indexLabel : null;
    if (indexLabel == null) dart.nullFailed(I[70], 582, 19, "indexLabel");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.minWidth = minWidth;
    this.minExtendedWidth = minExtendedWidth;
    this.icon = icon;
    this.label = label;
    this.destinationAnimation = destinationAnimation;
    this.extendedTransitionAnimation = extendedTransitionAnimation;
    this.labelType = labelType;
    this.selected = selected;
    this.iconTheme = iconTheme;
    this.labelTextStyle = labelTextStyle;
    this.onTap = onTap;
    this.indexLabel = indexLabel;
    this.padding = padding;
    if (!(minWidth != null)) dart.assertFailed(null, I[70], 584, 15, "minWidth != null");
    if (!(minExtendedWidth != null)) dart.assertFailed(null, I[70], 585, 15, "minExtendedWidth != null");
    if (!(icon != null)) dart.assertFailed(null, I[70], 586, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, I[70], 587, 15, "label != null");
    if (!(destinationAnimation != null)) dart.assertFailed(null, I[70], 588, 15, "destinationAnimation != null");
    if (!(extendedTransitionAnimation != null)) dart.assertFailed(null, I[70], 589, 15, "extendedTransitionAnimation != null");
    if (!(labelType != null)) dart.assertFailed(null, I[70], 590, 15, "labelType != null");
    if (!(selected != null)) dart.assertFailed(null, I[70], 591, 15, "selected != null");
    if (!(iconTheme != null)) dart.assertFailed(null, I[70], 592, 15, "iconTheme != null");
    if (!(labelTextStyle != null)) dart.assertFailed(null, I[70], 593, 15, "labelTextStyle != null");
    if (!(onTap != null)) dart.assertFailed(null, I[70], 594, 15, "onTap != null");
    if (!(indexLabel != null)) dart.assertFailed(null, I[70], 595, 15, "indexLabel != null");
    this[S$._positionAnimation$1] = new animations.CurvedAnimation.new({parent: new animations.ReverseAnimation.new(destinationAnimation), curve: curves.Curves.easeInOut, reverseCurve: curves.Curves.easeInOut.flipped});
    navigation_rail._RailDestination.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail._RailDestination.prototype;
  dart.addTypeTests(navigation_rail._RailDestination);
  dart.addTypeCaches(navigation_rail._RailDestination);
  dart.setMethodSignature(navigation_rail._RailDestination, () => ({
    __proto__: dart.getMethods(navigation_rail._RailDestination.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$._normalLabelFadeInValue]: dart.fnType(core.double, []),
    [S$._normalLabelFadeOutValue]: dart.fnType(core.double, []),
    [S$._extendedLabelFadeValue]: dart.fnType(core.double, [])
  }));
  dart.setLibraryUri(navigation_rail._RailDestination, I[71]);
  dart.setFieldSignature(navigation_rail._RailDestination, () => ({
    __proto__: dart.getFields(navigation_rail._RailDestination.__proto__),
    minWidth: dart.finalFieldType(core.double),
    minExtendedWidth: dart.finalFieldType(core.double),
    icon: dart.finalFieldType(framework.Widget),
    label: dart.finalFieldType(framework.Widget),
    destinationAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    labelType: dart.finalFieldType(navigation_rail.NavigationRailLabelType),
    selected: dart.finalFieldType(core.bool),
    extendedTransitionAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    iconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    labelTextStyle: dart.finalFieldType(text_style.TextStyle),
    onTap: dart.finalFieldType(dart.fnType(dart.void, [])),
    indexLabel: dart.finalFieldType(core.String),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$._positionAnimation$1]: dart.finalFieldType(animation.Animation$(core.double))
  }));
  navigation_rail.NavigationRailLabelType = class NavigationRailLabelType extends core.Object {
    toString() {
      return this[S$._name$14];
    }
  };
  (navigation_rail.NavigationRailLabelType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[70], 794, 6, "index");
    if (_name == null) dart.nullFailed(I[70], 794, 6, "_name");
    this.index = index;
    this[S$._name$14] = _name;
    ;
  }).prototype = navigation_rail.NavigationRailLabelType.prototype;
  dart.addTypeTests(navigation_rail.NavigationRailLabelType);
  dart.addTypeCaches(navigation_rail.NavigationRailLabelType);
  dart.setLibraryUri(navigation_rail.NavigationRailLabelType, I[71]);
  dart.setFieldSignature(navigation_rail.NavigationRailLabelType, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRailLabelType.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$14]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(navigation_rail.NavigationRailLabelType, ['toString']);
  navigation_rail.NavigationRailLabelType.none = C[1567] || CT.C1567;
  navigation_rail.NavigationRailLabelType.selected = C[1598] || CT.C1598;
  navigation_rail.NavigationRailLabelType.all = C[1615] || CT.C1615;
  navigation_rail.NavigationRailLabelType.values = C[1642] || CT.C1642;
  navigation_rail.NavigationRailDestination = class NavigationRailDestination extends core.Object {
    get icon() {
      return this[S$.icon$3];
    }
    set icon(value) {
      super.icon = value;
    }
    get selectedIcon() {
      return this[S$.selectedIcon];
    }
    set selectedIcon(value) {
      super.selectedIcon = value;
    }
    get label() {
      return this[S$.label$2];
    }
    set label(value) {
      super.label = value;
    }
    get padding() {
      return this[S$.padding$6];
    }
    set padding(value) {
      super.padding = value;
    }
  };
  (navigation_rail.NavigationRailDestination.new = function(opts) {
    let t29;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[70], 820, 19, "icon");
    let selectedIcon = opts && 'selectedIcon' in opts ? opts.selectedIcon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    this[S$.icon$3] = icon;
    this[S$.label$2] = label;
    this[S$.padding$6] = padding;
    this[S$.selectedIcon] = (t29 = selectedIcon, t29 == null ? icon : t29);
    if (!(icon != null)) dart.assertFailed(null, I[70], 825, 15, "icon != null");
    ;
  }).prototype = navigation_rail.NavigationRailDestination.prototype;
  dart.addTypeTests(navigation_rail.NavigationRailDestination);
  dart.addTypeCaches(navigation_rail.NavigationRailDestination);
  dart.setLibraryUri(navigation_rail.NavigationRailDestination, I[71]);
  dart.setFieldSignature(navigation_rail.NavigationRailDestination, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRailDestination.__proto__),
    icon: dart.finalFieldType(framework.Widget),
    selectedIcon: dart.finalFieldType(framework.Widget),
    label: dart.finalFieldType(dart.nullable(framework.Widget)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry))
  }));
  navigation_rail._ExtendedNavigationRailAnimation = class _ExtendedNavigationRailAnimation extends framework.InheritedWidget {
    get animation() {
      return this[S$.animation$5];
    }
    set animation(value) {
      super.animation = value;
    }
    updateShouldNotify(old) {
      navigation_rail._ExtendedNavigationRailAnimation.as(old);
      if (old == null) dart.nullFailed(I[70], 877, 60, "old");
      return !dart.equals(this.animation, old.animation);
    }
  };
  (navigation_rail._ExtendedNavigationRailAnimation.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[70], 869, 19, "animation");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[70], 870, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.animation$5] = animation;
    if (!(child != null)) dart.assertFailed(null, I[70], 871, 15, "child != null");
    navigation_rail._ExtendedNavigationRailAnimation.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail._ExtendedNavigationRailAnimation.prototype;
  dart.addTypeTests(navigation_rail._ExtendedNavigationRailAnimation);
  dart.addTypeCaches(navigation_rail._ExtendedNavigationRailAnimation);
  dart.setMethodSignature(navigation_rail._ExtendedNavigationRailAnimation, () => ({
    __proto__: dart.getMethods(navigation_rail._ExtendedNavigationRailAnimation.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(navigation_rail._ExtendedNavigationRailAnimation, I[71]);
  dart.setFieldSignature(navigation_rail._ExtendedNavigationRailAnimation, () => ({
    __proto__: dart.getFields(navigation_rail._ExtendedNavigationRailAnimation.__proto__),
    animation: dart.finalFieldType(animation.Animation$(core.double))
  }));
  dart.defineLazy(navigation_rail, {
    /*navigation_rail._minRailWidth*/get _minRailWidth() {
      return 72;
    },
    /*navigation_rail._minExtendedRailWidth*/get _minExtendedRailWidth() {
      return 256;
    },
    /*navigation_rail._horizontalDestinationPadding*/get _horizontalDestinationPadding() {
      return 8;
    },
    /*navigation_rail._verticalDestinationPaddingNoLabel*/get _verticalDestinationPaddingNoLabel() {
      return 24;
    },
    /*navigation_rail._verticalDestinationPaddingWithLabel*/get _verticalDestinationPaddingWithLabel() {
      return 16;
    },
    /*navigation_rail._verticalSpacer*/get _verticalSpacer() {
      return C[1643] || CT.C1643;
    }
  }, false);
  const Object_Diagnosticable$36$11 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$11.new = function() {
  }).prototype = Object_Diagnosticable$36$11.prototype;
  dart.applyMixin(Object_Diagnosticable$36$11, diagnostics.Diagnosticable);
  navigation_rail_theme.NavigationRailThemeData = class NavigationRailThemeData extends Object_Diagnosticable$36$11 {
    get backgroundColor() {
      return this[S$.backgroundColor$9];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$.elevation$13];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get unselectedLabelTextStyle() {
      return this[S$.unselectedLabelTextStyle$1];
    }
    set unselectedLabelTextStyle(value) {
      super.unselectedLabelTextStyle = value;
    }
    get selectedLabelTextStyle() {
      return this[S$.selectedLabelTextStyle$1];
    }
    set selectedLabelTextStyle(value) {
      super.selectedLabelTextStyle = value;
    }
    get unselectedIconTheme() {
      return this[S$.unselectedIconTheme$1];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedIconTheme() {
      return this[S$.selectedIconTheme$1];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get groupAlignment() {
      return this[S$.groupAlignment$1];
    }
    set groupAlignment(value) {
      super.groupAlignment = value;
    }
    get labelType() {
      return this[S$.labelType$1];
    }
    set labelType(value) {
      super.labelType = value;
    }
    copyWith(opts) {
      let t29, t29$, t29$0, t29$1, t29$2, t29$3, t29$4, t29$5;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
      let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
      let labelType = opts && 'labelType' in opts ? opts.labelType : null;
      return new navigation_rail_theme.NavigationRailThemeData.new({backgroundColor: (t29 = backgroundColor, t29 == null ? this.backgroundColor : t29), elevation: (t29$ = elevation, t29$ == null ? this.elevation : t29$), unselectedLabelTextStyle: (t29$0 = unselectedLabelTextStyle, t29$0 == null ? this.unselectedLabelTextStyle : t29$0), selectedLabelTextStyle: (t29$1 = selectedLabelTextStyle, t29$1 == null ? this.selectedLabelTextStyle : t29$1), unselectedIconTheme: (t29$2 = unselectedIconTheme, t29$2 == null ? this.unselectedIconTheme : t29$2), selectedIconTheme: (t29$3 = selectedIconTheme, t29$3 == null ? this.selectedIconTheme : t29$3), groupAlignment: (t29$4 = groupAlignment, t29$4 == null ? this.groupAlignment : t29$4), labelType: (t29$5 = labelType, t29$5 == null ? this.labelType : t29$5)});
    }
    static lerp(a, b, t) {
      let t29, t29$, t29$0, t29$1, t29$2, t29$3, t29$4, t29$5, t29$6, t29$7, t29$8, t29$9, t29$10, t29$11, t29$12, t29$13;
      if (t == null) dart.nullFailed(I[72], 109, 103, "t");
      if (!(t != null)) dart.assertFailed(null, I[72], 110, 12, "t != null");
      if (a == null && b == null) return null;
      return new navigation_rail_theme.NavigationRailThemeData.new({backgroundColor: ui.Color.lerp((t29 = a, t29 == null ? null : t29.backgroundColor), (t29$ = b, t29$ == null ? null : t29$.backgroundColor), t), elevation: ui.lerpDouble((t29$0 = a, t29$0 == null ? null : t29$0.elevation), (t29$1 = b, t29$1 == null ? null : t29$1.elevation), t), unselectedLabelTextStyle: text_style.TextStyle.lerp((t29$2 = a, t29$2 == null ? null : t29$2.unselectedLabelTextStyle), (t29$3 = b, t29$3 == null ? null : t29$3.unselectedLabelTextStyle), t), selectedLabelTextStyle: text_style.TextStyle.lerp((t29$4 = a, t29$4 == null ? null : t29$4.selectedLabelTextStyle), (t29$5 = b, t29$5 == null ? null : t29$5.selectedLabelTextStyle), t), unselectedIconTheme: icon_theme_data.IconThemeData.lerp((t29$6 = a, t29$6 == null ? null : t29$6.unselectedIconTheme), (t29$7 = b, t29$7 == null ? null : t29$7.unselectedIconTheme), t), selectedIconTheme: icon_theme_data.IconThemeData.lerp((t29$8 = a, t29$8 == null ? null : t29$8.selectedIconTheme), (t29$9 = b, t29$9 == null ? null : t29$9.selectedIconTheme), t), groupAlignment: ui.lerpDouble((t29$10 = a, t29$10 == null ? null : t29$10.groupAlignment), (t29$11 = b, t29$11 == null ? null : t29$11.groupAlignment), t), labelType: dart.notNull(t) < 0.5 ? (t29$12 = a, t29$12 == null ? null : t29$12.labelType) : (t29$13 = b, t29$13 == null ? null : t29$13.labelType)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.elevation, this.unselectedLabelTextStyle, this.selectedLabelTextStyle, this.unselectedIconTheme, this.selectedIconTheme, this.groupAlignment, this.labelType);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return navigation_rail_theme.NavigationRailThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.unselectedLabelTextStyle, this.unselectedLabelTextStyle) && dart.equals(other.selectedLabelTextStyle, this.selectedLabelTextStyle) && dart.equals(other.unselectedIconTheme, this.unselectedIconTheme) && dart.equals(other.selectedIconTheme, this.selectedIconTheme) && other.groupAlignment == this.groupAlignment && other.labelType == this.labelType;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[72], 157, 56, "properties");
      super.debugFillProperties(properties);
      let defaultData = C[1647] || CT.C1647;
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: defaultData.elevation}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("unselectedLabelTextStyle", this.unselectedLabelTextStyle, {defaultValue: defaultData.unselectedLabelTextStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("selectedLabelTextStyle", this.selectedLabelTextStyle, {defaultValue: defaultData.selectedLabelTextStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("unselectedIconTheme", this.unselectedIconTheme, {defaultValue: defaultData.unselectedIconTheme}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("selectedIconTheme", this.selectedIconTheme, {defaultValue: defaultData.selectedIconTheme}));
      properties.add(new diagnostics.DoubleProperty.new("groupAlignment", this.groupAlignment, {defaultValue: defaultData.groupAlignment}));
      properties.add(new (T$.DiagnosticsPropertyOfNavigationRailLabelType()).new("labelType", this.labelType, {defaultValue: defaultData.labelType}));
    }
  };
  (navigation_rail_theme.NavigationRailThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
    let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    this[S$.backgroundColor$9] = backgroundColor;
    this[S$.elevation$13] = elevation;
    this[S$.unselectedLabelTextStyle$1] = unselectedLabelTextStyle;
    this[S$.selectedLabelTextStyle$1] = selectedLabelTextStyle;
    this[S$.unselectedIconTheme$1] = unselectedIconTheme;
    this[S$.selectedIconTheme$1] = selectedIconTheme;
    this[S$.groupAlignment$1] = groupAlignment;
    this[S$.labelType$1] = labelType;
    ;
  }).prototype = navigation_rail_theme.NavigationRailThemeData.prototype;
  dart.addTypeTests(navigation_rail_theme.NavigationRailThemeData);
  dart.addTypeCaches(navigation_rail_theme.NavigationRailThemeData);
  dart.setMethodSignature(navigation_rail_theme.NavigationRailThemeData, () => ({
    __proto__: dart.getMethods(navigation_rail_theme.NavigationRailThemeData.__proto__),
    copyWith: dart.fnType(navigation_rail_theme.NavigationRailThemeData, [], {backgroundColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), groupAlignment: dart.nullable(core.double), labelType: dart.nullable(navigation_rail.NavigationRailLabelType), selectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), selectedLabelTextStyle: dart.nullable(text_style.TextStyle), unselectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), unselectedLabelTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(navigation_rail_theme.NavigationRailThemeData, I[73]);
  dart.setFieldSignature(navigation_rail_theme.NavigationRailThemeData, () => ({
    __proto__: dart.getFields(navigation_rail_theme.NavigationRailThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    unselectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    groupAlignment: dart.finalFieldType(dart.nullable(core.double)),
    labelType: dart.finalFieldType(dart.nullable(navigation_rail.NavigationRailLabelType))
  }));
  dart.defineExtensionMethods(navigation_rail_theme.NavigationRailThemeData, ['_equals']);
  dart.defineExtensionAccessors(navigation_rail_theme.NavigationRailThemeData, ['hashCode']);
  navigation_rail_theme.NavigationRailTheme = class NavigationRailTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$10];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t29, t29$;
      if (context == null) dart.nullFailed(I[72], 203, 50, "context");
      let navigationRailTheme = context.dependOnInheritedWidgetOfExactType(navigation_rail_theme.NavigationRailTheme);
      t29$ = (t29 = navigationRailTheme, t29 == null ? null : t29.data);
      return t29$ == null ? theme$.Theme.of(context).navigationRailTheme : t29$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[72], 209, 28, "context");
      if (child == null) dart.nullFailed(I[72], 209, 44, "child");
      return new navigation_rail_theme.NavigationRailTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1648] || CT.C1648});
    }
    updateShouldNotify(oldWidget) {
      navigation_rail_theme.NavigationRailTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[72], 214, 47, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (navigation_rail_theme.NavigationRailTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[72], 184, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[72], 185, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$10] = data;
    if (!(data != null)) dart.assertFailed(null, I[72], 186, 15, "data != null");
    navigation_rail_theme.NavigationRailTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail_theme.NavigationRailTheme.prototype;
  dart.addTypeTests(navigation_rail_theme.NavigationRailTheme);
  dart.addTypeCaches(navigation_rail_theme.NavigationRailTheme);
  dart.setMethodSignature(navigation_rail_theme.NavigationRailTheme, () => ({
    __proto__: dart.getMethods(navigation_rail_theme.NavigationRailTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(navigation_rail_theme.NavigationRailTheme, I[73]);
  dart.setFieldSignature(navigation_rail_theme.NavigationRailTheme, () => ({
    __proto__: dart.getFields(navigation_rail_theme.NavigationRailTheme.__proto__),
    data: dart.finalFieldType(navigation_rail_theme.NavigationRailThemeData)
  }));
  input_decorator._InputBorderGap = class _InputBorderGap extends change_notifier.ChangeNotifier {
    get start() {
      return this[S$._start];
    }
    set start(value) {
      if (value != this[S$._start]) {
        this[S$._start] = value;
        this.notifyListeners();
      }
    }
    get extent() {
      return this[S$._extent];
    }
    set extent(value) {
      if (value == null) dart.nullFailed(I[74], 36, 21, "value");
      if (value != this[S$._extent]) {
        this[S$._extent] = value;
        this.notifyListeners();
      }
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return input_decorator._InputBorderGap.is(other) && other.start == this.start && other.extent == this.extent;
    }
    get hashCode() {
      return ui.hashValues(this.start, this.extent);
    }
  };
  (input_decorator._InputBorderGap.new = function() {
    this[S$._start] = null;
    this[S$._extent] = 0.0;
    input_decorator._InputBorderGap.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._InputBorderGap.prototype;
  dart.addTypeTests(input_decorator._InputBorderGap);
  dart.addTypeCaches(input_decorator._InputBorderGap);
  dart.setGetterSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getGetters(input_decorator._InputBorderGap.__proto__),
    start: dart.nullable(core.double),
    extent: core.double
  }));
  dart.setSetterSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getSetters(input_decorator._InputBorderGap.__proto__),
    start: dart.nullable(core.double),
    extent: core.double
  }));
  dart.setLibraryUri(input_decorator._InputBorderGap, I[75]);
  dart.setFieldSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getFields(input_decorator._InputBorderGap.__proto__),
    [S$._start]: dart.fieldType(dart.nullable(core.double)),
    [S$._extent]: dart.fieldType(core.double)
  }));
  dart.defineExtensionMethods(input_decorator._InputBorderGap, ['_equals']);
  dart.defineExtensionAccessors(input_decorator._InputBorderGap, ['hashCode']);
  input_decorator._InputBorderTween = class _InputBorderTween extends tween.Tween$(input_border.InputBorder) {
    lerp(t) {
      if (t == null) dart.nullFailed(I[74], 65, 27, "t");
      return input_border.InputBorder.as(dart.nullCheck(borders.ShapeBorder.lerp(this.begin, this.end, t)));
    }
  };
  (input_decorator._InputBorderTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    input_decorator._InputBorderTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = input_decorator._InputBorderTween.prototype;
  dart.addTypeTests(input_decorator._InputBorderTween);
  dart.addTypeCaches(input_decorator._InputBorderTween);
  dart.setLibraryUri(input_decorator._InputBorderTween, I[75]);
  input_decorator._InputBorderPainter = class _InputBorderPainter extends custom_paint.CustomPainter {
    get blendedColor() {
      return ui.Color.alphaBlend(dart.nullCheck(this.hoverColorTween.evaluate(this.hoverAnimation)), this.fillColor);
    }
    paint(canvas, size) {
      let t29;
      if (canvas == null) dart.nullFailed(I[74], 94, 21, "canvas");
      if (size == null) dart.nullFailed(I[74], 94, 34, "size");
      let borderValue = this.border.evaluate(this.borderAnimation);
      let canvasRect = ui.Offset.zero['&'](size);
      let blendedFillColor = this.blendedColor;
      if (dart.notNull(blendedFillColor.alpha) > 0) {
        canvas.drawPath(borderValue.getOuterPath(canvasRect, {textDirection: this.textDirection}), (t29 = ui.Paint.new(), (() => {
          t29.color = blendedFillColor;
          t29.style = ui.PaintingStyle.fill;
          return t29;
        })()));
      }
      borderValue.paint(canvas, canvasRect, {gapStart: this.gap.start, gapExtent: this.gap.extent, gapPercentage: this.gapAnimation.value, textDirection: this.textDirection});
    }
    shouldRepaint(oldPainter) {
      input_decorator._InputBorderPainter.as(oldPainter);
      if (oldPainter == null) dart.nullFailed(I[74], 118, 42, "oldPainter");
      return !dart.equals(this.borderAnimation, oldPainter.borderAnimation) || !dart.equals(this.hoverAnimation, oldPainter.hoverAnimation) || !dart.equals(this.gapAnimation, oldPainter.gapAnimation) || !dart.equals(this.border, oldPainter.border) || !dart.equals(this.gap, oldPainter.gap) || this.textDirection != oldPainter.textDirection;
    }
  };
  (input_decorator._InputBorderPainter.new = function(opts) {
    let repaint = opts && 'repaint' in opts ? opts.repaint : null;
    if (repaint == null) dart.nullFailed(I[74], 71, 25, "repaint");
    let borderAnimation = opts && 'borderAnimation' in opts ? opts.borderAnimation : null;
    if (borderAnimation == null) dart.nullFailed(I[74], 72, 19, "borderAnimation");
    let border = opts && 'border' in opts ? opts.border : null;
    if (border == null) dart.nullFailed(I[74], 73, 19, "border");
    let gapAnimation = opts && 'gapAnimation' in opts ? opts.gapAnimation : null;
    if (gapAnimation == null) dart.nullFailed(I[74], 74, 19, "gapAnimation");
    let gap = opts && 'gap' in opts ? opts.gap : null;
    if (gap == null) dart.nullFailed(I[74], 75, 19, "gap");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[74], 76, 19, "textDirection");
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    if (fillColor == null) dart.nullFailed(I[74], 77, 19, "fillColor");
    let hoverAnimation = opts && 'hoverAnimation' in opts ? opts.hoverAnimation : null;
    if (hoverAnimation == null) dart.nullFailed(I[74], 78, 19, "hoverAnimation");
    let hoverColorTween = opts && 'hoverColorTween' in opts ? opts.hoverColorTween : null;
    if (hoverColorTween == null) dart.nullFailed(I[74], 79, 19, "hoverColorTween");
    this.borderAnimation = borderAnimation;
    this.border = border;
    this.gapAnimation = gapAnimation;
    this.gap = gap;
    this.textDirection = textDirection;
    this.fillColor = fillColor;
    this.hoverAnimation = hoverAnimation;
    this.hoverColorTween = hoverColorTween;
    input_decorator._InputBorderPainter.__proto__.new.call(this, {repaint: repaint});
    ;
  }).prototype = input_decorator._InputBorderPainter.prototype;
  dart.addTypeTests(input_decorator._InputBorderPainter);
  dart.addTypeCaches(input_decorator._InputBorderPainter);
  dart.setMethodSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getMethods(input_decorator._InputBorderPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getGetters(input_decorator._InputBorderPainter.__proto__),
    blendedColor: ui.Color
  }));
  dart.setLibraryUri(input_decorator._InputBorderPainter, I[75]);
  dart.setFieldSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getFields(input_decorator._InputBorderPainter.__proto__),
    borderAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    border: dart.finalFieldType(input_decorator._InputBorderTween),
    gapAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    gap: dart.finalFieldType(input_decorator._InputBorderGap),
    textDirection: dart.finalFieldType(ui.TextDirection),
    fillColor: dart.finalFieldType(ui.Color),
    hoverColorTween: dart.finalFieldType(tween.ColorTween),
    hoverAnimation: dart.finalFieldType(animation.Animation$(core.double))
  }));
  input_decorator._BorderContainer = class _BorderContainer extends framework.StatefulWidget {
    get border() {
      return this[S$.border];
    }
    set border(value) {
      super.border = value;
    }
    get gap() {
      return this[S$.gap];
    }
    set gap(value) {
      super.gap = value;
    }
    get gapAnimation() {
      return this[S$.gapAnimation];
    }
    set gapAnimation(value) {
      super.gapAnimation = value;
    }
    get fillColor() {
      return this[S$.fillColor$3];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$7];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get isHovering() {
      return this[S$.isHovering];
    }
    set isHovering(value) {
      super.isHovering = value;
    }
    get child() {
      return this[S$.child$15];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new input_decorator._BorderContainerState.new();
    }
  };
  (input_decorator._BorderContainer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let border = opts && 'border' in opts ? opts.border : null;
    if (border == null) dart.nullFailed(I[74], 135, 19, "border");
    let gap = opts && 'gap' in opts ? opts.gap : null;
    if (gap == null) dart.nullFailed(I[74], 136, 19, "gap");
    let gapAnimation = opts && 'gapAnimation' in opts ? opts.gapAnimation : null;
    if (gapAnimation == null) dart.nullFailed(I[74], 137, 19, "gapAnimation");
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    if (fillColor == null) dart.nullFailed(I[74], 138, 19, "fillColor");
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    if (hoverColor == null) dart.nullFailed(I[74], 139, 19, "hoverColor");
    let isHovering = opts && 'isHovering' in opts ? opts.isHovering : null;
    if (isHovering == null) dart.nullFailed(I[74], 140, 19, "isHovering");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.border] = border;
    this[S$.gap] = gap;
    this[S$.gapAnimation] = gapAnimation;
    this[S$.fillColor$3] = fillColor;
    this[S$.hoverColor$7] = hoverColor;
    this[S$.isHovering] = isHovering;
    this[S$.child$15] = child;
    if (!(border != null)) dart.assertFailed(null, I[74], 142, 15, "border != null");
    if (!(gap != null)) dart.assertFailed(null, I[74], 143, 15, "gap != null");
    if (!(fillColor != null)) dart.assertFailed(null, I[74], 144, 15, "fillColor != null");
    input_decorator._BorderContainer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._BorderContainer.prototype;
  dart.addTypeTests(input_decorator._BorderContainer);
  dart.addTypeCaches(input_decorator._BorderContainer);
  dart.setMethodSignature(input_decorator._BorderContainer, () => ({
    __proto__: dart.getMethods(input_decorator._BorderContainer.__proto__),
    createState: dart.fnType(input_decorator._BorderContainerState, [])
  }));
  dart.setLibraryUri(input_decorator._BorderContainer, I[75]);
  dart.setFieldSignature(input_decorator._BorderContainer, () => ({
    __proto__: dart.getFields(input_decorator._BorderContainer.__proto__),
    border: dart.finalFieldType(input_border.InputBorder),
    gap: dart.finalFieldType(input_decorator._InputBorderGap),
    gapAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    fillColor: dart.finalFieldType(ui.Color),
    hoverColor: dart.finalFieldType(ui.Color),
    isHovering: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const State_TickerProviderStateMixin$36$0 = class State_TickerProviderStateMixin extends framework.State$(input_decorator._BorderContainer) {};
  (State_TickerProviderStateMixin$36$0.new = function() {
    ticker_provider.TickerProviderStateMixin$(input_decorator._BorderContainer)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$0, ticker_provider.TickerProviderStateMixin$(input_decorator._BorderContainer));
  input_decorator._BorderContainerState = class _BorderContainerState extends State_TickerProviderStateMixin$36$0 {
    get [S$._controller$5]() {
      let t29;
      return dart.test(this[S$.___BorderContainerState__controller_isSet]) ? (t29 = this[S$.___BorderContainerState__controller], t29) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S$._controller$5](t29) {
      if (t29 == null) dart.nullFailed(I[74], 162, 28, "null");
      this[S$.___BorderContainerState__controller_isSet] = true;
      this[S$.___BorderContainerState__controller] = t29;
    }
    get [S$._hoverColorController]() {
      let t30;
      return dart.test(this[S$.___BorderContainerState__hoverColorController_isSet]) ? (t30 = this[S$.___BorderContainerState__hoverColorController], t30) : dart.throw(new _internal.LateError.fieldNI("_hoverColorController"));
    }
    set [S$._hoverColorController](t30) {
      if (t30 == null) dart.nullFailed(I[74], 163, 28, "null");
      this[S$.___BorderContainerState__hoverColorController_isSet] = true;
      this[S$.___BorderContainerState__hoverColorController] = t30;
    }
    get [S$._borderAnimation]() {
      let t31;
      return dart.test(this[S$.___BorderContainerState__borderAnimation_isSet]) ? (t31 = this[S$.___BorderContainerState__borderAnimation], t31) : dart.throw(new _internal.LateError.fieldNI("_borderAnimation"));
    }
    set [S$._borderAnimation](t31) {
      if (t31 == null) dart.nullFailed(I[74], 164, 26, "null");
      this[S$.___BorderContainerState__borderAnimation_isSet] = true;
      this[S$.___BorderContainerState__borderAnimation] = t31;
    }
    get [S$._border]() {
      let t32;
      return dart.test(this[S$.___BorderContainerState__border_isSet]) ? (t32 = this[S$.___BorderContainerState__border], t32) : dart.throw(new _internal.LateError.fieldNI("_border"));
    }
    set [S$._border](t32) {
      if (t32 == null) dart.nullFailed(I[74], 165, 26, "null");
      this[S$.___BorderContainerState__border_isSet] = true;
      this[S$.___BorderContainerState__border] = t32;
    }
    get [S$._hoverAnimation]() {
      let t33;
      return dart.test(this[S$.___BorderContainerState__hoverAnimation_isSet]) ? (t33 = this[S$.___BorderContainerState__hoverAnimation], t33) : dart.throw(new _internal.LateError.fieldNI("_hoverAnimation"));
    }
    set [S$._hoverAnimation](t33) {
      if (t33 == null) dart.nullFailed(I[74], 166, 26, "null");
      this[S$.___BorderContainerState__hoverAnimation_isSet] = true;
      this[S$.___BorderContainerState__hoverAnimation] = t33;
    }
    get [S$._hoverColorTween]() {
      let t34;
      return dart.test(this[S$.___BorderContainerState__hoverColorTween_isSet]) ? (t34 = this[S$.___BorderContainerState__hoverColorTween], t34) : dart.throw(new _internal.LateError.fieldNI("_hoverColorTween"));
    }
    set [S$._hoverColorTween](t34) {
      if (t34 == null) dart.nullFailed(I[74], 167, 19, "null");
      this[S$.___BorderContainerState__hoverColorTween_isSet] = true;
      this[S$.___BorderContainerState__hoverColorTween] = t34;
    }
    initState() {
      super.initState();
      this[S$._hoverColorController] = new animation_controller.AnimationController.new({duration: input_decorator._BorderContainerState._kHoverDuration, value: dart.test(this.widget.isHovering) ? 1.0 : 0.0, vsync: this});
      this[S$._controller$5] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
      this[S$._borderAnimation] = new animations.CurvedAnimation.new({parent: this[S$._controller$5], curve: input_decorator._kTransitionCurve});
      this[S$._border] = new input_decorator._InputBorderTween.new({begin: this.widget.border, end: this.widget.border});
      this[S$._hoverAnimation] = new animations.CurvedAnimation.new({parent: this[S$._hoverColorController], curve: curves.Curves.linear});
      this[S$._hoverColorTween] = new tween.ColorTween.new({begin: colors$.Colors.transparent, end: this.widget.hoverColor});
    }
    dispose() {
      this[S$._controller$5].dispose();
      this[S$._hoverColorController].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      let t35;
      input_decorator._BorderContainer.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[74], 204, 41, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.border, oldWidget.border)) {
        this[S$._border] = new input_decorator._InputBorderTween.new({begin: oldWidget.border, end: this.widget.border});
        t35 = this[S$._controller$5];
        (() => {
          t35.value = 0.0;
          t35.forward();
          return t35;
        })();
      }
      if (!dart.equals(this.widget.hoverColor, oldWidget.hoverColor)) {
        this[S$._hoverColorTween] = new tween.ColorTween.new({begin: colors$.Colors.transparent, end: this.widget.hoverColor});
      }
      if (this.widget.isHovering != oldWidget.isHovering) {
        if (dart.test(this.widget.isHovering)) {
          this[S$._hoverColorController].forward();
        } else {
          this[S$._hoverColorController].reverse();
        }
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[74], 228, 29, "context");
      return new basic.CustomPaint.new({foregroundPainter: new input_decorator._InputBorderPainter.new({repaint: new change_notifier._MergingListenable.new(T$.JSArrayOfListenable().of([this[S$._borderAnimation], this.widget.gap, this[S$._hoverColorController]])), borderAnimation: this[S$._borderAnimation], border: this[S$._border], gapAnimation: this.widget.gapAnimation, gap: this.widget.gap, textDirection: basic.Directionality.of(context), fillColor: this.widget.fillColor, hoverColorTween: this[S$._hoverColorTween], hoverAnimation: this[S$._hoverAnimation]}), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[1652] || CT.C1652});
    }
  };
  (input_decorator._BorderContainerState.new = function() {
    this[S$.___BorderContainerState__controller] = null;
    this[S$.___BorderContainerState__controller_isSet] = false;
    this[S$.___BorderContainerState__hoverColorController] = null;
    this[S$.___BorderContainerState__hoverColorController_isSet] = false;
    this[S$.___BorderContainerState__borderAnimation] = null;
    this[S$.___BorderContainerState__borderAnimation_isSet] = false;
    this[S$.___BorderContainerState__border] = null;
    this[S$.___BorderContainerState__border_isSet] = false;
    this[S$.___BorderContainerState__hoverAnimation] = null;
    this[S$.___BorderContainerState__hoverAnimation_isSet] = false;
    this[S$.___BorderContainerState__hoverColorTween] = null;
    this[S$.___BorderContainerState__hoverColorTween_isSet] = false;
    input_decorator._BorderContainerState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._BorderContainerState.prototype;
  dart.addTypeTests(input_decorator._BorderContainerState);
  dart.addTypeCaches(input_decorator._BorderContainerState);
  dart.setMethodSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getMethods(input_decorator._BorderContainerState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getGetters(input_decorator._BorderContainerState.__proto__),
    [S$._controller$5]: animation_controller.AnimationController,
    [S$._hoverColorController]: animation_controller.AnimationController,
    [S$._borderAnimation]: animation.Animation$(core.double),
    [S$._border]: input_decorator._InputBorderTween,
    [S$._hoverAnimation]: animation.Animation$(core.double),
    [S$._hoverColorTween]: tween.ColorTween
  }));
  dart.setSetterSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getSetters(input_decorator._BorderContainerState.__proto__),
    [S$._controller$5]: animation_controller.AnimationController,
    [S$._hoverColorController]: animation_controller.AnimationController,
    [S$._borderAnimation]: animation.Animation$(core.double),
    [S$._border]: input_decorator._InputBorderTween,
    [S$._hoverAnimation]: animation.Animation$(core.double),
    [S$._hoverColorTween]: tween.ColorTween
  }));
  dart.setLibraryUri(input_decorator._BorderContainerState, I[75]);
  dart.setFieldSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getFields(input_decorator._BorderContainerState.__proto__),
    [S$.___BorderContainerState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___BorderContainerState__controller_isSet]: dart.fieldType(core.bool),
    [S$.___BorderContainerState__hoverColorController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___BorderContainerState__hoverColorController_isSet]: dart.fieldType(core.bool),
    [S$.___BorderContainerState__borderAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$.___BorderContainerState__borderAnimation_isSet]: dart.fieldType(core.bool),
    [S$.___BorderContainerState__border]: dart.fieldType(dart.nullable(input_decorator._InputBorderTween)),
    [S$.___BorderContainerState__border_isSet]: dart.fieldType(core.bool),
    [S$.___BorderContainerState__hoverAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$.___BorderContainerState__hoverAnimation_isSet]: dart.fieldType(core.bool),
    [S$.___BorderContainerState__hoverColorTween]: dart.fieldType(dart.nullable(tween.ColorTween)),
    [S$.___BorderContainerState__hoverColorTween_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(input_decorator._BorderContainerState, {
    /*input_decorator._BorderContainerState._kHoverDuration*/get _kHoverDuration() {
      return C[1656] || CT.C1656;
    }
  }, false);
  input_decorator._Shaker = class _Shaker extends transitions.AnimatedWidget {
    get child() {
      return this[S$.child$16];
    }
    set child(value) {
      super.child = value;
    }
    get animation() {
      return T$.AnimationOfdouble().as(this.listenable);
    }
    get translateX() {
      let t = this.animation.value;
      if (dart.notNull(t) <= 0.25)
        return -dart.notNull(t) * 4;
      else if (dart.notNull(t) < 0.75)
        return (dart.notNull(t) - 0.5) * 4;
      else
        return (1.0 - dart.notNull(t)) * 4.0 * 4;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[74], 275, 29, "context");
      return new basic.Transform.new({transform: vector_math_64.Matrix4.translationValues(this.translateX, 0.0, 0.0), child: this.child, $creationLocationd_0dea112b090073317d4: C[1657] || CT.C1657});
    }
  };
  (input_decorator._Shaker.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[74], 255, 32, "animation");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.child$16] = child;
    input_decorator._Shaker.__proto__.new.call(this, {key: key, listenable: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._Shaker.prototype;
  dart.addTypeTests(input_decorator._Shaker);
  dart.addTypeCaches(input_decorator._Shaker);
  dart.setMethodSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getMethods(input_decorator._Shaker.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getGetters(input_decorator._Shaker.__proto__),
    animation: animation.Animation$(core.double),
    translateX: core.double
  }));
  dart.setLibraryUri(input_decorator._Shaker, I[75]);
  dart.setFieldSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getFields(input_decorator._Shaker.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  input_decorator._HelperError = class _HelperError extends framework.StatefulWidget {
    get textAlign() {
      return this[S$.textAlign];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get helperText() {
      return this[S$.helperText];
    }
    set helperText(value) {
      super.helperText = value;
    }
    get helperStyle() {
      return this[S$.helperStyle];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[S$.helperMaxLines];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get errorText() {
      return this[S$.errorText];
    }
    set errorText(value) {
      super.errorText = value;
    }
    get errorStyle() {
      return this[S$.errorStyle];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[S$.errorMaxLines];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    createState() {
      return new input_decorator._HelperErrorState.new();
    }
  };
  (input_decorator._HelperError.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let helperText = opts && 'helperText' in opts ? opts.helperText : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let errorText = opts && 'errorText' in opts ? opts.errorText : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.textAlign] = textAlign;
    this[S$.helperText] = helperText;
    this[S$.helperStyle] = helperStyle;
    this[S$.helperMaxLines] = helperMaxLines;
    this[S$.errorText] = errorText;
    this[S$.errorStyle] = errorStyle;
    this[S$.errorMaxLines] = errorMaxLines;
    input_decorator._HelperError.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._HelperError.prototype;
  dart.addTypeTests(input_decorator._HelperError);
  dart.addTypeCaches(input_decorator._HelperError);
  dart.setMethodSignature(input_decorator._HelperError, () => ({
    __proto__: dart.getMethods(input_decorator._HelperError.__proto__),
    createState: dart.fnType(input_decorator._HelperErrorState, [])
  }));
  dart.setLibraryUri(input_decorator._HelperError, I[75]);
  dart.setFieldSignature(input_decorator._HelperError, () => ({
    __proto__: dart.getFields(input_decorator._HelperError.__proto__),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    helperText: dart.finalFieldType(dart.nullable(core.String)),
    helperStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    errorText: dart.finalFieldType(dart.nullable(core.String)),
    errorStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.nullable(core.int))
  }));
  const State_SingleTickerProviderStateMixin$36$0 = class State_SingleTickerProviderStateMixin extends framework.State$(input_decorator._HelperError) {};
  (State_SingleTickerProviderStateMixin$36$0.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(input_decorator._HelperError)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$0, ticker_provider.SingleTickerProviderStateMixin$(input_decorator._HelperError));
  input_decorator._HelperErrorState = class _HelperErrorState extends State_SingleTickerProviderStateMixin$36$0 {
    get [S$._controller$5]() {
      let t35;
      return dart.test(this[S$.___HelperErrorState__controller_isSet]) ? (t35 = this[S$.___HelperErrorState__controller], t35) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S$._controller$5](t35) {
      if (t35 == null) dart.nullFailed(I[74], 315, 28, "null");
      this[S$.___HelperErrorState__controller_isSet] = true;
      this[S$.___HelperErrorState__controller] = t35;
    }
    initState() {
      super.initState();
      this[S$._controller$5] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
      if (this.widget.errorText != null) {
        this[S$._error] = this[S$._buildError]();
        this[S$._controller$5].value = 1.0;
      } else if (this.widget.helperText != null) {
        this[S$._helper] = this[S$._buildHelper]();
      }
      this[S$._controller$5].addListener(dart.bind(this, S$._handleChange));
    }
    dispose() {
      this[S$._controller$5].dispose();
      super.dispose();
    }
    [S$._handleChange]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    didUpdateWidget(old) {
      input_decorator._HelperError.as(old);
      if (old == null) dart.nullFailed(I[74], 348, 37, "old");
      super.didUpdateWidget(old);
      let newErrorText = this.widget.errorText;
      let newHelperText = this.widget.helperText;
      let oldErrorText = old.errorText;
      let oldHelperText = old.helperText;
      let errorTextStateChanged = newErrorText != null !== (oldErrorText != null);
      let helperTextStateChanged = newErrorText == null && newHelperText != null !== (oldHelperText != null);
      if (errorTextStateChanged || helperTextStateChanged) {
        if (newErrorText != null) {
          this[S$._error] = this[S$._buildError]();
          this[S$._controller$5].forward();
        } else if (newHelperText != null) {
          this[S$._helper] = this[S$._buildHelper]();
          this[S$._controller$5].reverse();
        } else {
          this[S$._controller$5].reverse();
        }
      }
    }
    [S$._buildHelper]() {
      if (!(this.widget.helperText != null)) dart.assertFailed(null, I[74], 373, 12, "widget.helperText != null");
      return new basic.Semantics.new({container: true, child: new basic.Opacity.new({opacity: 1.0 - dart.notNull(this[S$._controller$5].value), child: new text$.Text.new(dart.nullCheck(this.widget.helperText), {style: this.widget.helperStyle, textAlign: this.widget.textAlign, overflow: paragraph.TextOverflow.ellipsis, maxLines: this.widget.helperMaxLines, $creationLocationd_0dea112b090073317d4: C[1661] || CT.C1661}), $creationLocationd_0dea112b090073317d4: C[1668] || CT.C1668}), $creationLocationd_0dea112b090073317d4: C[1672] || CT.C1672});
    }
    [S$._buildError]() {
      if (!(this.widget.errorText != null)) dart.assertFailed(null, I[74], 390, 12, "widget.errorText != null");
      return new basic.Semantics.new({container: true, liveRegion: true, child: new basic.Opacity.new({opacity: this[S$._controller$5].value, child: new basic.FractionalTranslation.new({translation: new (T$.TweenOfOffset()).new({begin: C[1676] || CT.C1676, end: ui.Offset.zero}).evaluate(this[S$._controller$5].view), child: new text$.Text.new(dart.nullCheck(this.widget.errorText), {style: this.widget.errorStyle, textAlign: this.widget.textAlign, overflow: paragraph.TextOverflow.ellipsis, maxLines: this.widget.errorMaxLines, $creationLocationd_0dea112b090073317d4: C[1677] || CT.C1677}), $creationLocationd_0dea112b090073317d4: C[1684] || CT.C1684}), $creationLocationd_0dea112b090073317d4: C[1688] || CT.C1688}), $creationLocationd_0dea112b090073317d4: C[1692] || CT.C1692});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[74], 414, 29, "context");
      if (dart.test(this[S$._controller$5].isDismissed)) {
        this[S$._error] = null;
        if (this.widget.helperText != null) {
          return this[S$._helper] = this[S$._buildHelper]();
        } else {
          this[S$._helper] = null;
          return input_decorator._HelperErrorState.empty;
        }
      }
      if (dart.test(this[S$._controller$5].isCompleted)) {
        this[S$._helper] = null;
        if (this.widget.errorText != null) {
          return this[S$._error] = this[S$._buildError]();
        } else {
          this[S$._error] = null;
          return input_decorator._HelperErrorState.empty;
        }
      }
      if (this[S$._helper] == null && this.widget.errorText != null) return this[S$._buildError]();
      if (this[S$._error] == null && this.widget.helperText != null) return this[S$._buildHelper]();
      if (this.widget.errorText != null) {
        return new basic.Stack.new({children: T$.JSArrayOfWidget().of([new basic.Opacity.new({opacity: 1.0 - dart.notNull(this[S$._controller$5].value), child: this[S$._helper], $creationLocationd_0dea112b090073317d4: C[1696] || CT.C1696}), this[S$._buildError]()]), $creationLocationd_0dea112b090073317d4: C[1700] || CT.C1700});
      }
      if (this.widget.helperText != null) {
        return new basic.Stack.new({children: T$.JSArrayOfWidget().of([this[S$._buildHelper](), new basic.Opacity.new({opacity: this[S$._controller$5].value, child: this[S$._error], $creationLocationd_0dea112b090073317d4: C[1703] || CT.C1703})]), $creationLocationd_0dea112b090073317d4: C[1707] || CT.C1707});
      }
      return input_decorator._HelperErrorState.empty;
    }
  };
  (input_decorator._HelperErrorState.new = function() {
    this[S$.___HelperErrorState__controller] = null;
    this[S$.___HelperErrorState__controller_isSet] = false;
    this[S$._helper] = null;
    this[S$._error] = null;
    input_decorator._HelperErrorState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._HelperErrorState.prototype;
  dart.addTypeTests(input_decorator._HelperErrorState);
  dart.addTypeCaches(input_decorator._HelperErrorState);
  dart.setMethodSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getMethods(input_decorator._HelperErrorState.__proto__),
    [S$._handleChange]: dart.fnType(dart.void, []),
    [S$._buildHelper]: dart.fnType(framework.Widget, []),
    [S$._buildError]: dart.fnType(framework.Widget, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getGetters(input_decorator._HelperErrorState.__proto__),
    [S$._controller$5]: animation_controller.AnimationController
  }));
  dart.setSetterSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getSetters(input_decorator._HelperErrorState.__proto__),
    [S$._controller$5]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(input_decorator._HelperErrorState, I[75]);
  dart.setFieldSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getFields(input_decorator._HelperErrorState.__proto__),
    [S$.___HelperErrorState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___HelperErrorState__controller_isSet]: dart.fieldType(core.bool),
    [S$._helper]: dart.fieldType(dart.nullable(framework.Widget)),
    [S$._error]: dart.fieldType(dart.nullable(framework.Widget))
  }));
  dart.defineLazy(input_decorator._HelperErrorState, {
    /*input_decorator._HelperErrorState.empty*/get empty() {
      return C[1710] || CT.C1710;
    }
  }, false);
  input_decorator.FloatingLabelBehavior = class FloatingLabelBehavior extends core.Object {
    toString() {
      return this[S$._name$15];
    }
  };
  (input_decorator.FloatingLabelBehavior.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[74], 470, 6, "index");
    if (_name == null) dart.nullFailed(I[74], 470, 6, "_name");
    this.index = index;
    this[S$._name$15] = _name;
    ;
  }).prototype = input_decorator.FloatingLabelBehavior.prototype;
  dart.addTypeTests(input_decorator.FloatingLabelBehavior);
  dart.addTypeCaches(input_decorator.FloatingLabelBehavior);
  dart.setLibraryUri(input_decorator.FloatingLabelBehavior, I[75]);
  dart.setFieldSignature(input_decorator.FloatingLabelBehavior, () => ({
    __proto__: dart.getFields(input_decorator.FloatingLabelBehavior.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$15]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(input_decorator.FloatingLabelBehavior, ['toString']);
  input_decorator.FloatingLabelBehavior.never = C[1712] || CT.C1712;
  input_decorator.FloatingLabelBehavior.auto = C[1713] || CT.C1713;
  input_decorator.FloatingLabelBehavior.always = C[1714] || CT.C1714;
  input_decorator.FloatingLabelBehavior.values = C[1715] || CT.C1715;
  input_decorator._DecorationSlot = class _DecorationSlot extends core.Object {
    toString() {
      return this[S$._name$15];
    }
  };
  (input_decorator._DecorationSlot.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[74], 480, 6, "index");
    if (_name == null) dart.nullFailed(I[74], 480, 6, "_name");
    this.index = index;
    this[S$._name$15] = _name;
    ;
  }).prototype = input_decorator._DecorationSlot.prototype;
  dart.addTypeTests(input_decorator._DecorationSlot);
  dart.addTypeCaches(input_decorator._DecorationSlot);
  dart.setLibraryUri(input_decorator._DecorationSlot, I[75]);
  dart.setFieldSignature(input_decorator._DecorationSlot, () => ({
    __proto__: dart.getFields(input_decorator._DecorationSlot.__proto__),
    index: dart.finalFieldType(core.int),
    [S$._name$15]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(input_decorator._DecorationSlot, ['toString']);
  input_decorator._DecorationSlot.icon = C[1716] || CT.C1716;
  input_decorator._DecorationSlot.input = C[1717] || CT.C1717;
  input_decorator._DecorationSlot.label = C[1718] || CT.C1718;
  input_decorator._DecorationSlot.hint = C[1719] || CT.C1719;
  input_decorator._DecorationSlot.prefix = C[1720] || CT.C1720;
  input_decorator._DecorationSlot.suffix = C[1721] || CT.C1721;
  input_decorator._DecorationSlot.prefixIcon = C[1722] || CT.C1722;
  input_decorator._DecorationSlot.suffixIcon = C[1723] || CT.C1723;
  input_decorator._DecorationSlot.helperError = C[1724] || CT.C1724;
  input_decorator._DecorationSlot.counter = C[1725] || CT.C1725;
  input_decorator._DecorationSlot.container = C[1726] || CT.C1726;
  input_decorator._DecorationSlot.values = C[1727] || CT.C1727;
  input_decorator._Decoration = class _Decoration extends core.Object {
    get contentPadding() {
      return this[S$.contentPadding$4];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[S$.isCollapsed];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get floatingLabelHeight() {
      return this[S$.floatingLabelHeight];
    }
    set floatingLabelHeight(value) {
      super.floatingLabelHeight = value;
    }
    get floatingLabelProgress() {
      return this[S$.floatingLabelProgress];
    }
    set floatingLabelProgress(value) {
      super.floatingLabelProgress = value;
    }
    get border() {
      return this[S$.border$1];
    }
    set border(value) {
      super.border = value;
    }
    get borderGap() {
      return this[S$.borderGap];
    }
    set borderGap(value) {
      super.borderGap = value;
    }
    get alignLabelWithHint() {
      return this[S$.alignLabelWithHint];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    get isDense() {
      return this[S$.isDense$1];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get visualDensity() {
      return this[S$.visualDensity$7];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get icon() {
      return this[S$.icon$4];
    }
    set icon(value) {
      super.icon = value;
    }
    get input() {
      return this[S$.input];
    }
    set input(value) {
      super.input = value;
    }
    get label() {
      return this[S$.label$3];
    }
    set label(value) {
      super.label = value;
    }
    get hint() {
      return this[S$.hint];
    }
    set hint(value) {
      super.hint = value;
    }
    get prefix() {
      return this[S$.prefix];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get suffix() {
      return this[S$.suffix];
    }
    set suffix(value) {
      super.suffix = value;
    }
    get prefixIcon() {
      return this[S$.prefixIcon];
    }
    set prefixIcon(value) {
      super.prefixIcon = value;
    }
    get suffixIcon() {
      return this[S$.suffixIcon];
    }
    set suffixIcon(value) {
      super.suffixIcon = value;
    }
    get helperError() {
      return this[S$.helperError];
    }
    set helperError(value) {
      super.helperError = value;
    }
    get counter() {
      return this[S$.counter];
    }
    set counter(value) {
      super.counter = value;
    }
    get container() {
      return this[S$.container];
    }
    set container(value) {
      super.container = value;
    }
    get fixTextFieldOutlineLabel() {
      return this[S$.fixTextFieldOutlineLabel];
    }
    set fixTextFieldOutlineLabel(value) {
      super.fixTextFieldOutlineLabel = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return input_decorator._Decoration.is(other) && dart.equals(other.contentPadding, this.contentPadding) && other.isCollapsed == this.isCollapsed && other.floatingLabelHeight == this.floatingLabelHeight && other.floatingLabelProgress == this.floatingLabelProgress && dart.equals(other.border, this.border) && dart.equals(other.borderGap, this.borderGap) && other.alignLabelWithHint == this.alignLabelWithHint && other.isDense == this.isDense && dart.equals(other.visualDensity, this.visualDensity) && dart.equals(other.icon, this.icon) && dart.equals(other.input, this.input) && dart.equals(other.label, this.label) && dart.equals(other.hint, this.hint) && dart.equals(other.prefix, this.prefix) && dart.equals(other.suffix, this.suffix) && dart.equals(other.prefixIcon, this.prefixIcon) && dart.equals(other.suffixIcon, this.suffixIcon) && dart.equals(other.helperError, this.helperError) && dart.equals(other.counter, this.counter) && dart.equals(other.container, this.container) && other.fixTextFieldOutlineLabel == this.fixTextFieldOutlineLabel;
    }
    get hashCode() {
      return ui.hashValues(this.contentPadding, this.floatingLabelHeight, this.floatingLabelProgress, this.border, this.borderGap, this.alignLabelWithHint, this.isDense, this.visualDensity, this.icon, this.input, this.label, this.hint, this.prefix, this.suffix, this.prefixIcon, this.suffixIcon, this.helperError, this.counter, this.container, this.fixTextFieldOutlineLabel);
    }
  };
  (input_decorator._Decoration.new = function(opts) {
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    if (contentPadding == null) dart.nullFailed(I[74], 498, 19, "contentPadding");
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
    if (isCollapsed == null) dart.nullFailed(I[74], 499, 19, "isCollapsed");
    let floatingLabelHeight = opts && 'floatingLabelHeight' in opts ? opts.floatingLabelHeight : null;
    if (floatingLabelHeight == null) dart.nullFailed(I[74], 500, 19, "floatingLabelHeight");
    let floatingLabelProgress = opts && 'floatingLabelProgress' in opts ? opts.floatingLabelProgress : null;
    if (floatingLabelProgress == null) dart.nullFailed(I[74], 501, 19, "floatingLabelProgress");
    let border = opts && 'border' in opts ? opts.border : null;
    let borderGap = opts && 'borderGap' in opts ? opts.borderGap : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
    if (alignLabelWithHint == null) dart.nullFailed(I[74], 504, 19, "alignLabelWithHint");
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let input = opts && 'input' in opts ? opts.input : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let hint = opts && 'hint' in opts ? opts.hint : null;
    let prefix = opts && 'prefix' in opts ? opts.prefix : null;
    let suffix = opts && 'suffix' in opts ? opts.suffix : null;
    let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
    let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
    let helperError = opts && 'helperError' in opts ? opts.helperError : null;
    let counter = opts && 'counter' in opts ? opts.counter : null;
    let container = opts && 'container' in opts ? opts.container : null;
    let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : false;
    if (fixTextFieldOutlineLabel == null) dart.nullFailed(I[74], 518, 10, "fixTextFieldOutlineLabel");
    this[S$.contentPadding$4] = contentPadding;
    this[S$.isCollapsed] = isCollapsed;
    this[S$.floatingLabelHeight] = floatingLabelHeight;
    this[S$.floatingLabelProgress] = floatingLabelProgress;
    this[S$.border$1] = border;
    this[S$.borderGap] = borderGap;
    this[S$.alignLabelWithHint] = alignLabelWithHint;
    this[S$.isDense$1] = isDense;
    this[S$.visualDensity$7] = visualDensity;
    this[S$.icon$4] = icon;
    this[S$.input] = input;
    this[S$.label$3] = label;
    this[S$.hint] = hint;
    this[S$.prefix] = prefix;
    this[S$.suffix] = suffix;
    this[S$.prefixIcon] = prefixIcon;
    this[S$.suffixIcon] = suffixIcon;
    this[S$.helperError] = helperError;
    this[S$.counter] = counter;
    this[S$.container] = container;
    this[S$.fixTextFieldOutlineLabel] = fixTextFieldOutlineLabel;
    if (!(contentPadding != null)) dart.assertFailed(null, I[74], 519, 15, "contentPadding != null");
    if (!(isCollapsed != null)) dart.assertFailed(null, I[74], 520, 15, "isCollapsed != null");
    if (!(floatingLabelHeight != null)) dart.assertFailed(null, I[74], 521, 15, "floatingLabelHeight != null");
    if (!(floatingLabelProgress != null)) dart.assertFailed(null, I[74], 522, 15, "floatingLabelProgress != null");
    if (!(fixTextFieldOutlineLabel != null)) dart.assertFailed(null, I[74], 523, 15, "fixTextFieldOutlineLabel != null");
    ;
  }).prototype = input_decorator._Decoration.prototype;
  dart.addTypeTests(input_decorator._Decoration);
  dart.addTypeCaches(input_decorator._Decoration);
  dart.setLibraryUri(input_decorator._Decoration, I[75]);
  dart.setFieldSignature(input_decorator._Decoration, () => ({
    __proto__: dart.getFields(input_decorator._Decoration.__proto__),
    contentPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    isCollapsed: dart.finalFieldType(core.bool),
    floatingLabelHeight: dart.finalFieldType(core.double),
    floatingLabelProgress: dart.finalFieldType(core.double),
    border: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    borderGap: dart.finalFieldType(dart.nullable(input_decorator._InputBorderGap)),
    alignLabelWithHint: dart.finalFieldType(core.bool),
    isDense: dart.finalFieldType(dart.nullable(core.bool)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    icon: dart.finalFieldType(dart.nullable(framework.Widget)),
    input: dart.finalFieldType(dart.nullable(framework.Widget)),
    label: dart.finalFieldType(dart.nullable(framework.Widget)),
    hint: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefix: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffix: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    helperError: dart.finalFieldType(dart.nullable(framework.Widget)),
    counter: dart.finalFieldType(dart.nullable(framework.Widget)),
    container: dart.finalFieldType(dart.nullable(framework.Widget)),
    fixTextFieldOutlineLabel: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(input_decorator._Decoration, ['_equals']);
  dart.defineExtensionAccessors(input_decorator._Decoration, ['hashCode']);
  input_decorator._RenderDecorationLayout = class _RenderDecorationLayout extends core.Object {
    get boxToBaseline() {
      return this[S$.boxToBaseline];
    }
    set boxToBaseline(value) {
      super.boxToBaseline = value;
    }
    get inputBaseline() {
      return this[S$.inputBaseline];
    }
    set inputBaseline(value) {
      super.inputBaseline = value;
    }
    get outlineBaseline() {
      return this[S$.outlineBaseline];
    }
    set outlineBaseline(value) {
      super.outlineBaseline = value;
    }
    get subtextBaseline() {
      return this[S$.subtextBaseline];
    }
    set subtextBaseline(value) {
      super.subtextBaseline = value;
    }
    get containerHeight() {
      return this[S$.containerHeight];
    }
    set containerHeight(value) {
      super.containerHeight = value;
    }
    get subtextHeight() {
      return this[S$.subtextHeight];
    }
    set subtextHeight(value) {
      super.subtextHeight = value;
    }
  };
  (input_decorator._RenderDecorationLayout.new = function(opts) {
    let boxToBaseline = opts && 'boxToBaseline' in opts ? opts.boxToBaseline : null;
    if (boxToBaseline == null) dart.nullFailed(I[74], 609, 19, "boxToBaseline");
    let inputBaseline = opts && 'inputBaseline' in opts ? opts.inputBaseline : null;
    if (inputBaseline == null) dart.nullFailed(I[74], 610, 19, "inputBaseline");
    let outlineBaseline = opts && 'outlineBaseline' in opts ? opts.outlineBaseline : null;
    if (outlineBaseline == null) dart.nullFailed(I[74], 611, 19, "outlineBaseline");
    let subtextBaseline = opts && 'subtextBaseline' in opts ? opts.subtextBaseline : null;
    if (subtextBaseline == null) dart.nullFailed(I[74], 612, 19, "subtextBaseline");
    let containerHeight = opts && 'containerHeight' in opts ? opts.containerHeight : null;
    if (containerHeight == null) dart.nullFailed(I[74], 613, 19, "containerHeight");
    let subtextHeight = opts && 'subtextHeight' in opts ? opts.subtextHeight : null;
    if (subtextHeight == null) dart.nullFailed(I[74], 614, 19, "subtextHeight");
    this[S$.boxToBaseline] = boxToBaseline;
    this[S$.inputBaseline] = inputBaseline;
    this[S$.outlineBaseline] = outlineBaseline;
    this[S$.subtextBaseline] = subtextBaseline;
    this[S$.containerHeight] = containerHeight;
    this[S$.subtextHeight] = subtextHeight;
    ;
  }).prototype = input_decorator._RenderDecorationLayout.prototype;
  dart.addTypeTests(input_decorator._RenderDecorationLayout);
  dart.addTypeCaches(input_decorator._RenderDecorationLayout);
  dart.setLibraryUri(input_decorator._RenderDecorationLayout, I[75]);
  dart.setFieldSignature(input_decorator._RenderDecorationLayout, () => ({
    __proto__: dart.getFields(input_decorator._RenderDecorationLayout.__proto__),
    boxToBaseline: dart.finalFieldType(core.Map$(dart.nullable(box$.RenderBox), core.double)),
    inputBaseline: dart.finalFieldType(core.double),
    outlineBaseline: dart.finalFieldType(core.double),
    subtextBaseline: dart.finalFieldType(core.double),
    containerHeight: dart.finalFieldType(core.double),
    subtextHeight: dart.finalFieldType(core.double)
  }));
  input_decorator._RenderDecoration = class _RenderDecoration extends box$.RenderBox {
    [S$._updateChild$1](oldChild, newChild, slot) {
      if (slot == null) dart.nullFailed(I[74], 648, 85, "slot");
      if (oldChild != null) {
        this.dropChild(oldChild);
        this.children[S.$remove](slot);
      }
      if (newChild != null) {
        this.children[S.$_set](slot, newChild);
        this.adoptChild(newChild);
      }
      return newChild;
    }
    get icon() {
      return this[S$._icon];
    }
    set icon(value) {
      this[S$._icon] = this[S$._updateChild$1](this[S$._icon], value, input_decorator._DecorationSlot.icon);
    }
    get input() {
      return this[S$._input];
    }
    set input(value) {
      this[S$._input] = this[S$._updateChild$1](this[S$._input], value, input_decorator._DecorationSlot.input);
    }
    get label() {
      return this[S$._label];
    }
    set label(value) {
      this[S$._label] = this[S$._updateChild$1](this[S$._label], value, input_decorator._DecorationSlot.label);
    }
    get hint() {
      return this[S$._hint];
    }
    set hint(value) {
      this[S$._hint] = this[S$._updateChild$1](this[S$._hint], value, input_decorator._DecorationSlot.hint);
    }
    get prefix() {
      return this[S$._prefix];
    }
    set prefix(value) {
      this[S$._prefix] = this[S$._updateChild$1](this[S$._prefix], value, input_decorator._DecorationSlot.prefix);
    }
    get suffix() {
      return this[S$._suffix];
    }
    set suffix(value) {
      this[S$._suffix] = this[S$._updateChild$1](this[S$._suffix], value, input_decorator._DecorationSlot.suffix);
    }
    get prefixIcon() {
      return this[S$._prefixIcon];
    }
    set prefixIcon(value) {
      this[S$._prefixIcon] = this[S$._updateChild$1](this[S$._prefixIcon], value, input_decorator._DecorationSlot.prefixIcon);
    }
    get suffixIcon() {
      return this[S$._suffixIcon];
    }
    set suffixIcon(value) {
      this[S$._suffixIcon] = this[S$._updateChild$1](this[S$._suffixIcon], value, input_decorator._DecorationSlot.suffixIcon);
    }
    get helperError() {
      return this[S$._helperError];
    }
    set helperError(value) {
      this[S$._helperError] = this[S$._updateChild$1](this[S$._helperError], value, input_decorator._DecorationSlot.helperError);
    }
    get counter() {
      return this[S$._counter];
    }
    set counter(value) {
      this[S$._counter] = this[S$._updateChild$1](this[S$._counter], value, input_decorator._DecorationSlot.counter);
    }
    get container() {
      return this[S$._container];
    }
    set container(value) {
      this[S$._container] = this[S$._updateChild$1](this[S$._container], value, input_decorator._DecorationSlot.container);
    }
    get [S$._children$2]() {
      return new (T$.SyncIterableOfRenderBox()).new((function* _children() {
        if (this.icon != null) yield dart.nullCheck(this.icon);
        if (this.input != null) yield dart.nullCheck(this.input);
        if (this.prefixIcon != null) yield dart.nullCheck(this.prefixIcon);
        if (this.suffixIcon != null) yield dart.nullCheck(this.suffixIcon);
        if (this.prefix != null) yield dart.nullCheck(this.prefix);
        if (this.suffix != null) yield dart.nullCheck(this.suffix);
        if (this.label != null) yield dart.nullCheck(this.label);
        if (this.hint != null) yield dart.nullCheck(this.hint);
        if (this.helperError != null) yield dart.nullCheck(this.helperError);
        if (this.counter != null) yield dart.nullCheck(this.counter);
        if (this.container != null) yield dart.nullCheck(this.container);
      }).bind(this));
    }
    get decoration() {
      return this[S$._decoration];
    }
    set decoration(value) {
      if (value == null) dart.nullFailed(I[74], 754, 30, "value");
      if (!(value != null)) dart.assertFailed(null, I[74], 755, 12, "value != null");
      if (dart.equals(this[S$._decoration], value)) return;
      this[S$._decoration] = value;
      this.markNeedsLayout();
    }
    get textDirection() {
      return this[S$._textDirection$2];
    }
    set textDirection(value) {
      if (value == null) dart.nullFailed(I[74], 764, 35, "value");
      if (!(value != null)) dart.assertFailed(null, I[74], 765, 12, "value != null");
      if (this[S$._textDirection$2] == value) return;
      this[S$._textDirection$2] = value;
      this.markNeedsLayout();
    }
    get textBaseline() {
      return this[S$._textBaseline];
    }
    set textBaseline(value) {
      if (value == null) dart.nullFailed(I[74], 774, 33, "value");
      if (!(value != null)) dart.assertFailed(null, I[74], 775, 12, "value != null");
      if (this[S$._textBaseline] == value) return;
      this[S$._textBaseline] = value;
      this.markNeedsLayout();
    }
    get [S$._defaultTextAlignVertical]() {
      return dart.test(this[S$._isOutlineAligned]) ? alignment.TextAlignVertical.center : alignment.TextAlignVertical.top;
    }
    get textAlignVertical() {
      let t36;
      t36 = this[S$._textAlignVertical];
      return t36 == null ? this[S$._defaultTextAlignVertical] : t36;
    }
    set textAlignVertical(value) {
      let t36, t36$;
      if (dart.equals(this[S$._textAlignVertical], value)) {
        return;
      }
      if (dart.nullCheck(this.textAlignVertical).y == (t36$ = (t36 = value, t36 == null ? null : t36.y), t36$ == null ? this[S$._defaultTextAlignVertical].y : t36$)) {
        this[S$._textAlignVertical] = value;
        return;
      }
      this[S$._textAlignVertical] = value;
      this.markNeedsLayout();
    }
    get isFocused() {
      return this[S$._isFocused];
    }
    set isFocused(value) {
      if (value == null) dart.nullFailed(I[74], 802, 22, "value");
      if (!(value != null)) dart.assertFailed(null, I[74], 803, 12, "value != null");
      if (this[S$._isFocused] == value) return;
      this[S$._isFocused] = value;
      this.markNeedsSemanticsUpdate();
    }
    get expands() {
      return this[S$._expands];
    }
    set expands(value) {
      if (value == null) dart.nullFailed(I[74], 812, 20, "value");
      if (!(value != null)) dart.assertFailed(null, I[74], 813, 12, "value != null");
      if (this[S$._expands] == value) return;
      this[S$._expands] = value;
      this.markNeedsLayout();
    }
    get [S$._isOutlineAligned]() {
      return !dart.test(this.decoration.isCollapsed) && dart.test(dart.nullCheck(this.decoration.border).isOutline);
    }
    attach(owner) {
      object.PipelineOwner.as(owner);
      if (owner == null) dart.nullFailed(I[74], 827, 29, "owner");
      super.attach(owner);
      for (let child of this[S$._children$2])
        child.attach(owner);
    }
    detach() {
      super.detach();
      for (let child of this[S$._children$2])
        child.detach();
    }
    redepthChildren() {
      this[S$._children$2][S.$forEach](dart.bind(this, 'redepthChild'));
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(I[74], 846, 42, "visitor");
      this[S$._children$2][S.$forEach](visitor);
    }
    visitChildrenForSemantics(visitor) {
      if (visitor == null) dart.nullFailed(I[74], 851, 54, "visitor");
      if (this.icon != null) visitor(dart.nullCheck(this.icon));
      if (this.prefix != null) visitor(dart.nullCheck(this.prefix));
      if (this.prefixIcon != null) visitor(dart.nullCheck(this.prefixIcon));
      if (this.label != null) {
        visitor(dart.nullCheck(this.label));
      }
      if (this.hint != null) {
        if (dart.test(this.isFocused)) {
          visitor(dart.nullCheck(this.hint));
        } else if (this.label == null) {
          visitor(dart.nullCheck(this.hint));
        }
      }
      if (this.input != null) visitor(dart.nullCheck(this.input));
      if (this.suffixIcon != null) visitor(dart.nullCheck(this.suffixIcon));
      if (this.suffix != null) visitor(dart.nullCheck(this.suffix));
      if (this.container != null) visitor(dart.nullCheck(this.container));
      if (this.helperError != null) visitor(dart.nullCheck(this.helperError));
      if (this.counter != null) visitor(dart.nullCheck(this.counter));
    }
    debugDescribeChildren() {
      let value = T$.JSArrayOfDiagnosticsNode().of([]);
      function add(child, name) {
        if (name == null) dart.nullFailed(I[74], 887, 39, "name");
        if (child != null) value[S.$add](child.toDiagnosticsNode({name: name}));
      }
      dart.fn(add, T$.RenderBoxNAndStringTovoid());
      add(this.icon, "icon");
      add(this.input, "input");
      add(this.label, "label");
      add(this.hint, "hint");
      add(this.prefix, "prefix");
      add(this.suffix, "suffix");
      add(this.prefixIcon, "prefixIcon");
      add(this.suffixIcon, "suffixIcon");
      add(this.helperError, "helperError");
      add(this.counter, "counter");
      add(this.container, "container");
      return value;
    }
    get sizedByParent() {
      return false;
    }
    static _minWidth(box, height) {
      if (height == null) dart.nullFailed(I[74], 908, 50, "height");
      return box == null ? 0.0 : box.getMinIntrinsicWidth(height);
    }
    static _maxWidth(box, height) {
      if (height == null) dart.nullFailed(I[74], 912, 50, "height");
      return box == null ? 0.0 : box.getMaxIntrinsicWidth(height);
    }
    static _minHeight(box, width) {
      if (width == null) dart.nullFailed(I[74], 916, 51, "width");
      return box == null ? 0.0 : box.getMinIntrinsicHeight(width);
    }
    static _boxSize(box) {
      return box == null ? ui.Size.zero : box.size;
    }
    static _boxParentData(box) {
      if (box == null) dart.nullFailed(I[74], 922, 49, "box");
      return box$.BoxParentData.as(dart.nullCheck(box.parentData));
    }
    get contentPadding() {
      return edge_insets.EdgeInsets.as(this.decoration.contentPadding);
    }
    [S$._layoutLineBox](box, constraints) {
      if (constraints == null) dart.nullFailed(I[74], 927, 56, "constraints");
      if (box == null) {
        return 0.0;
      }
      box.layout(constraints, {parentUsesSize: true});
      let baseline = box.getDistanceToBaseline(ui.TextBaseline.alphabetic);
      if (!(baseline != null && dart.notNull(baseline) >= 0.0)) dart.assertFailed(null, I[74], 939, 12, "baseline != null && baseline >= 0.0");
      return dart.nullCheck(baseline);
    }
    [S$._layout](layoutConstraints) {
      let t36, t36$, t36$0, t36$1, t36$2;
      if (layoutConstraints == null) dart.nullFailed(I[74], 946, 50, "layoutConstraints");
      if (!(dart.notNull(layoutConstraints.maxWidth) < 1 / 0)) dart.assertFailed("An InputDecorator, which is typically created by a TextField, cannot " + "have an unbounded width.\n" + "This happens when the parent widget does not provide a finite width " + "constraint. For example, if the InputDecorator is contained by a Row, " + "then its width must be constrained. An Expanded widget or a SizedBox " + "can be used to constrain the width of the InputDecorator or the " + "TextField that contains it.", I[74], 948, 7, "layoutConstraints.maxWidth < double.infinity");
      let boxToBaseline = new (T$.LinkedMapOfRenderBoxN$double()).new();
      let boxConstraints = layoutConstraints.loosen();
      boxToBaseline[S.$_set](this.prefix, this[S$._layoutLineBox](this.prefix, boxConstraints));
      boxToBaseline[S.$_set](this.suffix, this[S$._layoutLineBox](this.suffix, boxConstraints));
      boxToBaseline[S.$_set](this.icon, this[S$._layoutLineBox](this.icon, boxConstraints));
      boxToBaseline[S.$_set](this.prefixIcon, this[S$._layoutLineBox](this.prefixIcon, boxConstraints));
      boxToBaseline[S.$_set](this.suffixIcon, this[S$._layoutLineBox](this.suffixIcon, boxConstraints));
      let inputWidth = math.max(core.double, 0.0, dart.notNull(this.constraints.maxWidth) - (dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.prefixIcon).width) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.prefix).width) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.suffix).width) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.suffixIcon).width) + dart.notNull(this.contentPadding.right)));
      let invertedLabelScale = dart.nullCheck(ui.lerpDouble(1.0, 1 / 0.75, this.decoration.floatingLabelProgress));
      let suffixIconWidth = input_decorator._RenderDecoration._boxSize(this.suffixIcon).width;
      if (dart.test(dart.nullCheck(this.decoration.border).isOutline)) {
        suffixIconWidth = dart.nullCheck(ui.lerpDouble(suffixIconWidth, 0.0, this.decoration.floatingLabelProgress));
      }
      let labelWidth = math.max(core.double, 0.0, dart.notNull(this.constraints.maxWidth) - (dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.prefixIcon).width) + dart.notNull(suffixIconWidth) + dart.notNull(this.contentPadding.right)));
      boxToBaseline[S.$_set](this.label, this[S$._layoutLineBox](this.label, boxConstraints.copyWith({maxWidth: labelWidth * invertedLabelScale})));
      boxToBaseline[S.$_set](this.hint, this[S$._layoutLineBox](this.hint, boxConstraints.copyWith({minWidth: inputWidth, maxWidth: inputWidth})));
      boxToBaseline[S.$_set](this.counter, this[S$._layoutLineBox](this.counter, boxConstraints));
      boxToBaseline[S.$_set](this.helperError, this[S$._layoutLineBox](this.helperError, boxConstraints.copyWith({maxWidth: math.max(core.double, 0.0, dart.notNull(boxConstraints.maxWidth) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.counter).width) - dart.notNull(this.contentPadding.horizontal))})));
      let labelHeight = this.label == null ? 0.0 : this.decoration.floatingLabelHeight;
      let topHeight = dart.test(dart.nullCheck(this.decoration.border).isOutline) ? math.max(core.double, dart.notNull(labelHeight) - dart.nullCheck(boxToBaseline[S.$_get](this.label)), 0.0) : labelHeight;
      let counterHeight = this.counter == null ? 0.0 : dart.nullCheck(boxToBaseline[S.$_get](this.counter)) + 8;
      let helperErrorExists = (t36 = this.helperError, t36 == null ? null : t36.size) != null && dart.notNull(dart.nullCheck(this.helperError).size.height) > 0;
      let helperErrorHeight = !helperErrorExists ? 0.0 : dart.notNull(dart.nullCheck(this.helperError).size.height) + 8;
      let bottomHeight = math.max(core.double, counterHeight, helperErrorHeight);
      let densityOffset = dart.nullCheck(this.decoration.visualDensity).baseSizeAdjustment;
      boxToBaseline[S.$_set](this.input, this[S$._layoutLineBox](this.input, boxConstraints.deflate(new edge_insets.EdgeInsets.only({top: dart.notNull(this.contentPadding.top) + dart.notNull(topHeight) + dart.notNull(densityOffset.dy) / 2, bottom: dart.notNull(this.contentPadding.bottom) + bottomHeight + dart.notNull(densityOffset.dy) / 2})).copyWith({minWidth: inputWidth, maxWidth: inputWidth})));
      let hintHeight = this.hint == null ? 0.0 : dart.nullCheck(this.hint).size.height;
      let inputDirectHeight = this.input == null ? 0.0 : dart.nullCheck(this.input).size.height;
      let inputHeight = math.max(core.double, hintHeight, inputDirectHeight);
      let inputInternalBaseline = math.max(core.double, dart.nullCheck(boxToBaseline[S.$_get](this.input)), dart.nullCheck(boxToBaseline[S.$_get](this.hint)));
      let prefixHeight = (t36$0 = (t36$ = this.prefix, t36$ == null ? null : t36$.size.height), t36$0 == null ? 0.0 : t36$0);
      let suffixHeight = (t36$2 = (t36$1 = this.suffix, t36$1 == null ? null : t36$1.size.height), t36$2 == null ? 0.0 : t36$2);
      let fixHeight = math.max(core.double, dart.nullCheck(boxToBaseline[S.$_get](this.prefix)), dart.nullCheck(boxToBaseline[S.$_get](this.suffix)));
      let fixAboveInput = math.max(core.double, 0.0, fixHeight - inputInternalBaseline);
      let fixBelowBaseline = math.max(core.double, dart.notNull(prefixHeight) - dart.nullCheck(boxToBaseline[S.$_get](this.prefix)), dart.notNull(suffixHeight) - dart.nullCheck(boxToBaseline[S.$_get](this.suffix)));
      let fixBelowInput = math.max(core.double, 0.0, fixBelowBaseline - (inputHeight - inputInternalBaseline));
      let prefixIconHeight = this.prefixIcon == null ? 0.0 : dart.nullCheck(this.prefixIcon).size.height;
      let suffixIconHeight = this.suffixIcon == null ? 0.0 : dart.nullCheck(this.suffixIcon).size.height;
      let fixIconHeight = math.max(core.double, prefixIconHeight, suffixIconHeight);
      let contentHeight = math.max(core.double, fixIconHeight, dart.notNull(topHeight) + dart.notNull(this.contentPadding.top) + fixAboveInput + inputHeight + fixBelowInput + dart.notNull(this.contentPadding.bottom) + dart.notNull(densityOffset.dy));
      let minContainerHeight = dart.nullCheck(this.decoration.isDense) || dart.test(this.decoration.isCollapsed) || dart.test(this.expands) ? 0.0 : 48;
      let maxContainerHeight = dart.notNull(boxConstraints.maxHeight) - bottomHeight;
      let containerHeight = dart.test(this.expands) ? maxContainerHeight : math.min(core.double, math.max(core.double, contentHeight, minContainerHeight), maxContainerHeight);
      let interactiveAdjustment = minContainerHeight > contentHeight ? (minContainerHeight - contentHeight) / 2.0 : 0.0;
      let overflow = math.max(core.double, 0.0, contentHeight - maxContainerHeight);
      let textAlignVerticalFactor = (dart.notNull(dart.nullCheck(this.textAlignVertical).y) + 1.0) / 2.0;
      let baselineAdjustment = fixAboveInput - overflow * (1 - textAlignVerticalFactor);
      let topInputBaseline = dart.notNull(this.contentPadding.top) + dart.notNull(topHeight) + inputInternalBaseline + baselineAdjustment + interactiveAdjustment;
      let maxContentHeight = containerHeight - dart.notNull(this.contentPadding.top) - dart.notNull(topHeight) - dart.notNull(this.contentPadding.bottom);
      let alignableHeight = fixAboveInput + inputHeight + fixBelowInput;
      let maxVerticalOffset = maxContentHeight - alignableHeight;
      let textAlignVerticalOffset = maxVerticalOffset * textAlignVerticalFactor;
      let inputBaseline = topInputBaseline + textAlignVerticalOffset + dart.notNull(densityOffset.dy) / 2.0;
      let outlineCenterBaseline = inputInternalBaseline + baselineAdjustment / 2.0 + (containerHeight - (2.0 + inputHeight)) / 2.0;
      let outlineTopBaseline = topInputBaseline;
      let outlineBottomBaseline = topInputBaseline + maxVerticalOffset;
      let outlineBaseline = this[S$._interpolateThree](outlineTopBaseline, outlineCenterBaseline, outlineBottomBaseline, dart.nullCheck(this.textAlignVertical));
      let subtextCounterBaseline = 0.0;
      let subtextHelperBaseline = 0.0;
      let subtextCounterHeight = 0.0;
      let subtextHelperHeight = 0.0;
      if (this.counter != null) {
        subtextCounterBaseline = containerHeight + 8 + dart.nullCheck(boxToBaseline[S.$_get](this.counter));
        subtextCounterHeight = dart.notNull(dart.nullCheck(this.counter).size.height) + 8;
      }
      if (helperErrorExists) {
        subtextHelperBaseline = containerHeight + 8 + dart.nullCheck(boxToBaseline[S.$_get](this.helperError));
        subtextHelperHeight = helperErrorHeight;
      }
      let subtextBaseline = math.max(core.double, subtextCounterBaseline, subtextHelperBaseline);
      let subtextHeight = math.max(core.double, subtextCounterHeight, subtextHelperHeight);
      return new input_decorator._RenderDecorationLayout.new({boxToBaseline: boxToBaseline, containerHeight: containerHeight, inputBaseline: inputBaseline, outlineBaseline: outlineBaseline, subtextBaseline: subtextBaseline, subtextHeight: subtextHeight});
    }
    [S$._interpolateThree](begin, middle, end, textAlignVertical) {
      if (begin == null) dart.nullFailed(I[74], 1192, 35, "begin");
      if (middle == null) dart.nullFailed(I[74], 1192, 49, "middle");
      if (end == null) dart.nullFailed(I[74], 1192, 64, "end");
      if (textAlignVertical == null) dart.nullFailed(I[74], 1192, 87, "textAlignVertical");
      if (dart.notNull(textAlignVertical.y) <= 0) {
        if (dart.notNull(begin) >= dart.notNull(middle)) {
          return middle;
        }
        let t = dart.notNull(textAlignVertical.y) + 1;
        return dart.notNull(begin) + (dart.notNull(middle) - dart.notNull(begin)) * t;
      }
      if (dart.notNull(middle) >= dart.notNull(end)) {
        return middle;
      }
      let t = textAlignVertical.y;
      return dart.notNull(middle) + (dart.notNull(end) - dart.notNull(middle)) * dart.notNull(t);
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[74], 1215, 42, "height");
      return dart.notNull(input_decorator._RenderDecoration._minWidth(this.icon, height)) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.prefixIcon, height)) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.prefix, height)) + math.max(core.num, input_decorator._RenderDecoration._minWidth(this.input, height), input_decorator._RenderDecoration._minWidth(this.hint, height)) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.suffix, height)) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.suffixIcon, height)) + dart.notNull(this.contentPadding.right);
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[74], 1227, 42, "height");
      return dart.notNull(input_decorator._RenderDecoration._maxWidth(this.icon, height)) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.prefixIcon, height)) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.prefix, height)) + math.max(core.num, input_decorator._RenderDecoration._maxWidth(this.input, height), input_decorator._RenderDecoration._maxWidth(this.hint, height)) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.suffix, height)) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.suffixIcon, height)) + dart.notNull(this.contentPadding.right);
    }
    [S$._lineHeight](width, boxes) {
      if (width == null) dart.nullFailed(I[74], 1238, 29, "width");
      if (boxes == null) dart.nullFailed(I[74], 1238, 53, "boxes");
      let height = 0.0;
      for (let box of boxes) {
        if (box == null) continue;
        height = math.max(core.double, input_decorator._RenderDecoration._minHeight(box, width), height);
      }
      return height;
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[74], 1252, 43, "width");
      let subtextHeight = this[S$._lineHeight](width, T$.JSArrayOfRenderBoxN().of([this.helperError, this.counter]));
      if (dart.notNull(subtextHeight) > 0.0) subtextHeight = dart.notNull(subtextHeight) + 8;
      let densityOffset = dart.nullCheck(this.decoration.visualDensity).baseSizeAdjustment;
      let containerHeight = dart.notNull(this.contentPadding.top) + dart.notNull(this.label == null ? 0.0 : this.decoration.floatingLabelHeight) + dart.notNull(this[S$._lineHeight](width, T$.JSArrayOfRenderBoxN().of([this.prefix, this.input, this.suffix]))) + dart.notNull(subtextHeight) + dart.notNull(this.contentPadding.bottom) + dart.notNull(densityOffset.dy);
      let minContainerHeight = dart.nullCheck(this.decoration.isDense) || dart.test(this.expands) ? 0.0 : 48;
      return math.max(core.double, containerHeight, minContainerHeight);
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[74], 1270, 43, "width");
      return this.computeMinIntrinsicHeight(width);
    }
    computeDistanceToActualBaseline(baseline) {
      if (baseline == null) dart.nullFailed(I[74], 1275, 55, "baseline");
      return dart.notNull(input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.input)).offset.dy) + dart.nullCheck(dart.nullCheck(this.input).computeDistanceToActualBaseline(baseline));
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[74], 1283, 40, "constraints");
      if (!dart.test(this.debugCannotComputeDryLayout({reason: "Layout requires baseline metrics, which are only available after a full layout."}))) dart.assertFailed(null, I[74], 1284, 12, "debugCannotComputeDryLayout(\r\n      reason: 'Layout requires baseline metrics, which are only available after a full layout.',\r\n    )");
      return ui.Size.zero;
    }
    performLayout() {
      let constraints = this.constraints;
      this[S$._labelTransform] = null;
      let layout = this[S$._layout](constraints);
      let overallWidth = constraints.maxWidth;
      let overallHeight = dart.notNull(layout.containerHeight) + dart.notNull(layout.subtextHeight);
      if (this.container != null) {
        let containerConstraints = new box$.BoxConstraints.tightFor({height: layout.containerHeight, width: dart.notNull(overallWidth) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width)});
        dart.nullCheck(this.container).layout(containerConstraints, {parentUsesSize: true});
        let x = null;
        switch (this.textDirection) {
          case C[328] || CT.C328:
          {
            x = 0.0;
            break;
          }
          case C[329] || CT.C329:
          {
            x = input_decorator._RenderDecoration._boxSize(this.icon).width;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.container)).offset = new ui.Offset.new(x, 0.0);
      }
      let height = null;
      function centerLayout(box, x) {
        if (box == null) dart.nullFailed(I[74], 1318, 35, "box");
        if (x == null) dart.nullFailed(I[74], 1318, 47, "x");
        input_decorator._RenderDecoration._boxParentData(box).offset = new ui.Offset.new(x, (dart.nullCheck(height) - dart.notNull(box.size.height)) / 2.0);
        return box.size.width;
      }
      dart.fn(centerLayout, T$.RenderBoxAnddoubleTodouble());
      let baseline = null;
      function baselineLayout(box, x) {
        if (box == null) dart.nullFailed(I[74], 1324, 37, "box");
        if (x == null) dart.nullFailed(I[74], 1324, 49, "x");
        input_decorator._RenderDecoration._boxParentData(box).offset = new ui.Offset.new(x, dart.nullCheck(baseline) - dart.nullCheck(layout.boxToBaseline[S.$_get](box)));
        return box.size.width;
      }
      dart.fn(baselineLayout, T$.RenderBoxAnddoubleTodouble());
      let left = this.contentPadding.left;
      let right = dart.notNull(overallWidth) - dart.notNull(this.contentPadding.right);
      height = layout.containerHeight;
      baseline = dart.test(this[S$._isOutlineAligned]) ? layout.outlineBaseline : layout.inputBaseline;
      if (this.icon != null) {
        let x = null;
        switch (this.textDirection) {
          case C[328] || CT.C328:
          {
            x = dart.notNull(overallWidth) - dart.notNull(dart.nullCheck(this.icon).size.width);
            break;
          }
          case C[329] || CT.C329:
          {
            x = 0.0;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        centerLayout(dart.nullCheck(this.icon), x);
      }
      switch (this.textDirection) {
        case C[328] || CT.C328:
        {
          {
            let start = right - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width);
            let end = left;
            if (this.prefixIcon != null) {
              start = start + dart.notNull(this.contentPadding.left);
              start = start - dart.notNull(centerLayout(dart.nullCheck(this.prefixIcon), start - dart.notNull(dart.nullCheck(this.prefixIcon).size.width)));
            }
            if (this.label != null) {
              if (dart.test(this.decoration.alignLabelWithHint)) {
                baselineLayout(dart.nullCheck(this.label), start - dart.notNull(dart.nullCheck(this.label).size.width));
              } else {
                centerLayout(dart.nullCheck(this.label), start - dart.notNull(dart.nullCheck(this.label).size.width));
              }
            }
            if (this.prefix != null) start = start - dart.notNull(baselineLayout(dart.nullCheck(this.prefix), start - dart.notNull(dart.nullCheck(this.prefix).size.width)));
            if (this.input != null) baselineLayout(dart.nullCheck(this.input), start - dart.notNull(dart.nullCheck(this.input).size.width));
            if (this.hint != null) baselineLayout(dart.nullCheck(this.hint), start - dart.notNull(dart.nullCheck(this.hint).size.width));
            if (this.suffixIcon != null) {
              end = dart.notNull(end) - dart.notNull(this.contentPadding.left);
              end = dart.notNull(end) + dart.notNull(centerLayout(dart.nullCheck(this.suffixIcon), end));
            }
            if (this.suffix != null) end = dart.notNull(end) + dart.notNull(baselineLayout(dart.nullCheck(this.suffix), end));
            break;
          }
        }
        case C[329] || CT.C329:
        {
          {
            let start = dart.notNull(left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width);
            let end = right;
            if (this.prefixIcon != null) {
              start = start - dart.notNull(this.contentPadding.left);
              start = start + dart.notNull(centerLayout(dart.nullCheck(this.prefixIcon), start));
            }
            if (this.label != null) {
              if (dart.test(this.decoration.alignLabelWithHint)) {
                baselineLayout(dart.nullCheck(this.label), start);
              } else {
                centerLayout(dart.nullCheck(this.label), start);
              }
            }
            if (this.prefix != null) start = start + dart.notNull(baselineLayout(dart.nullCheck(this.prefix), start));
            if (this.input != null) baselineLayout(dart.nullCheck(this.input), start);
            if (this.hint != null) baselineLayout(dart.nullCheck(this.hint), start);
            if (this.suffixIcon != null) {
              end = end + dart.notNull(this.contentPadding.right);
              end = end - dart.notNull(centerLayout(dart.nullCheck(this.suffixIcon), end - dart.notNull(dart.nullCheck(this.suffixIcon).size.width)));
            }
            if (this.suffix != null) end = end - dart.notNull(baselineLayout(dart.nullCheck(this.suffix), end - dart.notNull(dart.nullCheck(this.suffix).size.width)));
            break;
          }
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (this.helperError != null || this.counter != null) {
        height = layout.subtextHeight;
        baseline = layout.subtextBaseline;
        switch (this.textDirection) {
          case C[328] || CT.C328:
          {
            if (this.helperError != null) baselineLayout(dart.nullCheck(this.helperError), right - dart.notNull(dart.nullCheck(this.helperError).size.width) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width));
            if (this.counter != null) baselineLayout(dart.nullCheck(this.counter), left);
            break;
          }
          case C[329] || CT.C329:
          {
            if (this.helperError != null) baselineLayout(dart.nullCheck(this.helperError), dart.notNull(left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width));
            if (this.counter != null) baselineLayout(dart.nullCheck(this.counter), right - dart.notNull(dart.nullCheck(this.counter).size.width));
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      if (this.label != null) {
        let labelX = input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.label)).offset.dx;
        switch (this.textDirection) {
          case C[328] || CT.C328:
          {
            dart.nullCheck(this.decoration.borderGap).start = dart.notNull(labelX) + dart.notNull(dart.nullCheck(this.label).size.width);
            break;
          }
          case C[329] || CT.C329:
          {
            dart.nullCheck(this.decoration.borderGap).start = dart.notNull(labelX) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        dart.nullCheck(this.decoration.borderGap).extent = dart.notNull(dart.nullCheck(this.label).size.width) * 0.75;
      } else {
        dart.nullCheck(this.decoration.borderGap).start = null;
        dart.nullCheck(this.decoration.borderGap).extent = 0.0;
      }
      this.size = constraints.constrain(new ui.Size.new(overallWidth, overallHeight));
      if (!(this.size.width == constraints.constrainWidth(overallWidth))) dart.assertFailed(null, I[74], 1446, 12, "size.width == constraints.constrainWidth(overallWidth)");
      if (!(this.size.height == constraints.constrainHeight(overallHeight))) dart.assertFailed(null, I[74], 1447, 12, "size.height == constraints.constrainHeight(overallHeight)");
    }
    [S$._paintLabel](context, offset) {
      if (context == null) dart.nullFailed(I[74], 1450, 36, "context");
      if (offset == null) dart.nullFailed(I[74], 1450, 52, "offset");
      context.paintChild(dart.nullCheck(this.label), offset);
    }
    paint(context, offset) {
      let t36;
      if (context == null) dart.nullFailed(I[74], 1455, 30, "context");
      if (offset == null) dart.nullFailed(I[74], 1455, 46, "offset");
      function doPaint(child) {
        if (child != null) context.paintChild(child, input_decorator._RenderDecoration._boxParentData(child).offset['+'](offset));
      }
      dart.fn(doPaint, T$.RenderBoxNTovoid());
      doPaint(this.container);
      if (this.label != null) {
        let labelOffset = input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.label)).offset;
        let labelHeight = dart.nullCheck(this.label).size.height;
        let borderWeight = dart.nullCheck(this.decoration.border).borderSide.width;
        let t = this.decoration.floatingLabelProgress;
        let isOutlineBorder = this.decoration.border != null && dart.test(dart.nullCheck(this.decoration.border).isOutline);
        let floatingY = dart.test(this.decoration.fixTextFieldOutlineLabel) ? isOutlineBorder ? -dart.notNull(labelHeight) * 0.75 / 2.0 + dart.notNull(borderWeight) / 2.0 : this.contentPadding.top : isOutlineBorder ? -dart.notNull(labelHeight) * 0.25 : this.contentPadding.top;
        let scale = dart.nullCheck(ui.lerpDouble(1.0, 0.75, t));
        let dx = null;
        switch (this.textDirection) {
          case C[328] || CT.C328:
          {
            dx = dart.notNull(labelOffset.dx) + dart.notNull(dart.nullCheck(this.label).size.width) * (1.0 - scale);
            break;
          }
          case C[329] || CT.C329:
          {
            dx = labelOffset.dx;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        let dy = dart.nullCheck(ui.lerpDouble(0.0, dart.notNull(floatingY) - dart.notNull(labelOffset.dy), t));
        this[S$._labelTransform] = (t36 = vector_math_64.Matrix4.identity(), (() => {
          t36.translate(dx, dart.notNull(labelOffset.dy) + dy);
          t36.scale(scale);
          return t36;
        })());
        this[S$._transformLayer] = context.pushTransform(this.needsCompositing, offset, dart.nullCheck(this[S$._labelTransform]), dart.bind(this, S$._paintLabel), {oldLayer: this[S$._transformLayer]});
      } else {
        this[S$._transformLayer] = null;
      }
      doPaint(this.icon);
      doPaint(this.prefix);
      doPaint(this.suffix);
      doPaint(this.prefixIcon);
      doPaint(this.suffixIcon);
      doPaint(this.hint);
      doPaint(this.input);
      doPaint(this.helperError);
      doPaint(this.counter);
    }
    hitTestSelf(position) {
      if (position == null) dart.nullFailed(I[74], 1509, 27, "position");
      return true;
    }
    hitTestChildren(result, opts) {
      if (result == null) dart.nullFailed(I[74], 1512, 41, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[74], 1512, 67, "position");
      if (!(position != null)) dart.assertFailed(null, I[74], 1513, 12, "position != null");
      for (let child of this[S$._children$2]) {
        let offset = input_decorator._RenderDecoration._boxParentData(child).offset;
        let isHit = result.addWithPaintOffset({offset: offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (result == null) dart.nullFailed(I[74], 1520, 36, "result");
            if (transformed == null) dart.nullFailed(I[74], 1520, 51, "transformed");
            if (!dart.equals(transformed, position['-'](offset))) dart.assertFailed(null, I[74], 1521, 18, "transformed == position - offset");
            return child.hitTest(result, {position: transformed});
          }, T$.BoxHitTestResultAndOffsetTobool())});
        if (dart.test(isHit)) return true;
      }
      return false;
    }
    applyPaintTransform(child, transform) {
      let t36;
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[74], 1532, 41, "child");
      if (transform == null) dart.nullFailed(I[74], 1532, 56, "transform");
      if (dart.equals(child, this.label) && this[S$._labelTransform] != null) {
        let labelOffset = input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.label)).offset;
        t36 = transform;
        (() => {
          t36.multiply(dart.nullCheck(this[S$._labelTransform]));
          t36.translate(-dart.notNull(labelOffset.dx), -dart.notNull(labelOffset.dy));
          return t36;
        })();
      }
      super.applyPaintTransform(child, transform);
    }
  };
  (input_decorator._RenderDecoration.new = function(opts) {
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    if (decoration == null) dart.nullFailed(I[74], 628, 26, "decoration");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[74], 629, 28, "textDirection");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    if (textBaseline == null) dart.nullFailed(I[74], 630, 27, "textBaseline");
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
    if (isFocused == null) dart.nullFailed(I[74], 631, 19, "isFocused");
    let expands = opts && 'expands' in opts ? opts.expands : null;
    if (expands == null) dart.nullFailed(I[74], 632, 19, "expands");
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    this.children = new (T$.LinkedMapOf_DecorationSlot$RenderBox()).new();
    this[S$._icon] = null;
    this[S$._input] = null;
    this[S$._label] = null;
    this[S$._hint] = null;
    this[S$._prefix] = null;
    this[S$._suffix] = null;
    this[S$._prefixIcon] = null;
    this[S$._suffixIcon] = null;
    this[S$._helperError] = null;
    this[S$._counter] = null;
    this[S$._container] = null;
    this[S$._expands] = false;
    this[S$._labelTransform] = null;
    this[S$._transformLayer] = null;
    if (!(decoration != null)) dart.assertFailed(null, I[74], 634, 15, "decoration != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[74], 635, 15, "textDirection != null");
    if (!(textBaseline != null)) dart.assertFailed(null, I[74], 636, 15, "textBaseline != null");
    if (!(expands != null)) dart.assertFailed(null, I[74], 637, 15, "expands != null");
    this[S$._decoration] = decoration;
    this[S$._textDirection$2] = textDirection;
    this[S$._textBaseline] = textBaseline;
    this[S$._textAlignVertical] = textAlignVertical;
    this[S$._isFocused] = isFocused;
    this[S$._expands] = expands;
    input_decorator._RenderDecoration.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._RenderDecoration.prototype;
  dart.addTypeTests(input_decorator._RenderDecoration);
  dart.addTypeCaches(input_decorator._RenderDecoration);
  dart.setMethodSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getMethods(input_decorator._RenderDecoration.__proto__),
    [S$._updateChild$1]: dart.fnType(dart.nullable(box$.RenderBox), [dart.nullable(box$.RenderBox), dart.nullable(box$.RenderBox), input_decorator._DecorationSlot]),
    [S$._layoutLineBox]: dart.fnType(core.double, [dart.nullable(box$.RenderBox), box$.BoxConstraints]),
    [S$._layout]: dart.fnType(input_decorator._RenderDecorationLayout, [box$.BoxConstraints]),
    [S$._interpolateThree]: dart.fnType(core.double, [core.double, core.double, core.double, alignment.TextAlignVertical]),
    [S$._lineHeight]: dart.fnType(core.double, [core.double, core.List$(dart.nullable(box$.RenderBox))]),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline]),
    [S$._paintLabel]: dart.fnType(dart.void, [object.PaintingContext, ui.Offset])
  }));
  dart.setGetterSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getGetters(input_decorator._RenderDecoration.__proto__),
    icon: dart.nullable(box$.RenderBox),
    input: dart.nullable(box$.RenderBox),
    label: dart.nullable(box$.RenderBox),
    hint: dart.nullable(box$.RenderBox),
    prefix: dart.nullable(box$.RenderBox),
    suffix: dart.nullable(box$.RenderBox),
    prefixIcon: dart.nullable(box$.RenderBox),
    suffixIcon: dart.nullable(box$.RenderBox),
    helperError: dart.nullable(box$.RenderBox),
    counter: dart.nullable(box$.RenderBox),
    container: dart.nullable(box$.RenderBox),
    [S$._children$2]: core.Iterable$(box$.RenderBox),
    decoration: input_decorator._Decoration,
    textDirection: ui.TextDirection,
    textBaseline: ui.TextBaseline,
    [S$._defaultTextAlignVertical]: alignment.TextAlignVertical,
    textAlignVertical: dart.nullable(alignment.TextAlignVertical),
    isFocused: core.bool,
    expands: core.bool,
    [S$._isOutlineAligned]: core.bool,
    contentPadding: edge_insets.EdgeInsets
  }));
  dart.setSetterSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getSetters(input_decorator._RenderDecoration.__proto__),
    icon: dart.nullable(box$.RenderBox),
    input: dart.nullable(box$.RenderBox),
    label: dart.nullable(box$.RenderBox),
    hint: dart.nullable(box$.RenderBox),
    prefix: dart.nullable(box$.RenderBox),
    suffix: dart.nullable(box$.RenderBox),
    prefixIcon: dart.nullable(box$.RenderBox),
    suffixIcon: dart.nullable(box$.RenderBox),
    helperError: dart.nullable(box$.RenderBox),
    counter: dart.nullable(box$.RenderBox),
    container: dart.nullable(box$.RenderBox),
    decoration: input_decorator._Decoration,
    textDirection: ui.TextDirection,
    textBaseline: ui.TextBaseline,
    textAlignVertical: dart.nullable(alignment.TextAlignVertical),
    isFocused: core.bool,
    expands: core.bool
  }));
  dart.setLibraryUri(input_decorator._RenderDecoration, I[75]);
  dart.setFieldSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getFields(input_decorator._RenderDecoration.__proto__),
    children: dart.finalFieldType(core.Map$(input_decorator._DecorationSlot, box$.RenderBox)),
    [S$._icon]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._input]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._label]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._hint]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._prefix]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._suffix]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._prefixIcon]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._suffixIcon]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._helperError]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._counter]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._container]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [S$._decoration]: dart.fieldType(input_decorator._Decoration),
    [S$._textDirection$2]: dart.fieldType(ui.TextDirection),
    [S$._textBaseline]: dart.fieldType(ui.TextBaseline),
    [S$._textAlignVertical]: dart.fieldType(dart.nullable(alignment.TextAlignVertical)),
    [S$._isFocused]: dart.fieldType(core.bool),
    [S$._expands]: dart.fieldType(core.bool),
    [S$._labelTransform]: dart.fieldType(dart.nullable(vector_math_64.Matrix4)),
    [S$._transformLayer]: dart.fieldType(dart.nullable(layer.TransformLayer))
  }));
  dart.defineLazy(input_decorator._RenderDecoration, {
    /*input_decorator._RenderDecoration.subtextGap*/get subtextGap() {
      return 8;
    }
  }, false);
  input_decorator._DecorationElement = class _DecorationElement extends framework.RenderObjectElement {
    get widget() {
      return input_decorator._Decorator.as(super.widget);
    }
    get renderObject() {
      return input_decorator._RenderDecoration.as(super.renderObject);
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(I[74], 1555, 37, "visitor");
      this.slotToChild[S.$values][S.$forEach](visitor);
    }
    forgetChild(child) {
      if (child == null) dart.nullFailed(I[74], 1560, 28, "child");
      if (!dart.test(this.slotToChild[S.$containsValue](child))) dart.assertFailed(null, I[74], 1561, 12, "slotToChild.containsValue(child)");
      if (!input_decorator._DecorationSlot.is(child.slot)) dart.assertFailed(null, I[74], 1562, 12, "child.slot is _DecorationSlot");
      if (!dart.test(this.slotToChild[S.$containsKey](child.slot))) dart.assertFailed(null, I[74], 1563, 12, "slotToChild.containsKey(child.slot)");
      this.slotToChild[S.$remove](child.slot);
      super.forgetChild(child);
    }
    [S$._mountChild$1](widget, slot) {
      if (slot == null) dart.nullFailed(I[74], 1568, 52, "slot");
      let oldChild = this.slotToChild[S.$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[S.$remove](slot);
      }
      if (newChild != null) {
        this.slotToChild[S.$_set](slot, newChild);
      }
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[S$._mountChild$1](this.widget.decoration.icon, input_decorator._DecorationSlot.icon);
      this[S$._mountChild$1](this.widget.decoration.input, input_decorator._DecorationSlot.input);
      this[S$._mountChild$1](this.widget.decoration.label, input_decorator._DecorationSlot.label);
      this[S$._mountChild$1](this.widget.decoration.hint, input_decorator._DecorationSlot.hint);
      this[S$._mountChild$1](this.widget.decoration.prefix, input_decorator._DecorationSlot.prefix);
      this[S$._mountChild$1](this.widget.decoration.suffix, input_decorator._DecorationSlot.suffix);
      this[S$._mountChild$1](this.widget.decoration.prefixIcon, input_decorator._DecorationSlot.prefixIcon);
      this[S$._mountChild$1](this.widget.decoration.suffixIcon, input_decorator._DecorationSlot.suffixIcon);
      this[S$._mountChild$1](this.widget.decoration.helperError, input_decorator._DecorationSlot.helperError);
      this[S$._mountChild$1](this.widget.decoration.counter, input_decorator._DecorationSlot.counter);
      this[S$._mountChild$1](this.widget.decoration.container, input_decorator._DecorationSlot.container);
    }
    [S$._updateChild$1](widget, slot) {
      if (slot == null) dart.nullFailed(I[74], 1595, 53, "slot");
      let oldChild = this.slotToChild[S.$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[S.$remove](slot);
      }
      if (newChild != null) {
        this.slotToChild[S.$_set](slot, newChild);
      }
    }
    update(newWidget) {
      input_decorator._Decorator.as(newWidget);
      if (newWidget == null) dart.nullFailed(I[74], 1607, 26, "newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, I[74], 1609, 12, "widget == newWidget");
      this[S$._updateChild$1](this.widget.decoration.icon, input_decorator._DecorationSlot.icon);
      this[S$._updateChild$1](this.widget.decoration.input, input_decorator._DecorationSlot.input);
      this[S$._updateChild$1](this.widget.decoration.label, input_decorator._DecorationSlot.label);
      this[S$._updateChild$1](this.widget.decoration.hint, input_decorator._DecorationSlot.hint);
      this[S$._updateChild$1](this.widget.decoration.prefix, input_decorator._DecorationSlot.prefix);
      this[S$._updateChild$1](this.widget.decoration.suffix, input_decorator._DecorationSlot.suffix);
      this[S$._updateChild$1](this.widget.decoration.prefixIcon, input_decorator._DecorationSlot.prefixIcon);
      this[S$._updateChild$1](this.widget.decoration.suffixIcon, input_decorator._DecorationSlot.suffixIcon);
      this[S$._updateChild$1](this.widget.decoration.helperError, input_decorator._DecorationSlot.helperError);
      this[S$._updateChild$1](this.widget.decoration.counter, input_decorator._DecorationSlot.counter);
      this[S$._updateChild$1](this.widget.decoration.container, input_decorator._DecorationSlot.container);
    }
    [S$._updateRenderObject$1](child, slot) {
      if (slot == null) dart.nullFailed(I[74], 1623, 62, "slot");
      switch (slot) {
        case C[1716] || CT.C1716:
        {
          this.renderObject.icon = child;
          break;
        }
        case C[1717] || CT.C1717:
        {
          this.renderObject.input = child;
          break;
        }
        case C[1718] || CT.C1718:
        {
          this.renderObject.label = child;
          break;
        }
        case C[1719] || CT.C1719:
        {
          this.renderObject.hint = child;
          break;
        }
        case C[1720] || CT.C1720:
        {
          this.renderObject.prefix = child;
          break;
        }
        case C[1721] || CT.C1721:
        {
          this.renderObject.suffix = child;
          break;
        }
        case C[1722] || CT.C1722:
        {
          this.renderObject.prefixIcon = child;
          break;
        }
        case C[1723] || CT.C1723:
        {
          this.renderObject.suffixIcon = child;
          break;
        }
        case C[1724] || CT.C1724:
        {
          this.renderObject.helperError = child;
          break;
        }
        case C[1725] || CT.C1725:
        {
          this.renderObject.counter = child;
          break;
        }
        case C[1726] || CT.C1726:
        {
          this.renderObject.container = child;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    insertRenderObjectChild(child, slot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[74], 1662, 45, "child");
      input_decorator._DecorationSlot.as(slot);
      if (slot == null) dart.nullFailed(I[74], 1662, 68, "slot");
      if (!box$.RenderBox.is(child)) dart.assertFailed(null, I[74], 1663, 12, "child is RenderBox");
      this[S$._updateRenderObject$1](box$.RenderBox.as(child), slot);
      if (!dart.test(this.renderObject.children[S.$keys][S.$contains](slot))) dart.assertFailed(null, I[74], 1665, 12, "renderObject.children.keys.contains(slot)");
    }
    removeRenderObjectChild(child, slot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[74], 1669, 45, "child");
      input_decorator._DecorationSlot.as(slot);
      if (slot == null) dart.nullFailed(I[74], 1669, 68, "slot");
      if (!box$.RenderBox.is(child)) dart.assertFailed(null, I[74], 1670, 12, "child is RenderBox");
      if (!dart.equals(this.renderObject.children[S.$_get](slot), child)) dart.assertFailed(null, I[74], 1671, 12, "renderObject.children[slot] == child");
      this[S$._updateRenderObject$1](null, slot);
      if (!!dart.test(this.renderObject.children[S.$keys][S.$contains](slot))) dart.assertFailed(null, I[74], 1673, 12, "!renderObject.children.keys.contains(slot)");
    }
    moveRenderObjectChild(child, oldSlot, newSlot) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[74], 1677, 43, "child");
      if (!false) dart.assertFailed("not reachable", I[74], 1678, 12, "false");
    }
  };
  (input_decorator._DecorationElement.new = function(widget) {
    if (widget == null) dart.nullFailed(I[74], 1544, 33, "widget");
    this.slotToChild = new (T$.LinkedMapOf_DecorationSlot$Element()).new();
    input_decorator._DecorationElement.__proto__.new.call(this, widget);
    ;
  }).prototype = input_decorator._DecorationElement.prototype;
  dart.addTypeTests(input_decorator._DecorationElement);
  dart.addTypeCaches(input_decorator._DecorationElement);
  dart.setMethodSignature(input_decorator._DecorationElement, () => ({
    __proto__: dart.getMethods(input_decorator._DecorationElement.__proto__),
    [S$._mountChild$1]: dart.fnType(dart.void, [dart.nullable(framework.Widget), input_decorator._DecorationSlot]),
    [S$._updateChild$1]: dart.fnType(dart.void, [dart.nullable(framework.Widget), input_decorator._DecorationSlot]),
    [S$._updateRenderObject$1]: dart.fnType(dart.void, [dart.nullable(box$.RenderBox), input_decorator._DecorationSlot])
  }));
  dart.setGetterSignature(input_decorator._DecorationElement, () => ({
    __proto__: dart.getGetters(input_decorator._DecorationElement.__proto__),
    widget: input_decorator._Decorator,
    renderObject: input_decorator._RenderDecoration
  }));
  dart.setLibraryUri(input_decorator._DecorationElement, I[75]);
  dart.setFieldSignature(input_decorator._DecorationElement, () => ({
    __proto__: dart.getFields(input_decorator._DecorationElement.__proto__),
    slotToChild: dart.finalFieldType(core.Map$(input_decorator._DecorationSlot, framework.Element))
  }));
  input_decorator._Decorator = class _Decorator extends framework.RenderObjectWidget {
    get decoration() {
      return this[S$.decoration];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textDirection() {
      return this[S$.textDirection$1];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get textBaseline() {
      return this[S$.textBaseline];
    }
    set textBaseline(value) {
      super.textBaseline = value;
    }
    get textAlignVertical() {
      return this[S$.textAlignVertical];
    }
    set textAlignVertical(value) {
      super.textAlignVertical = value;
    }
    get isFocused() {
      return this[S$.isFocused];
    }
    set isFocused(value) {
      super.isFocused = value;
    }
    get expands() {
      return this[S$.expands];
    }
    set expands(value) {
      super.expands = value;
    }
    createElement() {
      return new input_decorator._DecorationElement.new(this);
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[74], 1708, 53, "context");
      return new input_decorator._RenderDecoration.new({decoration: this.decoration, textDirection: this.textDirection, textBaseline: this.textBaseline, textAlignVertical: this.textAlignVertical, isFocused: this.isFocused, expands: this.expands});
    }
    updateRenderObject(context, renderObject) {
      let t36;
      if (context == null) dart.nullFailed(I[74], 1720, 40, "context");
      input_decorator._RenderDecoration.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[74], 1720, 67, "renderObject");
      t36 = renderObject;
      (() => {
        t36.decoration = this.decoration;
        t36.expands = this.expands;
        t36.isFocused = this.isFocused;
        t36.textAlignVertical = this.textAlignVertical;
        t36.textBaseline = this.textBaseline;
        t36.textDirection = this.textDirection;
        return t36;
      })();
    }
  };
  (input_decorator._Decorator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    if (decoration == null) dart.nullFailed(I[74], 1686, 19, "decoration");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[74], 1687, 19, "textDirection");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    if (textBaseline == null) dart.nullFailed(I[74], 1688, 19, "textBaseline");
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
    if (isFocused == null) dart.nullFailed(I[74], 1689, 19, "isFocused");
    let expands = opts && 'expands' in opts ? opts.expands : null;
    if (expands == null) dart.nullFailed(I[74], 1690, 19, "expands");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.textAlignVertical] = textAlignVertical;
    this[S$.decoration] = decoration;
    this[S$.textDirection$1] = textDirection;
    this[S$.textBaseline] = textBaseline;
    this[S$.isFocused] = isFocused;
    this[S$.expands] = expands;
    if (!(decoration != null)) dart.assertFailed(null, I[74], 1691, 15, "decoration != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[74], 1692, 15, "textDirection != null");
    if (!(textBaseline != null)) dart.assertFailed(null, I[74], 1693, 15, "textBaseline != null");
    if (!(expands != null)) dart.assertFailed(null, I[74], 1694, 15, "expands != null");
    input_decorator._Decorator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._Decorator.prototype;
  dart.addTypeTests(input_decorator._Decorator);
  dart.addTypeCaches(input_decorator._Decorator);
  dart.setMethodSignature(input_decorator._Decorator, () => ({
    __proto__: dart.getMethods(input_decorator._Decorator.__proto__),
    createElement: dart.fnType(input_decorator._DecorationElement, []),
    createRenderObject: dart.fnType(input_decorator._RenderDecoration, [framework.BuildContext])
  }));
  dart.setLibraryUri(input_decorator._Decorator, I[75]);
  dart.setFieldSignature(input_decorator._Decorator, () => ({
    __proto__: dart.getFields(input_decorator._Decorator.__proto__),
    decoration: dart.finalFieldType(input_decorator._Decoration),
    textDirection: dart.finalFieldType(ui.TextDirection),
    textBaseline: dart.finalFieldType(ui.TextBaseline),
    textAlignVertical: dart.finalFieldType(dart.nullable(alignment.TextAlignVertical)),
    isFocused: dart.finalFieldType(core.bool),
    expands: dart.finalFieldType(core.bool)
  }));
  input_decorator._AffixText = class _AffixText extends framework.StatelessWidget {
    get labelIsFloating() {
      return this[S$.labelIsFloating];
    }
    set labelIsFloating(value) {
      super.labelIsFloating = value;
    }
    get text() {
      return this[S$.text$1];
    }
    set text(value) {
      super.text = value;
    }
    get style() {
      return this[S$.style$4];
    }
    set style(value) {
      super.style = value;
    }
    get child() {
      return this[S$.child$17];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let t36;
      if (context == null) dart.nullFailed(I[74], 1745, 29, "context");
      return text$.DefaultTextStyle.merge({style: this.style, child: new implicit_animations.AnimatedOpacity.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, opacity: dart.test(this.labelIsFloating) ? 1.0 : 0.0, child: (t36 = this.child, t36 == null ? this.text == null ? null : new text$.Text.new(dart.nullCheck(this.text), {style: this.style, $creationLocationd_0dea112b090073317d4: C[1728] || CT.C1728}) : t36), $creationLocationd_0dea112b090073317d4: C[1732] || CT.C1732})});
    }
  };
  (input_decorator._AffixText.new = function(opts) {
    let labelIsFloating = opts && 'labelIsFloating' in opts ? opts.labelIsFloating : null;
    if (labelIsFloating == null) dart.nullFailed(I[74], 1733, 19, "labelIsFloating");
    let text = opts && 'text' in opts ? opts.text : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.labelIsFloating] = labelIsFloating;
    this[S$.text$1] = text;
    this[S$.style$4] = style;
    this[S$.child$17] = child;
    input_decorator._AffixText.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._AffixText.prototype;
  dart.addTypeTests(input_decorator._AffixText);
  dart.addTypeCaches(input_decorator._AffixText);
  dart.setMethodSignature(input_decorator._AffixText, () => ({
    __proto__: dart.getMethods(input_decorator._AffixText.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(input_decorator._AffixText, I[75]);
  dart.setFieldSignature(input_decorator._AffixText, () => ({
    __proto__: dart.getFields(input_decorator._AffixText.__proto__),
    labelIsFloating: dart.finalFieldType(core.bool),
    text: dart.finalFieldType(dart.nullable(core.String)),
    style: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  input_decorator.InputDecorator = class InputDecorator extends framework.StatefulWidget {
    get decoration() {
      return this[S$.decoration$1];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get baseStyle() {
      return this[S$.baseStyle];
    }
    set baseStyle(value) {
      super.baseStyle = value;
    }
    get textAlign() {
      return this[S$.textAlign$1];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textAlignVertical() {
      return this[S$.textAlignVertical$1];
    }
    set textAlignVertical(value) {
      super.textAlignVertical = value;
    }
    get isFocused() {
      return this[S$.isFocused$1];
    }
    set isFocused(value) {
      super.isFocused = value;
    }
    get isHovering() {
      return this[S$.isHovering$1];
    }
    set isHovering(value) {
      super.isHovering = value;
    }
    get expands() {
      return this[S$.expands$1];
    }
    set expands(value) {
      super.expands = value;
    }
    get isEmpty() {
      return this[S$.isEmpty];
    }
    set isEmpty(value) {
      super.isEmpty = value;
    }
    get child() {
      return this[S$.child$18];
    }
    set child(value) {
      super.child = value;
    }
    get [S$._labelShouldWithdraw]() {
      return !dart.test(this.isEmpty) || dart.test(this.isFocused) && dart.test(this.decoration.enabled);
    }
    createState() {
      return new input_decorator._InputDecoratorState.new();
    }
    static containerOf(context) {
      let t36;
      if (context == null) dart.nullFailed(I[74], 1902, 46, "context");
      let result = context.findAncestorRenderObjectOfType(input_decorator._RenderDecoration);
      t36 = result;
      return t36 == null ? null : t36.container;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[74], 1908, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfInputDecoration()).new("decoration", this.decoration));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("baseStyle", this.baseStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isFocused", this.isFocused));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("expands", this.expands, {defaultValue: false}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isEmpty", this.isEmpty));
    }
  };
  (input_decorator.InputDecorator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    if (decoration == null) dart.nullFailed(I[74], 1786, 19, "decoration");
    let baseStyle = opts && 'baseStyle' in opts ? opts.baseStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : false;
    if (isFocused == null) dart.nullFailed(I[74], 1790, 10, "isFocused");
    let isHovering = opts && 'isHovering' in opts ? opts.isHovering : false;
    if (isHovering == null) dart.nullFailed(I[74], 1791, 10, "isHovering");
    let expands = opts && 'expands' in opts ? opts.expands : false;
    if (expands == null) dart.nullFailed(I[74], 1792, 10, "expands");
    let isEmpty = opts && 'isEmpty' in opts ? opts.isEmpty : false;
    if (isEmpty == null) dart.nullFailed(I[74], 1793, 10, "isEmpty");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.decoration$1] = decoration;
    this[S$.baseStyle] = baseStyle;
    this[S$.textAlign$1] = textAlign;
    this[S$.textAlignVertical$1] = textAlignVertical;
    this[S$.isFocused$1] = isFocused;
    this[S$.isHovering$1] = isHovering;
    this[S$.expands$1] = expands;
    this[S$.isEmpty] = isEmpty;
    this[S$.child$18] = child;
    if (!(decoration != null)) dart.assertFailed(null, I[74], 1795, 15, "decoration != null");
    if (!(isFocused != null)) dart.assertFailed(null, I[74], 1796, 15, "isFocused != null");
    if (!(isHovering != null)) dart.assertFailed(null, I[74], 1797, 15, "isHovering != null");
    if (!(expands != null)) dart.assertFailed(null, I[74], 1798, 15, "expands != null");
    if (!(isEmpty != null)) dart.assertFailed(null, I[74], 1799, 15, "isEmpty != null");
    input_decorator.InputDecorator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator.InputDecorator.prototype;
  dart.addTypeTests(input_decorator.InputDecorator);
  dart.addTypeCaches(input_decorator.InputDecorator);
  dart.setMethodSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecorator.__proto__),
    createState: dart.fnType(input_decorator._InputDecoratorState, [])
  }));
  dart.setGetterSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getGetters(input_decorator.InputDecorator.__proto__),
    [S$._labelShouldWithdraw]: core.bool
  }));
  dart.setLibraryUri(input_decorator.InputDecorator, I[75]);
  dart.setFieldSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getFields(input_decorator.InputDecorator.__proto__),
    decoration: dart.finalFieldType(input_decorator.InputDecoration),
    baseStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    textAlignVertical: dart.finalFieldType(dart.nullable(alignment.TextAlignVertical)),
    isFocused: dart.finalFieldType(core.bool),
    isHovering: dart.finalFieldType(core.bool),
    expands: dart.finalFieldType(core.bool),
    isEmpty: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const State_TickerProviderStateMixin$36$1 = class State_TickerProviderStateMixin extends framework.State$(input_decorator.InputDecorator) {};
  (State_TickerProviderStateMixin$36$1.new = function() {
    ticker_provider.TickerProviderStateMixin$(input_decorator.InputDecorator)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$1.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$1.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$1, ticker_provider.TickerProviderStateMixin$(input_decorator.InputDecorator));
  input_decorator._InputDecoratorState = class _InputDecoratorState extends State_TickerProviderStateMixin$36$1 {
    get [S$._floatingLabelController]() {
      let t36;
      return dart.test(this[S$.___InputDecoratorState__floatingLabelController_isSet]) ? (t36 = this[S$.___InputDecoratorState__floatingLabelController], t36) : dart.throw(new _internal.LateError.fieldNI("_floatingLabelController"));
    }
    set [S$._floatingLabelController](t36) {
      if (t36 == null) dart.nullFailed(I[74], 1919, 28, "null");
      this[S$.___InputDecoratorState__floatingLabelController_isSet] = true;
      this[S$.___InputDecoratorState__floatingLabelController] = t36;
    }
    get [S$._shakingLabelController]() {
      let t37;
      return dart.test(this[S$.___InputDecoratorState__shakingLabelController_isSet]) ? (t37 = this[S$.___InputDecoratorState__shakingLabelController], t37) : dart.throw(new _internal.LateError.fieldNI("_shakingLabelController"));
    }
    set [S$._shakingLabelController](t37) {
      if (t37 == null) dart.nullFailed(I[74], 1920, 28, "null");
      this[S$.___InputDecoratorState__shakingLabelController_isSet] = true;
      this[S$.___InputDecoratorState__shakingLabelController] = t37;
    }
    initState() {
      super.initState();
      let labelIsInitiallyFloating = this.widget.decoration.floatingLabelBehavior == input_decorator.FloatingLabelBehavior.always || this.widget.decoration.floatingLabelBehavior != input_decorator.FloatingLabelBehavior.never && dart.test(this.widget.decoration.hasFloatingPlaceholder) && dart.test(this.widget[S$._labelShouldWithdraw]);
      this[S$._floatingLabelController] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this, value: labelIsInitiallyFloating ? 1.0 : 0.0});
      this[S$._floatingLabelController].addListener(dart.bind(this, S$._handleChange));
      this[S$._shakingLabelController] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[S$._effectiveDecoration] = null;
    }
    dispose() {
      this[S$._floatingLabelController].dispose();
      this[S$._shakingLabelController].dispose();
      super.dispose();
    }
    [S$._handleChange]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    get decoration() {
      this[S$._effectiveDecoration] == null ? this[S$._effectiveDecoration] = this.widget.decoration.applyDefaults(theme$.Theme.of(this.context).inputDecorationTheme) : null;
      return this[S$._effectiveDecoration];
    }
    get textAlign() {
      return this.widget.textAlign;
    }
    get isFocused() {
      return this.widget.isFocused;
    }
    get isHovering() {
      return dart.test(this.widget.isHovering) && dart.test(dart.nullCheck(this.decoration).enabled);
    }
    get isEmpty() {
      return this.widget.isEmpty;
    }
    get [S$._floatingLabelEnabled]() {
      return dart.test(dart.nullCheck(this.decoration).hasFloatingPlaceholder) && dart.nullCheck(this.decoration).floatingLabelBehavior != input_decorator.FloatingLabelBehavior.never;
    }
    didUpdateWidget(old) {
      let t38;
      input_decorator.InputDecorator.as(old);
      if (old == null) dart.nullFailed(I[74], 1981, 39, "old");
      super.didUpdateWidget(old);
      if (!dart.equals(this.widget.decoration, old.decoration)) this[S$._effectiveDecoration] = null;
      let floatBehaviorChanged = this.widget.decoration.floatingLabelBehavior != old.decoration.floatingLabelBehavior || this.widget.decoration.hasFloatingPlaceholder != old.decoration.hasFloatingPlaceholder;
      if (this.widget[S$._labelShouldWithdraw] != old[S$._labelShouldWithdraw] || floatBehaviorChanged) {
        if (dart.test(this[S$._floatingLabelEnabled]) && (dart.test(this.widget[S$._labelShouldWithdraw]) || this.widget.decoration.floatingLabelBehavior == input_decorator.FloatingLabelBehavior.always))
          this[S$._floatingLabelController].forward();
        else
          this[S$._floatingLabelController].reverse();
      }
      let errorText = dart.nullCheck(this.decoration).errorText;
      let oldErrorText = old.decoration.errorText;
      if (dart.test(this[S$._floatingLabelController].isCompleted) && errorText != null && errorText != oldErrorText) {
        t38 = this[S$._shakingLabelController];
        (() => {
          t38.value = 0.0;
          t38.forward();
          return t38;
        })();
      }
    }
    [S$._getActiveColor](themeData) {
      if (themeData == null) dart.nullFailed(I[74], 2007, 35, "themeData");
      if (dart.test(this.isFocused)) {
        switch (themeData.brightness) {
          case C[544] || CT.C544:
          {
            return themeData.accentColor;
          }
          case C[543] || CT.C543:
          {
            return themeData.primaryColor;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      return themeData.hintColor;
    }
    [S$._getDefaultBorderColor](themeData) {
      let t38, t38$;
      if (themeData == null) dart.nullFailed(I[74], 2019, 42, "themeData");
      if (dart.test(this.isFocused)) {
        switch (themeData.brightness) {
          case C[544] || CT.C544:
          {
            return themeData.accentColor;
          }
          case C[543] || CT.C543:
          {
            return themeData.primaryColor;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      if (dart.nullCheck(dart.nullCheck(this.decoration).filled)) {
        return themeData.hintColor;
      }
      let enabledColor = themeData.colorScheme.onSurface.withOpacity(0.38);
      if (dart.test(this.isHovering)) {
        let hoverColor = (t38$ = (t38 = dart.nullCheck(this.decoration).hoverColor, t38 == null ? themeData.inputDecorationTheme.hoverColor : t38), t38$ == null ? themeData.hoverColor : t38$);
        return ui.Color.alphaBlend(hoverColor.withOpacity(0.12), enabledColor);
      }
      return enabledColor;
    }
    [S$._getFillColor$1](themeData) {
      if (themeData == null) dart.nullFailed(I[74], 2039, 33, "themeData");
      if (dart.nullCheck(this.decoration).filled !== true) return colors$.Colors.transparent;
      if (dart.nullCheck(this.decoration).fillColor != null) return dart.nullCheck(dart.nullCheck(this.decoration).fillColor);
      let darkEnabled = C[1738] || CT.C1738;
      let darkDisabled = C[1739] || CT.C1739;
      let lightEnabled = C[1740] || CT.C1740;
      let lightDisabled = C[1741] || CT.C1741;
      switch (themeData.brightness) {
        case C[544] || CT.C544:
        {
          return dart.test(dart.nullCheck(this.decoration).enabled) ? darkEnabled : darkDisabled;
        }
        case C[543] || CT.C543:
        {
          return dart.test(dart.nullCheck(this.decoration).enabled) ? lightEnabled : lightDisabled;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S$._getHoverColor](themeData) {
      let t38, t38$;
      if (themeData == null) dart.nullFailed(I[74], 2060, 34, "themeData");
      if (dart.nullCheck(this.decoration).filled == null || !dart.nullCheck(dart.nullCheck(this.decoration).filled) || dart.test(this.isFocused) || !dart.test(dart.nullCheck(this.decoration).enabled)) return colors$.Colors.transparent;
      t38$ = (t38 = dart.nullCheck(this.decoration).hoverColor, t38 == null ? themeData.inputDecorationTheme.hoverColor : t38);
      return t38$ == null ? themeData.hoverColor : t38$;
    }
    [S$._getDefaultIconColor](themeData) {
      if (themeData == null) dart.nullFailed(I[74], 2066, 40, "themeData");
      if (!dart.test(dart.nullCheck(this.decoration).enabled) && !dart.test(this.isFocused)) return themeData.disabledColor;
      switch (themeData.brightness) {
        case C[544] || CT.C544:
        {
          return colors$.Colors.white70;
        }
        case C[543] || CT.C543:
        {
          return colors$.Colors.black45;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    get [S$._hasInlineLabel]() {
      return !dart.test(this.widget[S$._labelShouldWithdraw]) && dart.nullCheck(this.decoration).labelText != null && dart.nullCheck(this.decoration).floatingLabelBehavior != input_decorator.FloatingLabelBehavior.always;
    }
    get [S$._shouldShowLabel]() {
      return dart.test(this[S$._hasInlineLabel]) || dart.test(this[S$._floatingLabelEnabled]);
    }
    [S$._getInlineStyle](themeData) {
      if (themeData == null) dart.nullFailed(I[74], 2093, 39, "themeData");
      return dart.nullCheck(themeData.textTheme.subtitle1).merge(this.widget.baseStyle).copyWith({color: dart.test(dart.nullCheck(this.decoration).enabled) ? themeData.hintColor : themeData.disabledColor});
    }
    [S$._getFloatingLabelStyle](themeData) {
      let t38, t38$;
      if (themeData == null) dart.nullFailed(I[74], 2098, 46, "themeData");
      let color = dart.nullCheck(this.decoration).errorText != null ? (t38$ = (t38 = dart.nullCheck(this.decoration).errorStyle, t38 == null ? null : t38.color), t38$ == null ? themeData.errorColor : t38$) : this[S$._getActiveColor](themeData);
      let style = dart.nullCheck(themeData.textTheme.subtitle1).merge(this.widget.baseStyle);
      return dart.test(themeData.fixTextFieldOutlineLabel) ? style.copyWith({height: 1.0, color: dart.test(dart.nullCheck(this.decoration).enabled) ? color : themeData.disabledColor}).merge(dart.nullCheck(this.decoration).labelStyle) : style.copyWith({color: dart.test(dart.nullCheck(this.decoration).enabled) ? color : themeData.disabledColor}).merge(dart.nullCheck(this.decoration).labelStyle);
    }
    [S$._getHelperStyle](themeData) {
      if (themeData == null) dart.nullFailed(I[74], 2116, 39, "themeData");
      let color = dart.test(dart.nullCheck(this.decoration).enabled) ? themeData.hintColor : colors$.Colors.transparent;
      return dart.nullCheck(themeData.textTheme.caption).copyWith({color: color}).merge(dart.nullCheck(this.decoration).helperStyle);
    }
    [S$._getErrorStyle](themeData) {
      if (themeData == null) dart.nullFailed(I[74], 2121, 38, "themeData");
      let color = dart.test(dart.nullCheck(this.decoration).enabled) ? themeData.errorColor : colors$.Colors.transparent;
      return dart.nullCheck(themeData.textTheme.caption).copyWith({color: color}).merge(dart.nullCheck(this.decoration).errorStyle);
    }
    [S$._getDefaultBorder](themeData) {
      let t38, t38$, t38$0, t38$1;
      if (themeData == null) dart.nullFailed(I[74], 2126, 43, "themeData");
      if (dart.equals((t38 = dart.nullCheck(this.decoration).border, t38 == null ? null : t38.borderSide), borders.BorderSide.none)) {
        return dart.nullCheck(dart.nullCheck(this.decoration).border);
      }
      let borderColor = null;
      if (dart.test(dart.nullCheck(this.decoration).enabled) || dart.test(this.isFocused)) {
        borderColor = dart.nullCheck(this.decoration).errorText == null ? this[S$._getDefaultBorderColor](themeData) : themeData.errorColor;
      } else {
        borderColor = dart.nullCheck(this.decoration).filled === true && (t38$ = dart.nullCheck(this.decoration).border, t38$ == null ? null : t38$.isOutline) !== true ? colors$.Colors.transparent : themeData.disabledColor;
      }
      let borderWeight = null;
      if (dart.test(dart.nullCheck(this.decoration).isCollapsed) || dart.equals((t38$0 = this.decoration, t38$0 == null ? null : t38$0.border), input_border.InputBorder.none) || !dart.test(dart.nullCheck(this.decoration).enabled))
        borderWeight = 0.0;
      else
        borderWeight = dart.test(this.isFocused) ? 2.0 : 1.0;
      let border = (t38$1 = dart.nullCheck(this.decoration).border, t38$1 == null ? C[1742] || CT.C1742 : t38$1);
      return border.copyWith({borderSide: new borders.BorderSide.new({color: borderColor, width: borderWeight})});
    }
    build(context) {
      let t38, t38$, t38$0, t38$1, t38$2, t38$3, t38$4, t38$5, t38$6, t38$7;
      if (context == null) dart.nullFailed(I[74], 2153, 29, "context");
      let themeData = theme$.Theme.of(context);
      let inlineStyle = this[S$._getInlineStyle](themeData);
      let textBaseline = dart.nullCheck(inlineStyle.textBaseline);
      let hintStyle = inlineStyle.merge(dart.nullCheck(this.decoration).hintStyle);
      let hint = dart.nullCheck(this.decoration).hintText == null ? null : new implicit_animations.AnimatedOpacity.new({opacity: dart.test(this.isEmpty) && !dart.test(this[S$._hasInlineLabel]) ? 1.0 : 0.0, duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, alwaysIncludeSemantics: true, child: new text$.Text.new(dart.nullCheck(dart.nullCheck(this.decoration).hintText), {style: hintStyle, textDirection: dart.nullCheck(this.decoration).hintTextDirection, overflow: paragraph.TextOverflow.ellipsis, textAlign: this.textAlign, maxLines: dart.nullCheck(this.decoration).hintMaxLines, $creationLocationd_0dea112b090073317d4: C[1745] || CT.C1745}), $creationLocationd_0dea112b090073317d4: C[1753] || CT.C1753});
      let isError = dart.nullCheck(this.decoration).errorText != null;
      let border = null;
      if (!dart.test(dart.nullCheck(this.decoration).enabled))
        border = isError ? dart.nullCheck(this.decoration).errorBorder : dart.nullCheck(this.decoration).disabledBorder;
      else if (dart.test(this.isFocused))
        border = isError ? dart.nullCheck(this.decoration).focusedErrorBorder : dart.nullCheck(this.decoration).focusedBorder;
      else
        border = isError ? dart.nullCheck(this.decoration).errorBorder : dart.nullCheck(this.decoration).enabledBorder;
      border == null ? border = this[S$._getDefaultBorder](themeData) : null;
      let container = new input_decorator._BorderContainer.new({border: border, gap: this[S$._borderGap], gapAnimation: this[S$._floatingLabelController].view, fillColor: this[S$._getFillColor$1](themeData), hoverColor: this[S$._getHoverColor](themeData), isHovering: this.isHovering, $creationLocationd_0dea112b090073317d4: C[1760] || CT.C1760});
      let inlineLabelStyle = dart.test(themeData.fixTextFieldOutlineLabel) ? inlineStyle.merge(dart.nullCheck(this.decoration).labelStyle).copyWith({height: 1.0}) : inlineStyle.merge(dart.nullCheck(this.decoration).labelStyle);
      let label = dart.nullCheck(this.decoration).labelText == null ? null : new input_decorator._Shaker.new({animation: this[S$._shakingLabelController].view, child: new implicit_animations.AnimatedOpacity.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, opacity: dart.test(this[S$._shouldShowLabel]) ? 1.0 : 0.0, child: new implicit_animations.AnimatedDefaultTextStyle.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, style: dart.test(this.widget[S$._labelShouldWithdraw]) ? this[S$._getFloatingLabelStyle](themeData) : inlineLabelStyle, child: new text$.Text.new(dart.nullCheck(dart.nullCheck(this.decoration).labelText), {overflow: paragraph.TextOverflow.ellipsis, textAlign: this.textAlign, $creationLocationd_0dea112b090073317d4: C[1768] || CT.C1768}), $creationLocationd_0dea112b090073317d4: C[1773] || CT.C1773}), $creationLocationd_0dea112b090073317d4: C[1779] || CT.C1779}), $creationLocationd_0dea112b090073317d4: C[1785] || CT.C1785});
      let prefix = dart.nullCheck(this.decoration).prefix == null && dart.nullCheck(this.decoration).prefixText == null ? null : new input_decorator._AffixText.new({labelIsFloating: this.widget[S$._labelShouldWithdraw], text: dart.nullCheck(this.decoration).prefixText, style: (t38 = dart.nullCheck(this.decoration).prefixStyle, t38 == null ? hintStyle : t38), child: dart.nullCheck(this.decoration).prefix, $creationLocationd_0dea112b090073317d4: C[1789] || CT.C1789});
      let suffix = dart.nullCheck(this.decoration).suffix == null && dart.nullCheck(this.decoration).suffixText == null ? null : new input_decorator._AffixText.new({labelIsFloating: this.widget[S$._labelShouldWithdraw], text: dart.nullCheck(this.decoration).suffixText, style: (t38$ = dart.nullCheck(this.decoration).suffixStyle, t38$ == null ? hintStyle : t38$), child: dart.nullCheck(this.decoration).suffix, $creationLocationd_0dea112b090073317d4: C[1795] || CT.C1795});
      let activeColor = this[S$._getActiveColor](themeData);
      let decorationIsDense = dart.nullCheck(this.decoration).isDense === true;
      let iconSize = decorationIsDense ? 18.0 : 24.0;
      let iconColor = dart.test(this.isFocused) ? activeColor : this[S$._getDefaultIconColor](themeData);
      let icon = dart.nullCheck(this.decoration).icon == null ? null : new basic.Padding.new({padding: C[1801] || CT.C1801, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: iconColor, size: iconSize}), child: dart.nullCheck(dart.nullCheck(this.decoration).icon)}), $creationLocationd_0dea112b090073317d4: C[1802] || CT.C1802});
      let prefixIcon = dart.nullCheck(this.decoration).prefixIcon == null ? null : new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new basic.ConstrainedBox.new({constraints: (t38$0 = dart.nullCheck(this.decoration).prefixIconConstraints, t38$0 == null ? themeData.visualDensity.effectiveConstraints(C[3] || CT.C3) : t38$0), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: iconColor, size: iconSize}), child: dart.nullCheck(dart.nullCheck(this.decoration).prefixIcon)}), $creationLocationd_0dea112b090073317d4: C[1806] || CT.C1806}), $creationLocationd_0dea112b090073317d4: C[1810] || CT.C1810});
      let suffixIcon = dart.nullCheck(this.decoration).suffixIcon == null ? null : new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new basic.ConstrainedBox.new({constraints: (t38$1 = dart.nullCheck(this.decoration).suffixIconConstraints, t38$1 == null ? themeData.visualDensity.effectiveConstraints(C[3] || CT.C3) : t38$1), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: iconColor, size: iconSize}), child: dart.nullCheck(dart.nullCheck(this.decoration).suffixIcon)}), $creationLocationd_0dea112b090073317d4: C[1815] || CT.C1815}), $creationLocationd_0dea112b090073317d4: C[1819] || CT.C1819});
      let helperError = new input_decorator._HelperError.new({textAlign: this.textAlign, helperText: dart.nullCheck(this.decoration).helperText, helperStyle: this[S$._getHelperStyle](themeData), helperMaxLines: dart.nullCheck(this.decoration).helperMaxLines, errorText: dart.nullCheck(this.decoration).errorText, errorStyle: this[S$._getErrorStyle](themeData), errorMaxLines: dart.nullCheck(this.decoration).errorMaxLines, $creationLocationd_0dea112b090073317d4: C[1824] || CT.C1824});
      let counter = null;
      if (dart.nullCheck(this.decoration).counter != null) {
        counter = dart.nullCheck(this.decoration).counter;
      } else if (dart.nullCheck(this.decoration).counterText != null && dart.nullCheck(this.decoration).counterText !== "") {
        counter = new basic.Semantics.new({container: true, liveRegion: this.isFocused, child: new text$.Text.new(dart.nullCheck(dart.nullCheck(this.decoration).counterText), {style: this[S$._getHelperStyle](themeData).merge(dart.nullCheck(this.decoration).counterStyle), overflow: paragraph.TextOverflow.ellipsis, semanticsLabel: dart.nullCheck(this.decoration).semanticCounterText, $creationLocationd_0dea112b090073317d4: C[1833] || CT.C1833}), $creationLocationd_0dea112b090073317d4: C[1839] || CT.C1839});
      }
      let textDirection = basic.Directionality.of(context);
      let decorationContentPadding = (t38$2 = dart.nullCheck(this.decoration).contentPadding, t38$2 == null ? null : t38$2.resolve(textDirection));
      let contentPadding = null;
      let floatingLabelHeight = null;
      if (dart.test(dart.nullCheck(this.decoration).isCollapsed)) {
        floatingLabelHeight = 0.0;
        contentPadding = (t38$3 = decorationContentPadding, t38$3 == null ? edge_insets.EdgeInsets.zero : t38$3);
      } else if (!dart.test(border.isOutline)) {
        floatingLabelHeight = (4.0 + 0.75 * dart.nullCheck(inlineLabelStyle.fontSize)) * dart.notNull(media_query.MediaQuery.textScaleFactorOf(context));
        if (dart.nullCheck(this.decoration).filled === true) {
          contentPadding = (t38$4 = decorationContentPadding, t38$4 == null ? decorationIsDense ? C[1844] || CT.C1844 : C[1845] || CT.C1845 : t38$4);
        } else {
          contentPadding = (t38$5 = decorationContentPadding, t38$5 == null ? decorationIsDense ? C[1846] || CT.C1846 : C[1847] || CT.C1847 : t38$5);
        }
      } else {
        floatingLabelHeight = 0.0;
        contentPadding = (t38$6 = decorationContentPadding, t38$6 == null ? decorationIsDense ? C[1848] || CT.C1848 : C[1849] || CT.C1849 : t38$6);
      }
      return new input_decorator._Decorator.new({decoration: new input_decorator._Decoration.new({contentPadding: contentPadding, isCollapsed: dart.nullCheck(this.decoration).isCollapsed, floatingLabelHeight: floatingLabelHeight, floatingLabelProgress: this[S$._floatingLabelController].value, border: border, borderGap: this[S$._borderGap], alignLabelWithHint: (t38$7 = dart.nullCheck(this.decoration).alignLabelWithHint, t38$7 == null ? false : t38$7), isDense: dart.nullCheck(this.decoration).isDense, visualDensity: themeData.visualDensity, icon: icon, input: this.widget.child, label: label, hint: hint, prefix: prefix, suffix: suffix, prefixIcon: prefixIcon, suffixIcon: suffixIcon, helperError: helperError, counter: counter, container: container, fixTextFieldOutlineLabel: themeData.fixTextFieldOutlineLabel}), textDirection: textDirection, textBaseline: textBaseline, textAlignVertical: this.widget.textAlignVertical, isFocused: this.isFocused, expands: this.widget.expands, $creationLocationd_0dea112b090073317d4: C[1850] || CT.C1850});
    }
  };
  (input_decorator._InputDecoratorState.new = function() {
    this[S$.___InputDecoratorState__floatingLabelController] = null;
    this[S$.___InputDecoratorState__floatingLabelController_isSet] = false;
    this[S$.___InputDecoratorState__shakingLabelController] = null;
    this[S$.___InputDecoratorState__shakingLabelController_isSet] = false;
    this[S$._borderGap] = new input_decorator._InputBorderGap.new();
    this[S$._effectiveDecoration] = null;
    input_decorator._InputDecoratorState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._InputDecoratorState.prototype;
  dart.addTypeTests(input_decorator._InputDecoratorState);
  dart.addTypeCaches(input_decorator._InputDecoratorState);
  dart.setMethodSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getMethods(input_decorator._InputDecoratorState.__proto__),
    [S$._handleChange]: dart.fnType(dart.void, []),
    [S$._getActiveColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getDefaultBorderColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getFillColor$1]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getHoverColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getDefaultIconColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getInlineStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getFloatingLabelStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getHelperStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getErrorStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getDefaultBorder]: dart.fnType(input_border.InputBorder, [theme_data.ThemeData]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getGetters(input_decorator._InputDecoratorState.__proto__),
    [S$._floatingLabelController]: animation_controller.AnimationController,
    [S$._shakingLabelController]: animation_controller.AnimationController,
    decoration: dart.nullable(input_decorator.InputDecoration),
    textAlign: dart.nullable(ui.TextAlign),
    isFocused: core.bool,
    isHovering: core.bool,
    isEmpty: core.bool,
    [S$._floatingLabelEnabled]: core.bool,
    [S$._hasInlineLabel]: core.bool,
    [S$._shouldShowLabel]: core.bool
  }));
  dart.setSetterSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getSetters(input_decorator._InputDecoratorState.__proto__),
    [S$._floatingLabelController]: animation_controller.AnimationController,
    [S$._shakingLabelController]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(input_decorator._InputDecoratorState, I[75]);
  dart.setFieldSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getFields(input_decorator._InputDecoratorState.__proto__),
    [S$.___InputDecoratorState__floatingLabelController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___InputDecoratorState__floatingLabelController_isSet]: dart.fieldType(core.bool),
    [S$.___InputDecoratorState__shakingLabelController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___InputDecoratorState__shakingLabelController_isSet]: dart.fieldType(core.bool),
    [S$._borderGap]: dart.finalFieldType(input_decorator._InputBorderGap),
    [S$._effectiveDecoration]: dart.fieldType(dart.nullable(input_decorator.InputDecoration))
  }));
  input_decorator.InputDecoration = class InputDecoration extends core.Object {
    get icon() {
      return this[S$.icon$5];
    }
    set icon(value) {
      super.icon = value;
    }
    get labelText() {
      return this[S$.labelText];
    }
    set labelText(value) {
      super.labelText = value;
    }
    get labelStyle() {
      return this[S$.labelStyle$3];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get helperText() {
      return this[S$.helperText$1];
    }
    set helperText(value) {
      super.helperText = value;
    }
    get helperStyle() {
      return this[S$.helperStyle$1];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[S$.helperMaxLines$1];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get hintText() {
      return this[S$.hintText];
    }
    set hintText(value) {
      super.hintText = value;
    }
    get hintStyle() {
      return this[S$.hintStyle];
    }
    set hintStyle(value) {
      super.hintStyle = value;
    }
    get hintTextDirection() {
      return this[S$.hintTextDirection];
    }
    set hintTextDirection(value) {
      super.hintTextDirection = value;
    }
    get hintMaxLines() {
      return this[S$.hintMaxLines];
    }
    set hintMaxLines(value) {
      super.hintMaxLines = value;
    }
    get errorText() {
      return this[S$.errorText$1];
    }
    set errorText(value) {
      super.errorText = value;
    }
    get errorStyle() {
      return this[S$.errorStyle$1];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[S$.errorMaxLines$1];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    get hasFloatingPlaceholder() {
      return this[S$.hasFloatingPlaceholder];
    }
    set hasFloatingPlaceholder(value) {
      super.hasFloatingPlaceholder = value;
    }
    get floatingLabelBehavior() {
      return this[S$.floatingLabelBehavior];
    }
    set floatingLabelBehavior(value) {
      super.floatingLabelBehavior = value;
    }
    get isDense() {
      return this[S$.isDense$2];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get contentPadding() {
      return this[S$.contentPadding$5];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[S$.isCollapsed$1];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get prefixIcon() {
      return this[S$.prefixIcon$1];
    }
    set prefixIcon(value) {
      super.prefixIcon = value;
    }
    get prefixIconConstraints() {
      return this[S$.prefixIconConstraints];
    }
    set prefixIconConstraints(value) {
      super.prefixIconConstraints = value;
    }
    get prefix() {
      return this[S$.prefix$1];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get prefixText() {
      return this[S$.prefixText];
    }
    set prefixText(value) {
      super.prefixText = value;
    }
    get prefixStyle() {
      return this[S$.prefixStyle];
    }
    set prefixStyle(value) {
      super.prefixStyle = value;
    }
    get suffixIcon() {
      return this[S$.suffixIcon$1];
    }
    set suffixIcon(value) {
      super.suffixIcon = value;
    }
    get suffix() {
      return this[S$.suffix$1];
    }
    set suffix(value) {
      super.suffix = value;
    }
    get suffixText() {
      return this[S$.suffixText];
    }
    set suffixText(value) {
      super.suffixText = value;
    }
    get suffixStyle() {
      return this[S$.suffixStyle];
    }
    set suffixStyle(value) {
      super.suffixStyle = value;
    }
    get suffixIconConstraints() {
      return this[S$.suffixIconConstraints];
    }
    set suffixIconConstraints(value) {
      super.suffixIconConstraints = value;
    }
    get counterText() {
      return this[S$0.counterText];
    }
    set counterText(value) {
      super.counterText = value;
    }
    get counter() {
      return this[S$0.counter$1];
    }
    set counter(value) {
      super.counter = value;
    }
    get counterStyle() {
      return this[S$0.counterStyle];
    }
    set counterStyle(value) {
      super.counterStyle = value;
    }
    get filled() {
      return this[S$0.filled];
    }
    set filled(value) {
      super.filled = value;
    }
    get fillColor() {
      return this[S$0.fillColor$4];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S$0.focusColor$7];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$0.hoverColor$8];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get errorBorder() {
      return this[S$0.errorBorder];
    }
    set errorBorder(value) {
      super.errorBorder = value;
    }
    get focusedBorder() {
      return this[S$0.focusedBorder];
    }
    set focusedBorder(value) {
      super.focusedBorder = value;
    }
    get focusedErrorBorder() {
      return this[S$0.focusedErrorBorder];
    }
    set focusedErrorBorder(value) {
      super.focusedErrorBorder = value;
    }
    get disabledBorder() {
      return this[S$0.disabledBorder];
    }
    set disabledBorder(value) {
      super.disabledBorder = value;
    }
    get enabledBorder() {
      return this[S$0.enabledBorder];
    }
    set enabledBorder(value) {
      super.enabledBorder = value;
    }
    get border() {
      return this[S$0.border$2];
    }
    set border(value) {
      super.border = value;
    }
    get enabled() {
      return this[S$0.enabled$1];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get semanticCounterText() {
      return this[S$0.semanticCounterText];
    }
    set semanticCounterText(value) {
      super.semanticCounterText = value;
    }
    get alignLabelWithHint() {
      return this[S$0.alignLabelWithHint$1];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    copyWith(opts) {
      let t38, t38$, t38$0, t38$1, t38$2, t38$3, t38$4, t38$5, t38$6, t38$7, t38$8, t38$9, t38$10, t38$11, t38$12, t38$13, t38$14, t38$15, t38$16, t38$17, t38$18, t38$19, t38$20, t38$21, t38$22, t38$23, t38$24, t38$25, t38$26, t38$27, t38$28, t38$29, t38$30, t38$31, t38$32, t38$33, t38$34, t38$35, t38$36, t38$37, t38$38, t38$39, t38$40, t38$41;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let labelText = opts && 'labelText' in opts ? opts.labelText : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let helperText = opts && 'helperText' in opts ? opts.helperText : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let hintText = opts && 'hintText' in opts ? opts.hintText : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
      let hintMaxLines = opts && 'hintMaxLines' in opts ? opts.hintMaxLines : null;
      let errorText = opts && 'errorText' in opts ? opts.errorText : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      let hasFloatingPlaceholder = opts && 'hasFloatingPlaceholder' in opts ? opts.hasFloatingPlaceholder : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
      let prefix = opts && 'prefix' in opts ? opts.prefix : null;
      let prefixText = opts && 'prefixText' in opts ? opts.prefixText : null;
      let prefixIconConstraints = opts && 'prefixIconConstraints' in opts ? opts.prefixIconConstraints : null;
      let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
      let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
      let suffix = opts && 'suffix' in opts ? opts.suffix : null;
      let suffixText = opts && 'suffixText' in opts ? opts.suffixText : null;
      let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
      let suffixIconConstraints = opts && 'suffixIconConstraints' in opts ? opts.suffixIconConstraints : null;
      let counter = opts && 'counter' in opts ? opts.counter : null;
      let counterText = opts && 'counterText' in opts ? opts.counterText : null;
      let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
      let filled = opts && 'filled' in opts ? opts.filled : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
      let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
      let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
      let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
      let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let enabled = opts && 'enabled' in opts ? opts.enabled : null;
      let semanticCounterText = opts && 'semanticCounterText' in opts ? opts.semanticCounterText : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
      return new input_decorator.InputDecoration.new({icon: (t38 = icon, t38 == null ? this.icon : t38), labelText: (t38$ = labelText, t38$ == null ? this.labelText : t38$), labelStyle: (t38$0 = labelStyle, t38$0 == null ? this.labelStyle : t38$0), helperText: (t38$1 = helperText, t38$1 == null ? this.helperText : t38$1), helperStyle: (t38$2 = helperStyle, t38$2 == null ? this.helperStyle : t38$2), helperMaxLines: (t38$3 = helperMaxLines, t38$3 == null ? this.helperMaxLines : t38$3), hintText: (t38$4 = hintText, t38$4 == null ? this.hintText : t38$4), hintStyle: (t38$5 = hintStyle, t38$5 == null ? this.hintStyle : t38$5), hintTextDirection: (t38$6 = hintTextDirection, t38$6 == null ? this.hintTextDirection : t38$6), hintMaxLines: (t38$7 = hintMaxLines, t38$7 == null ? this.hintMaxLines : t38$7), errorText: (t38$8 = errorText, t38$8 == null ? this.errorText : t38$8), errorStyle: (t38$9 = errorStyle, t38$9 == null ? this.errorStyle : t38$9), errorMaxLines: (t38$10 = errorMaxLines, t38$10 == null ? this.errorMaxLines : t38$10), hasFloatingPlaceholder: (t38$11 = hasFloatingPlaceholder, t38$11 == null ? this.hasFloatingPlaceholder : t38$11), floatingLabelBehavior: (t38$12 = floatingLabelBehavior, t38$12 == null ? this.floatingLabelBehavior : t38$12), isCollapsed: (t38$13 = isCollapsed, t38$13 == null ? this.isCollapsed : t38$13), isDense: (t38$14 = isDense, t38$14 == null ? this.isDense : t38$14), contentPadding: (t38$15 = contentPadding, t38$15 == null ? this.contentPadding : t38$15), prefixIcon: (t38$16 = prefixIcon, t38$16 == null ? this.prefixIcon : t38$16), prefix: (t38$17 = prefix, t38$17 == null ? this.prefix : t38$17), prefixText: (t38$18 = prefixText, t38$18 == null ? this.prefixText : t38$18), prefixStyle: (t38$19 = prefixStyle, t38$19 == null ? this.prefixStyle : t38$19), prefixIconConstraints: (t38$20 = prefixIconConstraints, t38$20 == null ? this.prefixIconConstraints : t38$20), suffixIcon: (t38$21 = suffixIcon, t38$21 == null ? this.suffixIcon : t38$21), suffix: (t38$22 = suffix, t38$22 == null ? this.suffix : t38$22), suffixText: (t38$23 = suffixText, t38$23 == null ? this.suffixText : t38$23), suffixStyle: (t38$24 = suffixStyle, t38$24 == null ? this.suffixStyle : t38$24), suffixIconConstraints: (t38$25 = suffixIconConstraints, t38$25 == null ? this.suffixIconConstraints : t38$25), counter: (t38$26 = counter, t38$26 == null ? this.counter : t38$26), counterText: (t38$27 = counterText, t38$27 == null ? this.counterText : t38$27), counterStyle: (t38$28 = counterStyle, t38$28 == null ? this.counterStyle : t38$28), filled: (t38$29 = filled, t38$29 == null ? this.filled : t38$29), fillColor: (t38$30 = fillColor, t38$30 == null ? this.fillColor : t38$30), focusColor: (t38$31 = focusColor, t38$31 == null ? this.focusColor : t38$31), hoverColor: (t38$32 = hoverColor, t38$32 == null ? this.hoverColor : t38$32), errorBorder: (t38$33 = errorBorder, t38$33 == null ? this.errorBorder : t38$33), focusedBorder: (t38$34 = focusedBorder, t38$34 == null ? this.focusedBorder : t38$34), focusedErrorBorder: (t38$35 = focusedErrorBorder, t38$35 == null ? this.focusedErrorBorder : t38$35), disabledBorder: (t38$36 = disabledBorder, t38$36 == null ? this.disabledBorder : t38$36), enabledBorder: (t38$37 = enabledBorder, t38$37 == null ? this.enabledBorder : t38$37), border: (t38$38 = border, t38$38 == null ? this.border : t38$38), enabled: (t38$39 = enabled, t38$39 == null ? this.enabled : t38$39), semanticCounterText: (t38$40 = semanticCounterText, t38$40 == null ? this.semanticCounterText : t38$40), alignLabelWithHint: (t38$41 = alignLabelWithHint, t38$41 == null ? this.alignLabelWithHint : t38$41)});
    }
    applyDefaults(theme) {
      let t38, t38$, t38$0, t38$1, t38$2, t38$3, t38$4, t38$5, t38$6, t38$7, t38$8, t38$9, t38$10, t38$11, t38$12, t38$13, t38$14, t38$15, t38$16, t38$17, t38$18, t38$19, t38$20;
      if (theme == null) dart.nullFailed(I[74], 3409, 54, "theme");
      return this.copyWith({labelStyle: (t38 = this.labelStyle, t38 == null ? theme.labelStyle : t38), helperStyle: (t38$ = this.helperStyle, t38$ == null ? theme.helperStyle : t38$), helperMaxLines: (t38$0 = this.helperMaxLines, t38$0 == null ? theme.helperMaxLines : t38$0), hintStyle: (t38$1 = this.hintStyle, t38$1 == null ? theme.hintStyle : t38$1), errorStyle: (t38$2 = this.errorStyle, t38$2 == null ? theme.errorStyle : t38$2), errorMaxLines: (t38$3 = this.errorMaxLines, t38$3 == null ? theme.errorMaxLines : t38$3), hasFloatingPlaceholder: this.hasFloatingPlaceholder, floatingLabelBehavior: (t38$4 = this.floatingLabelBehavior, t38$4 == null ? theme.floatingLabelBehavior : t38$4), isCollapsed: this.isCollapsed, isDense: (t38$5 = this.isDense, t38$5 == null ? theme.isDense : t38$5), contentPadding: (t38$6 = this.contentPadding, t38$6 == null ? theme.contentPadding : t38$6), prefixStyle: (t38$7 = this.prefixStyle, t38$7 == null ? theme.prefixStyle : t38$7), suffixStyle: (t38$8 = this.suffixStyle, t38$8 == null ? theme.suffixStyle : t38$8), counterStyle: (t38$9 = this.counterStyle, t38$9 == null ? theme.counterStyle : t38$9), filled: (t38$10 = this.filled, t38$10 == null ? theme.filled : t38$10), fillColor: (t38$11 = this.fillColor, t38$11 == null ? theme.fillColor : t38$11), focusColor: (t38$12 = this.focusColor, t38$12 == null ? theme.focusColor : t38$12), hoverColor: (t38$13 = this.hoverColor, t38$13 == null ? theme.hoverColor : t38$13), errorBorder: (t38$14 = this.errorBorder, t38$14 == null ? theme.errorBorder : t38$14), focusedBorder: (t38$15 = this.focusedBorder, t38$15 == null ? theme.focusedBorder : t38$15), focusedErrorBorder: (t38$16 = this.focusedErrorBorder, t38$16 == null ? theme.focusedErrorBorder : t38$16), disabledBorder: (t38$17 = this.disabledBorder, t38$17 == null ? theme.disabledBorder : t38$17), enabledBorder: (t38$18 = this.enabledBorder, t38$18 == null ? theme.enabledBorder : t38$18), border: (t38$19 = this.border, t38$19 == null ? theme.border : t38$19), alignLabelWithHint: (t38$20 = this.alignLabelWithHint, t38$20 == null ? theme.alignLabelWithHint : t38$20)});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return input_decorator.InputDecoration.is(other) && dart.equals(other.icon, this.icon) && other.labelText == this.labelText && dart.equals(other.labelStyle, this.labelStyle) && other.helperText == this.helperText && dart.equals(other.helperStyle, this.helperStyle) && other.helperMaxLines == this.helperMaxLines && other.hintText == this.hintText && dart.equals(other.hintStyle, this.hintStyle) && other.hintTextDirection == this.hintTextDirection && other.hintMaxLines == this.hintMaxLines && other.errorText == this.errorText && dart.equals(other.errorStyle, this.errorStyle) && other.errorMaxLines == this.errorMaxLines && other.hasFloatingPlaceholder == this.hasFloatingPlaceholder && other.floatingLabelBehavior == this.floatingLabelBehavior && other.isDense == this.isDense && dart.equals(other.contentPadding, this.contentPadding) && other.isCollapsed == this.isCollapsed && dart.equals(other.prefixIcon, this.prefixIcon) && dart.equals(other.prefix, this.prefix) && other.prefixText == this.prefixText && dart.equals(other.prefixStyle, this.prefixStyle) && dart.equals(other.prefixIconConstraints, this.prefixIconConstraints) && dart.equals(other.suffixIcon, this.suffixIcon) && dart.equals(other.suffix, this.suffix) && other.suffixText == this.suffixText && dart.equals(other.suffixStyle, this.suffixStyle) && dart.equals(other.suffixIconConstraints, this.suffixIconConstraints) && dart.equals(other.counter, this.counter) && other.counterText == this.counterText && dart.equals(other.counterStyle, this.counterStyle) && other.filled == this.filled && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.errorBorder, this.errorBorder) && dart.equals(other.focusedBorder, this.focusedBorder) && dart.equals(other.focusedErrorBorder, this.focusedErrorBorder) && dart.equals(other.disabledBorder, this.disabledBorder) && dart.equals(other.enabledBorder, this.enabledBorder) && dart.equals(other.border, this.border) && other.enabled == this.enabled && other.semanticCounterText == this.semanticCounterText && other.alignLabelWithHint == this.alignLabelWithHint;
    }
    get hashCode() {
      let values = T$.JSArrayOfObjectN().of([this.icon, this.labelText, this.labelStyle, this.helperText, this.helperStyle, this.helperMaxLines, this.hintText, this.hintStyle, this.hintTextDirection, this.hintMaxLines, this.errorText, this.errorStyle, this.errorMaxLines, this.hasFloatingPlaceholder, this.floatingLabelBehavior, this.isDense, this.contentPadding, this.isCollapsed, this.filled, this.fillColor, this.focusColor, this.hoverColor, this.border, this.enabled, this.prefixIcon, this.prefix, this.prefixText, this.prefixStyle, this.prefixIconConstraints, this.suffixIcon, this.suffix, this.suffixText, this.suffixStyle, this.suffixIconConstraints, this.counter, this.counterText, this.counterStyle, this.errorBorder, this.focusedBorder, this.focusedErrorBorder, this.disabledBorder, this.enabledBorder, this.border, this.enabled, this.semanticCounterText, this.alignLabelWithHint]);
      return ui.hashList(values);
    }
    toString() {
      let t39;
      let description = (() => {
        let t38 = T$.JSArrayOfString().of([]);
        if (this.icon != null) t38[S.$add]("icon: " + dart.str(this.icon));
        if (this.labelText != null) t38[S.$add]("labelText: \"" + dart.str(this.labelText) + "\"");
        if (this.helperText != null) t38[S.$add]("helperText: \"" + dart.str(this.helperText) + "\"");
        if (this.helperMaxLines != null) t38[S.$add]("helperMaxLines: \"" + dart.str(this.helperMaxLines) + "\"");
        if (this.hintText != null) t38[S.$add]("hintText: \"" + dart.str(this.hintText) + "\"");
        if (this.hintMaxLines != null) t38[S.$add]("hintMaxLines: \"" + dart.str(this.hintMaxLines) + "\"");
        if (this.errorText != null) t38[S.$add]("errorText: \"" + dart.str(this.errorText) + "\"");
        if (this.errorStyle != null) t38[S.$add]("errorStyle: \"" + dart.str(this.errorStyle) + "\"");
        if (this.errorMaxLines != null) t38[S.$add]("errorMaxLines: \"" + dart.str(this.errorMaxLines) + "\"");
        if (this.hasFloatingPlaceholder === false) t38[S.$add]("hasFloatingPlaceholder: false");
        if (this.floatingLabelBehavior != null) t38[S.$add]("floatingLabelBehavior: " + dart.str(this.floatingLabelBehavior));
        if (dart.test((t39 = this.isDense, t39 == null ? false : t39))) t38[S.$add]("isDense: " + dart.str(this.isDense));
        if (this.contentPadding != null) t38[S.$add]("contentPadding: " + dart.str(this.contentPadding));
        if (dart.test(this.isCollapsed)) t38[S.$add]("isCollapsed: " + dart.str(this.isCollapsed));
        if (this.prefixIcon != null) t38[S.$add]("prefixIcon: " + dart.str(this.prefixIcon));
        if (this.prefix != null) t38[S.$add]("prefix: " + dart.str(this.prefix));
        if (this.prefixText != null) t38[S.$add]("prefixText: " + dart.str(this.prefixText));
        if (this.prefixStyle != null) t38[S.$add]("prefixStyle: " + dart.str(this.prefixStyle));
        if (this.prefixIconConstraints != null) t38[S.$add]("prefixIconConstraints: " + dart.str(this.prefixIconConstraints));
        if (this.suffixIcon != null) t38[S.$add]("suffixIcon: " + dart.str(this.suffixIcon));
        if (this.suffix != null) t38[S.$add]("suffix: " + dart.str(this.suffix));
        if (this.suffixText != null) t38[S.$add]("suffixText: " + dart.str(this.suffixText));
        if (this.suffixStyle != null) t38[S.$add]("suffixStyle: " + dart.str(this.suffixStyle));
        if (this.suffixIconConstraints != null) t38[S.$add]("suffixIconConstraints: " + dart.str(this.suffixIconConstraints));
        if (this.counter != null) t38[S.$add]("counter: " + dart.str(this.counter));
        if (this.counterText != null) t38[S.$add]("counterText: " + dart.str(this.counterText));
        if (this.counterStyle != null) t38[S.$add]("counterStyle: " + dart.str(this.counterStyle));
        if (this.filled === true) t38[S.$add]("filled: true");
        if (this.fillColor != null) t38[S.$add]("fillColor: " + dart.str(this.fillColor));
        if (this.focusColor != null) t38[S.$add]("focusColor: " + dart.str(this.focusColor));
        if (this.hoverColor != null) t38[S.$add]("hoverColor: " + dart.str(this.hoverColor));
        if (this.errorBorder != null) t38[S.$add]("errorBorder: " + dart.str(this.errorBorder));
        if (this.focusedBorder != null) t38[S.$add]("focusedBorder: " + dart.str(this.focusedBorder));
        if (this.focusedErrorBorder != null) t38[S.$add]("focusedErrorBorder: " + dart.str(this.focusedErrorBorder));
        if (this.disabledBorder != null) t38[S.$add]("disabledBorder: " + dart.str(this.disabledBorder));
        if (this.enabledBorder != null) t38[S.$add]("enabledBorder: " + dart.str(this.enabledBorder));
        if (this.border != null) t38[S.$add]("border: " + dart.str(this.border));
        if (!dart.test(this.enabled)) t38[S.$add]("enabled: false");
        if (this.semanticCounterText != null) t38[S.$add]("semanticCounterText: " + dart.str(this.semanticCounterText));
        if (this.alignLabelWithHint != null) t38[S.$add]("alignLabelWithHint: " + dart.str(this.alignLabelWithHint));
        return t38;
      })();
      return "InputDecoration(" + dart.str(description[S$0.$join](", ")) + ")";
    }
  };
  (input_decorator.InputDecoration.new = function(opts) {
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let labelText = opts && 'labelText' in opts ? opts.labelText : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let helperText = opts && 'helperText' in opts ? opts.helperText : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let hintText = opts && 'hintText' in opts ? opts.hintText : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
    let hintMaxLines = opts && 'hintMaxLines' in opts ? opts.hintMaxLines : null;
    let errorText = opts && 'errorText' in opts ? opts.errorText : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let hasFloatingPlaceholder = opts && 'hasFloatingPlaceholder' in opts ? opts.hasFloatingPlaceholder : true;
    if (hasFloatingPlaceholder == null) dart.nullFailed(I[74], 2522, 10, "hasFloatingPlaceholder");
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : false;
    if (isCollapsed == null) dart.nullFailed(I[74], 2524, 10, "isCollapsed");
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
    let prefixIconConstraints = opts && 'prefixIconConstraints' in opts ? opts.prefixIconConstraints : null;
    let prefix = opts && 'prefix' in opts ? opts.prefix : null;
    let prefixText = opts && 'prefixText' in opts ? opts.prefixText : null;
    let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
    let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
    let suffix = opts && 'suffix' in opts ? opts.suffix : null;
    let suffixText = opts && 'suffixText' in opts ? opts.suffixText : null;
    let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
    let suffixIconConstraints = opts && 'suffixIconConstraints' in opts ? opts.suffixIconConstraints : null;
    let counter = opts && 'counter' in opts ? opts.counter : null;
    let counterText = opts && 'counterText' in opts ? opts.counterText : null;
    let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
    let filled = opts && 'filled' in opts ? opts.filled : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
    let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
    let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
    let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
    let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    if (enabled == null) dart.nullFailed(I[74], 2550, 10, "enabled");
    let semanticCounterText = opts && 'semanticCounterText' in opts ? opts.semanticCounterText : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
    this[S$.icon$5] = icon;
    this[S$.labelText] = labelText;
    this[S$.labelStyle$3] = labelStyle;
    this[S$.helperText$1] = helperText;
    this[S$.helperStyle$1] = helperStyle;
    this[S$.helperMaxLines$1] = helperMaxLines;
    this[S$.hintText] = hintText;
    this[S$.hintStyle] = hintStyle;
    this[S$.hintTextDirection] = hintTextDirection;
    this[S$.hintMaxLines] = hintMaxLines;
    this[S$.errorText$1] = errorText;
    this[S$.errorStyle$1] = errorStyle;
    this[S$.errorMaxLines$1] = errorMaxLines;
    this[S$.hasFloatingPlaceholder] = hasFloatingPlaceholder;
    this[S$.floatingLabelBehavior] = floatingLabelBehavior;
    this[S$.isCollapsed$1] = isCollapsed;
    this[S$.isDense$2] = isDense;
    this[S$.contentPadding$5] = contentPadding;
    this[S$.prefixIcon$1] = prefixIcon;
    this[S$.prefixIconConstraints] = prefixIconConstraints;
    this[S$.prefix$1] = prefix;
    this[S$.prefixText] = prefixText;
    this[S$.prefixStyle] = prefixStyle;
    this[S$.suffixIcon$1] = suffixIcon;
    this[S$.suffix$1] = suffix;
    this[S$.suffixText] = suffixText;
    this[S$.suffixStyle] = suffixStyle;
    this[S$.suffixIconConstraints] = suffixIconConstraints;
    this[S$0.counter$1] = counter;
    this[S$0.counterText] = counterText;
    this[S$0.counterStyle] = counterStyle;
    this[S$0.filled] = filled;
    this[S$0.fillColor$4] = fillColor;
    this[S$0.focusColor$7] = focusColor;
    this[S$0.hoverColor$8] = hoverColor;
    this[S$0.errorBorder] = errorBorder;
    this[S$0.focusedBorder] = focusedBorder;
    this[S$0.focusedErrorBorder] = focusedErrorBorder;
    this[S$0.disabledBorder] = disabledBorder;
    this[S$0.enabledBorder] = enabledBorder;
    this[S$0.border$2] = border;
    this[S$0.enabled$1] = enabled;
    this[S$0.semanticCounterText] = semanticCounterText;
    this[S$0.alignLabelWithHint$1] = alignLabelWithHint;
    if (!(enabled != null)) dart.assertFailed(null, I[74], 2553, 15, "enabled != null");
    if (!!(prefix != null && prefixText != null)) dart.assertFailed("Declaring both prefix and prefixText is not supported.", I[74], 2554, 15, "!(prefix != null && prefixText != null)");
    if (!!(suffix != null && suffixText != null)) dart.assertFailed("Declaring both suffix and suffixText is not supported.", I[74], 2555, 15, "!(suffix != null && suffixText != null)");
    ;
  }).prototype = input_decorator.InputDecoration.prototype;
  (input_decorator.InputDecoration.collapsed = function(opts) {
    let hintText = opts && 'hintText' in opts ? opts.hintText : null;
    let hasFloatingPlaceholder = opts && 'hasFloatingPlaceholder' in opts ? opts.hasFloatingPlaceholder : true;
    if (hasFloatingPlaceholder == null) dart.nullFailed(I[74], 2568, 10, "hasFloatingPlaceholder");
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
    let filled = opts && 'filled' in opts ? opts.filled : false;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let border = opts && 'border' in opts ? opts.border : C[1858] || CT.C1858;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    if (enabled == null) dart.nullFailed(I[74], 2577, 10, "enabled");
    this[S$.hintText] = hintText;
    this[S$.hasFloatingPlaceholder] = hasFloatingPlaceholder;
    this[S$.floatingLabelBehavior] = floatingLabelBehavior;
    this[S$.hintStyle] = hintStyle;
    this[S$.hintTextDirection] = hintTextDirection;
    this[S$0.filled] = filled;
    this[S$0.fillColor$4] = fillColor;
    this[S$0.focusColor$7] = focusColor;
    this[S$0.hoverColor$8] = hoverColor;
    this[S$0.border$2] = border;
    this[S$0.enabled$1] = enabled;
    if (!(enabled != null)) dart.assertFailed(null, I[74], 2578, 15, "enabled != null");
    if (!!(!dart.test(hasFloatingPlaceholder) && floatingLabelBehavior == input_decorator.FloatingLabelBehavior.always)) dart.assertFailed("hasFloatingPlaceholder=false conflicts with FloatingLabelBehavior.always", I[74], 2579, 15, "!(!hasFloatingPlaceholder && identical(floatingLabelBehavior, FloatingLabelBehavior.always))");
    this[S$.icon$5] = null;
    this[S$.labelText] = null;
    this[S$.labelStyle$3] = null;
    this[S$.helperText$1] = null;
    this[S$.helperStyle$1] = null;
    this[S$.helperMaxLines$1] = null;
    this[S$.hintMaxLines] = null;
    this[S$.errorText$1] = null;
    this[S$.errorStyle$1] = null;
    this[S$.errorMaxLines$1] = null;
    this[S$.isDense$2] = false;
    this[S$.contentPadding$5] = edge_insets.EdgeInsets.zero;
    this[S$.isCollapsed$1] = true;
    this[S$.prefixIcon$1] = null;
    this[S$.prefix$1] = null;
    this[S$.prefixText] = null;
    this[S$.prefixStyle] = null;
    this[S$.prefixIconConstraints] = null;
    this[S$.suffix$1] = null;
    this[S$.suffixIcon$1] = null;
    this[S$.suffixText] = null;
    this[S$.suffixStyle] = null;
    this[S$.suffixIconConstraints] = null;
    this[S$0.counter$1] = null;
    this[S$0.counterText] = null;
    this[S$0.counterStyle] = null;
    this[S$0.errorBorder] = null;
    this[S$0.focusedBorder] = null;
    this[S$0.focusedErrorBorder] = null;
    this[S$0.disabledBorder] = null;
    this[S$0.enabledBorder] = null;
    this[S$0.semanticCounterText] = null;
    this[S$0.alignLabelWithHint$1] = false;
    ;
  }).prototype = input_decorator.InputDecoration.prototype;
  dart.addTypeTests(input_decorator.InputDecoration);
  dart.addTypeCaches(input_decorator.InputDecoration);
  dart.setMethodSignature(input_decorator.InputDecoration, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecoration.__proto__),
    copyWith: dart.fnType(input_decorator.InputDecoration, [], {alignLabelWithHint: dart.nullable(core.bool), border: dart.nullable(input_border.InputBorder), contentPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), counter: dart.nullable(framework.Widget), counterStyle: dart.nullable(text_style.TextStyle), counterText: dart.nullable(core.String), disabledBorder: dart.nullable(input_border.InputBorder), enabled: dart.nullable(core.bool), enabledBorder: dart.nullable(input_border.InputBorder), errorBorder: dart.nullable(input_border.InputBorder), errorMaxLines: dart.nullable(core.int), errorStyle: dart.nullable(text_style.TextStyle), errorText: dart.nullable(core.String), fillColor: dart.nullable(ui.Color), filled: dart.nullable(core.bool), floatingLabelBehavior: dart.nullable(input_decorator.FloatingLabelBehavior), focusColor: dart.nullable(ui.Color), focusedBorder: dart.nullable(input_border.InputBorder), focusedErrorBorder: dart.nullable(input_border.InputBorder), hasFloatingPlaceholder: dart.nullable(core.bool), helperMaxLines: dart.nullable(core.int), helperStyle: dart.nullable(text_style.TextStyle), helperText: dart.nullable(core.String), hintMaxLines: dart.nullable(core.int), hintStyle: dart.nullable(text_style.TextStyle), hintText: dart.nullable(core.String), hintTextDirection: dart.nullable(ui.TextDirection), hoverColor: dart.nullable(ui.Color), icon: dart.nullable(framework.Widget), isCollapsed: dart.nullable(core.bool), isDense: dart.nullable(core.bool), labelStyle: dart.nullable(text_style.TextStyle), labelText: dart.nullable(core.String), prefix: dart.nullable(framework.Widget), prefixIcon: dart.nullable(framework.Widget), prefixIconConstraints: dart.nullable(box$.BoxConstraints), prefixStyle: dart.nullable(text_style.TextStyle), prefixText: dart.nullable(core.String), semanticCounterText: dart.nullable(core.String), suffix: dart.nullable(framework.Widget), suffixIcon: dart.nullable(framework.Widget), suffixIconConstraints: dart.nullable(box$.BoxConstraints), suffixStyle: dart.nullable(text_style.TextStyle), suffixText: dart.nullable(core.String)}, {}),
    applyDefaults: dart.fnType(input_decorator.InputDecoration, [input_decorator.InputDecorationTheme])
  }));
  dart.setLibraryUri(input_decorator.InputDecoration, I[75]);
  dart.setFieldSignature(input_decorator.InputDecoration, () => ({
    __proto__: dart.getFields(input_decorator.InputDecoration.__proto__),
    icon: dart.finalFieldType(dart.nullable(framework.Widget)),
    labelText: dart.finalFieldType(dart.nullable(core.String)),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperText: dart.finalFieldType(dart.nullable(core.String)),
    helperStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    hintText: dart.finalFieldType(dart.nullable(core.String)),
    hintStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    hintTextDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    hintMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    errorText: dart.finalFieldType(dart.nullable(core.String)),
    errorStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    hasFloatingPlaceholder: dart.finalFieldType(core.bool),
    floatingLabelBehavior: dart.finalFieldType(dart.nullable(input_decorator.FloatingLabelBehavior)),
    isDense: dart.finalFieldType(dart.nullable(core.bool)),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    isCollapsed: dart.finalFieldType(core.bool),
    prefixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefixIconConstraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    prefix: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefixText: dart.finalFieldType(dart.nullable(core.String)),
    prefixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    suffixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffix: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffixText: dart.finalFieldType(dart.nullable(core.String)),
    suffixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    suffixIconConstraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    counterText: dart.finalFieldType(dart.nullable(core.String)),
    counter: dart.finalFieldType(dart.nullable(framework.Widget)),
    counterStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    filled: dart.finalFieldType(dart.nullable(core.bool)),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    errorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedErrorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    disabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    enabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    border: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    enabled: dart.finalFieldType(core.bool),
    semanticCounterText: dart.finalFieldType(dart.nullable(core.String)),
    alignLabelWithHint: dart.finalFieldType(dart.nullable(core.bool))
  }));
  dart.defineExtensionMethods(input_decorator.InputDecoration, ['_equals', 'toString']);
  dart.defineExtensionAccessors(input_decorator.InputDecoration, ['hashCode']);
  const Object_Diagnosticable$36$12 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$12.new = function() {
  }).prototype = Object_Diagnosticable$36$12.prototype;
  dart.applyMixin(Object_Diagnosticable$36$12, diagnostics.Diagnosticable);
  input_decorator.InputDecorationTheme = class InputDecorationTheme extends Object_Diagnosticable$36$12 {
    get labelStyle() {
      return this[S$0.labelStyle$4];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get helperStyle() {
      return this[S$0.helperStyle$2];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[S$0.helperMaxLines$2];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get hintStyle() {
      return this[S$0.hintStyle$1];
    }
    set hintStyle(value) {
      super.hintStyle = value;
    }
    get errorStyle() {
      return this[S$0.errorStyle$2];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[S$0.errorMaxLines$2];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    get hasFloatingPlaceholder() {
      return this[S$0.hasFloatingPlaceholder$1];
    }
    set hasFloatingPlaceholder(value) {
      super.hasFloatingPlaceholder = value;
    }
    get floatingLabelBehavior() {
      return this[S$0.floatingLabelBehavior$1];
    }
    set floatingLabelBehavior(value) {
      super.floatingLabelBehavior = value;
    }
    get isDense() {
      return this[S$0.isDense$3];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get contentPadding() {
      return this[S$0.contentPadding$6];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[S$0.isCollapsed$2];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get prefixStyle() {
      return this[S$0.prefixStyle$1];
    }
    set prefixStyle(value) {
      super.prefixStyle = value;
    }
    get suffixStyle() {
      return this[S$0.suffixStyle$1];
    }
    set suffixStyle(value) {
      super.suffixStyle = value;
    }
    get counterStyle() {
      return this[S$0.counterStyle$1];
    }
    set counterStyle(value) {
      super.counterStyle = value;
    }
    get filled() {
      return this[S$0.filled$1];
    }
    set filled(value) {
      super.filled = value;
    }
    get fillColor() {
      return this[S$0.fillColor$5];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S$0.focusColor$8];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$0.hoverColor$9];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get errorBorder() {
      return this[S$0.errorBorder$1];
    }
    set errorBorder(value) {
      super.errorBorder = value;
    }
    get focusedBorder() {
      return this[S$0.focusedBorder$1];
    }
    set focusedBorder(value) {
      super.focusedBorder = value;
    }
    get focusedErrorBorder() {
      return this[S$0.focusedErrorBorder$1];
    }
    set focusedErrorBorder(value) {
      super.focusedErrorBorder = value;
    }
    get disabledBorder() {
      return this[S$0.disabledBorder$1];
    }
    set disabledBorder(value) {
      super.disabledBorder = value;
    }
    get enabledBorder() {
      return this[S$0.enabledBorder$1];
    }
    set enabledBorder(value) {
      super.enabledBorder = value;
    }
    get border() {
      return this[S$0.border$3];
    }
    set border(value) {
      super.border = value;
    }
    get alignLabelWithHint() {
      return this[S$0.alignLabelWithHint$2];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    copyWith(opts) {
      let t39, t39$, t39$0, t39$1, t39$2, t39$3, t39$4, t39$5, t39$6, t39$7, t39$8, t39$9, t39$10, t39$11, t39$12, t39$13, t39$14, t39$15, t39$16, t39$17, t39$18, t39$19, t39$20, t39$21, t39$22;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      let hasFloatingPlaceholder = opts && 'hasFloatingPlaceholder' in opts ? opts.hasFloatingPlaceholder : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
      let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
      let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
      let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
      let filled = opts && 'filled' in opts ? opts.filled : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
      let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
      let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
      let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
      let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
      return new input_decorator.InputDecorationTheme.new({labelStyle: (t39 = labelStyle, t39 == null ? this.labelStyle : t39), helperStyle: (t39$ = helperStyle, t39$ == null ? this.helperStyle : t39$), helperMaxLines: (t39$0 = helperMaxLines, t39$0 == null ? this.helperMaxLines : t39$0), hintStyle: (t39$1 = hintStyle, t39$1 == null ? this.hintStyle : t39$1), errorStyle: (t39$2 = errorStyle, t39$2 == null ? this.errorStyle : t39$2), errorMaxLines: (t39$3 = errorMaxLines, t39$3 == null ? this.errorMaxLines : t39$3), hasFloatingPlaceholder: (t39$4 = hasFloatingPlaceholder, t39$4 == null ? this.hasFloatingPlaceholder : t39$4), floatingLabelBehavior: (t39$5 = floatingLabelBehavior, t39$5 == null ? this.floatingLabelBehavior : t39$5), isDense: (t39$6 = isDense, t39$6 == null ? this.isDense : t39$6), contentPadding: (t39$7 = contentPadding, t39$7 == null ? this.contentPadding : t39$7), isCollapsed: (t39$8 = isCollapsed, t39$8 == null ? this.isCollapsed : t39$8), prefixStyle: (t39$9 = prefixStyle, t39$9 == null ? this.prefixStyle : t39$9), suffixStyle: (t39$10 = suffixStyle, t39$10 == null ? this.suffixStyle : t39$10), counterStyle: (t39$11 = counterStyle, t39$11 == null ? this.counterStyle : t39$11), filled: (t39$12 = filled, t39$12 == null ? this.filled : t39$12), fillColor: (t39$13 = fillColor, t39$13 == null ? this.fillColor : t39$13), focusColor: (t39$14 = focusColor, t39$14 == null ? this.focusColor : t39$14), hoverColor: (t39$15 = hoverColor, t39$15 == null ? this.hoverColor : t39$15), errorBorder: (t39$16 = errorBorder, t39$16 == null ? this.errorBorder : t39$16), focusedBorder: (t39$17 = focusedBorder, t39$17 == null ? this.focusedBorder : t39$17), focusedErrorBorder: (t39$18 = focusedErrorBorder, t39$18 == null ? this.focusedErrorBorder : t39$18), disabledBorder: (t39$19 = disabledBorder, t39$19 == null ? this.disabledBorder : t39$19), enabledBorder: (t39$20 = enabledBorder, t39$20 == null ? this.enabledBorder : t39$20), border: (t39$21 = border, t39$21 == null ? this.border : t39$21), alignLabelWithHint: (t39$22 = alignLabelWithHint, t39$22 == null ? this.alignLabelWithHint : t39$22)});
    }
    get hashCode() {
      return ui.hashList([this.labelStyle, this.helperStyle, this.helperMaxLines, this.hintStyle, this.errorStyle, this.errorMaxLines, this.hasFloatingPlaceholder, this.floatingLabelBehavior, this.isDense, this.contentPadding, this.isCollapsed, this.prefixStyle, this.suffixStyle, this.counterStyle, this.filled, this.fillColor, this.focusColor, this.hoverColor, this.errorBorder, this.focusedBorder, this.focusedErrorBorder, this.disabledBorder, this.enabledBorder, this.border, this.alignLabelWithHint]);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return input_decorator.InputDecorationTheme.is(other) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.helperStyle, this.helperStyle) && other.helperMaxLines == this.helperMaxLines && dart.equals(other.hintStyle, this.hintStyle) && dart.equals(other.errorStyle, this.errorStyle) && other.errorMaxLines == this.errorMaxLines && other.isDense == this.isDense && dart.equals(other.contentPadding, this.contentPadding) && other.isCollapsed == this.isCollapsed && dart.equals(other.prefixStyle, this.prefixStyle) && dart.equals(other.suffixStyle, this.suffixStyle) && dart.equals(other.counterStyle, this.counterStyle) && other.floatingLabelBehavior == this.floatingLabelBehavior && other.filled == this.filled && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.errorBorder, this.errorBorder) && dart.equals(other.focusedBorder, this.focusedBorder) && dart.equals(other.focusedErrorBorder, this.focusedErrorBorder) && dart.equals(other.disabledBorder, this.disabledBorder) && dart.equals(other.enabledBorder, this.enabledBorder) && dart.equals(other.border, this.border) && other.alignLabelWithHint == this.alignLabelWithHint && dart.equals(other.disabledBorder, this.disabledBorder);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[74], 4086, 56, "properties");
      super.debugFillProperties(properties);
      let defaultTheme = C[1859] || CT.C1859;
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("labelStyle", this.labelStyle, {defaultValue: defaultTheme.labelStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("helperStyle", this.helperStyle, {defaultValue: defaultTheme.helperStyle}));
      properties.add(new diagnostics.IntProperty.new("helperMaxLines", this.helperMaxLines, {defaultValue: defaultTheme.helperMaxLines}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("hintStyle", this.hintStyle, {defaultValue: defaultTheme.hintStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("errorStyle", this.errorStyle, {defaultValue: defaultTheme.errorStyle}));
      properties.add(new diagnostics.IntProperty.new("errorMaxLines", this.errorMaxLines, {defaultValue: defaultTheme.errorMaxLines}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("hasFloatingPlaceholder", this.hasFloatingPlaceholder, {defaultValue: defaultTheme.hasFloatingPlaceholder}));
      properties.add(new (T$.DiagnosticsPropertyOfFloatingLabelBehavior()).new("floatingLabelBehavior", this.floatingLabelBehavior, {defaultValue: defaultTheme.floatingLabelBehavior}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isDense", this.isDense, {defaultValue: defaultTheme.isDense}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("contentPadding", this.contentPadding, {defaultValue: defaultTheme.contentPadding}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isCollapsed", this.isCollapsed, {defaultValue: defaultTheme.isCollapsed}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("prefixStyle", this.prefixStyle, {defaultValue: defaultTheme.prefixStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("suffixStyle", this.suffixStyle, {defaultValue: defaultTheme.suffixStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("counterStyle", this.counterStyle, {defaultValue: defaultTheme.counterStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("filled", this.filled, {defaultValue: defaultTheme.filled}));
      properties.add(new colors.ColorProperty.new("fillColor", this.fillColor, {defaultValue: defaultTheme.fillColor}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: defaultTheme.focusColor}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: defaultTheme.hoverColor}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("errorBorder", this.errorBorder, {defaultValue: defaultTheme.errorBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("focusedBorder", this.focusedBorder, {defaultValue: defaultTheme.focusedErrorBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("focusedErrorBorder", this.focusedErrorBorder, {defaultValue: defaultTheme.focusedErrorBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("disabledBorder", this.disabledBorder, {defaultValue: defaultTheme.disabledBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("enabledBorder", this.enabledBorder, {defaultValue: defaultTheme.enabledBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("border", this.border, {defaultValue: defaultTheme.border}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("alignLabelWithHint", this.alignLabelWithHint, {defaultValue: defaultTheme.alignLabelWithHint}));
    }
  };
  (input_decorator.InputDecorationTheme.new = function(opts) {
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let hasFloatingPlaceholder = opts && 'hasFloatingPlaceholder' in opts ? opts.hasFloatingPlaceholder : true;
    if (hasFloatingPlaceholder == null) dart.nullFailed(I[74], 3620, 10, "hasFloatingPlaceholder");
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : C[1713] || CT.C1713;
    if (floatingLabelBehavior == null) dart.nullFailed(I[74], 3621, 10, "floatingLabelBehavior");
    let isDense = opts && 'isDense' in opts ? opts.isDense : false;
    if (isDense == null) dart.nullFailed(I[74], 3622, 10, "isDense");
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : false;
    if (isCollapsed == null) dart.nullFailed(I[74], 3624, 10, "isCollapsed");
    let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
    let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
    let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
    let filled = opts && 'filled' in opts ? opts.filled : false;
    if (filled == null) dart.nullFailed(I[74], 3628, 10, "filled");
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
    let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
    let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
    let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
    let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : false;
    if (alignLabelWithHint == null) dart.nullFailed(I[74], 3638, 10, "alignLabelWithHint");
    this[S$0.labelStyle$4] = labelStyle;
    this[S$0.helperStyle$2] = helperStyle;
    this[S$0.helperMaxLines$2] = helperMaxLines;
    this[S$0.hintStyle$1] = hintStyle;
    this[S$0.errorStyle$2] = errorStyle;
    this[S$0.errorMaxLines$2] = errorMaxLines;
    this[S$0.hasFloatingPlaceholder$1] = hasFloatingPlaceholder;
    this[S$0.floatingLabelBehavior$1] = floatingLabelBehavior;
    this[S$0.isDense$3] = isDense;
    this[S$0.contentPadding$6] = contentPadding;
    this[S$0.isCollapsed$2] = isCollapsed;
    this[S$0.prefixStyle$1] = prefixStyle;
    this[S$0.suffixStyle$1] = suffixStyle;
    this[S$0.counterStyle$1] = counterStyle;
    this[S$0.filled$1] = filled;
    this[S$0.fillColor$5] = fillColor;
    this[S$0.focusColor$8] = focusColor;
    this[S$0.hoverColor$9] = hoverColor;
    this[S$0.errorBorder$1] = errorBorder;
    this[S$0.focusedBorder$1] = focusedBorder;
    this[S$0.focusedErrorBorder$1] = focusedErrorBorder;
    this[S$0.disabledBorder$1] = disabledBorder;
    this[S$0.enabledBorder$1] = enabledBorder;
    this[S$0.border$3] = border;
    this[S$0.alignLabelWithHint$2] = alignLabelWithHint;
    if (!(isDense != null)) dart.assertFailed(null, I[74], 3639, 15, "isDense != null");
    if (!(isCollapsed != null)) dart.assertFailed(null, I[74], 3640, 15, "isCollapsed != null");
    if (!(filled != null)) dart.assertFailed(null, I[74], 3641, 15, "filled != null");
    if (!(alignLabelWithHint != null)) dart.assertFailed(null, I[74], 3642, 15, "alignLabelWithHint != null");
    if (!!(!dart.test(hasFloatingPlaceholder) && floatingLabelBehavior == input_decorator.FloatingLabelBehavior.always)) dart.assertFailed("hasFloatingPlaceholder=false conflicts with FloatingLabelBehavior.always", I[74], 3643, 15, "!(!hasFloatingPlaceholder && identical(floatingLabelBehavior, FloatingLabelBehavior.always))");
    ;
  }).prototype = input_decorator.InputDecorationTheme.prototype;
  dart.addTypeTests(input_decorator.InputDecorationTheme);
  dart.addTypeCaches(input_decorator.InputDecorationTheme);
  dart.setMethodSignature(input_decorator.InputDecorationTheme, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecorationTheme.__proto__),
    copyWith: dart.fnType(input_decorator.InputDecorationTheme, [], {alignLabelWithHint: dart.nullable(core.bool), border: dart.nullable(input_border.InputBorder), contentPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), counterStyle: dart.nullable(text_style.TextStyle), disabledBorder: dart.nullable(input_border.InputBorder), enabledBorder: dart.nullable(input_border.InputBorder), errorBorder: dart.nullable(input_border.InputBorder), errorMaxLines: dart.nullable(core.int), errorStyle: dart.nullable(text_style.TextStyle), fillColor: dart.nullable(ui.Color), filled: dart.nullable(core.bool), floatingLabelBehavior: dart.nullable(input_decorator.FloatingLabelBehavior), focusColor: dart.nullable(ui.Color), focusedBorder: dart.nullable(input_border.InputBorder), focusedErrorBorder: dart.nullable(input_border.InputBorder), hasFloatingPlaceholder: dart.nullable(core.bool), helperMaxLines: dart.nullable(core.int), helperStyle: dart.nullable(text_style.TextStyle), hintStyle: dart.nullable(text_style.TextStyle), hoverColor: dart.nullable(ui.Color), isCollapsed: dart.nullable(core.bool), isDense: dart.nullable(core.bool), labelStyle: dart.nullable(text_style.TextStyle), prefixStyle: dart.nullable(text_style.TextStyle), suffixStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(input_decorator.InputDecorationTheme, I[75]);
  dart.setFieldSignature(input_decorator.InputDecorationTheme, () => ({
    __proto__: dart.getFields(input_decorator.InputDecorationTheme.__proto__),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    hintStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    hasFloatingPlaceholder: dart.finalFieldType(core.bool),
    floatingLabelBehavior: dart.finalFieldType(input_decorator.FloatingLabelBehavior),
    isDense: dart.finalFieldType(core.bool),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    isCollapsed: dart.finalFieldType(core.bool),
    prefixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    suffixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    counterStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    filled: dart.finalFieldType(core.bool),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    errorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedErrorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    disabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    enabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    border: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    alignLabelWithHint: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(input_decorator.InputDecorationTheme, ['_equals']);
  dart.defineExtensionAccessors(input_decorator.InputDecorationTheme, ['hashCode']);
  dart.defineLazy(input_decorator, {
    /*input_decorator._kTransitionDuration*/get _kTransitionDuration() {
      return C[334] || CT.C334;
    },
    /*input_decorator._kTransitionCurve*/get _kTransitionCurve() {
      return C[307] || CT.C307;
    },
    /*input_decorator._kFinalLabelScale*/get _kFinalLabelScale() {
      return 0.75;
    }
  }, false);
  ink_splash._InkSplashFactory = class _InkSplashFactory extends ink_well.InteractiveInkFeatureFactory {
    create(opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      if (controller == null) dart.nullFailed(I[76], 50, 36, "controller");
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      if (referenceBox == null) dart.nullFailed(I[76], 51, 24, "referenceBox");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[76], 52, 21, "position");
      let color = opts && 'color' in opts ? opts.color : null;
      if (color == null) dart.nullFailed(I[76], 53, 20, "color");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(I[76], 54, 28, "textDirection");
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      if (containedInkWell == null) dart.nullFailed(I[76], 55, 10, "containedInkWell");
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_splash.InkSplash.new({controller: controller, referenceBox: referenceBox, position: position, color: color, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved, textDirection: textDirection});
    }
  };
  (ink_splash._InkSplashFactory.new = function() {
    ink_splash._InkSplashFactory.__proto__.new.call(this);
    ;
  }).prototype = ink_splash._InkSplashFactory.prototype;
  dart.addTypeTests(ink_splash._InkSplashFactory);
  dart.addTypeCaches(ink_splash._InkSplashFactory);
  dart.setMethodSignature(ink_splash._InkSplashFactory, () => ({
    __proto__: dart.getMethods(ink_splash._InkSplashFactory.__proto__),
    create: dart.fnType(ink_well.InteractiveInkFeature, [], {borderRadius: dart.nullable(border_radius.BorderRadius), containedInkWell: core.bool, customBorder: dart.nullable(borders.ShapeBorder), onRemoved: dart.nullable(dart.fnType(dart.void, [])), radius: dart.nullable(core.double), rectCallback: dart.nullable(dart.fnType(ui.Rect, []))}, {color: ui.Color, controller: material.MaterialInkController, position: ui.Offset, referenceBox: box$.RenderBox, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(ink_splash._InkSplashFactory, I[77]);
  ink_splash.InkSplash = class InkSplash extends ink_well.InteractiveInkFeature {
    get [S$0._radius$1]() {
      let t39;
      return dart.test(this[S$0.__InkSplash__radius_isSet]) ? (t39 = this[S$0.__InkSplash__radius], t39) : dart.throw(new _internal.LateError.fieldNI("_radius"));
    }
    set [S$0._radius$1](t39) {
      if (t39 == null) dart.nullFailed(I[76], 164, 26, "null");
      this[S$0.__InkSplash__radius_isSet] = true;
      this[S$0.__InkSplash__radius] = t39;
    }
    get [S$0._radiusController$1]() {
      let t40;
      return dart.test(this[S$0.__InkSplash__radiusController_isSet]) ? (t40 = this[S$0.__InkSplash__radiusController], t40) : dart.throw(new _internal.LateError.fieldNI("_radiusController"));
    }
    set [S$0._radiusController$1](t40) {
      if (t40 == null) dart.nullFailed(I[76], 165, 28, "null");
      this[S$0.__InkSplash__radiusController_isSet] = true;
      this[S$0.__InkSplash__radiusController] = t40;
    }
    get [S$0._alpha]() {
      let t41;
      return dart.test(this[S$0.__InkSplash__alpha_isSet]) ? (t41 = this[S$0.__InkSplash__alpha], t41) : dart.throw(new _internal.LateError.fieldNI("_alpha"));
    }
    set [S$0._alpha](t41) {
      if (t41 == null) dart.nullFailed(I[76], 167, 23, "null");
      this[S$0.__InkSplash__alpha_isSet] = true;
      this[S$0.__InkSplash__alpha] = t41;
    }
    confirm() {
      let t42;
      let duration = (dart.notNull(this[S$0._targetRadius$1]) / 1)[S$.$floor]();
      t42 = this[S$0._radiusController$1];
      (() => {
        t42.duration = new core.Duration.new({milliseconds: duration});
        t42.forward();
        return t42;
      })();
      dart.nullCheck(this[S$0._alphaController]).forward();
    }
    cancel() {
      let t42;
      t42 = this[S$0._alphaController];
      t42 == null ? null : t42.forward();
    }
    [S$0._handleAlphaStatusChanged$1](status) {
      if (status == null) dart.nullFailed(I[76], 188, 50, "status");
      if (status == animation.AnimationStatus.completed) this.dispose();
    }
    dispose() {
      this[S$0._radiusController$1].dispose();
      dart.nullCheck(this[S$0._alphaController]).dispose();
      this[S$0._alphaController] = null;
      super.dispose();
    }
    paintFeature(canvas, transform) {
      let t42;
      if (canvas == null) dart.nullFailed(I[76], 202, 28, "canvas");
      if (transform == null) dart.nullFailed(I[76], 202, 44, "transform");
      let paint = (t42 = ui.Paint.new(), (() => {
        t42.color = this.color.withAlpha(this[S$0._alpha].value);
        return t42;
      })());
      let center = this[S$0._position$1];
      if (dart.test(this[S$0._repositionToReferenceBox])) center = ui.Offset.lerp(center, this.referenceBox.size.center(ui.Offset.zero), this[S$0._radiusController$1].value);
      this.paintInkCircle({canvas: canvas, transform: transform, paint: paint, center: dart.nullCheck(center), textDirection: this[S$0._textDirection$3], radius: this[S$0._radius$1].value, customBorder: this[S$0._customBorder$1], borderRadius: this[S$0._borderRadius$1], clipCallback: this[S$0._clipCallback$1]});
    }
  };
  (ink_splash.InkSplash.new = function(opts) {
    let t39, t39$, t39$0, t39$1;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[76], 117, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[76], 118, 24, "referenceBox");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[76], 119, 28, "textDirection");
    let position = opts && 'position' in opts ? opts.position : null;
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[76], 121, 20, "color");
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    if (containedInkWell == null) dart.nullFailed(I[76], 122, 10, "containedInkWell");
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S$0.__InkSplash__radius] = null;
    this[S$0.__InkSplash__radius_isSet] = false;
    this[S$0.__InkSplash__radiusController] = null;
    this[S$0.__InkSplash__radiusController_isSet] = false;
    this[S$0.__InkSplash__alpha] = null;
    this[S$0.__InkSplash__alpha_isSet] = false;
    this[S$0._alphaController] = null;
    if (!(textDirection != null)) dart.assertFailed(null, I[76], 128, 15, "textDirection != null");
    this[S$0._position$1] = position;
    this[S$0._borderRadius$1] = (t39 = borderRadius, t39 == null ? border_radius.BorderRadius.zero : t39);
    this[S$0._customBorder$1] = customBorder;
    this[S$0._targetRadius$1] = (t39$ = radius, t39$ == null ? ink_splash._getTargetRadius(referenceBox, containedInkWell, rectCallback, dart.nullCheck(position)) : t39$);
    this[S$0._clipCallback$1] = ink_splash._getClipCallback(referenceBox, containedInkWell, rectCallback);
    this[S$0._repositionToReferenceBox] = !dart.test(containedInkWell);
    this[S$0._textDirection$3] = textDirection;
    ink_splash.InkSplash.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, color: color, onRemoved: onRemoved});
    if (!(this[S$0._borderRadius$1] != null)) dart.assertFailed(null, I[76], 137, 12, "_borderRadius != null");
    this[S$0._radiusController$1] = (t39$0 = new animation_controller.AnimationController.new({duration: ink_splash._kUnconfirmedSplashDuration, vsync: controller.vsync}), (() => {
      t39$0.addListener(dart.bind(controller, 'markNeedsPaint'));
      t39$0.forward();
      return t39$0;
    })());
    this[S$0._radius$1] = this[S$0._radiusController$1].drive(core.double, new (T$.TweenOfdouble()).new({begin: 0, end: this[S$0._targetRadius$1]}));
    this[S$0._alphaController] = (t39$1 = new animation_controller.AnimationController.new({duration: ink_splash._kSplashFadeDuration, vsync: controller.vsync}), (() => {
      t39$1.addListener(dart.bind(controller, 'markNeedsPaint'));
      t39$1.addStatusListener(dart.bind(this, S$0._handleAlphaStatusChanged$1));
      return t39$1;
    })());
    this[S$0._alpha] = dart.nullCheck(this[S$0._alphaController]).drive(core.int, new tween.IntTween.new({begin: color.alpha, end: 0}));
    controller.addInkFeature(this);
  }).prototype = ink_splash.InkSplash.prototype;
  dart.addTypeTests(ink_splash.InkSplash);
  dart.addTypeCaches(ink_splash.InkSplash);
  dart.setMethodSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getMethods(ink_splash.InkSplash.__proto__),
    [S$0._handleAlphaStatusChanged$1]: dart.fnType(dart.void, [animation.AnimationStatus]),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getGetters(ink_splash.InkSplash.__proto__),
    [S$0._radius$1]: animation.Animation$(core.double),
    [S$0._radiusController$1]: animation_controller.AnimationController,
    [S$0._alpha]: animation.Animation$(core.int)
  }));
  dart.setSetterSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getSetters(ink_splash.InkSplash.__proto__),
    [S$0._radius$1]: animation.Animation$(core.double),
    [S$0._radiusController$1]: animation_controller.AnimationController,
    [S$0._alpha]: animation.Animation$(core.int)
  }));
  dart.setLibraryUri(ink_splash.InkSplash, I[77]);
  dart.setFieldSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getFields(ink_splash.InkSplash.__proto__),
    [S$0._position$1]: dart.finalFieldType(dart.nullable(ui.Offset)),
    [S$0._borderRadius$1]: dart.finalFieldType(border_radius.BorderRadius),
    [S$0._customBorder$1]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S$0._targetRadius$1]: dart.finalFieldType(core.double),
    [S$0._clipCallback$1]: dart.finalFieldType(dart.nullable(dart.fnType(ui.Rect, []))),
    [S$0._repositionToReferenceBox]: dart.finalFieldType(core.bool),
    [S$0._textDirection$3]: dart.finalFieldType(ui.TextDirection),
    [S$0.__InkSplash__radius]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$0.__InkSplash__radius_isSet]: dart.fieldType(core.bool),
    [S$0.__InkSplash__radiusController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$0.__InkSplash__radiusController_isSet]: dart.fieldType(core.bool),
    [S$0.__InkSplash__alpha]: dart.fieldType(dart.nullable(animation.Animation$(core.int))),
    [S$0.__InkSplash__alpha_isSet]: dart.fieldType(core.bool),
    [S$0._alphaController]: dart.fieldType(dart.nullable(animation_controller.AnimationController))
  }));
  dart.defineLazy(ink_splash.InkSplash, {
    /*ink_splash.InkSplash.splashFactory*/get splashFactory() {
      return C[1860] || CT.C1860;
    }
  }, false);
  ink_splash._getClipCallback = function _getClipCallback$(referenceBox, containedInkWell, rectCallback) {
    if (referenceBox == null) dart.nullFailed(I[76], 19, 42, "referenceBox");
    if (containedInkWell == null) dart.nullFailed(I[76], 19, 61, "containedInkWell");
    if (rectCallback != null) {
      if (!dart.test(containedInkWell)) dart.assertFailed(null, I[76], 21, 12, "containedInkWell");
      return rectCallback;
    }
    if (dart.test(containedInkWell)) return dart.fn(() => ui.Offset.zero['&'](referenceBox.size), T$.VoidToRect());
    return null;
  };
  ink_splash._getTargetRadius = function _getTargetRadius$(referenceBox, containedInkWell, rectCallback, position) {
    if (referenceBox == null) dart.nullFailed(I[76], 29, 35, "referenceBox");
    if (containedInkWell == null) dart.nullFailed(I[76], 29, 54, "containedInkWell");
    if (position == null) dart.nullFailed(I[76], 29, 107, "position");
    if (dart.test(containedInkWell)) {
      let size = rectCallback != null ? rectCallback().size : referenceBox.size;
      return ink_splash._getSplashRadiusForPositionInSize(size, position);
    }
    return 35;
  };
  ink_splash._getSplashRadiusForPositionInSize = function _getSplashRadiusForPositionInSize(bounds, position) {
    if (bounds == null) dart.nullFailed(I[76], 37, 47, "bounds");
    if (position == null) dart.nullFailed(I[76], 37, 62, "position");
    let d1 = position['-'](bounds.topLeft(ui.Offset.zero)).distance;
    let d2 = position['-'](bounds.topRight(ui.Offset.zero)).distance;
    let d3 = position['-'](bounds.bottomLeft(ui.Offset.zero)).distance;
    let d4 = position['-'](bounds.bottomRight(ui.Offset.zero)).distance;
    return math.max(core.double, math.max(core.double, d1, d2), math.max(core.double, d3, d4))[S$0.$ceilToDouble]();
  };
  dart.defineLazy(ink_splash, {
    /*ink_splash._kUnconfirmedSplashDuration*/get _kUnconfirmedSplashDuration() {
      return C[92] || CT.C92;
    },
    /*ink_splash._kSplashFadeDuration*/get _kSplashFadeDuration() {
      return C[334] || CT.C334;
    },
    /*ink_splash._kSplashInitialSize*/get _kSplashInitialSize() {
      return 0;
    },
    /*ink_splash._kSplashConfirmedVelocity*/get _kSplashConfirmedVelocity() {
      return 1;
    }
  }, false);
  const Object_Diagnosticable$36$13 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$13.new = function() {
  }).prototype = Object_Diagnosticable$36$13.prototype;
  dart.applyMixin(Object_Diagnosticable$36$13, diagnostics.Diagnosticable);
  button_style.ButtonStyle = class ButtonStyle extends Object_Diagnosticable$36$13 {
    get textStyle() {
      return this[S$0.textStyle$3];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get backgroundColor() {
      return this[S$0.backgroundColor$10];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$0.foregroundColor$1];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get overlayColor() {
      return this[S$0.overlayColor$4];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get shadowColor() {
      return this[S$0.shadowColor];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get elevation() {
      return this[S$0.elevation$14];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get padding() {
      return this[S$0.padding$7];
    }
    set padding(value) {
      super.padding = value;
    }
    get minimumSize() {
      return this[S$0.minimumSize];
    }
    set minimumSize(value) {
      super.minimumSize = value;
    }
    get side() {
      return this[S$0.side$1];
    }
    set side(value) {
      super.side = value;
    }
    get shape() {
      return this[S$0.shape$14];
    }
    set shape(value) {
      super.shape = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$9];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get visualDensity() {
      return this[S$0.visualDensity$8];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get tapTargetSize() {
      return this[S$0.tapTargetSize];
    }
    set tapTargetSize(value) {
      super.tapTargetSize = value;
    }
    get animationDuration() {
      return this[S$0.animationDuration$2];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$7];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get alignment() {
      return this[S$0.alignment$2];
    }
    set alignment(value) {
      super.alignment = value;
    }
    copyWith(opts) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7, t42$8, t42$9, t42$10, t42$11, t42$12, t42$13;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      return new button_style.ButtonStyle.new({textStyle: (t42 = textStyle, t42 == null ? this.textStyle : t42), backgroundColor: (t42$ = backgroundColor, t42$ == null ? this.backgroundColor : t42$), foregroundColor: (t42$0 = foregroundColor, t42$0 == null ? this.foregroundColor : t42$0), overlayColor: (t42$1 = overlayColor, t42$1 == null ? this.overlayColor : t42$1), shadowColor: (t42$2 = shadowColor, t42$2 == null ? this.shadowColor : t42$2), elevation: (t42$3 = elevation, t42$3 == null ? this.elevation : t42$3), padding: (t42$4 = padding, t42$4 == null ? this.padding : t42$4), minimumSize: (t42$5 = minimumSize, t42$5 == null ? this.minimumSize : t42$5), side: (t42$6 = side, t42$6 == null ? this.side : t42$6), shape: (t42$7 = shape, t42$7 == null ? this.shape : t42$7), mouseCursor: (t42$8 = mouseCursor, t42$8 == null ? this.mouseCursor : t42$8), visualDensity: (t42$9 = visualDensity, t42$9 == null ? this.visualDensity : t42$9), tapTargetSize: (t42$10 = tapTargetSize, t42$10 == null ? this.tapTargetSize : t42$10), animationDuration: (t42$11 = animationDuration, t42$11 == null ? this.animationDuration : t42$11), enableFeedback: (t42$12 = enableFeedback, t42$12 == null ? this.enableFeedback : t42$12), alignment: (t42$13 = alignment, t42$13 == null ? this.alignment : t42$13)});
    }
    merge(style) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7, t42$8, t42$9, t42$10, t42$11, t42$12, t42$13;
      if (style == null) return this;
      return this.copyWith({textStyle: (t42 = this.textStyle, t42 == null ? style.textStyle : t42), backgroundColor: (t42$ = this.backgroundColor, t42$ == null ? style.backgroundColor : t42$), foregroundColor: (t42$0 = this.foregroundColor, t42$0 == null ? style.foregroundColor : t42$0), overlayColor: (t42$1 = this.overlayColor, t42$1 == null ? style.overlayColor : t42$1), shadowColor: (t42$2 = this.shadowColor, t42$2 == null ? style.shadowColor : t42$2), elevation: (t42$3 = this.elevation, t42$3 == null ? style.elevation : t42$3), padding: (t42$4 = this.padding, t42$4 == null ? style.padding : t42$4), minimumSize: (t42$5 = this.minimumSize, t42$5 == null ? style.minimumSize : t42$5), side: (t42$6 = this.side, t42$6 == null ? style.side : t42$6), shape: (t42$7 = this.shape, t42$7 == null ? style.shape : t42$7), mouseCursor: (t42$8 = this.mouseCursor, t42$8 == null ? style.mouseCursor : t42$8), visualDensity: (t42$9 = this.visualDensity, t42$9 == null ? style.visualDensity : t42$9), tapTargetSize: (t42$10 = this.tapTargetSize, t42$10 == null ? style.tapTargetSize : t42$10), animationDuration: (t42$11 = this.animationDuration, t42$11 == null ? style.animationDuration : t42$11), enableFeedback: (t42$12 = this.enableFeedback, t42$12 == null ? style.enableFeedback : t42$12), alignment: (t42$13 = this.alignment, t42$13 == null ? style.alignment : t42$13)});
    }
    get hashCode() {
      return ui.hashValues(this.textStyle, this.backgroundColor, this.foregroundColor, this.overlayColor, this.shadowColor, this.elevation, this.padding, this.minimumSize, this.side, this.shape, this.mouseCursor, this.visualDensity, this.tapTargetSize, this.animationDuration, this.enableFeedback, this.alignment);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return button_style.ButtonStyle.is(other) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.foregroundColor, this.foregroundColor) && dart.equals(other.overlayColor, this.overlayColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.elevation, this.elevation) && dart.equals(other.padding, this.padding) && dart.equals(other.minimumSize, this.minimumSize) && dart.equals(other.side, this.side) && dart.equals(other.shape, this.shape) && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.visualDensity, this.visualDensity) && other.tapTargetSize == this.tapTargetSize && dart.equals(other.animationDuration, this.animationDuration) && other.enableFeedback == this.enableFeedback && dart.equals(other.alignment, this.alignment);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[78], 338, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN()).new("textStyle", this.textStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN()).new("minimumSize", this.minimumSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN()).new("side", this.side, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfMaterialTapTargetSize()).new("tapTargetSize", this.tapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("animationDuration", this.animationDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("enableFeedback", this.enableFeedback, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {defaultValue: null}));
    }
    static lerp(a, b, t) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7, t42$8, t42$9, t42$10, t42$11, t42$12, t42$13, t42$14, t42$15, t42$16, t42$17, t42$18, t42$19, t42$20, t42$21, t42$22, t42$23, t42$24, t42$25, t42$26, t42$27, t42$28, t42$29;
      if (t == null) dart.nullFailed(I[78], 359, 67, "t");
      if (!(t != null)) dart.assertFailed(null, I[78], 360, 13, "t != null");
      if (a == null && b == null) return null;
      return new button_style.ButtonStyle.new({textStyle: button_style.ButtonStyle._lerpProperties(T$.TextStyleN(), (t42 = a, t42 == null ? null : t42.textStyle), (t42$ = b, t42$ == null ? null : t42$.textStyle), t, C[1861] || CT.C1861), backgroundColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t42$0 = a, t42$0 == null ? null : t42$0.backgroundColor), (t42$1 = b, t42$1 == null ? null : t42$1.backgroundColor), t, C[1289] || CT.C1289), foregroundColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t42$2 = a, t42$2 == null ? null : t42$2.foregroundColor), (t42$3 = b, t42$3 == null ? null : t42$3.foregroundColor), t, C[1289] || CT.C1289), overlayColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t42$4 = a, t42$4 == null ? null : t42$4.overlayColor), (t42$5 = b, t42$5 == null ? null : t42$5.overlayColor), t, C[1289] || CT.C1289), shadowColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t42$6 = a, t42$6 == null ? null : t42$6.shadowColor), (t42$7 = b, t42$7 == null ? null : t42$7.shadowColor), t, C[1289] || CT.C1289), elevation: button_style.ButtonStyle._lerpProperties(T$.doubleN(), (t42$8 = a, t42$8 == null ? null : t42$8.elevation), (t42$9 = b, t42$9 == null ? null : t42$9.elevation), t, C[1320] || CT.C1320), padding: button_style.ButtonStyle._lerpProperties(T$.EdgeInsetsGeometryN(), (t42$10 = a, t42$10 == null ? null : t42$10.padding), (t42$11 = b, t42$11 == null ? null : t42$11.padding), t, C[1862] || CT.C1862), minimumSize: button_style.ButtonStyle._lerpProperties(T$.SizeN(), (t42$12 = a, t42$12 == null ? null : t42$12.minimumSize), (t42$13 = b, t42$13 == null ? null : t42$13.minimumSize), t, C[1863] || CT.C1863), side: button_style.ButtonStyle._lerpSides((t42$14 = a, t42$14 == null ? null : t42$14.side), (t42$15 = b, t42$15 == null ? null : t42$15.side), t), shape: button_style.ButtonStyle._lerpShapes((t42$16 = a, t42$16 == null ? null : t42$16.shape), (t42$17 = b, t42$17 == null ? null : t42$17.shape), t), mouseCursor: dart.notNull(t) < 0.5 ? (t42$18 = a, t42$18 == null ? null : t42$18.mouseCursor) : (t42$19 = b, t42$19 == null ? null : t42$19.mouseCursor), visualDensity: dart.notNull(t) < 0.5 ? (t42$20 = a, t42$20 == null ? null : t42$20.visualDensity) : (t42$21 = b, t42$21 == null ? null : t42$21.visualDensity), tapTargetSize: dart.notNull(t) < 0.5 ? (t42$22 = a, t42$22 == null ? null : t42$22.tapTargetSize) : (t42$23 = b, t42$23 == null ? null : t42$23.tapTargetSize), animationDuration: dart.notNull(t) < 0.5 ? (t42$24 = a, t42$24 == null ? null : t42$24.animationDuration) : (t42$25 = b, t42$25 == null ? null : t42$25.animationDuration), enableFeedback: dart.notNull(t) < 0.5 ? (t42$26 = a, t42$26 == null ? null : t42$26.enableFeedback) : (t42$27 = b, t42$27 == null ? null : t42$27.enableFeedback), alignment: alignment.AlignmentGeometry.lerp((t42$28 = a, t42$28 == null ? null : t42$28.alignment), (t42$29 = b, t42$29 == null ? null : t42$29.alignment), t)});
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[78], 383, 121, "t");
      if (lerpFunction == null) dart.nullFailed(I[78], 383, 152, "lerpFunction");
      if (a == null && b == null) return null;
      return new (button_style._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
    static _lerpSides(a, b, t) {
      if (t == null) dart.nullFailed(I[78], 391, 142, "t");
      if (a == null && b == null) return null;
      return new button_style._LerpSides.new(a, b, t);
    }
    static _lerpShapes(a, b, t) {
      if (t == null) dart.nullFailed(I[78], 398, 155, "t");
      if (a == null && b == null) return null;
      return new button_style._LerpShapes.new(a, b, t);
    }
  };
  (button_style.ButtonStyle.new = function(opts) {
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
    let side = opts && 'side' in opts ? opts.side : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    this[S$0.textStyle$3] = textStyle;
    this[S$0.backgroundColor$10] = backgroundColor;
    this[S$0.foregroundColor$1] = foregroundColor;
    this[S$0.overlayColor$4] = overlayColor;
    this[S$0.shadowColor] = shadowColor;
    this[S$0.elevation$14] = elevation;
    this[S$0.padding$7] = padding;
    this[S$0.minimumSize] = minimumSize;
    this[S$0.side$1] = side;
    this[S$0.shape$14] = shape;
    this[S$0.mouseCursor$9] = mouseCursor;
    this[S$0.visualDensity$8] = visualDensity;
    this[S$0.tapTargetSize] = tapTargetSize;
    this[S$0.animationDuration$2] = animationDuration;
    this[S$0.enableFeedback$7] = enableFeedback;
    this[S$0.alignment$2] = alignment;
    ;
  }).prototype = button_style.ButtonStyle.prototype;
  dart.addTypeTests(button_style.ButtonStyle);
  dart.addTypeCaches(button_style.ButtonStyle);
  dart.setMethodSignature(button_style.ButtonStyle, () => ({
    __proto__: dart.getMethods(button_style.ButtonStyle.__proto__),
    copyWith: dart.fnType(button_style.ButtonStyle, [], {alignment: dart.nullable(alignment.AlignmentGeometry), animationDuration: dart.nullable(core.Duration), backgroundColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), elevation: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double))), enableFeedback: dart.nullable(core.bool), foregroundColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), minimumSize: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size))), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), padding: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(edge_insets.EdgeInsetsGeometry))), shadowColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), shape: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder))), side: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide))), tapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), textStyle: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle))), visualDensity: dart.nullable(theme_data.VisualDensity)}, {}),
    merge: dart.fnType(button_style.ButtonStyle, [dart.nullable(button_style.ButtonStyle)])
  }));
  dart.setLibraryUri(button_style.ButtonStyle, I[79]);
  dart.setFieldSignature(button_style.ButtonStyle, () => ({
    __proto__: dart.getFields(button_style.ButtonStyle.__proto__),
    textStyle: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle)))),
    backgroundColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    foregroundColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    shadowColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    elevation: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double)))),
    padding: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(edge_insets.EdgeInsetsGeometry)))),
    minimumSize: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size)))),
    side: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide)))),
    shape: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder)))),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    tapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    animationDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    alignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry))
  }));
  dart.defineExtensionMethods(button_style.ButtonStyle, ['_equals']);
  dart.defineExtensionAccessors(button_style.ButtonStyle, ['hashCode']);
  const _is__LerpProperties_default$1 = Symbol('_is__LerpProperties_default');
  button_style._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S$0.a$3];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S$0.b$3];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S$0.t$3];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S$0.lerpFunction$3];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t42, t42$, t44, t43, t42$0;
        if (states == null) dart.nullFailed(I[78], 414, 33, "states");
        let resolvedA = (t42 = this.a, t42 == null ? null : t42.resolve(states));
        let resolvedB = (t42$ = this.b, t42$ == null ? null : t42$.resolve(states));
        t42$0 = resolvedA;
        t43 = resolvedB;
        t44 = this.t;
        return this.lerpFunction(t42$0, t43, t44);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[78], 406, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[78], 406, 54, "lerpFunction");
      this[S$0.a$3] = a;
      this[S$0.b$3] = b;
      this[S$0.t$3] = t;
      this[S$0.lerpFunction$3] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default$1] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(dart.nullable(T))];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(dart.nullable(T), [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[79]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(dart.nullable(T), [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  button_style._LerpProperties = button_style._LerpProperties$();
  dart.addTypeTests(button_style._LerpProperties, _is__LerpProperties_default$1);
  button_style._LerpSides = class _LerpSides extends core.Object {
    get a() {
      return this[S$0.a$4];
    }
    set a(value) {
      super.a = value;
    }
    get b() {
      return this[S$0.b$4];
    }
    set b(value) {
      super.b = value;
    }
    get t() {
      return this[S$0.t$4];
    }
    set t(value) {
      super.t = value;
    }
    resolve(states) {
      let t42, t42$;
      if (states == null) dart.nullFailed(I[78], 429, 42, "states");
      let resolvedA = (t42 = this.a, t42 == null ? null : t42.resolve(states));
      let resolvedB = (t42$ = this.b, t42$ == null ? null : t42$.resolve(states));
      if (resolvedA == null && resolvedB == null) return null;
      if (resolvedA == null) return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: dart.nullCheck(resolvedB).color.withAlpha(0)}), resolvedB, this.t);
      if (resolvedB == null) return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: resolvedA.color.withAlpha(0)}), resolvedA, this.t);
      return borders.BorderSide.lerp(resolvedA, resolvedB, this.t);
    }
  };
  (button_style._LerpSides.new = function(a, b, t) {
    if (t == null) dart.nullFailed(I[78], 422, 41, "t");
    this[S$0.a$4] = a;
    this[S$0.b$4] = b;
    this[S$0.t$4] = t;
    ;
  }).prototype = button_style._LerpSides.prototype;
  dart.addTypeTests(button_style._LerpSides);
  dart.addTypeCaches(button_style._LerpSides);
  button_style._LerpSides[dart.implements] = () => [material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide))];
  dart.setMethodSignature(button_style._LerpSides, () => ({
    __proto__: dart.getMethods(button_style._LerpSides.__proto__),
    resolve: dart.fnType(dart.nullable(borders.BorderSide), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(button_style._LerpSides, I[79]);
  dart.setFieldSignature(button_style._LerpSides, () => ({
    __proto__: dart.getFields(button_style._LerpSides.__proto__),
    a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide)))),
    b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide)))),
    t: dart.finalFieldType(core.double)
  }));
  button_style._LerpShapes = class _LerpShapes extends core.Object {
    get a() {
      return this[S$0.a$5];
    }
    set a(value) {
      super.a = value;
    }
    get b() {
      return this[S$0.b$5];
    }
    set b(value) {
      super.b = value;
    }
    get t() {
      return this[S$0.t$5];
    }
    set t(value) {
      super.t = value;
    }
    resolve(states) {
      let t42, t42$;
      if (states == null) dart.nullFailed(I[78], 450, 46, "states");
      let resolvedA = (t42 = this.a, t42 == null ? null : t42.resolve(states));
      let resolvedB = (t42$ = this.b, t42$ == null ? null : t42$.resolve(states));
      return T$.OutlinedBorderN().as(borders.ShapeBorder.lerp(resolvedA, resolvedB, this.t));
    }
  };
  (button_style._LerpShapes.new = function(a, b, t) {
    if (t == null) dart.nullFailed(I[78], 443, 42, "t");
    this[S$0.a$5] = a;
    this[S$0.b$5] = b;
    this[S$0.t$5] = t;
    ;
  }).prototype = button_style._LerpShapes.prototype;
  dart.addTypeTests(button_style._LerpShapes);
  dart.addTypeCaches(button_style._LerpShapes);
  button_style._LerpShapes[dart.implements] = () => [material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder))];
  dart.setMethodSignature(button_style._LerpShapes, () => ({
    __proto__: dart.getMethods(button_style._LerpShapes.__proto__),
    resolve: dart.fnType(dart.nullable(borders.OutlinedBorder), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(button_style._LerpShapes, I[79]);
  dart.setFieldSignature(button_style._LerpShapes, () => ({
    __proto__: dart.getFields(button_style._LerpShapes.__proto__),
    a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder)))),
    b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder)))),
    t: dart.finalFieldType(core.double)
  }));
  const Object_Diagnosticable$36$14 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$14.new = function() {
  }).prototype = Object_Diagnosticable$36$14.prototype;
  dart.applyMixin(Object_Diagnosticable$36$14, diagnostics.Diagnosticable);
  elevated_button_theme.ElevatedButtonThemeData = class ElevatedButtonThemeData extends Object_Diagnosticable$36$14 {
    get style() {
      return this[S$0.style$5];
    }
    set style(value) {
      super.style = value;
    }
    static lerp(a, b, t) {
      let t42, t42$;
      if (t == null) dart.nullFailed(I[80], 48, 103, "t");
      if (!(t != null)) dart.assertFailed(null, I[80], 49, 13, "t != null");
      if (a == null && b == null) return null;
      return new elevated_button_theme.ElevatedButtonThemeData.new({style: button_style.ButtonStyle.lerp((t42 = a, t42 == null ? null : t42.style), (t42$ = b, t42$ == null ? null : t42$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return elevated_button_theme.ElevatedButtonThemeData.is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[80], 72, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
    }
  };
  (elevated_button_theme.ElevatedButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[S$0.style$5] = style;
    ;
  }).prototype = elevated_button_theme.ElevatedButtonThemeData.prototype;
  dart.addTypeTests(elevated_button_theme.ElevatedButtonThemeData);
  dart.addTypeCaches(elevated_button_theme.ElevatedButtonThemeData);
  dart.setLibraryUri(elevated_button_theme.ElevatedButtonThemeData, I[81]);
  dart.setFieldSignature(elevated_button_theme.ElevatedButtonThemeData, () => ({
    __proto__: dart.getFields(elevated_button_theme.ElevatedButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(elevated_button_theme.ElevatedButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(elevated_button_theme.ElevatedButtonThemeData, ['hashCode']);
  elevated_button_theme.ElevatedButtonTheme = class ElevatedButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$0.data$11];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t42, t42$;
      if (context == null) dart.nullFailed(I[80], 112, 50, "context");
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(elevated_button_theme.ElevatedButtonTheme);
      t42$ = (t42 = buttonTheme, t42 == null ? null : t42.data);
      return t42$ == null ? theme$.Theme.of(context).elevatedButtonTheme : t42$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[80], 118, 28, "context");
      if (child == null) dart.nullFailed(I[80], 118, 44, "child");
      return new elevated_button_theme.ElevatedButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1864] || CT.C1864});
    }
    updateShouldNotify(oldWidget) {
      elevated_button_theme.ElevatedButtonTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[80], 123, 47, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (elevated_button_theme.ElevatedButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[80], 95, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[80], 96, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$11] = data;
    if (!(data != null)) dart.assertFailed(null, I[80], 97, 15, "data != null");
    elevated_button_theme.ElevatedButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = elevated_button_theme.ElevatedButtonTheme.prototype;
  dart.addTypeTests(elevated_button_theme.ElevatedButtonTheme);
  dart.addTypeCaches(elevated_button_theme.ElevatedButtonTheme);
  dart.setMethodSignature(elevated_button_theme.ElevatedButtonTheme, () => ({
    __proto__: dart.getMethods(elevated_button_theme.ElevatedButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(elevated_button_theme.ElevatedButtonTheme, I[81]);
  dart.setFieldSignature(elevated_button_theme.ElevatedButtonTheme, () => ({
    __proto__: dart.getFields(elevated_button_theme.ElevatedButtonTheme.__proto__),
    data: dart.finalFieldType(elevated_button_theme.ElevatedButtonThemeData)
  }));
  const Object_Diagnosticable$36$15 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$15.new = function() {
  }).prototype = Object_Diagnosticable$36$15.prototype;
  dart.applyMixin(Object_Diagnosticable$36$15, diagnostics.Diagnosticable);
  divider_theme.DividerThemeData = class DividerThemeData extends Object_Diagnosticable$36$15 {
    get color() {
      return this[S$0.color$10];
    }
    set color(value) {
      super.color = value;
    }
    get space() {
      return this[S$0.space];
    }
    set space(value) {
      super.space = value;
    }
    get thickness() {
      return this[S$0.thickness$3];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[S$0.indent$2];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[S$0.endIndent$2];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    copyWith(opts) {
      let t42, t42$, t42$0, t42$1, t42$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let space = opts && 'space' in opts ? opts.space : null;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let indent = opts && 'indent' in opts ? opts.indent : null;
      let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
      return new divider_theme.DividerThemeData.new({color: (t42 = color, t42 == null ? this.color : t42), space: (t42$ = space, t42$ == null ? this.space : t42$), thickness: (t42$0 = thickness, t42$0 == null ? this.thickness : t42$0), indent: (t42$1 = indent, t42$1 == null ? this.indent : t42$1), endIndent: (t42$2 = endIndent, t42$2 == null ? this.endIndent : t42$2)});
    }
    static lerp(a, b, t) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7;
      if (t == null) dart.nullFailed(I[82], 86, 81, "t");
      if (!(t != null)) dart.assertFailed(null, I[82], 87, 12, "t != null");
      return new divider_theme.DividerThemeData.new({color: ui.Color.lerp((t42 = a, t42 == null ? null : t42.color), (t42$ = b, t42$ == null ? null : t42$.color), t), space: ui.lerpDouble((t42$0 = a, t42$0 == null ? null : t42$0.space), (t42$1 = b, t42$1 == null ? null : t42$1.space), t), thickness: ui.lerpDouble((t42$2 = a, t42$2 == null ? null : t42$2.thickness), (t42$3 = b, t42$3 == null ? null : t42$3.thickness), t), indent: ui.lerpDouble((t42$4 = a, t42$4 == null ? null : t42$4.indent), (t42$5 = b, t42$5 == null ? null : t42$5.indent), t), endIndent: ui.lerpDouble((t42$6 = a, t42$6 == null ? null : t42$6.endIndent), (t42$7 = b, t42$7 == null ? null : t42$7.endIndent), t)});
    }
    get hashCode() {
      return ui.hashValues(this.color, this.space, this.thickness, this.indent, this.endIndent);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return divider_theme.DividerThemeData.is(other) && dart.equals(other.color, this.color) && other.space == this.space && other.thickness == this.thickness && other.indent == this.indent && other.endIndent == this.endIndent;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[82], 123, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("space", this.space, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("thickness", this.thickness, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("indent", this.indent, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("endIndent", this.endIndent, {defaultValue: null}));
    }
  };
  (divider_theme.DividerThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let space = opts && 'space' in opts ? opts.space : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    this[S$0.color$10] = color;
    this[S$0.space] = space;
    this[S$0.thickness$3] = thickness;
    this[S$0.indent$2] = indent;
    this[S$0.endIndent$2] = endIndent;
    ;
  }).prototype = divider_theme.DividerThemeData.prototype;
  dart.addTypeTests(divider_theme.DividerThemeData);
  dart.addTypeCaches(divider_theme.DividerThemeData);
  dart.setMethodSignature(divider_theme.DividerThemeData, () => ({
    __proto__: dart.getMethods(divider_theme.DividerThemeData.__proto__),
    copyWith: dart.fnType(divider_theme.DividerThemeData, [], {color: dart.nullable(ui.Color), endIndent: dart.nullable(core.double), indent: dart.nullable(core.double), space: dart.nullable(core.double), thickness: dart.nullable(core.double)}, {})
  }));
  dart.setLibraryUri(divider_theme.DividerThemeData, I[83]);
  dart.setFieldSignature(divider_theme.DividerThemeData, () => ({
    __proto__: dart.getFields(divider_theme.DividerThemeData.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    space: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    indent: dart.finalFieldType(dart.nullable(core.double)),
    endIndent: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(divider_theme.DividerThemeData, ['_equals']);
  dart.defineExtensionAccessors(divider_theme.DividerThemeData, ['hashCode']);
  divider_theme.DividerTheme = class DividerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$0.data$12];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t42, t42$;
      if (context == null) dart.nullFailed(I[82], 162, 43, "context");
      let dividerTheme = context.dependOnInheritedWidgetOfExactType(divider_theme.DividerTheme);
      t42$ = (t42 = dividerTheme, t42 == null ? null : t42.data);
      return t42$ == null ? theme$.Theme.of(context).dividerTheme : t42$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[82], 168, 28, "context");
      if (child == null) dart.nullFailed(I[82], 168, 44, "child");
      return new divider_theme.DividerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1865] || CT.C1865});
    }
    updateShouldNotify(oldWidget) {
      divider_theme.DividerTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[82], 173, 40, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (divider_theme.DividerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[82], 142, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[82], 143, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$12] = data;
    if (!(data != null)) dart.assertFailed(null, I[82], 144, 15, "data != null");
    divider_theme.DividerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider_theme.DividerTheme.prototype;
  dart.addTypeTests(divider_theme.DividerTheme);
  dart.addTypeCaches(divider_theme.DividerTheme);
  dart.setMethodSignature(divider_theme.DividerTheme, () => ({
    __proto__: dart.getMethods(divider_theme.DividerTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(divider_theme.DividerTheme, I[83]);
  dart.setFieldSignature(divider_theme.DividerTheme, () => ({
    __proto__: dart.getFields(divider_theme.DividerTheme.__proto__),
    data: dart.finalFieldType(divider_theme.DividerThemeData)
  }));
  const Object_Diagnosticable$36$16 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$16.new = function() {
  }).prototype = Object_Diagnosticable$36$16.prototype;
  dart.applyMixin(Object_Diagnosticable$36$16, diagnostics.Diagnosticable);
  dialog_theme.DialogTheme = class DialogTheme extends Object_Diagnosticable$36$16 {
    get backgroundColor() {
      return this[S$0.backgroundColor$11];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$0.elevation$15];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$0.shape$15];
    }
    set shape(value) {
      super.shape = value;
    }
    get titleTextStyle() {
      return this[S$0.titleTextStyle$2];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get contentTextStyle() {
      return this[S$0.contentTextStyle$2];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    copyWith(opts) {
      let t42, t42$, t42$0, t42$1, t42$2;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      return new dialog_theme.DialogTheme.new({backgroundColor: (t42 = backgroundColor, t42 == null ? this.backgroundColor : t42), elevation: (t42$ = elevation, t42$ == null ? this.elevation : t42$), shape: (t42$0 = shape, t42$0 == null ? this.shape : t42$0), titleTextStyle: (t42$1 = titleTextStyle, t42$1 == null ? this.titleTextStyle : t42$1), contentTextStyle: (t42$2 = contentTextStyle, t42$2 == null ? this.contentTextStyle : t42$2)});
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[84], 84, 38, "context");
      return theme$.Theme.of(context).dialogTheme;
    }
    static lerp(a, b, t) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7;
      if (t == null) dart.nullFailed(I[84], 93, 66, "t");
      if (!(t != null)) dart.assertFailed(null, I[84], 94, 12, "t != null");
      return new dialog_theme.DialogTheme.new({backgroundColor: ui.Color.lerp((t42 = a, t42 == null ? null : t42.backgroundColor), (t42$ = b, t42$ == null ? null : t42$.backgroundColor), t), elevation: ui.lerpDouble((t42$0 = a, t42$0 == null ? null : t42$0.elevation), (t42$1 = b, t42$1 == null ? null : t42$1.elevation), t), shape: borders.ShapeBorder.lerp((t42$2 = a, t42$2 == null ? null : t42$2.shape), (t42$3 = b, t42$3 == null ? null : t42$3.shape), t), titleTextStyle: text_style.TextStyle.lerp((t42$4 = a, t42$4 == null ? null : t42$4.titleTextStyle), (t42$5 = b, t42$5 == null ? null : t42$5.titleTextStyle), t), contentTextStyle: text_style.TextStyle.lerp((t42$6 = a, t42$6 == null ? null : t42$6.contentTextStyle), (t42$7 = b, t42$7 == null ? null : t42$7.contentTextStyle), t)});
    }
    get hashCode() {
      return dart.hashCode(this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return dialog_theme.DialogTheme.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.shape, this.shape) && dart.equals(other.titleTextStyle, this.titleTextStyle) && dart.equals(other.contentTextStyle, this.contentTextStyle);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[84], 122, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("titleTextStyle", this.titleTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
    }
  };
  (dialog_theme.DialogTheme.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    this[S$0.backgroundColor$11] = backgroundColor;
    this[S$0.elevation$15] = elevation;
    this[S$0.shape$15] = shape;
    this[S$0.titleTextStyle$2] = titleTextStyle;
    this[S$0.contentTextStyle$2] = contentTextStyle;
    ;
  }).prototype = dialog_theme.DialogTheme.prototype;
  dart.addTypeTests(dialog_theme.DialogTheme);
  dart.addTypeCaches(dialog_theme.DialogTheme);
  dart.setMethodSignature(dialog_theme.DialogTheme, () => ({
    __proto__: dart.getMethods(dialog_theme.DialogTheme.__proto__),
    copyWith: dart.fnType(dialog_theme.DialogTheme, [], {backgroundColor: dart.nullable(ui.Color), contentTextStyle: dart.nullable(text_style.TextStyle), elevation: dart.nullable(core.double), shape: dart.nullable(borders.ShapeBorder), titleTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(dialog_theme.DialogTheme, I[85]);
  dart.setFieldSignature(dialog_theme.DialogTheme, () => ({
    __proto__: dart.getFields(dialog_theme.DialogTheme.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle))
  }));
  dart.defineExtensionMethods(dialog_theme.DialogTheme, ['_equals']);
  dart.defineExtensionAccessors(dialog_theme.DialogTheme, ['hashCode']);
  const Object_Diagnosticable$36$17 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$17.new = function() {
  }).prototype = Object_Diagnosticable$36$17.prototype;
  dart.applyMixin(Object_Diagnosticable$36$17, diagnostics.Diagnosticable);
  data_table_theme.DataTableThemeData = class DataTableThemeData extends Object_Diagnosticable$36$17 {
    get decoration() {
      return this[S$0.decoration$2];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get dataRowColor() {
      return this[S$0.dataRowColor];
    }
    set dataRowColor(value) {
      super.dataRowColor = value;
    }
    get dataRowHeight() {
      return this[S$0.dataRowHeight];
    }
    set dataRowHeight(value) {
      super.dataRowHeight = value;
    }
    get dataTextStyle() {
      return this[S$0.dataTextStyle];
    }
    set dataTextStyle(value) {
      super.dataTextStyle = value;
    }
    get headingRowColor() {
      return this[S$0.headingRowColor];
    }
    set headingRowColor(value) {
      super.headingRowColor = value;
    }
    get headingRowHeight() {
      return this[S$0.headingRowHeight];
    }
    set headingRowHeight(value) {
      super.headingRowHeight = value;
    }
    get headingTextStyle() {
      return this[S$0.headingTextStyle];
    }
    set headingTextStyle(value) {
      super.headingTextStyle = value;
    }
    get horizontalMargin() {
      return this[S$0.horizontalMargin];
    }
    set horizontalMargin(value) {
      super.horizontalMargin = value;
    }
    get columnSpacing() {
      return this[S$0.columnSpacing];
    }
    set columnSpacing(value) {
      super.columnSpacing = value;
    }
    get dividerThickness() {
      return this[S$0.dividerThickness];
    }
    set dividerThickness(value) {
      super.dividerThickness = value;
    }
    copyWith(opts) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let dataRowColor = opts && 'dataRowColor' in opts ? opts.dataRowColor : null;
      let dataRowHeight = opts && 'dataRowHeight' in opts ? opts.dataRowHeight : null;
      let dataTextStyle = opts && 'dataTextStyle' in opts ? opts.dataTextStyle : null;
      let headingRowColor = opts && 'headingRowColor' in opts ? opts.headingRowColor : null;
      let headingRowHeight = opts && 'headingRowHeight' in opts ? opts.headingRowHeight : null;
      let headingTextStyle = opts && 'headingTextStyle' in opts ? opts.headingTextStyle : null;
      let horizontalMargin = opts && 'horizontalMargin' in opts ? opts.horizontalMargin : null;
      let columnSpacing = opts && 'columnSpacing' in opts ? opts.columnSpacing : null;
      let dividerThickness = opts && 'dividerThickness' in opts ? opts.dividerThickness : null;
      return new data_table_theme.DataTableThemeData.new({decoration: (t42 = decoration, t42 == null ? this.decoration : t42), dataRowColor: (t42$ = dataRowColor, t42$ == null ? this.dataRowColor : t42$), dataRowHeight: (t42$0 = dataRowHeight, t42$0 == null ? this.dataRowHeight : t42$0), dataTextStyle: (t42$1 = dataTextStyle, t42$1 == null ? this.dataTextStyle : t42$1), headingRowColor: (t42$2 = headingRowColor, t42$2 == null ? this.headingRowColor : t42$2), headingRowHeight: (t42$3 = headingRowHeight, t42$3 == null ? this.headingRowHeight : t42$3), headingTextStyle: (t42$4 = headingTextStyle, t42$4 == null ? this.headingTextStyle : t42$4), horizontalMargin: (t42$5 = horizontalMargin, t42$5 == null ? this.horizontalMargin : t42$5), columnSpacing: (t42$6 = columnSpacing, t42$6 == null ? this.columnSpacing : t42$6), dividerThickness: (t42$7 = dividerThickness, t42$7 == null ? this.dividerThickness : t42$7)});
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[86], 115, 53, "a");
      if (b == null) dart.nullFailed(I[86], 115, 75, "b");
      if (t == null) dart.nullFailed(I[86], 115, 85, "t");
      if (!(t != null)) dart.assertFailed(null, I[86], 116, 12, "t != null");
      return new data_table_theme.DataTableThemeData.new({decoration: decoration.Decoration.lerp(a.decoration, b.decoration, t), dataRowColor: data_table_theme.DataTableThemeData._lerpProperties(T$.ColorN(), a.dataRowColor, b.dataRowColor, t, C[1289] || CT.C1289), dataRowHeight: ui.lerpDouble(a.dataRowHeight, b.dataRowHeight, t), dataTextStyle: text_style.TextStyle.lerp(a.dataTextStyle, b.dataTextStyle, t), headingRowColor: data_table_theme.DataTableThemeData._lerpProperties(T$.ColorN(), a.headingRowColor, b.headingRowColor, t, C[1289] || CT.C1289), headingRowHeight: ui.lerpDouble(a.headingRowHeight, b.headingRowHeight, t), headingTextStyle: text_style.TextStyle.lerp(a.headingTextStyle, b.headingTextStyle, t), horizontalMargin: ui.lerpDouble(a.horizontalMargin, b.horizontalMargin, t), columnSpacing: ui.lerpDouble(a.columnSpacing, b.columnSpacing, t), dividerThickness: ui.lerpDouble(a.dividerThickness, b.dividerThickness, t)});
    }
    get hashCode() {
      return ui.hashValues(this.decoration, this.dataRowColor, this.dataRowHeight, this.dataTextStyle, this.headingRowColor, this.headingRowHeight, this.headingTextStyle, this.horizontalMargin, this.columnSpacing, this.dividerThickness);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return data_table_theme.DataTableThemeData.is(other) && dart.equals(other.decoration, this.decoration) && dart.equals(other.dataRowColor, this.dataRowColor) && other.dataRowHeight == this.dataRowHeight && dart.equals(other.dataTextStyle, this.dataTextStyle) && dart.equals(other.headingRowColor, this.headingRowColor) && other.headingRowHeight == this.headingRowHeight && dart.equals(other.headingTextStyle, this.headingTextStyle) && other.horizontalMargin == this.horizontalMargin && other.columnSpacing == this.columnSpacing && other.dividerThickness == this.dividerThickness;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[86], 167, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfDecoration()).new("decoration", this.decoration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("dataRowColor", this.dataRowColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("dataRowHeight", this.dataRowHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("dataTextStyle", this.dataTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("headingRowColor", this.headingRowColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("headingRowHeight", this.headingRowHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("headingTextStyle", this.headingTextStyle, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("horizontalMargin", this.horizontalMargin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("columnSpacing", this.columnSpacing, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("dividerThickness", this.dividerThickness, {defaultValue: null}));
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[86], 181, 120, "t");
      if (lerpFunction == null) dart.nullFailed(I[86], 181, 150, "lerpFunction");
      if (a == null && b == null) return null;
      return new (data_table_theme._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
  };
  (data_table_theme.DataTableThemeData.new = function(opts) {
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let dataRowColor = opts && 'dataRowColor' in opts ? opts.dataRowColor : null;
    let dataRowHeight = opts && 'dataRowHeight' in opts ? opts.dataRowHeight : null;
    let dataTextStyle = opts && 'dataTextStyle' in opts ? opts.dataTextStyle : null;
    let headingRowColor = opts && 'headingRowColor' in opts ? opts.headingRowColor : null;
    let headingRowHeight = opts && 'headingRowHeight' in opts ? opts.headingRowHeight : null;
    let headingTextStyle = opts && 'headingTextStyle' in opts ? opts.headingTextStyle : null;
    let horizontalMargin = opts && 'horizontalMargin' in opts ? opts.horizontalMargin : null;
    let columnSpacing = opts && 'columnSpacing' in opts ? opts.columnSpacing : null;
    let dividerThickness = opts && 'dividerThickness' in opts ? opts.dividerThickness : null;
    this[S$0.decoration$2] = decoration;
    this[S$0.dataRowColor] = dataRowColor;
    this[S$0.dataRowHeight] = dataRowHeight;
    this[S$0.dataTextStyle] = dataTextStyle;
    this[S$0.headingRowColor] = headingRowColor;
    this[S$0.headingRowHeight] = headingRowHeight;
    this[S$0.headingTextStyle] = headingTextStyle;
    this[S$0.horizontalMargin] = horizontalMargin;
    this[S$0.columnSpacing] = columnSpacing;
    this[S$0.dividerThickness] = dividerThickness;
    ;
  }).prototype = data_table_theme.DataTableThemeData.prototype;
  dart.addTypeTests(data_table_theme.DataTableThemeData);
  dart.addTypeCaches(data_table_theme.DataTableThemeData);
  dart.setMethodSignature(data_table_theme.DataTableThemeData, () => ({
    __proto__: dart.getMethods(data_table_theme.DataTableThemeData.__proto__),
    copyWith: dart.fnType(data_table_theme.DataTableThemeData, [], {columnSpacing: dart.nullable(core.double), dataRowColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), dataRowHeight: dart.nullable(core.double), dataTextStyle: dart.nullable(text_style.TextStyle), decoration: dart.nullable(decoration.Decoration), dividerThickness: dart.nullable(core.double), headingRowColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), headingRowHeight: dart.nullable(core.double), headingTextStyle: dart.nullable(text_style.TextStyle), horizontalMargin: dart.nullable(core.double)}, {})
  }));
  dart.setLibraryUri(data_table_theme.DataTableThemeData, I[87]);
  dart.setFieldSignature(data_table_theme.DataTableThemeData, () => ({
    __proto__: dart.getFields(data_table_theme.DataTableThemeData.__proto__),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    dataRowColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    dataRowHeight: dart.finalFieldType(dart.nullable(core.double)),
    dataTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    headingRowColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    headingRowHeight: dart.finalFieldType(dart.nullable(core.double)),
    headingTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    horizontalMargin: dart.finalFieldType(dart.nullable(core.double)),
    columnSpacing: dart.finalFieldType(dart.nullable(core.double)),
    dividerThickness: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(data_table_theme.DataTableThemeData, ['_equals']);
  dart.defineExtensionAccessors(data_table_theme.DataTableThemeData, ['hashCode']);
  const _is__LerpProperties_default$2 = Symbol('_is__LerpProperties_default');
  data_table_theme._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S$0.a$6];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S$0.b$6];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S$0.t$6];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S$0.lerpFunction$4];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t42, t42$, t44, t43, t42$0;
        if (states == null) dart.nullFailed(I[86], 198, 32, "states");
        let resolvedA = (t42 = this.a, t42 == null ? null : t42.resolve(states));
        let resolvedB = (t42$ = this.b, t42$ == null ? null : t42$.resolve(states));
        t42$0 = resolvedA;
        t43 = resolvedB;
        t44 = this.t;
        return this.lerpFunction(t42$0, t43, t44);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[86], 190, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[86], 190, 54, "lerpFunction");
      this[S$0.a$6] = a;
      this[S$0.b$6] = b;
      this[S$0.t$6] = t;
      this[S$0.lerpFunction$4] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default$2] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(T)];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(T, [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[87]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(T, [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  data_table_theme._LerpProperties = data_table_theme._LerpProperties$();
  dart.addTypeTests(data_table_theme._LerpProperties, _is__LerpProperties_default$2);
  data_table_theme.DataTableTheme = class DataTableTheme extends framework.InheritedWidget {
    get data() {
      return this[S$0.data$13];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t42, t42$;
      if (context == null) dart.nullFailed(I[86], 242, 45, "context");
      let dataTableTheme = context.dependOnInheritedWidgetOfExactType(data_table_theme.DataTableTheme);
      t42$ = (t42 = dataTableTheme, t42 == null ? null : t42.data);
      return t42$ == null ? theme$.Theme.of(context).dataTableTheme : t42$;
    }
    updateShouldNotify(oldWidget) {
      data_table_theme.DataTableTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[86], 248, 42, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (data_table_theme.DataTableTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[86], 225, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[86], 226, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$13] = data;
    if (!(data != null)) dart.assertFailed(null, I[86], 227, 15, "data != null");
    data_table_theme.DataTableTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = data_table_theme.DataTableTheme.prototype;
  dart.addTypeTests(data_table_theme.DataTableTheme);
  dart.addTypeCaches(data_table_theme.DataTableTheme);
  dart.setMethodSignature(data_table_theme.DataTableTheme, () => ({
    __proto__: dart.getMethods(data_table_theme.DataTableTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(data_table_theme.DataTableTheme, I[87]);
  dart.setFieldSignature(data_table_theme.DataTableTheme, () => ({
    __proto__: dart.getFields(data_table_theme.DataTableTheme.__proto__),
    data: dart.finalFieldType(data_table_theme.DataTableThemeData)
  }));
  chip_theme.ChipTheme = class ChipTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$0.data$14];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t42, t42$;
      if (context == null) dart.nullFailed(I[88], 87, 40, "context");
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(chip_theme.ChipTheme);
      t42$ = (t42 = inheritedTheme, t42 == null ? null : t42.data);
      return t42$ == null ? theme$.Theme.of(context).chipTheme : t42$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[88], 93, 28, "context");
      if (child == null) dart.nullFailed(I[88], 93, 44, "child");
      return new chip_theme.ChipTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1869] || CT.C1869});
    }
    updateShouldNotify(oldWidget) {
      chip_theme.ChipTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[88], 98, 37, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (chip_theme.ChipTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[88], 49, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[88], 50, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$14] = data;
    if (!(child != null)) dart.assertFailed(null, I[88], 51, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, I[88], 52, 15, "data != null");
    chip_theme.ChipTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = chip_theme.ChipTheme.prototype;
  dart.addTypeTests(chip_theme.ChipTheme);
  dart.addTypeCaches(chip_theme.ChipTheme);
  dart.setMethodSignature(chip_theme.ChipTheme, () => ({
    __proto__: dart.getMethods(chip_theme.ChipTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(chip_theme.ChipTheme, I[89]);
  dart.setFieldSignature(chip_theme.ChipTheme, () => ({
    __proto__: dart.getFields(chip_theme.ChipTheme.__proto__),
    data: dart.finalFieldType(chip_theme.ChipThemeData)
  }));
  const Object_Diagnosticable$36$18 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$18.new = function() {
  }).prototype = Object_Diagnosticable$36$18.prototype;
  dart.applyMixin(Object_Diagnosticable$36$18, diagnostics.Diagnosticable);
  chip_theme.ChipThemeData = class ChipThemeData extends Object_Diagnosticable$36$18 {
    get backgroundColor() {
      return this[S$0.backgroundColor$12];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get deleteIconColor() {
      return this[S$0.deleteIconColor];
    }
    set deleteIconColor(value) {
      super.deleteIconColor = value;
    }
    get disabledColor() {
      return this[S$0.disabledColor$3];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get selectedColor() {
      return this[S$0.selectedColor$3];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get secondarySelectedColor() {
      return this[S$0.secondarySelectedColor];
    }
    set secondarySelectedColor(value) {
      super.secondarySelectedColor = value;
    }
    get shadowColor() {
      return this[S$0.shadowColor$1];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get selectedShadowColor() {
      return this[S$0.selectedShadowColor];
    }
    set selectedShadowColor(value) {
      super.selectedShadowColor = value;
    }
    get showCheckmark() {
      return this[S$0.showCheckmark];
    }
    set showCheckmark(value) {
      super.showCheckmark = value;
    }
    get checkmarkColor() {
      return this[S$0.checkmarkColor];
    }
    set checkmarkColor(value) {
      super.checkmarkColor = value;
    }
    get labelPadding() {
      return this[S$0.labelPadding$2];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get padding() {
      return this[S$0.padding$8];
    }
    set padding(value) {
      super.padding = value;
    }
    get side() {
      return this[S$0.side$2];
    }
    set side(value) {
      super.side = value;
    }
    get shape() {
      return this[S$0.shape$16];
    }
    set shape(value) {
      super.shape = value;
    }
    get labelStyle() {
      return this[S$0.labelStyle$5];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get secondaryLabelStyle() {
      return this[S$0.secondaryLabelStyle];
    }
    set secondaryLabelStyle(value) {
      super.secondaryLabelStyle = value;
    }
    get brightness() {
      return this[S$0.brightness$1];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get elevation() {
      return this[S$0.elevation$16];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressElevation() {
      return this[S$0.pressElevation];
    }
    set pressElevation(value) {
      super.pressElevation = value;
    }
    static fromDefaults(opts) {
      let t42;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let secondaryColor = opts && 'secondaryColor' in opts ? opts.secondaryColor : null;
      if (secondaryColor == null) dart.nullFailed(I[88], 226, 20, "secondaryColor");
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      if (labelStyle == null) dart.nullFailed(I[88], 227, 24, "labelStyle");
      if (!(primaryColor != null || brightness != null)) dart.assertFailed("One of primaryColor or brightness must be specified", I[88], 229, 12, "primaryColor != null || brightness != null");
      if (!(primaryColor == null || brightness == null)) dart.assertFailed("Only one of primaryColor or brightness may be specified", I[88], 231, 12, "primaryColor == null || brightness == null");
      if (!(secondaryColor != null)) dart.assertFailed(null, I[88], 233, 12, "secondaryColor != null");
      if (!(labelStyle != null)) dart.assertFailed(null, I[88], 234, 12, "labelStyle != null");
      if (primaryColor != null) {
        brightness = theme_data.ThemeData.estimateBrightnessForColor(primaryColor);
      }
      let padding = C[1265] || CT.C1265;
      primaryColor = (t42 = primaryColor, t42 == null ? brightness == ui.Brightness.light ? colors$.Colors.black : colors$.Colors.white : t42);
      let backgroundColor = primaryColor.withAlpha(31);
      let deleteIconColor = primaryColor.withAlpha(222);
      let disabledColor = primaryColor.withAlpha(12);
      let selectedColor = primaryColor.withAlpha(61);
      let secondarySelectedColor = secondaryColor.withAlpha(61);
      let secondaryLabelStyle = labelStyle.copyWith({color: secondaryColor.withAlpha(222)});
      labelStyle = labelStyle.copyWith({color: primaryColor.withAlpha(222)});
      return new chip_theme.ChipThemeData.new({backgroundColor: backgroundColor, deleteIconColor: deleteIconColor, disabledColor: disabledColor, selectedColor: selectedColor, secondarySelectedColor: secondarySelectedColor, padding: padding, labelStyle: labelStyle, secondaryLabelStyle: secondaryLabelStyle, brightness: dart.nullCheck(brightness)});
    }
    copyWith(opts) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7, t42$8, t42$9, t42$10, t42$11, t42$12, t42$13, t42$14;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let deleteIconColor = opts && 'deleteIconColor' in opts ? opts.deleteIconColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let secondarySelectedColor = opts && 'secondarySelectedColor' in opts ? opts.secondarySelectedColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let selectedShadowColor = opts && 'selectedShadowColor' in opts ? opts.selectedShadowColor : null;
      let checkmarkColor = opts && 'checkmarkColor' in opts ? opts.checkmarkColor : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let secondaryLabelStyle = opts && 'secondaryLabelStyle' in opts ? opts.secondaryLabelStyle : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let pressElevation = opts && 'pressElevation' in opts ? opts.pressElevation : null;
      return new chip_theme.ChipThemeData.new({backgroundColor: (t42 = backgroundColor, t42 == null ? this.backgroundColor : t42), deleteIconColor: (t42$ = deleteIconColor, t42$ == null ? this.deleteIconColor : t42$), disabledColor: (t42$0 = disabledColor, t42$0 == null ? this.disabledColor : t42$0), selectedColor: (t42$1 = selectedColor, t42$1 == null ? this.selectedColor : t42$1), secondarySelectedColor: (t42$2 = secondarySelectedColor, t42$2 == null ? this.secondarySelectedColor : t42$2), shadowColor: (t42$3 = shadowColor, t42$3 == null ? this.shadowColor : t42$3), selectedShadowColor: (t42$4 = selectedShadowColor, t42$4 == null ? this.selectedShadowColor : t42$4), checkmarkColor: (t42$5 = checkmarkColor, t42$5 == null ? this.checkmarkColor : t42$5), labelPadding: (t42$6 = labelPadding, t42$6 == null ? this.labelPadding : t42$6), padding: (t42$7 = padding, t42$7 == null ? this.padding : t42$7), side: (t42$8 = side, t42$8 == null ? this.side : t42$8), shape: (t42$9 = shape, t42$9 == null ? this.shape : t42$9), labelStyle: (t42$10 = labelStyle, t42$10 == null ? this.labelStyle : t42$10), secondaryLabelStyle: (t42$11 = secondaryLabelStyle, t42$11 == null ? this.secondaryLabelStyle : t42$11), brightness: (t42$12 = brightness, t42$12 == null ? this.brightness : t42$12), elevation: (t42$13 = elevation, t42$13 == null ? this.elevation : t42$13), pressElevation: (t42$14 = pressElevation, t42$14 == null ? this.pressElevation : t42$14)});
    }
    static lerp(a, b, t) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7, t42$8, t42$9, t42$10, t42$11, t42$12, t42$13, t42$14, t42$15, t42$16, t42$17, t42$18, t42$19, t42$20, t42$21, t42$22, t42$23, t42$24, t42$25, t42$26, t42$27, t42$28, t42$29, t42$30, t42$31, t42$32, t42$33;
      if (t == null) dart.nullFailed(I[88], 458, 73, "t");
      if (!(t != null)) dart.assertFailed(null, I[88], 459, 12, "t != null");
      if (a == null && b == null) return null;
      return new chip_theme.ChipThemeData.new({backgroundColor: dart.nullCheck(ui.Color.lerp((t42 = a, t42 == null ? null : t42.backgroundColor), (t42$ = b, t42$ == null ? null : t42$.backgroundColor), t)), deleteIconColor: ui.Color.lerp((t42$0 = a, t42$0 == null ? null : t42$0.deleteIconColor), (t42$1 = b, t42$1 == null ? null : t42$1.deleteIconColor), t), disabledColor: dart.nullCheck(ui.Color.lerp((t42$2 = a, t42$2 == null ? null : t42$2.disabledColor), (t42$3 = b, t42$3 == null ? null : t42$3.disabledColor), t)), selectedColor: dart.nullCheck(ui.Color.lerp((t42$4 = a, t42$4 == null ? null : t42$4.selectedColor), (t42$5 = b, t42$5 == null ? null : t42$5.selectedColor), t)), secondarySelectedColor: dart.nullCheck(ui.Color.lerp((t42$6 = a, t42$6 == null ? null : t42$6.secondarySelectedColor), (t42$7 = b, t42$7 == null ? null : t42$7.secondarySelectedColor), t)), shadowColor: ui.Color.lerp((t42$8 = a, t42$8 == null ? null : t42$8.shadowColor), (t42$9 = b, t42$9 == null ? null : t42$9.shadowColor), t), selectedShadowColor: ui.Color.lerp((t42$10 = a, t42$10 == null ? null : t42$10.selectedShadowColor), (t42$11 = b, t42$11 == null ? null : t42$11.selectedShadowColor), t), checkmarkColor: ui.Color.lerp((t42$12 = a, t42$12 == null ? null : t42$12.checkmarkColor), (t42$13 = b, t42$13 == null ? null : t42$13.checkmarkColor), t), labelPadding: edge_insets.EdgeInsetsGeometry.lerp((t42$14 = a, t42$14 == null ? null : t42$14.labelPadding), (t42$15 = b, t42$15 == null ? null : t42$15.labelPadding), t), padding: dart.nullCheck(edge_insets.EdgeInsetsGeometry.lerp((t42$16 = a, t42$16 == null ? null : t42$16.padding), (t42$17 = b, t42$17 == null ? null : t42$17.padding), t)), side: chip_theme.ChipThemeData._lerpSides((t42$18 = a, t42$18 == null ? null : t42$18.side), (t42$19 = b, t42$19 == null ? null : t42$19.side), t), shape: chip_theme.ChipThemeData._lerpShapes((t42$20 = a, t42$20 == null ? null : t42$20.shape), (t42$21 = b, t42$21 == null ? null : t42$21.shape), t), labelStyle: dart.nullCheck(text_style.TextStyle.lerp((t42$22 = a, t42$22 == null ? null : t42$22.labelStyle), (t42$23 = b, t42$23 == null ? null : t42$23.labelStyle), t)), secondaryLabelStyle: dart.nullCheck(text_style.TextStyle.lerp((t42$24 = a, t42$24 == null ? null : t42$24.secondaryLabelStyle), (t42$25 = b, t42$25 == null ? null : t42$25.secondaryLabelStyle), t)), brightness: dart.notNull(t) < 0.5 ? (t42$27 = (t42$26 = a, t42$26 == null ? null : t42$26.brightness), t42$27 == null ? ui.Brightness.light : t42$27) : (t42$29 = (t42$28 = b, t42$28 == null ? null : t42$28.brightness), t42$29 == null ? ui.Brightness.light : t42$29), elevation: ui.lerpDouble((t42$30 = a, t42$30 == null ? null : t42$30.elevation), (t42$31 = b, t42$31 == null ? null : t42$31.elevation), t), pressElevation: ui.lerpDouble((t42$32 = a, t42$32 == null ? null : t42$32.pressElevation), (t42$33 = b, t42$33 == null ? null : t42$33.pressElevation), t)});
    }
    static _lerpSides(a, b, t) {
      if (t == null) dart.nullFailed(I[88], 484, 70, "t");
      if (a == null && b == null) return null;
      if (a == null) return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: dart.nullCheck(b).color.withAlpha(0)}), b, t);
      if (b == null) return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: a.color.withAlpha(0)}), a, t);
      return borders.BorderSide.lerp(a, b, t);
    }
    static _lerpShapes(a, b, t) {
      if (t == null) dart.nullFailed(I[88], 495, 83, "t");
      if (a == null && b == null) return null;
      return T$.OutlinedBorderN().as(borders.ShapeBorder.lerp(a, b, t));
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.deleteIconColor, this.disabledColor, this.selectedColor, this.secondarySelectedColor, this.shadowColor, this.selectedShadowColor, this.checkmarkColor, this.labelPadding, this.padding, this.side, this.shape, this.labelStyle, this.secondaryLabelStyle, this.brightness, this.elevation, this.pressElevation);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) {
        return false;
      }
      return chip_theme.ChipThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.deleteIconColor, this.deleteIconColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.selectedColor, this.selectedColor) && dart.equals(other.secondarySelectedColor, this.secondarySelectedColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.selectedShadowColor, this.selectedShadowColor) && dart.equals(other.checkmarkColor, this.checkmarkColor) && dart.equals(other.labelPadding, this.labelPadding) && dart.equals(other.padding, this.padding) && dart.equals(other.side, this.side) && dart.equals(other.shape, this.shape) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.secondaryLabelStyle, this.secondaryLabelStyle) && other.brightness == this.brightness && other.elevation == this.elevation && other.pressElevation == this.pressElevation;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[88], 553, 56, "properties");
      super.debugFillProperties(properties);
      let defaultTheme = theme_data.ThemeData.fallback();
      let defaultData = chip_theme.ChipThemeData.fromDefaults({secondaryColor: defaultTheme.primaryColor, brightness: defaultTheme.brightness, labelStyle: dart.nullCheck(defaultTheme.textTheme.bodyText1)});
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor}));
      properties.add(new colors.ColorProperty.new("deleteIconColor", this.deleteIconColor, {defaultValue: defaultData.deleteIconColor}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: defaultData.disabledColor}));
      properties.add(new colors.ColorProperty.new("selectedColor", this.selectedColor, {defaultValue: defaultData.selectedColor}));
      properties.add(new colors.ColorProperty.new("secondarySelectedColor", this.secondarySelectedColor, {defaultValue: defaultData.secondarySelectedColor}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: defaultData.shadowColor}));
      properties.add(new colors.ColorProperty.new("selectedShadowColor", this.selectedShadowColor, {defaultValue: defaultData.selectedShadowColor}));
      properties.add(new colors.ColorProperty.new("checkMarkColor", this.checkmarkColor, {defaultValue: defaultData.checkmarkColor}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("labelPadding", this.labelPadding, {defaultValue: defaultData.labelPadding}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: defaultData.padding}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderSide()).new("side", this.side, {defaultValue: defaultData.side}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: defaultData.shape}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("labelStyle", this.labelStyle, {defaultValue: defaultData.labelStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("secondaryLabelStyle", this.secondaryLabelStyle, {defaultValue: defaultData.secondaryLabelStyle}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: defaultData.brightness}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: defaultData.elevation}));
      properties.add(new diagnostics.DoubleProperty.new("pressElevation", this.pressElevation, {defaultValue: defaultData.pressElevation}));
    }
  };
  (chip_theme.ChipThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    if (backgroundColor == null) dart.nullFailed(I[88], 179, 19, "backgroundColor");
    let deleteIconColor = opts && 'deleteIconColor' in opts ? opts.deleteIconColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    if (disabledColor == null) dart.nullFailed(I[88], 181, 19, "disabledColor");
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    if (selectedColor == null) dart.nullFailed(I[88], 182, 19, "selectedColor");
    let secondarySelectedColor = opts && 'secondarySelectedColor' in opts ? opts.secondarySelectedColor : null;
    if (secondarySelectedColor == null) dart.nullFailed(I[88], 183, 19, "secondarySelectedColor");
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let selectedShadowColor = opts && 'selectedShadowColor' in opts ? opts.selectedShadowColor : null;
    let showCheckmark = opts && 'showCheckmark' in opts ? opts.showCheckmark : null;
    let checkmarkColor = opts && 'checkmarkColor' in opts ? opts.checkmarkColor : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    if (padding == null) dart.nullFailed(I[88], 189, 19, "padding");
    let side = opts && 'side' in opts ? opts.side : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    if (labelStyle == null) dart.nullFailed(I[88], 192, 19, "labelStyle");
    let secondaryLabelStyle = opts && 'secondaryLabelStyle' in opts ? opts.secondaryLabelStyle : null;
    if (secondaryLabelStyle == null) dart.nullFailed(I[88], 193, 19, "secondaryLabelStyle");
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    if (brightness == null) dart.nullFailed(I[88], 194, 19, "brightness");
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let pressElevation = opts && 'pressElevation' in opts ? opts.pressElevation : null;
    this[S$0.backgroundColor$12] = backgroundColor;
    this[S$0.deleteIconColor] = deleteIconColor;
    this[S$0.disabledColor$3] = disabledColor;
    this[S$0.selectedColor$3] = selectedColor;
    this[S$0.secondarySelectedColor] = secondarySelectedColor;
    this[S$0.shadowColor$1] = shadowColor;
    this[S$0.selectedShadowColor] = selectedShadowColor;
    this[S$0.showCheckmark] = showCheckmark;
    this[S$0.checkmarkColor] = checkmarkColor;
    this[S$0.labelPadding$2] = labelPadding;
    this[S$0.padding$8] = padding;
    this[S$0.side$2] = side;
    this[S$0.shape$16] = shape;
    this[S$0.labelStyle$5] = labelStyle;
    this[S$0.secondaryLabelStyle] = secondaryLabelStyle;
    this[S$0.brightness$1] = brightness;
    this[S$0.elevation$16] = elevation;
    this[S$0.pressElevation] = pressElevation;
    if (!(backgroundColor != null)) dart.assertFailed(null, I[88], 197, 15, "backgroundColor != null");
    if (!(disabledColor != null)) dart.assertFailed(null, I[88], 198, 15, "disabledColor != null");
    if (!(selectedColor != null)) dart.assertFailed(null, I[88], 199, 15, "selectedColor != null");
    if (!(secondarySelectedColor != null)) dart.assertFailed(null, I[88], 200, 15, "secondarySelectedColor != null");
    if (!(padding != null)) dart.assertFailed(null, I[88], 201, 15, "padding != null");
    if (!(labelStyle != null)) dart.assertFailed(null, I[88], 202, 15, "labelStyle != null");
    if (!(secondaryLabelStyle != null)) dart.assertFailed(null, I[88], 203, 15, "secondaryLabelStyle != null");
    if (!(brightness != null)) dart.assertFailed(null, I[88], 204, 15, "brightness != null");
    ;
  }).prototype = chip_theme.ChipThemeData.prototype;
  dart.addTypeTests(chip_theme.ChipThemeData);
  dart.addTypeCaches(chip_theme.ChipThemeData);
  dart.setMethodSignature(chip_theme.ChipThemeData, () => ({
    __proto__: dart.getMethods(chip_theme.ChipThemeData.__proto__),
    copyWith: dart.fnType(chip_theme.ChipThemeData, [], {backgroundColor: dart.nullable(ui.Color), brightness: dart.nullable(ui.Brightness), checkmarkColor: dart.nullable(ui.Color), deleteIconColor: dart.nullable(ui.Color), disabledColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), labelPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), labelStyle: dart.nullable(text_style.TextStyle), padding: dart.nullable(edge_insets.EdgeInsetsGeometry), pressElevation: dart.nullable(core.double), secondaryLabelStyle: dart.nullable(text_style.TextStyle), secondarySelectedColor: dart.nullable(ui.Color), selectedColor: dart.nullable(ui.Color), selectedShadowColor: dart.nullable(ui.Color), shadowColor: dart.nullable(ui.Color), shape: dart.nullable(borders.OutlinedBorder), side: dart.nullable(borders.BorderSide)}, {})
  }));
  dart.setLibraryUri(chip_theme.ChipThemeData, I[89]);
  dart.setFieldSignature(chip_theme.ChipThemeData, () => ({
    __proto__: dart.getFields(chip_theme.ChipThemeData.__proto__),
    backgroundColor: dart.finalFieldType(ui.Color),
    deleteIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(ui.Color),
    selectedColor: dart.finalFieldType(ui.Color),
    secondarySelectedColor: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedShadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    showCheckmark: dart.finalFieldType(dart.nullable(core.bool)),
    checkmarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    labelPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    side: dart.finalFieldType(dart.nullable(borders.BorderSide)),
    shape: dart.finalFieldType(dart.nullable(borders.OutlinedBorder)),
    labelStyle: dart.finalFieldType(text_style.TextStyle),
    secondaryLabelStyle: dart.finalFieldType(text_style.TextStyle),
    brightness: dart.finalFieldType(ui.Brightness),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    pressElevation: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(chip_theme.ChipThemeData, ['_equals']);
  dart.defineExtensionAccessors(chip_theme.ChipThemeData, ['hashCode']);
  const Object_Diagnosticable$36$19 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$19.new = function() {
  }).prototype = Object_Diagnosticable$36$19.prototype;
  dart.applyMixin(Object_Diagnosticable$36$19, diagnostics.Diagnosticable);
  checkbox_theme.CheckboxThemeData = class CheckboxThemeData extends Object_Diagnosticable$36$19 {
    get mouseCursor() {
      return this[S$0.mouseCursor$10];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get fillColor() {
      return this[S$0.fillColor$6];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get checkColor() {
      return this[S$0.checkColor];
    }
    set checkColor(value) {
      super.checkColor = value;
    }
    get overlayColor() {
      return this[S$0.overlayColor$5];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashRadius() {
      return this[S$0.splashRadius$3];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    get materialTapTargetSize() {
      return this[S$0.materialTapTargetSize$6];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get visualDensity() {
      return this[S$0.visualDensity$9];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    copyWith(opts) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let checkColor = opts && 'checkColor' in opts ? opts.checkColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      return new checkbox_theme.CheckboxThemeData.new({mouseCursor: (t42 = mouseCursor, t42 == null ? this.mouseCursor : t42), fillColor: (t42$ = fillColor, t42$ == null ? this.fillColor : t42$), checkColor: (t42$0 = checkColor, t42$0 == null ? this.checkColor : t42$0), overlayColor: (t42$1 = overlayColor, t42$1 == null ? this.overlayColor : t42$1), splashRadius: (t42$2 = splashRadius, t42$2 == null ? this.splashRadius : t42$2), materialTapTargetSize: (t42$3 = materialTapTargetSize, t42$3 == null ? this.materialTapTargetSize : t42$3), visualDensity: (t42$4 = visualDensity, t42$4 == null ? this.visualDensity : t42$4)});
    }
    static lerp(a, b, t) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7, t42$8, t42$9, t42$10, t42$11;
      if (t == null) dart.nullFailed(I[90], 113, 84, "t");
      return new checkbox_theme.CheckboxThemeData.new({mouseCursor: dart.notNull(t) < 0.5 ? (t42 = a, t42 == null ? null : t42.mouseCursor) : (t42$ = b, t42$ == null ? null : t42$.mouseCursor), fillColor: checkbox_theme.CheckboxThemeData._lerpProperties(T$.ColorN(), (t42$0 = a, t42$0 == null ? null : t42$0.fillColor), (t42$1 = b, t42$1 == null ? null : t42$1.fillColor), t, C[1289] || CT.C1289), checkColor: checkbox_theme.CheckboxThemeData._lerpProperties(T$.ColorN(), (t42$2 = a, t42$2 == null ? null : t42$2.checkColor), (t42$3 = b, t42$3 == null ? null : t42$3.checkColor), t, C[1289] || CT.C1289), overlayColor: checkbox_theme.CheckboxThemeData._lerpProperties(T$.ColorN(), (t42$4 = a, t42$4 == null ? null : t42$4.overlayColor), (t42$5 = b, t42$5 == null ? null : t42$5.overlayColor), t, C[1289] || CT.C1289), splashRadius: ui.lerpDouble((t42$6 = a, t42$6 == null ? null : t42$6.splashRadius), (t42$7 = b, t42$7 == null ? null : t42$7.splashRadius), t), materialTapTargetSize: dart.notNull(t) < 0.5 ? (t42$8 = a, t42$8 == null ? null : t42$8.materialTapTargetSize) : (t42$9 = b, t42$9 == null ? null : t42$9.materialTapTargetSize), visualDensity: dart.notNull(t) < 0.5 ? (t42$10 = a, t42$10 == null ? null : t42$10.visualDensity) : (t42$11 = b, t42$11 == null ? null : t42$11.visualDensity)});
    }
    get hashCode() {
      return ui.hashValues(this.mouseCursor, this.fillColor, this.checkColor, this.overlayColor, this.splashRadius, this.materialTapTargetSize, this.visualDensity);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return checkbox_theme.CheckboxThemeData.is(other) && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.checkColor, this.checkColor) && dart.equals(other.overlayColor, this.overlayColor) && other.splashRadius == this.splashRadius && other.materialTapTargetSize == this.materialTapTargetSize && dart.equals(other.visualDensity, this.visualDensity);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[90], 155, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("fillColor", this.fillColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("checkColor", this.checkColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("splashRadius", this.splashRadius, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[90], 169, 12, "t");
      if (lerpFunction == null) dart.nullFailed(I[90], 170, 32, "lerpFunction");
      if (a == null && b == null) return null;
      return new (checkbox_theme._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
  };
  (checkbox_theme.CheckboxThemeData.new = function(opts) {
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let checkColor = opts && 'checkColor' in opts ? opts.checkColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    this[S$0.mouseCursor$10] = mouseCursor;
    this[S$0.fillColor$6] = fillColor;
    this[S$0.checkColor] = checkColor;
    this[S$0.overlayColor$5] = overlayColor;
    this[S$0.splashRadius$3] = splashRadius;
    this[S$0.materialTapTargetSize$6] = materialTapTargetSize;
    this[S$0.visualDensity$9] = visualDensity;
    ;
  }).prototype = checkbox_theme.CheckboxThemeData.prototype;
  dart.addTypeTests(checkbox_theme.CheckboxThemeData);
  dart.addTypeCaches(checkbox_theme.CheckboxThemeData);
  dart.setMethodSignature(checkbox_theme.CheckboxThemeData, () => ({
    __proto__: dart.getMethods(checkbox_theme.CheckboxThemeData.__proto__),
    copyWith: dart.fnType(checkbox_theme.CheckboxThemeData, [], {checkColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), fillColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), splashRadius: dart.nullable(core.double), visualDensity: dart.nullable(theme_data.VisualDensity)}, {})
  }));
  dart.setLibraryUri(checkbox_theme.CheckboxThemeData, I[91]);
  dart.setFieldSignature(checkbox_theme.CheckboxThemeData, () => ({
    __proto__: dart.getFields(checkbox_theme.CheckboxThemeData.__proto__),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    fillColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    checkColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashRadius: dart.finalFieldType(dart.nullable(core.double)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity))
  }));
  dart.defineExtensionMethods(checkbox_theme.CheckboxThemeData, ['_equals']);
  dart.defineExtensionAccessors(checkbox_theme.CheckboxThemeData, ['hashCode']);
  const _is__LerpProperties_default$3 = Symbol('_is__LerpProperties_default');
  checkbox_theme._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S$0.a$7];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S$0.b$7];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S$0.t$7];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S$0.lerpFunction$5];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t42, t42$, t44, t43, t42$0;
        if (states == null) dart.nullFailed(I[90], 188, 32, "states");
        let resolvedA = (t42 = this.a, t42 == null ? null : t42.resolve(states));
        let resolvedB = (t42$ = this.b, t42$ == null ? null : t42$.resolve(states));
        t42$0 = resolvedA;
        t43 = resolvedB;
        t44 = this.t;
        return this.lerpFunction(t42$0, t43, t44);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      if (t == null) dart.nullFailed(I[90], 180, 46, "t");
      if (lerpFunction == null) dart.nullFailed(I[90], 180, 54, "lerpFunction");
      this[S$0.a$7] = a;
      this[S$0.b$7] = b;
      this[S$0.t$7] = t;
      this[S$0.lerpFunction$5] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default$3] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(T)];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(T, [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[91]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(T, [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  checkbox_theme._LerpProperties = checkbox_theme._LerpProperties$();
  dart.addTypeTests(checkbox_theme._LerpProperties, _is__LerpProperties_default$3);
  checkbox_theme.CheckboxTheme = class CheckboxTheme extends framework.InheritedWidget {
    get data() {
      return this[S$0.data$15];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t42, t42$;
      if (context == null) dart.nullFailed(I[90], 228, 44, "context");
      let checkboxTheme = context.dependOnInheritedWidgetOfExactType(checkbox_theme.CheckboxTheme);
      t42$ = (t42 = checkboxTheme, t42 == null ? null : t42.data);
      return t42$ == null ? theme$.Theme.of(context).checkboxTheme : t42$;
    }
    updateShouldNotify(oldWidget) {
      checkbox_theme.CheckboxTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[90], 234, 41, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (checkbox_theme.CheckboxTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[90], 213, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[90], 214, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$15] = data;
    checkbox_theme.CheckboxTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = checkbox_theme.CheckboxTheme.prototype;
  dart.addTypeTests(checkbox_theme.CheckboxTheme);
  dart.addTypeCaches(checkbox_theme.CheckboxTheme);
  dart.setMethodSignature(checkbox_theme.CheckboxTheme, () => ({
    __proto__: dart.getMethods(checkbox_theme.CheckboxTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(checkbox_theme.CheckboxTheme, I[91]);
  dart.setFieldSignature(checkbox_theme.CheckboxTheme, () => ({
    __proto__: dart.getFields(checkbox_theme.CheckboxTheme.__proto__),
    data: dart.finalFieldType(checkbox_theme.CheckboxThemeData)
  }));
  const Object_Diagnosticable$36$20 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$20.new = function() {
  }).prototype = Object_Diagnosticable$36$20.prototype;
  dart.applyMixin(Object_Diagnosticable$36$20, diagnostics.Diagnosticable);
  card_theme.CardTheme = class CardTheme extends Object_Diagnosticable$36$20 {
    get clipBehavior() {
      return this[S$0.clipBehavior$8];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get color() {
      return this[S$0.color$11];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[S$0.shadowColor$2];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get elevation() {
      return this[S$0.elevation$17];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get margin() {
      return this[S$0.margin$1];
    }
    set margin(value) {
      super.margin = value;
    }
    get shape() {
      return this[S$0.shape$17];
    }
    set shape(value) {
      super.shape = value;
    }
    copyWith(opts) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new card_theme.CardTheme.new({clipBehavior: (t42 = clipBehavior, t42 == null ? this.clipBehavior : t42), color: (t42$ = color, t42$ == null ? this.color : t42$), shadowColor: (t42$0 = shadowColor, t42$0 == null ? this.shadowColor : t42$0), elevation: (t42$1 = elevation, t42$1 == null ? this.elevation : t42$1), margin: (t42$2 = margin, t42$2 == null ? this.margin : t42$2), shape: (t42$3 = shape, t42$3 == null ? this.shape : t42$3)});
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[92], 97, 36, "context");
      return theme$.Theme.of(context).cardTheme;
    }
    static lerp(a, b, t) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7, t42$8, t42$9;
      if (t == null) dart.nullFailed(I[92], 106, 60, "t");
      if (!(t != null)) dart.assertFailed(null, I[92], 107, 12, "t != null");
      return new card_theme.CardTheme.new({clipBehavior: dart.notNull(t) < 0.5 ? (t42 = a, t42 == null ? null : t42.clipBehavior) : (t42$ = b, t42$ == null ? null : t42$.clipBehavior), color: ui.Color.lerp((t42$0 = a, t42$0 == null ? null : t42$0.color), (t42$1 = b, t42$1 == null ? null : t42$1.color), t), shadowColor: ui.Color.lerp((t42$2 = a, t42$2 == null ? null : t42$2.shadowColor), (t42$3 = b, t42$3 == null ? null : t42$3.shadowColor), t), elevation: ui.lerpDouble((t42$4 = a, t42$4 == null ? null : t42$4.elevation), (t42$5 = b, t42$5 == null ? null : t42$5.elevation), t), margin: edge_insets.EdgeInsetsGeometry.lerp((t42$6 = a, t42$6 == null ? null : t42$6.margin), (t42$7 = b, t42$7 == null ? null : t42$7.margin), t), shape: borders.ShapeBorder.lerp((t42$8 = a, t42$8 == null ? null : t42$8.shape), (t42$9 = b, t42$9 == null ? null : t42$9.shape), t)});
    }
    get hashCode() {
      return ui.hashValues(this.clipBehavior, this.color, this.shadowColor, this.elevation, this.margin, this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return card_theme.CardTheme.is(other) && other.clipBehavior == this.clipBehavior && dart.equals(other.color, this.color) && dart.equals(other.shadowColor, this.shadowColor) && other.elevation == this.elevation && dart.equals(other.margin, this.margin) && dart.equals(other.shape, this.shape);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[92], 146, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfClip()).new("clipBehavior", this.clipBehavior, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
    }
  };
  (card_theme.CardTheme.new = function(opts) {
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    this[S$0.clipBehavior$8] = clipBehavior;
    this[S$0.color$11] = color;
    this[S$0.shadowColor$2] = shadowColor;
    this[S$0.elevation$17] = elevation;
    this[S$0.margin$1] = margin;
    this[S$0.shape$17] = shape;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[92], 42, 15, "elevation == null || elevation >= 0.0");
    ;
  }).prototype = card_theme.CardTheme.prototype;
  dart.addTypeTests(card_theme.CardTheme);
  dart.addTypeCaches(card_theme.CardTheme);
  dart.setMethodSignature(card_theme.CardTheme, () => ({
    __proto__: dart.getMethods(card_theme.CardTheme.__proto__),
    copyWith: dart.fnType(card_theme.CardTheme, [], {clipBehavior: dart.nullable(ui.Clip), color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), margin: dart.nullable(edge_insets.EdgeInsetsGeometry), shadowColor: dart.nullable(ui.Color), shape: dart.nullable(borders.ShapeBorder)}, {})
  }));
  dart.setLibraryUri(card_theme.CardTheme, I[93]);
  dart.setFieldSignature(card_theme.CardTheme, () => ({
    __proto__: dart.getFields(card_theme.CardTheme.__proto__),
    clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder))
  }));
  dart.defineExtensionMethods(card_theme.CardTheme, ['_equals']);
  dart.defineExtensionAccessors(card_theme.CardTheme, ['hashCode']);
  const Object_Diagnosticable$36$21 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$21.new = function() {
  }).prototype = Object_Diagnosticable$36$21.prototype;
  dart.applyMixin(Object_Diagnosticable$36$21, diagnostics.Diagnosticable);
  tooltip_theme.TooltipThemeData = class TooltipThemeData extends Object_Diagnosticable$36$21 {
    get height() {
      return this[S$0.height$2];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[S$0.padding$9];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[S$0.margin$2];
    }
    set margin(value) {
      super.margin = value;
    }
    get verticalOffset() {
      return this[S$0.verticalOffset];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[S$0.preferBelow];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    get excludeFromSemantics() {
      return this[S$0.excludeFromSemantics];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get decoration() {
      return this[S$0.decoration$3];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[S$0.textStyle$4];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get waitDuration() {
      return this[S$0.waitDuration];
    }
    set waitDuration(value) {
      super.waitDuration = value;
    }
    get showDuration() {
      return this[S$0.showDuration];
    }
    set showDuration(value) {
      super.showDuration = value;
    }
    copyWith(opts) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7;
      let height = opts && 'height' in opts ? opts.height : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
      let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
      let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
      let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
      return new tooltip_theme.TooltipThemeData.new({height: (t42 = height, t42 == null ? this.height : t42), padding: (t42$ = padding, t42$ == null ? this.padding : t42$), margin: (t42$0 = margin, t42$0 == null ? this.margin : t42$0), verticalOffset: (t42$1 = verticalOffset, t42$1 == null ? this.verticalOffset : t42$1), preferBelow: (t42$2 = preferBelow, t42$2 == null ? this.preferBelow : t42$2), excludeFromSemantics: (t42$3 = excludeFromSemantics, t42$3 == null ? this.excludeFromSemantics : t42$3), decoration: (t42$4 = decoration, t42$4 == null ? this.decoration : t42$4), textStyle: (t42$5 = textStyle, t42$5 == null ? this.textStyle : t42$5), waitDuration: (t42$6 = waitDuration, t42$6 == null ? this.waitDuration : t42$6), showDuration: (t42$7 = showDuration, t42$7 == null ? this.showDuration : t42$7)});
    }
    static lerp(a, b, t) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7, t42$8, t42$9, t42$10, t42$11, t42$12, t42$13;
      if (t == null) dart.nullFailed(I[94], 120, 82, "t");
      if (a == null && b == null) return null;
      if (!(t != null)) dart.assertFailed(null, I[94], 123, 12, "t != null");
      return new tooltip_theme.TooltipThemeData.new({height: ui.lerpDouble((t42 = a, t42 == null ? null : t42.height), (t42$ = b, t42$ == null ? null : t42$.height), t), padding: edge_insets.EdgeInsetsGeometry.lerp((t42$0 = a, t42$0 == null ? null : t42$0.padding), (t42$1 = b, t42$1 == null ? null : t42$1.padding), t), margin: edge_insets.EdgeInsetsGeometry.lerp((t42$2 = a, t42$2 == null ? null : t42$2.margin), (t42$3 = b, t42$3 == null ? null : t42$3.margin), t), verticalOffset: ui.lerpDouble((t42$4 = a, t42$4 == null ? null : t42$4.verticalOffset), (t42$5 = b, t42$5 == null ? null : t42$5.verticalOffset), t), preferBelow: dart.notNull(t) < 0.5 ? (t42$6 = a, t42$6 == null ? null : t42$6.preferBelow) : (t42$7 = b, t42$7 == null ? null : t42$7.preferBelow), excludeFromSemantics: dart.notNull(t) < 0.5 ? (t42$8 = a, t42$8 == null ? null : t42$8.excludeFromSemantics) : (t42$9 = b, t42$9 == null ? null : t42$9.excludeFromSemantics), decoration: decoration.Decoration.lerp((t42$10 = a, t42$10 == null ? null : t42$10.decoration), (t42$11 = b, t42$11 == null ? null : t42$11.decoration), t), textStyle: text_style.TextStyle.lerp((t42$12 = a, t42$12 == null ? null : t42$12.textStyle), (t42$13 = b, t42$13 == null ? null : t42$13.textStyle), t)});
    }
    get hashCode() {
      return ui.hashValues(this.height, this.padding, this.margin, this.verticalOffset, this.preferBelow, this.excludeFromSemantics, this.decoration, this.textStyle, this.waitDuration, this.showDuration);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return tooltip_theme.TooltipThemeData.is(other) && other.height == this.height && dart.equals(other.padding, this.padding) && dart.equals(other.margin, this.margin) && other.verticalOffset == this.verticalOffset && other.preferBelow == this.preferBelow && other.excludeFromSemantics == this.excludeFromSemantics && dart.equals(other.decoration, this.decoration) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.waitDuration, this.waitDuration) && dart.equals(other.showDuration, this.showDuration);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[94], 172, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("vertical offset", this.verticalOffset, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("position", {value: this.preferBelow, ifTrue: "below", ifFalse: "above", showName: true, defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("semantics", {value: this.excludeFromSemantics, ifTrue: "excluded", showName: true, defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDecoration()).new("decoration", this.decoration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("textStyle", this.textStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("wait duration", this.waitDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("show duration", this.showDuration, {defaultValue: null}));
    }
  };
  (tooltip_theme.TooltipThemeData.new = function(opts) {
    let height = opts && 'height' in opts ? opts.height : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
    let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
    this[S$0.height$2] = height;
    this[S$0.padding$9] = padding;
    this[S$0.margin$2] = margin;
    this[S$0.verticalOffset] = verticalOffset;
    this[S$0.preferBelow] = preferBelow;
    this[S$0.excludeFromSemantics] = excludeFromSemantics;
    this[S$0.decoration$3] = decoration;
    this[S$0.textStyle$4] = textStyle;
    this[S$0.waitDuration] = waitDuration;
    this[S$0.showDuration] = showDuration;
    ;
  }).prototype = tooltip_theme.TooltipThemeData.prototype;
  dart.addTypeTests(tooltip_theme.TooltipThemeData);
  dart.addTypeCaches(tooltip_theme.TooltipThemeData);
  dart.setMethodSignature(tooltip_theme.TooltipThemeData, () => ({
    __proto__: dart.getMethods(tooltip_theme.TooltipThemeData.__proto__),
    copyWith: dart.fnType(tooltip_theme.TooltipThemeData, [], {decoration: dart.nullable(decoration.Decoration), excludeFromSemantics: dart.nullable(core.bool), height: dart.nullable(core.double), margin: dart.nullable(edge_insets.EdgeInsetsGeometry), padding: dart.nullable(edge_insets.EdgeInsetsGeometry), preferBelow: dart.nullable(core.bool), showDuration: dart.nullable(core.Duration), textStyle: dart.nullable(text_style.TextStyle), verticalOffset: dart.nullable(core.double), waitDuration: dart.nullable(core.Duration)}, {})
  }));
  dart.setLibraryUri(tooltip_theme.TooltipThemeData, I[95]);
  dart.setFieldSignature(tooltip_theme.TooltipThemeData, () => ({
    __proto__: dart.getFields(tooltip_theme.TooltipThemeData.__proto__),
    height: dart.finalFieldType(dart.nullable(core.double)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    verticalOffset: dart.finalFieldType(dart.nullable(core.double)),
    preferBelow: dart.finalFieldType(dart.nullable(core.bool)),
    excludeFromSemantics: dart.finalFieldType(dart.nullable(core.bool)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    waitDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    showDuration: dart.finalFieldType(dart.nullable(core.Duration))
  }));
  dart.defineExtensionMethods(tooltip_theme.TooltipThemeData, ['_equals']);
  dart.defineExtensionAccessors(tooltip_theme.TooltipThemeData, ['hashCode']);
  tooltip_theme.TooltipTheme = class TooltipTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$0.data$16];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t42, t42$;
      if (context == null) dart.nullFailed(I[94], 240, 43, "context");
      let tooltipTheme = context.dependOnInheritedWidgetOfExactType(tooltip_theme.TooltipTheme);
      t42$ = (t42 = tooltipTheme, t42 == null ? null : t42.data);
      return t42$ == null ? theme$.Theme.of(context).tooltipTheme : t42$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[94], 246, 28, "context");
      if (child == null) dart.nullFailed(I[94], 246, 44, "child");
      return new tooltip_theme.TooltipTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[1873] || CT.C1873});
    }
    updateShouldNotify(oldWidget) {
      tooltip_theme.TooltipTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[94], 251, 40, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (tooltip_theme.TooltipTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[94], 224, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[94], 225, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$16] = data;
    if (!(data != null)) dart.assertFailed(null, I[94], 226, 15, "data != null");
    tooltip_theme.TooltipTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip_theme.TooltipTheme.prototype;
  dart.addTypeTests(tooltip_theme.TooltipTheme);
  dart.addTypeCaches(tooltip_theme.TooltipTheme);
  dart.setMethodSignature(tooltip_theme.TooltipTheme, () => ({
    __proto__: dart.getMethods(tooltip_theme.TooltipTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(tooltip_theme.TooltipTheme, I[95]);
  dart.setFieldSignature(tooltip_theme.TooltipTheme, () => ({
    __proto__: dart.getFields(tooltip_theme.TooltipTheme.__proto__),
    data: dart.finalFieldType(tooltip_theme.TooltipThemeData)
  }));
  tooltip.Tooltip = class Tooltip extends framework.StatefulWidget {
    get message() {
      return this[S$0.message];
    }
    set message(value) {
      super.message = value;
    }
    get height() {
      return this[S$0.height$3];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[S$0.padding$10];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[S$0.margin$3];
    }
    set margin(value) {
      super.margin = value;
    }
    get verticalOffset() {
      return this[S$0.verticalOffset$1];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[S$0.preferBelow$1];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    get excludeFromSemantics() {
      return this[S$0.excludeFromSemantics$1];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get child() {
      return this[S$0.child$19];
    }
    set child(value) {
      super.child = value;
    }
    get decoration() {
      return this[S$0.decoration$4];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[S$0.textStyle$5];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get waitDuration() {
      return this[S$0.waitDuration$1];
    }
    set waitDuration(value) {
      super.waitDuration = value;
    }
    get showDuration() {
      return this[S$0.showDuration$1];
    }
    set showDuration(value) {
      super.showDuration = value;
    }
    createState() {
      return new tooltip._TooltipState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[96], 210, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.StringProperty.new("message", this.message, {showName: false}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("vertical offset", this.verticalOffset, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("position", {value: this.preferBelow, ifTrue: "below", ifFalse: "above", showName: true, defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("semantics", {value: this.excludeFromSemantics, ifTrue: "excluded", showName: true, defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("wait duration", this.waitDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("show duration", this.showDuration, {defaultValue: null}));
    }
  };
  (tooltip.Tooltip.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let message = opts && 'message' in opts ? opts.message : null;
    if (message == null) dart.nullFailed(I[96], 103, 19, "message");
    let height = opts && 'height' in opts ? opts.height : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
    let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.message] = message;
    this[S$0.height$3] = height;
    this[S$0.padding$10] = padding;
    this[S$0.margin$3] = margin;
    this[S$0.verticalOffset$1] = verticalOffset;
    this[S$0.preferBelow$1] = preferBelow;
    this[S$0.excludeFromSemantics$1] = excludeFromSemantics;
    this[S$0.decoration$4] = decoration;
    this[S$0.textStyle$5] = textStyle;
    this[S$0.waitDuration$1] = waitDuration;
    this[S$0.showDuration$1] = showDuration;
    this[S$0.child$19] = child;
    if (!(message != null)) dart.assertFailed(null, I[96], 115, 15, "message != null");
    tooltip.Tooltip.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip.Tooltip.prototype;
  dart.addTypeTests(tooltip.Tooltip);
  dart.addTypeCaches(tooltip.Tooltip);
  dart.setMethodSignature(tooltip.Tooltip, () => ({
    __proto__: dart.getMethods(tooltip.Tooltip.__proto__),
    createState: dart.fnType(tooltip._TooltipState, [])
  }));
  dart.setLibraryUri(tooltip.Tooltip, I[97]);
  dart.setFieldSignature(tooltip.Tooltip, () => ({
    __proto__: dart.getFields(tooltip.Tooltip.__proto__),
    message: dart.finalFieldType(core.String),
    height: dart.finalFieldType(dart.nullable(core.double)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    verticalOffset: dart.finalFieldType(dart.nullable(core.double)),
    preferBelow: dart.finalFieldType(dart.nullable(core.bool)),
    excludeFromSemantics: dart.finalFieldType(dart.nullable(core.bool)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    waitDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    showDuration: dart.finalFieldType(dart.nullable(core.Duration))
  }));
  const State_SingleTickerProviderStateMixin$36$1 = class State_SingleTickerProviderStateMixin extends framework.State$(tooltip.Tooltip) {};
  (State_SingleTickerProviderStateMixin$36$1.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(tooltip.Tooltip)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$1.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$1.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$1, ticker_provider.SingleTickerProviderStateMixin$(tooltip.Tooltip));
  tooltip._TooltipState = class _TooltipState extends State_SingleTickerProviderStateMixin$36$1 {
    get height() {
      let t42;
      return dart.test(this[S$0.___TooltipState_height_isSet]) ? (t42 = this[S$0.___TooltipState_height], t42) : dart.throw(new _internal.LateError.fieldNI("height"));
    }
    set height(t42) {
      if (t42 == null) dart.nullFailed(I[96], 234, 15, "null");
      this[S$0.___TooltipState_height_isSet] = true;
      this[S$0.___TooltipState_height] = t42;
    }
    get padding() {
      let t43;
      return dart.test(this[S$0.___TooltipState_padding_isSet]) ? (t43 = this[S$0.___TooltipState_padding], t43) : dart.throw(new _internal.LateError.fieldNI("padding"));
    }
    set padding(t43) {
      if (t43 == null) dart.nullFailed(I[96], 235, 27, "null");
      this[S$0.___TooltipState_padding_isSet] = true;
      this[S$0.___TooltipState_padding] = t43;
    }
    get margin() {
      let t44;
      return dart.test(this[S$0.___TooltipState_margin_isSet]) ? (t44 = this[S$0.___TooltipState_margin], t44) : dart.throw(new _internal.LateError.fieldNI("margin"));
    }
    set margin(t44) {
      if (t44 == null) dart.nullFailed(I[96], 236, 27, "null");
      this[S$0.___TooltipState_margin_isSet] = true;
      this[S$0.___TooltipState_margin] = t44;
    }
    get decoration() {
      let t45;
      return dart.test(this[S$0.___TooltipState_decoration_isSet]) ? (t45 = this[S$0.___TooltipState_decoration], t45) : dart.throw(new _internal.LateError.fieldNI("decoration"));
    }
    set decoration(t45) {
      if (t45 == null) dart.nullFailed(I[96], 237, 19, "null");
      this[S$0.___TooltipState_decoration_isSet] = true;
      this[S$0.___TooltipState_decoration] = t45;
    }
    get textStyle() {
      let t46;
      return dart.test(this[S$0.___TooltipState_textStyle_isSet]) ? (t46 = this[S$0.___TooltipState_textStyle], t46) : dart.throw(new _internal.LateError.fieldNI("textStyle"));
    }
    set textStyle(t46) {
      if (t46 == null) dart.nullFailed(I[96], 238, 18, "null");
      this[S$0.___TooltipState_textStyle_isSet] = true;
      this[S$0.___TooltipState_textStyle] = t46;
    }
    get verticalOffset() {
      let t47;
      return dart.test(this[S$0.___TooltipState_verticalOffset_isSet]) ? (t47 = this[S$0.___TooltipState_verticalOffset], t47) : dart.throw(new _internal.LateError.fieldNI("verticalOffset"));
    }
    set verticalOffset(t47) {
      if (t47 == null) dart.nullFailed(I[96], 239, 15, "null");
      this[S$0.___TooltipState_verticalOffset_isSet] = true;
      this[S$0.___TooltipState_verticalOffset] = t47;
    }
    set preferBelow(t48) {
      if (t48 == null) dart.nullFailed(I[96], 240, 13, "null");
      this[S$0.___TooltipState_preferBelow_isSet] = true;
      this[S$0.___TooltipState_preferBelow] = t48;
    }
    get preferBelow() {
      let t49;
      return dart.test(this[S$0.___TooltipState_preferBelow_isSet]) ? (t49 = this[S$0.___TooltipState_preferBelow], t49) : dart.throw(new _internal.LateError.fieldNI("preferBelow"));
    }
    get excludeFromSemantics() {
      let t49;
      return dart.test(this[S$0.___TooltipState_excludeFromSemantics_isSet]) ? (t49 = this[S$0.___TooltipState_excludeFromSemantics], t49) : dart.throw(new _internal.LateError.fieldNI("excludeFromSemantics"));
    }
    set excludeFromSemantics(t49) {
      if (t49 == null) dart.nullFailed(I[96], 241, 13, "null");
      this[S$0.___TooltipState_excludeFromSemantics_isSet] = true;
      this[S$0.___TooltipState_excludeFromSemantics] = t49;
    }
    get [S$0._controller$6]() {
      let t50;
      return dart.test(this[S$0.___TooltipState__controller_isSet]) ? (t50 = this[S$0.___TooltipState__controller], t50) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S$0._controller$6](t50) {
      if (t50 == null) dart.nullFailed(I[96], 242, 28, "null");
      this[S$0.___TooltipState__controller_isSet] = true;
      this[S$0.___TooltipState__controller] = t50;
    }
    get showDuration() {
      let t51;
      return dart.test(this[S$0.___TooltipState_showDuration_isSet]) ? (t51 = this[S$0.___TooltipState_showDuration], t51) : dart.throw(new _internal.LateError.fieldNI("showDuration"));
    }
    set showDuration(t51) {
      if (t51 == null) dart.nullFailed(I[96], 246, 17, "null");
      this[S$0.___TooltipState_showDuration_isSet] = true;
      this[S$0.___TooltipState_showDuration] = t51;
    }
    get waitDuration() {
      let t52;
      return dart.test(this[S$0.___TooltipState_waitDuration_isSet]) ? (t52 = this[S$0.___TooltipState_waitDuration], t52) : dart.throw(new _internal.LateError.fieldNI("waitDuration"));
    }
    set waitDuration(t52) {
      if (t52 == null) dart.nullFailed(I[96], 247, 17, "null");
      this[S$0.___TooltipState_waitDuration_isSet] = true;
      this[S$0.___TooltipState_waitDuration] = t52;
    }
    get [S$0._mouseIsConnected]() {
      let t53;
      return dart.test(this[S$0.___TooltipState__mouseIsConnected_isSet]) ? (t53 = this[S$0.___TooltipState__mouseIsConnected], t53) : dart.throw(new _internal.LateError.fieldNI("_mouseIsConnected"));
    }
    set [S$0._mouseIsConnected](t53) {
      if (t53 == null) dart.nullFailed(I[96], 248, 13, "null");
      this[S$0.___TooltipState__mouseIsConnected_isSet] = true;
      this[S$0.___TooltipState__mouseIsConnected] = t53;
    }
    initState() {
      let t54;
      super.initState();
      this[S$0._mouseIsConnected] = dart.nullCheck(binding.RendererBinding.instance).mouseTracker.mouseIsConnected;
      this[S$0._controller$6] = (t54 = new animation_controller.AnimationController.new({duration: tooltip._TooltipState._fadeInDuration, reverseDuration: tooltip._TooltipState._fadeOutDuration, vsync: this}), (() => {
        t54.addStatusListener(dart.bind(this, S$0._handleStatusChanged));
        return t54;
      })());
      dart.nullCheck(binding.RendererBinding.instance).mouseTracker.addListener(dart.bind(this, S$0._handleMouseTrackerChange));
      dart.nullCheck(binding$.GestureBinding.instance).pointerRouter.addGlobalRoute(dart.bind(this, S$0._handlePointerEvent));
    }
    [S$0._getDefaultTooltipHeight]() {
      let theme = theme$.Theme.of(this.context);
      switch (theme.platform) {
        case C[49] || CT.C49:
        case C[46] || CT.C46:
        case C[47] || CT.C47:
        {
          return 24.0;
        }
        default:
        {
          return 32.0;
        }
      }
    }
    [S$0._getDefaultPadding]() {
      let theme = theme$.Theme.of(this.context);
      switch (theme.platform) {
        case C[49] || CT.C49:
        case C[46] || CT.C46:
        case C[47] || CT.C47:
        {
          return C[153] || CT.C153;
        }
        default:
        {
          return C[567] || CT.C567;
        }
      }
    }
    [S$0._getDefaultFontSize]() {
      let theme = theme$.Theme.of(this.context);
      switch (theme.platform) {
        case C[49] || CT.C49:
        case C[46] || CT.C46:
        case C[47] || CT.C47:
        {
          return 10.0;
        }
        default:
        {
          return 14.0;
        }
      }
    }
    [S$0._handleMouseTrackerChange]() {
      if (!dart.test(this.mounted)) {
        return;
      }
      let mouseIsConnected = dart.nullCheck(binding.RendererBinding.instance).mouseTracker.mouseIsConnected;
      if (mouseIsConnected != this[S$0._mouseIsConnected]) {
        this.setState(dart.fn(() => {
          this[S$0._mouseIsConnected] = mouseIsConnected;
        }, T$.VoidTovoid()));
      }
    }
    [S$0._handleStatusChanged](status) {
      if (status == null) dart.nullFailed(I[96], 318, 45, "status");
      if (status == animation.AnimationStatus.dismissed) {
        this[S$0._hideTooltip]({immediately: true});
      }
    }
    [S$0._hideTooltip](opts) {
      let t54;
      let immediately = opts && 'immediately' in opts ? opts.immediately : false;
      if (immediately == null) dart.nullFailed(I[96], 324, 28, "immediately");
      t54 = this[S$0._showTimer];
      t54 == null ? null : t54.cancel();
      this[S$0._showTimer] = null;
      if (dart.test(immediately)) {
        this[S$0._removeEntry]();
        return;
      }
      if (dart.test(this[S$0._longPressActivated])) {
        this[S$0._hideTimer] == null ? this[S$0._hideTimer] = async.Timer.new(this.showDuration, dart.bind(this[S$0._controller$6], 'reverse')) : null;
      } else {
        this[S$0._controller$6].reverse();
      }
      this[S$0._longPressActivated] = false;
    }
    [S$0._showTooltip](opts) {
      let t54;
      let immediately = opts && 'immediately' in opts ? opts.immediately : false;
      if (immediately == null) dart.nullFailed(I[96], 342, 28, "immediately");
      t54 = this[S$0._hideTimer];
      t54 == null ? null : t54.cancel();
      this[S$0._hideTimer] = null;
      if (dart.test(immediately)) {
        this.ensureTooltipVisible();
        return;
      }
      this[S$0._showTimer] == null ? this[S$0._showTimer] = async.Timer.new(this.waitDuration, dart.bind(this, 'ensureTooltipVisible')) : null;
    }
    ensureTooltipVisible() {
      let t54, t54$;
      t54 = this[S$0._showTimer];
      t54 == null ? null : t54.cancel();
      this[S$0._showTimer] = null;
      if (this[S$0._entry] != null) {
        t54$ = this[S$0._hideTimer];
        t54$ == null ? null : t54$.cancel();
        this[S$0._hideTimer] = null;
        this[S$0._controller$6].forward();
        return false;
      }
      this[S$0._createNewEntry]();
      this[S$0._controller$6].forward();
      return true;
    }
    [S$0._createNewEntry]() {
      let overlayState = dart.nullCheck(overlay$.Overlay.of(this.context, {debugRequiredFor: this.widget}));
      let box = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
      let target = box.localToGlobal(box.size.center(ui.Offset.zero), {ancestor: overlayState.context.findRenderObject()});
      let overlay = new basic.Directionality.new({textDirection: basic.Directionality.of(this.context), child: new tooltip._TooltipOverlay.new({message: this.widget.message, height: this.height, padding: this.padding, margin: this.margin, decoration: this.decoration, textStyle: this.textStyle, animation: new animations.CurvedAnimation.new({parent: this[S$0._controller$6], curve: curves.Curves.fastOutSlowIn}), target: target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow, $creationLocationd_0dea112b090073317d4: C[1877] || CT.C1877}), $creationLocationd_0dea112b090073317d4: C[1889] || CT.C1889});
      this[S$0._entry] = new overlay$.OverlayEntry.new({builder: dart.fn(context => {
          if (context == null) dart.nullFailed(I[96], 404, 50, "context");
          return overlay;
        }, T$.BuildContextToWidget())});
      overlayState.insert(dart.nullCheck(this[S$0._entry]));
      semantics_service.SemanticsService.tooltip(this.widget.message);
    }
    [S$0._removeEntry]() {
      let t54, t54$, t54$0;
      t54 = this[S$0._hideTimer];
      t54 == null ? null : t54.cancel();
      this[S$0._hideTimer] = null;
      t54$ = this[S$0._showTimer];
      t54$ == null ? null : t54$.cancel();
      this[S$0._showTimer] = null;
      t54$0 = this[S$0._entry];
      t54$0 == null ? null : t54$0.remove();
      this[S$0._entry] = null;
    }
    [S$0._handlePointerEvent](event) {
      if (event == null) dart.nullFailed(I[96], 418, 41, "event");
      if (this[S$0._entry] == null) {
        return;
      }
      if (events.PointerUpEvent.is(event) || events.PointerCancelEvent.is(event)) {
        this[S$0._hideTooltip]();
      } else if (events.PointerDownEvent.is(event)) {
        this[S$0._hideTooltip]({immediately: true});
      }
    }
    deactivate() {
      let t54;
      if (this[S$0._entry] != null) {
        this[S$0._hideTooltip]({immediately: true});
      }
      t54 = this[S$0._showTimer];
      t54 == null ? null : t54.cancel();
      super.deactivate();
    }
    dispose() {
      dart.nullCheck(binding$.GestureBinding.instance).pointerRouter.removeGlobalRoute(dart.bind(this, S$0._handlePointerEvent));
      dart.nullCheck(binding.RendererBinding.instance).mouseTracker.removeListener(dart.bind(this, S$0._handleMouseTrackerChange));
      if (this[S$0._entry] != null) this[S$0._removeEntry]();
      this[S$0._controller$6].dispose();
      super.dispose();
    }
    [S$0._handleLongPress]() {
      this[S$0._longPressActivated] = true;
      let tooltipCreated = this.ensureTooltipVisible();
      if (dart.test(tooltipCreated)) feedback.Feedback.forLongPress(this.context);
    }
    build(context) {
      let t54, t54$, t54$0, t54$1, t54$2, t54$3, t54$4, t54$5, t54$6, t54$7, t54$8, t54$9, t54$10, t54$11, t54$12, t54$13, t54$14, t54$15, t54$16, t54$17;
      if (context == null) dart.nullFailed(I[96], 456, 29, "context");
      if (!(overlay$.Overlay.of(context, {debugRequiredFor: this.widget}) != null)) dart.assertFailed(null, I[96], 457, 12, "Overlay.of(context, debugRequiredFor: widget) != null");
      let theme = theme$.Theme.of(context);
      let tooltipTheme = tooltip_theme.TooltipTheme.of(context);
      let defaultTextStyle = null;
      let defaultDecoration = null;
      if (theme.brightness == ui.Brightness.dark) {
        defaultTextStyle = dart.nullCheck(theme.textTheme.bodyText2).copyWith({color: colors$.Colors.black, fontSize: this[S$0._getDefaultFontSize]()});
        defaultDecoration = new box_decoration.BoxDecoration.new({color: colors$.Colors.white.withOpacity(0.9), borderRadius: C[160] || CT.C160});
      } else {
        defaultTextStyle = dart.nullCheck(theme.textTheme.bodyText2).copyWith({color: colors$.Colors.white, fontSize: this[S$0._getDefaultFontSize]()});
        defaultDecoration = new box_decoration.BoxDecoration.new({color: dart.nullCheck(colors$.Colors.grey._get(700)).withOpacity(0.9), borderRadius: C[160] || CT.C160});
      }
      this.height = (t54$ = (t54 = this.widget.height, t54 == null ? tooltipTheme.height : t54), t54$ == null ? this[S$0._getDefaultTooltipHeight]() : t54$);
      this.padding = (t54$1 = (t54$0 = this.widget.padding, t54$0 == null ? tooltipTheme.padding : t54$0), t54$1 == null ? this[S$0._getDefaultPadding]() : t54$1);
      this.margin = (t54$3 = (t54$2 = this.widget.margin, t54$2 == null ? tooltipTheme.margin : t54$2), t54$3 == null ? tooltip._TooltipState._defaultMargin : t54$3);
      this.verticalOffset = (t54$5 = (t54$4 = this.widget.verticalOffset, t54$4 == null ? tooltipTheme.verticalOffset : t54$4), t54$5 == null ? 24 : t54$5);
      this.preferBelow = (t54$7 = (t54$6 = this.widget.preferBelow, t54$6 == null ? tooltipTheme.preferBelow : t54$6), t54$7 == null ? true : t54$7);
      this.excludeFromSemantics = (t54$9 = (t54$8 = this.widget.excludeFromSemantics, t54$8 == null ? tooltipTheme.excludeFromSemantics : t54$8), t54$9 == null ? false : t54$9);
      this.decoration = (t54$11 = (t54$10 = this.widget.decoration, t54$10 == null ? tooltipTheme.decoration : t54$10), t54$11 == null ? defaultDecoration : t54$11);
      this.textStyle = (t54$13 = (t54$12 = this.widget.textStyle, t54$12 == null ? tooltipTheme.textStyle : t54$12), t54$13 == null ? defaultTextStyle : t54$13);
      this.waitDuration = (t54$15 = (t54$14 = this.widget.waitDuration, t54$14 == null ? tooltipTheme.waitDuration : t54$14), t54$15 == null ? tooltip._TooltipState._defaultWaitDuration : t54$15);
      this.showDuration = (t54$17 = (t54$16 = this.widget.showDuration, t54$16 == null ? tooltipTheme.showDuration : t54$16), t54$17 == null ? tooltip._TooltipState._defaultShowDuration : t54$17);
      let result = new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onLongPress: dart.bind(this, S$0._handleLongPress), excludeFromSemantics: true, child: new basic.Semantics.new({label: dart.test(this.excludeFromSemantics) ? null : this.widget.message, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[1893] || CT.C1893}), $creationLocationd_0dea112b090073317d4: C[1897] || CT.C1897});
      if (dart.test(this[S$0._mouseIsConnected])) {
        result = new basic.MouseRegion.new({onEnter: dart.fn(event => {
            if (event == null) dart.nullFailed(I[96], 506, 37, "event");
            return this[S$0._showTooltip]();
          }, T$.PointerEnterEventTovoid()), onExit: dart.fn(event => {
            if (event == null) dart.nullFailed(I[96], 507, 35, "event");
            return this[S$0._hideTooltip]();
          }, T$.PointerExitEventTovoid()), child: result, $creationLocationd_0dea112b090073317d4: C[1903] || CT.C1903});
      }
      return result;
    }
  };
  (tooltip._TooltipState.new = function() {
    this[S$0.___TooltipState_height] = null;
    this[S$0.___TooltipState_height_isSet] = false;
    this[S$0.___TooltipState_padding] = null;
    this[S$0.___TooltipState_padding_isSet] = false;
    this[S$0.___TooltipState_margin] = null;
    this[S$0.___TooltipState_margin_isSet] = false;
    this[S$0.___TooltipState_decoration] = null;
    this[S$0.___TooltipState_decoration_isSet] = false;
    this[S$0.___TooltipState_textStyle] = null;
    this[S$0.___TooltipState_textStyle_isSet] = false;
    this[S$0.___TooltipState_verticalOffset] = null;
    this[S$0.___TooltipState_verticalOffset_isSet] = false;
    this[S$0.___TooltipState_preferBelow] = null;
    this[S$0.___TooltipState_preferBelow_isSet] = false;
    this[S$0.___TooltipState_excludeFromSemantics] = null;
    this[S$0.___TooltipState_excludeFromSemantics_isSet] = false;
    this[S$0.___TooltipState__controller] = null;
    this[S$0.___TooltipState__controller_isSet] = false;
    this[S$0._entry] = null;
    this[S$0._hideTimer] = null;
    this[S$0._showTimer] = null;
    this[S$0.___TooltipState_showDuration] = null;
    this[S$0.___TooltipState_showDuration_isSet] = false;
    this[S$0.___TooltipState_waitDuration] = null;
    this[S$0.___TooltipState_waitDuration_isSet] = false;
    this[S$0.___TooltipState__mouseIsConnected] = null;
    this[S$0.___TooltipState__mouseIsConnected_isSet] = false;
    this[S$0._longPressActivated] = false;
    tooltip._TooltipState.__proto__.new.call(this);
    ;
  }).prototype = tooltip._TooltipState.prototype;
  dart.addTypeTests(tooltip._TooltipState);
  dart.addTypeCaches(tooltip._TooltipState);
  dart.setMethodSignature(tooltip._TooltipState, () => ({
    __proto__: dart.getMethods(tooltip._TooltipState.__proto__),
    [S$0._getDefaultTooltipHeight]: dart.fnType(core.double, []),
    [S$0._getDefaultPadding]: dart.fnType(edge_insets.EdgeInsets, []),
    [S$0._getDefaultFontSize]: dart.fnType(core.double, []),
    [S$0._handleMouseTrackerChange]: dart.fnType(dart.void, []),
    [S$0._handleStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [S$0._hideTooltip]: dart.fnType(dart.void, [], {immediately: core.bool}, {}),
    [S$0._showTooltip]: dart.fnType(dart.void, [], {immediately: core.bool}, {}),
    ensureTooltipVisible: dart.fnType(core.bool, []),
    [S$0._createNewEntry]: dart.fnType(dart.void, []),
    [S$0._removeEntry]: dart.fnType(dart.void, []),
    [S$0._handlePointerEvent]: dart.fnType(dart.void, [events.PointerEvent]),
    [S$0._handleLongPress]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tooltip._TooltipState, () => ({
    __proto__: dart.getGetters(tooltip._TooltipState.__proto__),
    height: core.double,
    padding: edge_insets.EdgeInsetsGeometry,
    margin: edge_insets.EdgeInsetsGeometry,
    decoration: decoration.Decoration,
    textStyle: text_style.TextStyle,
    verticalOffset: core.double,
    preferBelow: core.bool,
    excludeFromSemantics: core.bool,
    [S$0._controller$6]: animation_controller.AnimationController,
    showDuration: core.Duration,
    waitDuration: core.Duration,
    [S$0._mouseIsConnected]: core.bool
  }));
  dart.setSetterSignature(tooltip._TooltipState, () => ({
    __proto__: dart.getSetters(tooltip._TooltipState.__proto__),
    height: core.double,
    padding: edge_insets.EdgeInsetsGeometry,
    margin: edge_insets.EdgeInsetsGeometry,
    decoration: decoration.Decoration,
    textStyle: text_style.TextStyle,
    verticalOffset: core.double,
    preferBelow: core.bool,
    excludeFromSemantics: core.bool,
    [S$0._controller$6]: animation_controller.AnimationController,
    showDuration: core.Duration,
    waitDuration: core.Duration,
    [S$0._mouseIsConnected]: core.bool
  }));
  dart.setLibraryUri(tooltip._TooltipState, I[97]);
  dart.setFieldSignature(tooltip._TooltipState, () => ({
    __proto__: dart.getFields(tooltip._TooltipState.__proto__),
    [S$0.___TooltipState_height]: dart.fieldType(dart.nullable(core.double)),
    [S$0.___TooltipState_height_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_padding]: dart.fieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$0.___TooltipState_padding_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_margin]: dart.fieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$0.___TooltipState_margin_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_decoration]: dart.fieldType(dart.nullable(decoration.Decoration)),
    [S$0.___TooltipState_decoration_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_textStyle]: dart.fieldType(dart.nullable(text_style.TextStyle)),
    [S$0.___TooltipState_textStyle_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_verticalOffset]: dart.fieldType(dart.nullable(core.double)),
    [S$0.___TooltipState_verticalOffset_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_preferBelow]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.___TooltipState_preferBelow_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_excludeFromSemantics]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.___TooltipState_excludeFromSemantics_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$0.___TooltipState__controller_isSet]: dart.fieldType(core.bool),
    [S$0._entry]: dart.fieldType(dart.nullable(overlay$.OverlayEntry)),
    [S$0._hideTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$0._showTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$0.___TooltipState_showDuration]: dart.fieldType(dart.nullable(core.Duration)),
    [S$0.___TooltipState_showDuration_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState_waitDuration]: dart.fieldType(dart.nullable(core.Duration)),
    [S$0.___TooltipState_waitDuration_isSet]: dart.fieldType(core.bool),
    [S$0.___TooltipState__mouseIsConnected]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.___TooltipState__mouseIsConnected_isSet]: dart.fieldType(core.bool),
    [S$0._longPressActivated]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(tooltip._TooltipState, {
    /*tooltip._TooltipState._defaultVerticalOffset*/get _defaultVerticalOffset() {
      return 24;
    },
    /*tooltip._TooltipState._defaultPreferBelow*/get _defaultPreferBelow() {
      return true;
    },
    /*tooltip._TooltipState._defaultMargin*/get _defaultMargin() {
      return C[772] || CT.C772;
    },
    /*tooltip._TooltipState._fadeInDuration*/get _fadeInDuration() {
      return C[909] || CT.C909;
    },
    /*tooltip._TooltipState._fadeOutDuration*/get _fadeOutDuration() {
      return C[93] || CT.C93;
    },
    /*tooltip._TooltipState._defaultShowDuration*/get _defaultShowDuration() {
      return C[1908] || CT.C1908;
    },
    /*tooltip._TooltipState._defaultWaitDuration*/get _defaultWaitDuration() {
      return C[1909] || CT.C1909;
    },
    /*tooltip._TooltipState._defaultExcludeFromSemantics*/get _defaultExcludeFromSemantics() {
      return false;
    }
  }, false);
  tooltip._TooltipPositionDelegate = class _TooltipPositionDelegate extends shifted_box.SingleChildLayoutDelegate {
    getConstraintsForChild(constraints) {
      if (constraints == null) dart.nullFailed(I[96], 545, 56, "constraints");
      return constraints.loosen();
    }
    getPositionForChild(size, childSize) {
      if (size == null) dart.nullFailed(I[96], 548, 35, "size");
      if (childSize == null) dart.nullFailed(I[96], 548, 46, "childSize");
      return geometry.positionDependentBox({size: size, childSize: childSize, target: this.target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow});
    }
    shouldRelayout(oldDelegate) {
      tooltip._TooltipPositionDelegate.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[96], 559, 48, "oldDelegate");
      return !dart.equals(this.target, oldDelegate.target) || this.verticalOffset != oldDelegate.verticalOffset || this.preferBelow != oldDelegate.preferBelow;
    }
  };
  (tooltip._TooltipPositionDelegate.new = function(opts) {
    let target = opts && 'target' in opts ? opts.target : null;
    if (target == null) dart.nullFailed(I[96], 523, 19, "target");
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    if (verticalOffset == null) dart.nullFailed(I[96], 524, 19, "verticalOffset");
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    if (preferBelow == null) dart.nullFailed(I[96], 525, 19, "preferBelow");
    this.target = target;
    this.verticalOffset = verticalOffset;
    this.preferBelow = preferBelow;
    if (!(target != null)) dart.assertFailed(null, I[96], 526, 15, "target != null");
    if (!(verticalOffset != null)) dart.assertFailed(null, I[96], 527, 15, "verticalOffset != null");
    if (!(preferBelow != null)) dart.assertFailed(null, I[96], 528, 15, "preferBelow != null");
    tooltip._TooltipPositionDelegate.__proto__.new.call(this);
    ;
  }).prototype = tooltip._TooltipPositionDelegate.prototype;
  dart.addTypeTests(tooltip._TooltipPositionDelegate);
  dart.addTypeCaches(tooltip._TooltipPositionDelegate);
  dart.setMethodSignature(tooltip._TooltipPositionDelegate, () => ({
    __proto__: dart.getMethods(tooltip._TooltipPositionDelegate.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(tooltip._TooltipPositionDelegate, I[97]);
  dart.setFieldSignature(tooltip._TooltipPositionDelegate, () => ({
    __proto__: dart.getFields(tooltip._TooltipPositionDelegate.__proto__),
    target: dart.finalFieldType(ui.Offset),
    verticalOffset: dart.finalFieldType(core.double),
    preferBelow: dart.finalFieldType(core.bool)
  }));
  tooltip._TooltipOverlay = class _TooltipOverlay extends framework.StatelessWidget {
    get message() {
      return this[S$0.message$1];
    }
    set message(value) {
      super.message = value;
    }
    get height() {
      return this[S$0.height$4];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[S$0.padding$11];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[S$0.margin$4];
    }
    set margin(value) {
      super.margin = value;
    }
    get decoration() {
      return this[S$0.decoration$5];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[S$0.textStyle$6];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get animation() {
      return this[S$0.animation$6];
    }
    set animation(value) {
      super.animation = value;
    }
    get target() {
      return this[S$0.target];
    }
    set target(value) {
      super.target = value;
    }
    get verticalOffset() {
      return this[S$0.verticalOffset$2];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[S$0.preferBelow$2];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[96], 593, 29, "context");
      return new basic.Positioned.fill({child: new basic.IgnorePointer.new({child: new basic.CustomSingleChildLayout.new({delegate: new tooltip._TooltipPositionDelegate.new({target: this.target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow}), child: new transitions.FadeTransition.new({opacity: this.animation, child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minHeight: this.height}), child: new text$.DefaultTextStyle.new({style: dart.nullCheck(theme$.Theme.of(context).textTheme.bodyText2), child: new container.Container.new({decoration: this.decoration, padding: this.padding, margin: this.margin, child: new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new text$.Text.new(this.message, {style: this.textStyle, $creationLocationd_0dea112b090073317d4: C[1910] || CT.C1910}), $creationLocationd_0dea112b090073317d4: C[1914] || CT.C1914}), $creationLocationd_0dea112b090073317d4: C[1919] || CT.C1919}), $creationLocationd_0dea112b090073317d4: C[1925] || CT.C1925}), $creationLocationd_0dea112b090073317d4: C[1929] || CT.C1929}), $creationLocationd_0dea112b090073317d4: C[1933] || CT.C1933}), $creationLocationd_0dea112b090073317d4: C[1937] || CT.C1937}), $creationLocationd_0dea112b090073317d4: C[1941] || CT.C1941}), $creationLocationd_0dea112b090073317d4: C[1944] || CT.C1944});
    }
  };
  (tooltip._TooltipOverlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let message = opts && 'message' in opts ? opts.message : null;
    if (message == null) dart.nullFailed(I[96], 569, 19, "message");
    let height = opts && 'height' in opts ? opts.height : null;
    if (height == null) dart.nullFailed(I[96], 570, 19, "height");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[96], 575, 19, "animation");
    let target = opts && 'target' in opts ? opts.target : null;
    if (target == null) dart.nullFailed(I[96], 576, 19, "target");
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    if (verticalOffset == null) dart.nullFailed(I[96], 577, 19, "verticalOffset");
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    if (preferBelow == null) dart.nullFailed(I[96], 578, 19, "preferBelow");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.message$1] = message;
    this[S$0.height$4] = height;
    this[S$0.padding$11] = padding;
    this[S$0.margin$4] = margin;
    this[S$0.decoration$5] = decoration;
    this[S$0.textStyle$6] = textStyle;
    this[S$0.animation$6] = animation;
    this[S$0.target] = target;
    this[S$0.verticalOffset$2] = verticalOffset;
    this[S$0.preferBelow$2] = preferBelow;
    tooltip._TooltipOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip._TooltipOverlay.prototype;
  dart.addTypeTests(tooltip._TooltipOverlay);
  dart.addTypeCaches(tooltip._TooltipOverlay);
  dart.setMethodSignature(tooltip._TooltipOverlay, () => ({
    __proto__: dart.getMethods(tooltip._TooltipOverlay.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tooltip._TooltipOverlay, I[97]);
  dart.setFieldSignature(tooltip._TooltipOverlay, () => ({
    __proto__: dart.getFields(tooltip._TooltipOverlay.__proto__),
    message: dart.finalFieldType(core.String),
    height: dart.finalFieldType(core.double),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    target: dart.finalFieldType(ui.Offset),
    verticalOffset: dart.finalFieldType(core.double),
    preferBelow: dart.finalFieldType(core.bool)
  }));
  ink_highlight.InkHighlight = class InkHighlight extends ink_well.InteractiveInkFeature {
    get [S$0._alpha$1]() {
      let t54;
      return dart.test(this[S$0.__InkHighlight__alpha_isSet]) ? (t54 = this[S$0.__InkHighlight__alpha], t54) : dart.throw(new _internal.LateError.fieldNI("_alpha"));
    }
    set [S$0._alpha$1](t54) {
      if (t54 == null) dart.nullFailed(I[98], 82, 23, "null");
      this[S$0.__InkHighlight__alpha_isSet] = true;
      this[S$0.__InkHighlight__alpha] = t54;
    }
    get [S$0._alphaController$1]() {
      let t55;
      return dart.test(this[S$0.__InkHighlight__alphaController_isSet]) ? (t55 = this[S$0.__InkHighlight__alphaController], t55) : dart.throw(new _internal.LateError.fieldNI("_alphaController"));
    }
    set [S$0._alphaController$1](t55) {
      if (t55 == null) dart.nullFailed(I[98], 83, 28, "null");
      this[S$0.__InkHighlight__alphaController_isSet] = true;
      this[S$0.__InkHighlight__alphaController] = t55;
    }
    get active() {
      return this[S$0._active];
    }
    activate() {
      this[S$0._active] = true;
      this[S$0._alphaController$1].forward();
    }
    deactivate() {
      this[S$0._active] = false;
      this[S$0._alphaController$1].reverse();
    }
    [S$0._handleAlphaStatusChanged$2](status) {
      if (status == null) dart.nullFailed(I[98], 101, 50, "status");
      if (status == animation.AnimationStatus.dismissed && !dart.test(this[S$0._active])) this.dispose();
    }
    dispose() {
      this[S$0._alphaController$1].dispose();
      super.dispose();
    }
    [S$0._paintHighlight](canvas, rect, paint) {
      let t56;
      if (canvas == null) dart.nullFailed(I[98], 112, 31, "canvas");
      if (rect == null) dart.nullFailed(I[98], 112, 44, "rect");
      if (paint == null) dart.nullFailed(I[98], 112, 56, "paint");
      if (!(this[S$0._shape] != null)) dart.assertFailed(null, I[98], 113, 12, "_shape != null");
      canvas.save();
      if (this[S$0._customBorder$2] != null) {
        canvas.clipPath(dart.nullCheck(this[S$0._customBorder$2]).getOuterPath(rect, {textDirection: this[S$0._textDirection$4]}));
      }
      switch (this[S$0._shape]) {
        case C[1948] || CT.C1948:
        {
          canvas.drawCircle(rect.center, (t56 = this[S$0._radius$2], t56 == null ? 35 : t56), paint);
          break;
        }
        case C[1947] || CT.C1947:
        {
          if (!dart.equals(this[S$0._borderRadius$2], border_radius.BorderRadius.zero)) {
            let clipRRect = new ui.RRect.fromRectAndCorners(rect, {topLeft: this[S$0._borderRadius$2].topLeft, topRight: this[S$0._borderRadius$2].topRight, bottomLeft: this[S$0._borderRadius$2].bottomLeft, bottomRight: this[S$0._borderRadius$2].bottomRight});
            canvas.drawRRect(clipRRect, paint);
          } else {
            canvas.drawRect(rect, paint);
          }
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      canvas.restore();
    }
    paintFeature(canvas, transform) {
      let t56;
      if (canvas == null) dart.nullFailed(I[98], 139, 28, "canvas");
      if (transform == null) dart.nullFailed(I[98], 139, 44, "transform");
      let paint = (t56 = ui.Paint.new(), (() => {
        t56.color = this.color.withAlpha(this[S$0._alpha$1].value);
        return t56;
      })());
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      let rect = this[S$0._rectCallback] != null ? dart.nullCheck(this[S$0._rectCallback])() : ui.Offset.zero['&'](this.referenceBox.size);
      if (originOffset == null) {
        canvas.save();
        canvas.transform(transform.storage);
        this[S$0._paintHighlight](canvas, rect, paint);
        canvas.restore();
      } else {
        this[S$0._paintHighlight](canvas, rect.shift(originOffset), paint);
      }
    }
  };
  (ink_highlight.InkHighlight.new = function(opts) {
    let t54, t54$;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(I[98], 41, 36, "controller");
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    if (referenceBox == null) dart.nullFailed(I[98], 42, 24, "referenceBox");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[98], 43, 20, "color");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[98], 44, 28, "textDirection");
    let shape = opts && 'shape' in opts ? opts.shape : C[1947] || CT.C1947;
    if (shape == null) dart.nullFailed(I[98], 45, 14, "shape");
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    let fadeDuration = opts && 'fadeDuration' in opts ? opts.fadeDuration : C[334] || CT.C334;
    if (fadeDuration == null) dart.nullFailed(I[98], 51, 14, "fadeDuration");
    this[S$0.__InkHighlight__alpha] = null;
    this[S$0.__InkHighlight__alpha_isSet] = false;
    this[S$0.__InkHighlight__alphaController] = null;
    this[S$0.__InkHighlight__alphaController_isSet] = false;
    this[S$0._active] = true;
    if (!(color != null)) dart.assertFailed(null, I[98], 52, 15, "color != null");
    if (!(shape != null)) dart.assertFailed(null, I[98], 53, 15, "shape != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[98], 54, 15, "textDirection != null");
    if (!(fadeDuration != null)) dart.assertFailed(null, I[98], 55, 15, "fadeDuration != null");
    this[S$0._shape] = shape;
    this[S$0._radius$2] = radius;
    this[S$0._borderRadius$2] = (t54 = borderRadius, t54 == null ? border_radius.BorderRadius.zero : t54);
    this[S$0._customBorder$2] = customBorder;
    this[S$0._textDirection$4] = textDirection;
    this[S$0._rectCallback] = rectCallback;
    ink_highlight.InkHighlight.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, color: color, onRemoved: onRemoved});
    this[S$0._alphaController$1] = (t54$ = new animation_controller.AnimationController.new({duration: fadeDuration, vsync: controller.vsync}), (() => {
      t54$.addListener(dart.bind(controller, 'markNeedsPaint'));
      t54$.addStatusListener(dart.bind(this, S$0._handleAlphaStatusChanged$2));
      t54$.forward();
      return t54$;
    })());
    this[S$0._alpha$1] = this[S$0._alphaController$1].drive(core.int, new tween.IntTween.new({begin: 0, end: color.alpha}));
    controller.addInkFeature(this);
  }).prototype = ink_highlight.InkHighlight.prototype;
  dart.addTypeTests(ink_highlight.InkHighlight);
  dart.addTypeCaches(ink_highlight.InkHighlight);
  dart.setMethodSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getMethods(ink_highlight.InkHighlight.__proto__),
    activate: dart.fnType(dart.void, []),
    deactivate: dart.fnType(dart.void, []),
    [S$0._handleAlphaStatusChanged$2]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [S$0._paintHighlight]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, ui.Paint]),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getGetters(ink_highlight.InkHighlight.__proto__),
    [S$0._alpha$1]: animation.Animation$(core.int),
    [S$0._alphaController$1]: animation_controller.AnimationController,
    active: core.bool
  }));
  dart.setSetterSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getSetters(ink_highlight.InkHighlight.__proto__),
    [S$0._alpha$1]: animation.Animation$(core.int),
    [S$0._alphaController$1]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(ink_highlight.InkHighlight, I[99]);
  dart.setFieldSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getFields(ink_highlight.InkHighlight.__proto__),
    [S$0._shape]: dart.finalFieldType(box_border.BoxShape),
    [S$0._radius$2]: dart.finalFieldType(dart.nullable(core.double)),
    [S$0._borderRadius$2]: dart.finalFieldType(border_radius.BorderRadius),
    [S$0._customBorder$2]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S$0._rectCallback]: dart.finalFieldType(dart.nullable(dart.fnType(ui.Rect, []))),
    [S$0._textDirection$4]: dart.finalFieldType(ui.TextDirection),
    [S$0.__InkHighlight__alpha]: dart.fieldType(dart.nullable(animation.Animation$(core.int))),
    [S$0.__InkHighlight__alpha_isSet]: dart.fieldType(core.bool),
    [S$0.__InkHighlight__alphaController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$0.__InkHighlight__alphaController_isSet]: dart.fieldType(core.bool),
    [S$0._active]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(ink_highlight, {
    /*ink_highlight._kDefaultHighlightFadeDuration*/get _kDefaultHighlightFadeDuration() {
      return C[334] || CT.C334;
    }
  }, false);
  feedback.Feedback = class Feedback extends core.Object {
    static forTap(context) {
      if (context == null) dart.nullFailed(I[100], 94, 43, "context");
      return async.async(dart.void, function* forTap() {
        dart.nullCheck(context.findRenderObject()).sendSemanticsEvent(C[1949] || CT.C1949);
        switch (feedback.Feedback._platform(context)) {
          case C[44] || CT.C44:
          case C[45] || CT.C45:
          {
            return system_sound.SystemSound.play(system_sound.SystemSoundType.click);
          }
          case C[48] || CT.C48:
          case C[46] || CT.C46:
          case C[49] || CT.C49:
          case C[47] || CT.C47:
          {
            return T$.FutureOfvoid().value();
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      });
    }
    static wrapForTap(callback, context) {
      if (context == null) dart.nullFailed(I[100], 118, 84, "context");
      if (callback == null) return null;
      return dart.fn(() => {
        feedback.Feedback.forTap(context);
        callback();
      }, T$.VoidTovoid());
    }
    static forLongPress(context) {
      if (context == null) dart.nullFailed(I[100], 136, 49, "context");
      dart.nullCheck(context.findRenderObject()).sendSemanticsEvent(C[1950] || CT.C1950);
      switch (feedback.Feedback._platform(context)) {
        case C[44] || CT.C44:
        case C[45] || CT.C45:
        {
          return haptic_feedback.HapticFeedback.vibrate();
        }
        case C[48] || CT.C48:
        case C[46] || CT.C46:
        case C[49] || CT.C49:
        case C[47] || CT.C47:
        {
          return T$.FutureOfvoid().value();
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    static wrapForLongPress(callback, context) {
      if (context == null) dart.nullFailed(I[100], 161, 102, "context");
      if (callback == null) return null;
      return dart.fn(() => {
        feedback.Feedback.forLongPress(context);
        callback();
      }, T$.VoidTovoid());
    }
    static _platform(context) {
      if (context == null) dart.nullFailed(I[100], 170, 48, "context");
      return theme$.Theme.of(context).platform;
    }
  };
  (feedback.Feedback.__ = function() {
    ;
  }).prototype = feedback.Feedback.prototype;
  dart.addTypeTests(feedback.Feedback);
  dart.addTypeCaches(feedback.Feedback);
  dart.setLibraryUri(feedback.Feedback, I[101]);
  ink_well._ParentInkResponseState = class _ParentInkResponseState extends core.Object {};
  (ink_well._ParentInkResponseState.new = function() {
    ;
  }).prototype = ink_well._ParentInkResponseState.prototype;
  dart.addTypeTests(ink_well._ParentInkResponseState);
  dart.addTypeCaches(ink_well._ParentInkResponseState);
  dart.setLibraryUri(ink_well._ParentInkResponseState, I[7]);
  ink_well._ParentInkResponseProvider = class _ParentInkResponseProvider extends framework.InheritedWidget {
    get state() {
      return this[S$0.state];
    }
    set state(value) {
      super.state = value;
    }
    updateShouldNotify(oldWidget) {
      ink_well._ParentInkResponseProvider.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[9], 192, 54, "oldWidget");
      return !dart.equals(this.state, oldWidget.state);
    }
    static of(context) {
      let t56;
      if (context == null) dart.nullFailed(I[9], 194, 51, "context");
      t56 = context.dependOnInheritedWidgetOfExactType(ink_well._ParentInkResponseProvider);
      return t56 == null ? null : t56.state;
    }
  };
  (ink_well._ParentInkResponseProvider.new = function(opts) {
    let state = opts && 'state' in opts ? opts.state : null;
    if (state == null) dart.nullFailed(I[9], 185, 19, "state");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[9], 186, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.state] = state;
    ink_well._ParentInkResponseProvider.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well._ParentInkResponseProvider.prototype;
  dart.addTypeTests(ink_well._ParentInkResponseProvider);
  dart.addTypeCaches(ink_well._ParentInkResponseProvider);
  dart.setMethodSignature(ink_well._ParentInkResponseProvider, () => ({
    __proto__: dart.getMethods(ink_well._ParentInkResponseProvider.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(ink_well._ParentInkResponseProvider, I[7]);
  dart.setFieldSignature(ink_well._ParentInkResponseProvider, () => ({
    __proto__: dart.getFields(ink_well._ParentInkResponseProvider.__proto__),
    state: dart.finalFieldType(ink_well._ParentInkResponseState)
  }));
  ink_well.InkResponse = class InkResponse extends framework.StatelessWidget {
    get child() {
      return this[S$0.child$20];
    }
    set child(value) {
      super.child = value;
    }
    get onTap() {
      return this[S$0.onTap$2];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onTapDown() {
      return this[S$0.onTapDown];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onTapCancel() {
      return this[S$0.onTapCancel];
    }
    set onTapCancel(value) {
      super.onTapCancel = value;
    }
    get onDoubleTap() {
      return this[S$0.onDoubleTap];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get onLongPress() {
      return this[S$0.onLongPress$5];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S$0.onHighlightChanged$2];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get onHover() {
      return this[S$0.onHover];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$11];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get containedInkWell() {
      return this[S$0.containedInkWell];
    }
    set containedInkWell(value) {
      super.containedInkWell = value;
    }
    get highlightShape() {
      return this[S$0.highlightShape];
    }
    set highlightShape(value) {
      super.highlightShape = value;
    }
    get radius() {
      return this[S$0.radius$1];
    }
    set radius(value) {
      super.radius = value;
    }
    get borderRadius() {
      return this[S$0.borderRadius$1];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get customBorder() {
      return this[S$0.customBorder];
    }
    set customBorder(value) {
      super.customBorder = value;
    }
    get focusColor() {
      return this[S$0.focusColor$9];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$0.hoverColor$10];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$0.highlightColor$5];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get overlayColor() {
      return this[S$0.overlayColor$6];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashColor() {
      return this[S$0.splashColor$6];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[S$0.splashFactory];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$8];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get excludeFromSemantics() {
      return this[S$0.excludeFromSemantics$2];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get onFocusChange() {
      return this[S$0.onFocusChange];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get autofocus() {
      return this[S$0.autofocus$7];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get focusNode() {
      return this[S$0.focusNode$7];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get canRequestFocus() {
      return this[S$0.canRequestFocus];
    }
    set canRequestFocus(value) {
      super.canRequestFocus = value;
    }
    getRectCallback(referenceBox) {
      if (referenceBox == null) dart.nullFailed(I[9], 574, 43, "referenceBox");
      return null;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[9], 577, 29, "context");
      let parentState = ink_well._ParentInkResponseProvider.of(context);
      return new ink_well._InkResponseStateWidget.new({child: this.child, onTap: this.onTap, onTapDown: this.onTapDown, onTapCancel: this.onTapCancel, onDoubleTap: this.onDoubleTap, onLongPress: this.onLongPress, onHighlightChanged: this.onHighlightChanged, onHover: this.onHover, mouseCursor: this.mouseCursor, containedInkWell: this.containedInkWell, highlightShape: this.highlightShape, radius: this.radius, borderRadius: this.borderRadius, customBorder: this.customBorder, focusColor: this.focusColor, hoverColor: this.hoverColor, highlightColor: this.highlightColor, overlayColor: this.overlayColor, splashColor: this.splashColor, splashFactory: this.splashFactory, enableFeedback: this.enableFeedback, excludeFromSemantics: this.excludeFromSemantics, focusNode: this.focusNode, canRequestFocus: this.canRequestFocus, onFocusChange: this.onFocusChange, autofocus: this.autofocus, parentState: parentState, getRectCallback: dart.bind(this, 'getRectCallback'), debugCheckContext: dart.bind(this, 'debugCheckContext'), $creationLocationd_0dea112b090073317d4: C[1951] || CT.C1951});
    }
    debugCheckContext(context) {
      if (context == null) dart.nullFailed(I[9], 620, 39, "context");
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, I[9], 621, 12, "debugCheckHasMaterial(context)");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[9], 622, 12, "debugCheckHasDirectionality(context)");
      return true;
    }
  };
  (ink_well.InkResponse.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    if (containedInkWell == null) dart.nullFailed(I[9], 301, 10, "containedInkWell");
    let highlightShape = opts && 'highlightShape' in opts ? opts.highlightShape : C[1948] || CT.C1948;
    if (highlightShape == null) dart.nullFailed(I[9], 302, 10, "highlightShape");
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    if (enableFeedback == null) dart.nullFailed(I[9], 312, 10, "enableFeedback");
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(I[9], 313, 10, "excludeFromSemantics");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    if (canRequestFocus == null) dart.nullFailed(I[9], 315, 10, "canRequestFocus");
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[9], 317, 10, "autofocus");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.child$20] = child;
    this[S$0.onTap$2] = onTap;
    this[S$0.onTapDown] = onTapDown;
    this[S$0.onTapCancel] = onTapCancel;
    this[S$0.onDoubleTap] = onDoubleTap;
    this[S$0.onLongPress$5] = onLongPress;
    this[S$0.onHighlightChanged$2] = onHighlightChanged;
    this[S$0.onHover] = onHover;
    this[S$0.mouseCursor$11] = mouseCursor;
    this[S$0.containedInkWell] = containedInkWell;
    this[S$0.highlightShape] = highlightShape;
    this[S$0.radius$1] = radius;
    this[S$0.borderRadius$1] = borderRadius;
    this[S$0.customBorder] = customBorder;
    this[S$0.focusColor$9] = focusColor;
    this[S$0.hoverColor$10] = hoverColor;
    this[S$0.highlightColor$5] = highlightColor;
    this[S$0.overlayColor$6] = overlayColor;
    this[S$0.splashColor$6] = splashColor;
    this[S$0.splashFactory] = splashFactory;
    this[S$0.enableFeedback$8] = enableFeedback;
    this[S$0.excludeFromSemantics$2] = excludeFromSemantics;
    this[S$0.focusNode$7] = focusNode;
    this[S$0.canRequestFocus] = canRequestFocus;
    this[S$0.onFocusChange] = onFocusChange;
    this[S$0.autofocus$7] = autofocus;
    if (!(containedInkWell != null)) dart.assertFailed(null, I[9], 318, 15, "containedInkWell != null");
    if (!(highlightShape != null)) dart.assertFailed(null, I[9], 319, 15, "highlightShape != null");
    if (!(enableFeedback != null)) dart.assertFailed(null, I[9], 320, 15, "enableFeedback != null");
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, I[9], 321, 15, "excludeFromSemantics != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[9], 322, 15, "autofocus != null");
    if (!(canRequestFocus != null)) dart.assertFailed(null, I[9], 323, 15, "canRequestFocus != null");
    ink_well.InkResponse.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well.InkResponse.prototype;
  dart.addTypeTests(ink_well.InkResponse);
  dart.addTypeCaches(ink_well.InkResponse);
  dart.setMethodSignature(ink_well.InkResponse, () => ({
    __proto__: dart.getMethods(ink_well.InkResponse.__proto__),
    getRectCallback: dart.fnType(dart.nullable(dart.fnType(ui.Rect, [])), [box$.RenderBox]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    debugCheckContext: dart.fnType(core.bool, [framework.BuildContext])
  }));
  dart.setLibraryUri(ink_well.InkResponse, I[7]);
  dart.setFieldSignature(ink_well.InkResponse, () => ({
    __proto__: dart.getFields(ink_well.InkResponse.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap.TapDownDetails]))),
    onTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    onHover: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    containedInkWell: dart.finalFieldType(core.bool),
    highlightShape: dart.finalFieldType(box_border.BoxShape),
    radius: dart.finalFieldType(dart.nullable(core.double)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    customBorder: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashFactory: dart.finalFieldType(dart.nullable(ink_well.InteractiveInkFeatureFactory)),
    enableFeedback: dart.finalFieldType(core.bool),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    onFocusChange: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    autofocus: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    canRequestFocus: dart.finalFieldType(core.bool)
  }));
  ink_well._InkResponseStateWidget = class _InkResponseStateWidget extends framework.StatefulWidget {
    get child() {
      return this[S$0.child$21];
    }
    set child(value) {
      super.child = value;
    }
    get onTap() {
      return this[S$0.onTap$3];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onTapDown() {
      return this[S$0.onTapDown$1];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onTapCancel() {
      return this[S$0.onTapCancel$1];
    }
    set onTapCancel(value) {
      super.onTapCancel = value;
    }
    get onDoubleTap() {
      return this[S$0.onDoubleTap$1];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get onLongPress() {
      return this[S$0.onLongPress$6];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S$0.onHighlightChanged$3];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get onHover() {
      return this[S$0.onHover$1];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$12];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get containedInkWell() {
      return this[S$0.containedInkWell$1];
    }
    set containedInkWell(value) {
      super.containedInkWell = value;
    }
    get highlightShape() {
      return this[S$0.highlightShape$1];
    }
    set highlightShape(value) {
      super.highlightShape = value;
    }
    get radius() {
      return this[S$0.radius$2];
    }
    set radius(value) {
      super.radius = value;
    }
    get borderRadius() {
      return this[S$0.borderRadius$2];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get customBorder() {
      return this[S$0.customBorder$1];
    }
    set customBorder(value) {
      super.customBorder = value;
    }
    get focusColor() {
      return this[S$0.focusColor$10];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$0.hoverColor$11];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$0.highlightColor$6];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get overlayColor() {
      return this[S$0.overlayColor$7];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashColor() {
      return this[S$0.splashColor$7];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[S$0.splashFactory$1];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$9];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get excludeFromSemantics() {
      return this[S$0.excludeFromSemantics$3];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get onFocusChange() {
      return this[S$0.onFocusChange$1];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get autofocus() {
      return this[S$0.autofocus$8];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get focusNode() {
      return this[S$0.focusNode$8];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get canRequestFocus() {
      return this[S$0.canRequestFocus$1];
    }
    set canRequestFocus(value) {
      super.canRequestFocus = value;
    }
    get parentState() {
      return this[S$0.parentState];
    }
    set parentState(value) {
      super.parentState = value;
    }
    get getRectCallback() {
      return this[S$0.getRectCallback];
    }
    set getRectCallback(value) {
      super.getRectCallback = value;
    }
    get debugCheckContext() {
      return this[S$0.debugCheckContext];
    }
    set debugCheckContext(value) {
      super.debugCheckContext = value;
    }
    createState() {
      return new ink_well._InkResponseState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[9], 699, 56, "properties");
      super.debugFillProperties(properties);
      let gestures = (() => {
        let t56 = T$.JSArrayOfString().of([]);
        if (this.onTap != null) t56[S.$add]("tap");
        if (this.onDoubleTap != null) t56[S.$add]("double tap");
        if (this.onLongPress != null) t56[S.$add]("long press");
        if (this.onTapDown != null) t56[S.$add]("tap down");
        if (this.onTapCancel != null) t56[S.$add]("tap cancel");
        return t56;
      })();
      properties.add(new (T$.IterablePropertyOfString()).new("gestures", gestures, {ifEmpty: "<none>"}));
      properties.add(new (T$.DiagnosticsPropertyOfMouseCursor()).new("mouseCursor", this.mouseCursor));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("containedInkWell", this.containedInkWell, {level: diagnostics.DiagnosticLevel.fine}));
      properties.add(new (T$.DiagnosticsPropertyOfBoxShape()).new("highlightShape", this.highlightShape, {description: (dart.test(this.containedInkWell) ? "clipped to " : "") + dart.str(this.highlightShape), showName: false}));
    }
  };
  (ink_well._InkResponseStateWidget.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    if (containedInkWell == null) dart.nullFailed(I[9], 638, 10, "containedInkWell");
    let highlightShape = opts && 'highlightShape' in opts ? opts.highlightShape : C[1948] || CT.C1948;
    if (highlightShape == null) dart.nullFailed(I[9], 639, 10, "highlightShape");
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    if (enableFeedback == null) dart.nullFailed(I[9], 649, 10, "enableFeedback");
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(I[9], 650, 10, "excludeFromSemantics");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    if (canRequestFocus == null) dart.nullFailed(I[9], 652, 10, "canRequestFocus");
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[9], 654, 10, "autofocus");
    let parentState = opts && 'parentState' in opts ? opts.parentState : null;
    let getRectCallback = opts && 'getRectCallback' in opts ? opts.getRectCallback : null;
    let debugCheckContext = opts && 'debugCheckContext' in opts ? opts.debugCheckContext : null;
    if (debugCheckContext == null) dart.nullFailed(I[9], 657, 19, "debugCheckContext");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.child$21] = child;
    this[S$0.onTap$3] = onTap;
    this[S$0.onTapDown$1] = onTapDown;
    this[S$0.onTapCancel$1] = onTapCancel;
    this[S$0.onDoubleTap$1] = onDoubleTap;
    this[S$0.onLongPress$6] = onLongPress;
    this[S$0.onHighlightChanged$3] = onHighlightChanged;
    this[S$0.onHover$1] = onHover;
    this[S$0.mouseCursor$12] = mouseCursor;
    this[S$0.containedInkWell$1] = containedInkWell;
    this[S$0.highlightShape$1] = highlightShape;
    this[S$0.radius$2] = radius;
    this[S$0.borderRadius$2] = borderRadius;
    this[S$0.customBorder$1] = customBorder;
    this[S$0.focusColor$10] = focusColor;
    this[S$0.hoverColor$11] = hoverColor;
    this[S$0.highlightColor$6] = highlightColor;
    this[S$0.overlayColor$7] = overlayColor;
    this[S$0.splashColor$7] = splashColor;
    this[S$0.splashFactory$1] = splashFactory;
    this[S$0.enableFeedback$9] = enableFeedback;
    this[S$0.excludeFromSemantics$3] = excludeFromSemantics;
    this[S$0.focusNode$8] = focusNode;
    this[S$0.canRequestFocus$1] = canRequestFocus;
    this[S$0.onFocusChange$1] = onFocusChange;
    this[S$0.autofocus$8] = autofocus;
    this[S$0.parentState] = parentState;
    this[S$0.getRectCallback] = getRectCallback;
    this[S$0.debugCheckContext] = debugCheckContext;
    if (!(containedInkWell != null)) dart.assertFailed(null, I[9], 658, 15, "containedInkWell != null");
    if (!(highlightShape != null)) dart.assertFailed(null, I[9], 659, 15, "highlightShape != null");
    if (!(enableFeedback != null)) dart.assertFailed(null, I[9], 660, 15, "enableFeedback != null");
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, I[9], 661, 15, "excludeFromSemantics != null");
    if (!(autofocus != null)) dart.assertFailed(null, I[9], 662, 15, "autofocus != null");
    if (!(canRequestFocus != null)) dart.assertFailed(null, I[9], 663, 15, "canRequestFocus != null");
    ink_well._InkResponseStateWidget.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well._InkResponseStateWidget.prototype;
  dart.addTypeTests(ink_well._InkResponseStateWidget);
  dart.addTypeCaches(ink_well._InkResponseStateWidget);
  dart.setMethodSignature(ink_well._InkResponseStateWidget, () => ({
    __proto__: dart.getMethods(ink_well._InkResponseStateWidget.__proto__),
    createState: dart.fnType(ink_well._InkResponseState, [])
  }));
  dart.setLibraryUri(ink_well._InkResponseStateWidget, I[7]);
  dart.setFieldSignature(ink_well._InkResponseStateWidget, () => ({
    __proto__: dart.getFields(ink_well._InkResponseStateWidget.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap.TapDownDetails]))),
    onTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    onHover: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    containedInkWell: dart.finalFieldType(core.bool),
    highlightShape: dart.finalFieldType(box_border.BoxShape),
    radius: dart.finalFieldType(dart.nullable(core.double)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    customBorder: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashFactory: dart.finalFieldType(dart.nullable(ink_well.InteractiveInkFeatureFactory)),
    enableFeedback: dart.finalFieldType(core.bool),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    onFocusChange: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    autofocus: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    canRequestFocus: dart.finalFieldType(core.bool),
    parentState: dart.finalFieldType(dart.nullable(ink_well._ParentInkResponseState)),
    getRectCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(dart.fnType(ui.Rect, [])), [box$.RenderBox]))),
    debugCheckContext: dart.finalFieldType(dart.fnType(core.bool, [framework.BuildContext]))
  }));
  ink_well._HighlightType = class _HighlightType extends core.Object {
    toString() {
      return this[S$0._name$17];
    }
  };
  (ink_well._HighlightType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[9], 722, 6, "index");
    if (_name == null) dart.nullFailed(I[9], 722, 6, "_name");
    this.index = index;
    this[S$0._name$17] = _name;
    ;
  }).prototype = ink_well._HighlightType.prototype;
  dart.addTypeTests(ink_well._HighlightType);
  dart.addTypeCaches(ink_well._HighlightType);
  dart.setLibraryUri(ink_well._HighlightType, I[7]);
  dart.setFieldSignature(ink_well._HighlightType, () => ({
    __proto__: dart.getFields(ink_well._HighlightType.__proto__),
    index: dart.finalFieldType(core.int),
    [S$0._name$17]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(ink_well._HighlightType, ['toString']);
  ink_well._HighlightType.pressed = C[1982] || CT.C1982;
  ink_well._HighlightType.hover = C[1983] || CT.C1983;
  ink_well._HighlightType.focus = C[1984] || CT.C1984;
  ink_well._HighlightType.values = C[1985] || CT.C1985;
  const State_AutomaticKeepAliveClientMixin$36 = class State_AutomaticKeepAliveClientMixin extends framework.State$(ink_well._InkResponseStateWidget) {};
  (State_AutomaticKeepAliveClientMixin$36.new = function() {
    automatic_keep_alive.AutomaticKeepAliveClientMixin$(ink_well._InkResponseStateWidget)[dart.mixinNew].call(this);
    State_AutomaticKeepAliveClientMixin$36.__proto__.new.call(this);
  }).prototype = State_AutomaticKeepAliveClientMixin$36.prototype;
  dart.applyMixin(State_AutomaticKeepAliveClientMixin$36, automatic_keep_alive.AutomaticKeepAliveClientMixin$(ink_well._InkResponseStateWidget));
  ink_well._InkResponseState = class _InkResponseState extends State_AutomaticKeepAliveClientMixin$36 {
    get [S$0._actionMap]() {
      let t58;
      if (!dart.test(this[S$0.___InkResponseState__actionMap_isSet])) {
        let t57 = new (T$.LinkedMapOfType$ActionOfIntent()).from([dart.wrapType(actions.ActivateIntent), new (T$.CallbackActionOfActivateIntent()).new({onInvoke: dart.bind(this, S$0._simulateTap)}), dart.wrapType(actions.ButtonActivateIntent), new (T$.CallbackActionOfButtonActivateIntent()).new({onInvoke: dart.bind(this, S$0._simulateTap)})]);
        if (dart.test(this[S$0.___InkResponseState__actionMap_isSet])) dart.throw(new _internal.LateError.fieldADI("_actionMap"));
        this[S$0.___InkResponseState__actionMap] = t57;
        this[S$0.___InkResponseState__actionMap_isSet] = true;
      }
      t58 = this[S$0.___InkResponseState__actionMap];
      return t58;
    }
    get highlightsExist() {
      return this[S$0._highlights][S.$values][S$0.$where](dart.fn(highlight => highlight != null, T$.InkHighlightNTobool()))[S$.$isNotEmpty];
    }
    markChildInkResponsePressed(childState, value) {
      let t58;
      if (childState == null) dart.nullFailed(I[9], 745, 60, "childState");
      if (value == null) dart.nullFailed(I[9], 745, 77, "value");
      if (!(childState != null)) dart.assertFailed(null, I[9], 746, 12, "childState != null");
      let lastAnyPressed = this[S$0._anyChildInkResponsePressed];
      if (dart.test(value)) {
        this[S$0._activeChildren].add(childState);
      } else {
        this[S$0._activeChildren].remove(childState);
      }
      let nowAnyPressed = this[S$0._anyChildInkResponsePressed];
      if (nowAnyPressed != lastAnyPressed) {
        t58 = this.widget.parentState;
        t58 == null ? null : t58.markChildInkResponsePressed(this, nowAnyPressed);
      }
    }
    get [S$0._anyChildInkResponsePressed]() {
      return this[S$0._activeChildren].isNotEmpty;
    }
    [S$0._simulateTap](intent = null) {
      this[S$0._startSplash]({context: this.context});
      this[S$0._handleTap$1]();
    }
    [S$0._simulateLongPress]() {
      this[S$0._startSplash]({context: this.context});
      this[S$0._handleLongPress$1]();
    }
    initState() {
      super.initState();
      focus_manager.FocusManager.instance.addHighlightModeListener(dart.bind(this, S$0._handleFocusHighlightModeChange));
    }
    didUpdateWidget(oldWidget) {
      ink_well._InkResponseStateWidget.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[9], 777, 48, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this[S$0._isWidgetEnabled](this.widget) != this[S$0._isWidgetEnabled](oldWidget)) {
        if (dart.test(this.enabled)) {
          this.updateHighlight(ink_well._HighlightType.hover, {value: this[S$0._hovering], callOnHover: false});
        }
        this[S$0._updateFocusHighlights]();
      }
    }
    dispose() {
      focus_manager.FocusManager.instance.removeHighlightModeListener(dart.bind(this, S$0._handleFocusHighlightModeChange));
      super.dispose();
    }
    get wantKeepAlive() {
      return dart.test(this.highlightsExist) || this[S$0._splashes] != null && dart.test(dart.nullCheck(this[S$0._splashes])[S$.$isNotEmpty]);
    }
    getHighlightColorForType(type) {
      let t58, t58$, t58$0, t58$1, t58$2, t58$3, t58$4;
      if (type == null) dart.nullFailed(I[9], 798, 49, "type");
      let focused = C[1986] || CT.C1986;
      let hovered = C[1988] || CT.C1988;
      switch (type) {
        case C[1982] || CT.C1982:
        {
          t58 = this.widget.highlightColor;
          return t58 == null ? theme$.Theme.of(this.context).highlightColor : t58;
        }
        case C[1984] || CT.C1984:
        {
          t58$1 = (t58$0 = (t58$ = this.widget.overlayColor, t58$ == null ? null : t58$.resolve(focused)), t58$0 == null ? this.widget.focusColor : t58$0);
          return t58$1 == null ? theme$.Theme.of(this.context).focusColor : t58$1;
        }
        case C[1983] || CT.C1983:
        {
          t58$4 = (t58$3 = (t58$2 = this.widget.overlayColor, t58$2 == null ? null : t58$2.resolve(hovered)), t58$3 == null ? this.widget.hoverColor : t58$3);
          return t58$4 == null ? theme$.Theme.of(this.context).hoverColor : t58$4;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getFadeDurationForType(type) {
      if (type == null) dart.nullFailed(I[9], 815, 50, "type");
      switch (type) {
        case C[1982] || CT.C1982:
        {
          return C[334] || CT.C334;
        }
        case C[1983] || CT.C1983:
        case C[1984] || CT.C1984:
        {
          return C[1990] || CT.C1990;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    updateHighlight(type, opts) {
      let t58;
      if (type == null) dart.nullFailed(I[9], 825, 39, "type");
      let value = opts && 'value' in opts ? opts.value : null;
      if (value == null) dart.nullFailed(I[9], 825, 61, "value");
      let callOnHover = opts && 'callOnHover' in opts ? opts.callOnHover : true;
      if (callOnHover == null) dart.nullFailed(I[9], 825, 73, "callOnHover");
      let highlight = this[S$0._highlights][S.$_get](type);
      const handleInkRemoval = () => {
        if (!(this[S$0._highlights][S.$_get](type) != null)) dart.assertFailed(null, I[9], 828, 14, "_highlights[type] != null");
        this[S$0._highlights][S.$_set](type, null);
        this.updateKeepAlive();
      };
      dart.fn(handleInkRemoval, T$.VoidTovoid());
      if (type == ink_well._HighlightType.pressed) {
        t58 = this.widget.parentState;
        t58 == null ? null : t58.markChildInkResponsePressed(this, value);
      }
      if (value === (highlight != null && dart.test(highlight.active))) return;
      if (dart.test(value)) {
        if (highlight == null) {
          let referenceBox = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
          this[S$0._highlights][S.$_set](type, new ink_highlight.InkHighlight.new({controller: dart.nullCheck(material.Material.of(this.context)), referenceBox: referenceBox, color: this.getHighlightColorForType(type), shape: this.widget.highlightShape, radius: this.widget.radius, borderRadius: this.widget.borderRadius, customBorder: this.widget.customBorder, rectCallback: dart.nullCheck(this.widget.getRectCallback)(referenceBox), onRemoved: handleInkRemoval, textDirection: basic.Directionality.of(this.context), fadeDuration: this.getFadeDurationForType(type)}));
          this.updateKeepAlive();
        } else {
          highlight.activate();
        }
      } else {
        dart.nullCheck(highlight).deactivate();
      }
      if (!(value === (this[S$0._highlights][S.$_get](type) != null && dart.test(dart.nullCheck(this[S$0._highlights][S.$_get](type)).active)))) dart.assertFailed(null, I[9], 861, 12, "value == (_highlights[type] != null && _highlights[type]!.active)");
      switch (type) {
        case C[1982] || CT.C1982:
        {
          if (this.widget.onHighlightChanged != null) dart.nullCheck(this.widget.onHighlightChanged)(value);
          break;
        }
        case C[1983] || CT.C1983:
        {
          if (dart.test(callOnHover) && this.widget.onHover != null) dart.nullCheck(this.widget.onHover)(value);
          break;
        }
        case C[1984] || CT.C1984:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S$0._createInkFeature](globalPosition) {
      let t58, t58$, t58$0, t58$1;
      if (globalPosition == null) dart.nullFailed(I[9], 877, 50, "globalPosition");
      let inkController = dart.nullCheck(material.Material.of(this.context));
      let referenceBox = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
      let position = referenceBox.globalToLocal(globalPosition);
      let pressed = C[1991] || CT.C1991;
      let color = (t58$0 = (t58$ = (t58 = this.widget.overlayColor, t58 == null ? null : t58.resolve(pressed)), t58$ == null ? this.widget.splashColor : t58$), t58$0 == null ? theme$.Theme.of(this.context).splashColor : t58$0);
      let rectCallback = dart.test(this.widget.containedInkWell) ? dart.nullCheck(this.widget.getRectCallback)(referenceBox) : null;
      let borderRadius = this.widget.borderRadius;
      let customBorder = this.widget.customBorder;
      let splash = null;
      const onRemoved = () => {
        if (this[S$0._splashes] != null) {
          if (!dart.test(dart.nullCheck(this[S$0._splashes]).contains(splash))) dart.assertFailed(null, I[9], 890, 16, "_splashes!.contains(splash)");
          dart.nullCheck(this[S$0._splashes]).remove(splash);
          if (dart.equals(this[S$0._currentSplash], splash)) this[S$0._currentSplash] = null;
          this.updateKeepAlive();
        }
      };
      dart.fn(onRemoved, T$.VoidTovoid());
      splash = (t58$1 = this.widget.splashFactory, t58$1 == null ? theme$.Theme.of(this.context).splashFactory : t58$1).create({controller: inkController, referenceBox: referenceBox, position: position, color: color, containedInkWell: this.widget.containedInkWell, rectCallback: rectCallback, radius: this.widget.radius, borderRadius: borderRadius, customBorder: customBorder, onRemoved: onRemoved, textDirection: basic.Directionality.of(this.context)});
      return splash;
    }
    [S$0._handleFocusHighlightModeChange](mode) {
      if (mode == null) dart.nullFailed(I[9], 915, 59, "mode");
      if (!dart.test(this.mounted)) {
        return;
      }
      this.setState(dart.fn(() => {
        this[S$0._updateFocusHighlights]();
      }, T$.VoidTovoid()));
    }
    get [S$0._shouldShowFocus]() {
      let t58, t58$;
      let mode = (t58$ = (t58 = media_query.MediaQuery.maybeOf(this.context), t58 == null ? null : t58.navigationMode), t58$ == null ? media_query.NavigationMode.traditional : t58$);
      switch (mode) {
        case C[1993] || CT.C1993:
        {
          return dart.test(this.enabled) && dart.test(this[S$0._hasFocus]);
        }
        case C[1994] || CT.C1994:
        {
          return this[S$0._hasFocus];
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S$0._updateFocusHighlights]() {
      let showFocus = null;
      switch (focus_manager.FocusManager.instance.highlightMode) {
        case C[1995] || CT.C1995:
        {
          showFocus = false;
          break;
        }
        case C[1996] || CT.C1996:
        {
          showFocus = this[S$0._shouldShowFocus];
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      this.updateHighlight(ink_well._HighlightType.focus, {value: showFocus});
    }
    [S$0._handleFocusUpdate](hasFocus) {
      if (hasFocus == null) dart.nullFailed(I[9], 948, 32, "hasFocus");
      this[S$0._hasFocus] = hasFocus;
      this[S$0._updateFocusHighlights]();
      if (this.widget.onFocusChange != null) {
        dart.nullCheck(this.widget.onFocusChange)(hasFocus);
      }
    }
    [S$0._handleTapDown](details) {
      if (details == null) dart.nullFailed(I[9], 956, 38, "details");
      if (dart.test(this[S$0._anyChildInkResponsePressed])) return;
      this[S$0._startSplash]({details: details});
      if (this.widget.onTapDown != null) {
        dart.nullCheck(this.widget.onTapDown)(details);
      }
    }
    [S$0._startSplash](opts) {
      let details = opts && 'details' in opts ? opts.details : null;
      let context = opts && 'context' in opts ? opts.context : null;
      if (!(details != null || context != null)) dart.assertFailed(null, I[9], 966, 12, "details != null || context != null");
      let globalPosition = null;
      if (context != null) {
        let referenceBox = box$.RenderBox.as(dart.nullCheck(context.findRenderObject()));
        if (!dart.test(referenceBox.hasSize)) dart.assertFailed("InkResponse must be done with layout before starting a splash.", I[9], 971, 14, "referenceBox.hasSize");
        globalPosition = referenceBox.localToGlobal(referenceBox.paintBounds.center);
      } else {
        globalPosition = dart.nullCheck(details).globalPosition;
      }
      let splash = this[S$0._createInkFeature](globalPosition);
      this[S$0._splashes] == null ? this[S$0._splashes] = new (T$._HashSetOfInteractiveInkFeature()).new() : null;
      dart.nullCheck(this[S$0._splashes]).add(splash);
      this[S$0._currentSplash] = splash;
      this.updateKeepAlive();
      this.updateHighlight(ink_well._HighlightType.pressed, {value: true});
    }
    [S$0._handleTap$1]() {
      let t58;
      t58 = this[S$0._currentSplash];
      t58 == null ? null : t58.confirm();
      this[S$0._currentSplash] = null;
      this.updateHighlight(ink_well._HighlightType.pressed, {value: false});
      if (this.widget.onTap != null) {
        if (dart.test(this.widget.enableFeedback)) feedback.Feedback.forTap(this.context);
        dart.nullCheck(this.widget.onTap)();
      }
    }
    [S$0._handleTapCancel]() {
      let t58;
      t58 = this[S$0._currentSplash];
      t58 == null ? null : t58.cancel();
      this[S$0._currentSplash] = null;
      if (this.widget.onTapCancel != null) {
        dart.nullCheck(this.widget.onTapCancel)();
      }
      this.updateHighlight(ink_well._HighlightType.pressed, {value: false});
    }
    [S$0._handleDoubleTap]() {
      let t58;
      t58 = this[S$0._currentSplash];
      t58 == null ? null : t58.confirm();
      this[S$0._currentSplash] = null;
      if (this.widget.onDoubleTap != null) dart.nullCheck(this.widget.onDoubleTap)();
    }
    [S$0._handleLongPress$1]() {
      let t58;
      t58 = this[S$0._currentSplash];
      t58 == null ? null : t58.confirm();
      this[S$0._currentSplash] = null;
      if (this.widget.onLongPress != null) {
        if (dart.test(this.widget.enableFeedback)) feedback.Feedback.forLongPress(this.context);
        dart.nullCheck(this.widget.onLongPress)();
      }
    }
    deactivate() {
      let t58, t58$;
      if (this[S$0._splashes] != null) {
        let splashes = dart.nullCheck(this[S$0._splashes]);
        this[S$0._splashes] = null;
        for (let splash of splashes)
          splash.dispose();
        this[S$0._currentSplash] = null;
      }
      if (!(this[S$0._currentSplash] == null)) dart.assertFailed(null, I[9], 1030, 12, "_currentSplash == null");
      for (let highlight of this[S$0._highlights][S.$keys]) {
        t58 = this[S$0._highlights][S.$_get](highlight);
        t58 == null ? null : t58.dispose();
        this[S$0._highlights][S.$_set](highlight, null);
      }
      t58$ = this.widget.parentState;
      t58$ == null ? null : t58$.markChildInkResponsePressed(this, false);
      super.deactivate();
    }
    [S$0._isWidgetEnabled](widget) {
      if (widget == null) dart.nullFailed(I[9], 1039, 49, "widget");
      return widget.onTap != null || widget.onDoubleTap != null || widget.onLongPress != null;
    }
    get enabled() {
      return this[S$0._isWidgetEnabled](this.widget);
    }
    [S$0._handleMouseEnter](event) {
      if (event == null) dart.nullFailed(I[9], 1045, 44, "event");
      this[S$0._hovering] = true;
      if (dart.test(this.enabled)) {
        this[S$0._handleHoverChange]();
      }
    }
    [S$0._handleMouseExit](event) {
      if (event == null) dart.nullFailed(I[9], 1052, 42, "event");
      this[S$0._hovering] = false;
      this[S$0._handleHoverChange]();
    }
    [S$0._handleHoverChange]() {
      this.updateHighlight(ink_well._HighlightType.hover, {value: this[S$0._hovering]});
    }
    get [S$0._canRequestFocus]() {
      let t58, t58$;
      let mode = (t58$ = (t58 = media_query.MediaQuery.maybeOf(this.context), t58 == null ? null : t58.navigationMode), t58$ == null ? media_query.NavigationMode.traditional : t58$);
      switch (mode) {
        case C[1993] || CT.C1993:
        {
          return dart.test(this.enabled) && dart.test(this.widget.canRequestFocus);
        }
        case C[1994] || CT.C1994:
        {
          return true;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      let t59, t58, t58$, t59$, t59$0, t59$1, t58$0, t58$1;
      if (context == null) dart.nullFailed(I[9], 1074, 29, "context");
      if (!dart.test((t58 = this.widget, t59 = context, t58.debugCheckContext(t59)))) dart.assertFailed(null, I[9], 1075, 12, "widget.debugCheckContext(context)");
      super.build(context);
      for (let type of this[S$0._highlights][S.$keys]) {
        t58$ = this[S$0._highlights][S.$_get](type);
        t58$ == null ? null : t58$.color = this.getHighlightColorForType(type);
      }
      let pressed = C[1991] || CT.C1991;
      t58$0 = this[S$0._currentSplash];
      t58$0 == null ? null : t58$0.color = (t59$1 = (t59$0 = (t59$ = this.widget.overlayColor, t59$ == null ? null : t59$.resolve(pressed)), t59$0 == null ? this.widget.splashColor : t59$0), t59$1 == null ? theme$.Theme.of(context).splashColor : t59$1);
      let effectiveMouseCursor = material_state.MaterialStateProperty.resolveAs(mouse_cursor.MouseCursor, (t58$1 = this.widget.mouseCursor, t58$1 == null ? material_state.MaterialStateMouseCursor.clickable : t58$1), (() => {
        let t58 = T$.LinkedHashSetOfMaterialState().new();
        if (!dart.test(this.enabled)) t58.add(material_state.MaterialState.disabled);
        if (dart.test(this[S$0._hovering]) && dart.test(this.enabled)) t58.add(material_state.MaterialState.hovered);
        if (dart.test(this[S$0._hasFocus])) t58.add(material_state.MaterialState.focused);
        return t58;
      })());
      return new ink_well._ParentInkResponseProvider.new({state: this, child: new actions.Actions.new({actions: this[S$0._actionMap], child: new focus_scope.Focus.new({focusNode: this.widget.focusNode, canRequestFocus: this[S$0._canRequestFocus], onFocusChange: dart.bind(this, S$0._handleFocusUpdate), autofocus: this.widget.autofocus, child: new basic.MouseRegion.new({cursor: effectiveMouseCursor, onEnter: dart.bind(this, S$0._handleMouseEnter), onExit: dart.bind(this, S$0._handleMouseExit), child: new basic.Semantics.new({onTap: dart.test(this.widget.excludeFromSemantics) || this.widget.onTap == null ? null : dart.bind(this, S$0._simulateTap), onLongPress: dart.test(this.widget.excludeFromSemantics) || this.widget.onLongPress == null ? null : dart.bind(this, S$0._simulateLongPress), child: new gesture_detector.GestureDetector.new({onTapDown: dart.test(this.enabled) ? dart.bind(this, S$0._handleTapDown) : null, onTap: dart.test(this.enabled) ? dart.bind(this, S$0._handleTap$1) : null, onTapCancel: dart.test(this.enabled) ? dart.bind(this, S$0._handleTapCancel) : null, onDoubleTap: this.widget.onDoubleTap != null ? dart.bind(this, S$0._handleDoubleTap) : null, onLongPress: this.widget.onLongPress != null ? dart.bind(this, S$0._handleLongPress$1) : null, behavior: proxy_box.HitTestBehavior.opaque, excludeFromSemantics: true, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[1997] || CT.C1997}), $creationLocationd_0dea112b090073317d4: C[2007] || CT.C2007}), $creationLocationd_0dea112b090073317d4: C[2012] || CT.C2012}), $creationLocationd_0dea112b090073317d4: C[2018] || CT.C2018}), $creationLocationd_0dea112b090073317d4: C[2025] || CT.C2025}), $creationLocationd_0dea112b090073317d4: C[2029] || CT.C2029});
    }
  };
  (ink_well._InkResponseState.new = function() {
    this[S$0._splashes] = null;
    this[S$0._currentSplash] = null;
    this[S$0._hovering] = false;
    this[S$0._highlights] = new (T$.LinkedMapOf_HighlightType$InkHighlightN()).new();
    this[S$0.___InkResponseState__actionMap] = null;
    this[S$0.___InkResponseState__actionMap_isSet] = false;
    this[S$0._activeChildren] = new (T$.ObserverListOf_ParentInkResponseState()).new();
    this[S$0._hasFocus] = false;
    ink_well._InkResponseState.__proto__.new.call(this);
    ;
  }).prototype = ink_well._InkResponseState.prototype;
  dart.addTypeTests(ink_well._InkResponseState);
  dart.addTypeCaches(ink_well._InkResponseState);
  ink_well._InkResponseState[dart.implements] = () => [ink_well._ParentInkResponseState];
  dart.setMethodSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getMethods(ink_well._InkResponseState.__proto__),
    markChildInkResponsePressed: dart.fnType(dart.void, [ink_well._ParentInkResponseState, core.bool]),
    [S$0._simulateTap]: dart.fnType(dart.void, [], [dart.nullable(actions.Intent)]),
    [S$0._simulateLongPress]: dart.fnType(dart.void, []),
    getHighlightColorForType: dart.fnType(ui.Color, [ink_well._HighlightType]),
    getFadeDurationForType: dart.fnType(core.Duration, [ink_well._HighlightType]),
    updateHighlight: dart.fnType(dart.void, [ink_well._HighlightType], {callOnHover: core.bool}, {value: core.bool}),
    [S$0._createInkFeature]: dart.fnType(ink_well.InteractiveInkFeature, [ui.Offset]),
    [S$0._handleFocusHighlightModeChange]: dart.fnType(dart.void, [focus_manager.FocusHighlightMode]),
    [S$0._updateFocusHighlights]: dart.fnType(dart.void, []),
    [S$0._handleFocusUpdate]: dart.fnType(dart.void, [core.bool]),
    [S$0._handleTapDown]: dart.fnType(dart.void, [tap.TapDownDetails]),
    [S$0._startSplash]: dart.fnType(dart.void, [], {context: dart.nullable(framework.BuildContext), details: dart.nullable(tap.TapDownDetails)}, {}),
    [S$0._handleTap$1]: dart.fnType(dart.void, []),
    [S$0._handleTapCancel]: dart.fnType(dart.void, []),
    [S$0._handleDoubleTap]: dart.fnType(dart.void, []),
    [S$0._handleLongPress$1]: dart.fnType(dart.void, []),
    [S$0._isWidgetEnabled]: dart.fnType(core.bool, [ink_well._InkResponseStateWidget]),
    [S$0._handleMouseEnter]: dart.fnType(dart.void, [events.PointerEnterEvent]),
    [S$0._handleMouseExit]: dart.fnType(dart.void, [events.PointerExitEvent]),
    [S$0._handleHoverChange]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getGetters(ink_well._InkResponseState.__proto__),
    [S$0._actionMap]: core.Map$(core.Type, actions.Action$(actions.Intent)),
    highlightsExist: core.bool,
    [S$0._anyChildInkResponsePressed]: core.bool,
    wantKeepAlive: core.bool,
    [S$0._shouldShowFocus]: core.bool,
    enabled: core.bool,
    [S$0._canRequestFocus]: core.bool
  }));
  dart.setLibraryUri(ink_well._InkResponseState, I[7]);
  dart.setFieldSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getFields(ink_well._InkResponseState.__proto__),
    [S$0._splashes]: dart.fieldType(dart.nullable(core.Set$(ink_well.InteractiveInkFeature))),
    [S$0._currentSplash]: dart.fieldType(dart.nullable(ink_well.InteractiveInkFeature)),
    [S$0._hovering]: dart.fieldType(core.bool),
    [S$0._highlights]: dart.finalFieldType(core.Map$(ink_well._HighlightType, dart.nullable(ink_highlight.InkHighlight))),
    [S$0.___InkResponseState__actionMap]: dart.fieldType(dart.nullable(core.Map$(core.Type, actions.Action$(actions.Intent)))),
    [S$0.___InkResponseState__actionMap_isSet]: dart.fieldType(core.bool),
    [S$0._activeChildren]: dart.finalFieldType(observer_list.ObserverList$(ink_well._ParentInkResponseState)),
    [S$0._hasFocus]: dart.fieldType(core.bool)
  }));
  ink_well.InkWell = class InkWell extends ink_well.InkResponse {};
  (ink_well.InkWell.new = function(opts) {
    let t59;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(I[9], 1242, 10, "excludeFromSemantics");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    if (canRequestFocus == null) dart.nullFailed(I[9], 1244, 10, "canRequestFocus");
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[9], 1246, 10, "autofocus");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    ink_well.InkWell.__proto__.new.call(this, {key: key, child: child, onTap: onTap, onDoubleTap: onDoubleTap, onLongPress: onLongPress, onTapDown: onTapDown, onTapCancel: onTapCancel, onHighlightChanged: onHighlightChanged, onHover: onHover, mouseCursor: mouseCursor, containedInkWell: true, highlightShape: box_border.BoxShape.rectangle, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, overlayColor: overlayColor, splashColor: splashColor, splashFactory: splashFactory, radius: radius, borderRadius: borderRadius, customBorder: customBorder, enableFeedback: (t59 = enableFeedback, t59 == null ? true : t59), excludeFromSemantics: excludeFromSemantics, focusNode: focusNode, canRequestFocus: canRequestFocus, onFocusChange: onFocusChange, autofocus: autofocus, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well.InkWell.prototype;
  dart.addTypeTests(ink_well.InkWell);
  dart.addTypeCaches(ink_well.InkWell);
  dart.setLibraryUri(ink_well.InkWell, I[7]);
  bottom_navigation_bar.BottomNavigationBarType = class BottomNavigationBarType extends core.Object {
    toString() {
      return this[S$0._name$21];
    }
  };
  (bottom_navigation_bar.BottomNavigationBarType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[102], 29, 6, "index");
    if (_name == null) dart.nullFailed(I[102], 29, 6, "_name");
    this.index = index;
    this[S$0._name$21] = _name;
    ;
  }).prototype = bottom_navigation_bar.BottomNavigationBarType.prototype;
  dart.addTypeTests(bottom_navigation_bar.BottomNavigationBarType);
  dart.addTypeCaches(bottom_navigation_bar.BottomNavigationBarType);
  dart.setLibraryUri(bottom_navigation_bar.BottomNavigationBarType, I[103]);
  dart.setFieldSignature(bottom_navigation_bar.BottomNavigationBarType, () => ({
    __proto__: dart.getFields(bottom_navigation_bar.BottomNavigationBarType.__proto__),
    index: dart.finalFieldType(core.int),
    [S$0._name$21]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(bottom_navigation_bar.BottomNavigationBarType, ['toString']);
  bottom_navigation_bar.BottomNavigationBarType.fixed = C[2033] || CT.C2033;
  bottom_navigation_bar.BottomNavigationBarType.shifting = C[2034] || CT.C2034;
  bottom_navigation_bar.BottomNavigationBarType.values = C[2035] || CT.C2035;
  bottom_navigation_bar.BottomNavigationBar = class BottomNavigationBar extends framework.StatefulWidget {
    get items() {
      return this[S$0.items];
    }
    set items(value) {
      super.items = value;
    }
    get onTap() {
      return this[S$0.onTap$4];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get currentIndex() {
      return this[S$0.currentIndex];
    }
    set currentIndex(value) {
      super.currentIndex = value;
    }
    get elevation() {
      return this[S$0.elevation$18];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get type() {
      return this[S$0.type];
    }
    set type(value) {
      super.type = value;
    }
    get backgroundColor() {
      return this[S$0.backgroundColor$13];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get iconSize() {
      return this[S$0.iconSize$1];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get selectedItemColor() {
      return this[S$0.selectedItemColor];
    }
    set selectedItemColor(value) {
      super.selectedItemColor = value;
    }
    get unselectedItemColor() {
      return this[S$0.unselectedItemColor];
    }
    set unselectedItemColor(value) {
      super.unselectedItemColor = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$2];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$2];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$3];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get selectedFontSize() {
      return this[S$0.selectedFontSize];
    }
    set selectedFontSize(value) {
      super.selectedFontSize = value;
    }
    get unselectedFontSize() {
      return this[S$0.unselectedFontSize];
    }
    set unselectedFontSize(value) {
      super.unselectedFontSize = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$13];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get fixedColor() {
      return this.selectedItemColor;
    }
    createState() {
      return new bottom_navigation_bar._BottomNavigationBarState.new();
    }
  };
  (bottom_navigation_bar.BottomNavigationBar.new = function(opts) {
    let t59;
    let key = opts && 'key' in opts ? opts.key : null;
    let items = opts && 'items' in opts ? opts.items : null;
    if (items == null) dart.nullFailed(I[102], 259, 19, "items");
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let currentIndex = opts && 'currentIndex' in opts ? opts.currentIndex : 0;
    if (currentIndex == null) dart.nullFailed(I[102], 261, 10, "currentIndex");
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let fixedColor = opts && 'fixedColor' in opts ? opts.fixedColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
    if (iconSize == null) dart.nullFailed(I[102], 266, 10, "iconSize");
    let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
    let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedFontSize = opts && 'selectedFontSize' in opts ? opts.selectedFontSize : 14;
    if (selectedFontSize == null) dart.nullFailed(I[102], 271, 10, "selectedFontSize");
    let unselectedFontSize = opts && 'unselectedFontSize' in opts ? opts.unselectedFontSize : 12;
    if (unselectedFontSize == null) dart.nullFailed(I[102], 272, 10, "unselectedFontSize");
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.items] = items;
    this[S$0.onTap$4] = onTap;
    this[S$0.currentIndex] = currentIndex;
    this[S$0.elevation$18] = elevation;
    this[S$0.type] = type;
    this[S$0.backgroundColor$13] = backgroundColor;
    this[S$0.iconSize$1] = iconSize;
    this[S$0.unselectedItemColor] = unselectedItemColor;
    this[S$0.selectedIconTheme$2] = selectedIconTheme;
    this[S$0.unselectedIconTheme$2] = unselectedIconTheme;
    this[S$0.selectedFontSize] = selectedFontSize;
    this[S$0.unselectedFontSize] = unselectedFontSize;
    this[S$0.selectedLabelStyle] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$3] = unselectedLabelStyle;
    this[S$0.showSelectedLabels] = showSelectedLabels;
    this[S$0.showUnselectedLabels] = showUnselectedLabels;
    this[S$0.mouseCursor$13] = mouseCursor;
    if (!(items != null)) dart.assertFailed(null, I[102], 278, 15, "items != null");
    if (!(dart.notNull(items[S.$length]) >= 2)) dart.assertFailed(null, I[102], 279, 15, "items.length >= 2");
    if (!(dart.test(items[S$0.$every](dart.fn(item => {
      if (item == null) dart.nullFailed(I[102], 281, 46, "item");
      return item.title != null;
    }, T$.BottomNavigationBarItemTobool()))) || dart.test(items[S$0.$every](dart.fn(item => {
      if (item == null) dart.nullFailed(I[102], 282, 46, "item");
      return item.label != null;
    }, T$.BottomNavigationBarItemTobool()))))) dart.assertFailed("Every item must have a non-null title or label", I[102], 281, 9, "items.every((BottomNavigationBarItem item) => item.title != null) ||\r\n        items.every((BottomNavigationBarItem item) => item.label != null)");
    if (!(0 <= dart.notNull(currentIndex) && dart.notNull(currentIndex) < dart.notNull(items[S.$length]))) dart.assertFailed(null, I[102], 285, 15, "0 <= currentIndex && currentIndex < items.length");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[102], 286, 15, "elevation == null || elevation >= 0.0");
    if (!(iconSize != null && dart.notNull(iconSize) >= 0.0)) dart.assertFailed(null, I[102], 287, 15, "iconSize != null && iconSize >= 0.0");
    if (!(selectedItemColor == null || fixedColor == null)) dart.assertFailed("Either selectedItemColor or fixedColor can be specified, but not both", I[102], 289, 10, "selectedItemColor == null || fixedColor == null");
    if (!(selectedFontSize != null && dart.notNull(selectedFontSize) >= 0.0)) dart.assertFailed(null, I[102], 292, 15, "selectedFontSize != null && selectedFontSize >= 0.0");
    if (!(unselectedFontSize != null && dart.notNull(unselectedFontSize) >= 0.0)) dart.assertFailed(null, I[102], 293, 15, "unselectedFontSize != null && unselectedFontSize >= 0.0");
    this[S$0.selectedItemColor] = (t59 = selectedItemColor, t59 == null ? fixedColor : t59);
    bottom_navigation_bar.BottomNavigationBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar.BottomNavigationBar.prototype;
  dart.addTypeTests(bottom_navigation_bar.BottomNavigationBar);
  dart.addTypeCaches(bottom_navigation_bar.BottomNavigationBar);
  dart.setMethodSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar.BottomNavigationBar.__proto__),
    createState: dart.fnType(bottom_navigation_bar._BottomNavigationBarState, [])
  }));
  dart.setGetterSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar.BottomNavigationBar.__proto__),
    fixedColor: dart.nullable(ui.Color)
  }));
  dart.setLibraryUri(bottom_navigation_bar.BottomNavigationBar, I[103]);
  dart.setFieldSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getFields(bottom_navigation_bar.BottomNavigationBar.__proto__),
    items: dart.finalFieldType(core.List$(bottom_navigation_bar_item.BottomNavigationBarItem)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    currentIndex: dart.finalFieldType(core.int),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    type: dart.finalFieldType(dart.nullable(bottom_navigation_bar.BottomNavigationBarType)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    iconSize: dart.finalFieldType(core.double),
    selectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selectedFontSize: dart.finalFieldType(core.double),
    unselectedFontSize: dart.finalFieldType(core.double),
    showUnselectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    showSelectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor))
  }));
  bottom_navigation_bar._BottomNavigationTile = class _BottomNavigationTile extends framework.StatelessWidget {
    get type() {
      return this[S$0.type$1];
    }
    set type(value) {
      super.type = value;
    }
    get item() {
      return this[S$0.item];
    }
    set item(value) {
      super.item = value;
    }
    get animation() {
      return this[S$0.animation$7];
    }
    set animation(value) {
      super.animation = value;
    }
    get iconSize() {
      return this[S$0.iconSize$2];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get onTap() {
      return this[S$0.onTap$5];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get colorTween() {
      return this[S$0.colorTween];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get flex() {
      return this[S$0.flex];
    }
    set flex(value) {
      super.flex = value;
    }
    get selected() {
      return this[S$0.selected$2];
    }
    set selected(value) {
      super.selected = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$3];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$3];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle$1];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$4];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get indexLabel() {
      return this[S$0.indexLabel];
    }
    set indexLabel(value) {
      super.indexLabel = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels$1];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels$1];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$14];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    build(context) {
      let t59, t59$, t59$0, t59$1, t59$2;
      if (context == null) dart.nullFailed(I[102], 463, 29, "context");
      let size = null;
      let selectedFontSize = dart.nullCheck(this.selectedLabelStyle.fontSize);
      let selectedIconSize = (t59$ = (t59 = this.selectedIconTheme, t59 == null ? null : t59.size), t59$ == null ? this.iconSize : t59$);
      let unselectedIconSize = (t59$1 = (t59$0 = this.unselectedIconTheme, t59$0 == null ? null : t59$0.size), t59$1 == null ? this.iconSize : t59$1);
      let selectedIconDiff = math.max(core.double, dart.notNull(selectedIconSize) - dart.notNull(unselectedIconSize), 0.0);
      let unselectedIconDiff = math.max(core.double, dart.notNull(unselectedIconSize) - dart.notNull(selectedIconSize), 0.0);
      let effectiveTooltip = this.item.tooltip === "" ? null : (t59$2 = this.item.tooltip, t59$2 == null ? this.item.label : t59$2);
      let bottomPadding = null;
      let topPadding = null;
      if (dart.test(this.showSelectedLabels) && !dart.test(this.showUnselectedLabels)) {
        bottomPadding = new (T$.TweenOfdouble()).new({begin: selectedIconDiff / 2.0, end: selectedFontSize / 2.0 - unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize + selectedIconDiff / 2.0, end: selectedFontSize / 2.0 - unselectedIconDiff / 2.0}).evaluate(this.animation);
      } else if (!dart.test(this.showSelectedLabels) && !dart.test(this.showUnselectedLabels)) {
        bottomPadding = new (T$.TweenOfdouble()).new({begin: selectedIconDiff / 2.0, end: unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize + selectedIconDiff / 2.0, end: selectedFontSize + unselectedIconDiff / 2.0}).evaluate(this.animation);
      } else {
        bottomPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize / 2.0 + selectedIconDiff / 2.0, end: selectedFontSize / 2.0 + unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize / 2.0 + selectedIconDiff / 2.0, end: selectedFontSize / 2.0 + unselectedIconDiff / 2.0}).evaluate(this.animation);
      }
      switch (this.type) {
        case C[2033] || CT.C2033:
        {
          size = 1;
          break;
        }
        case C[2034] || CT.C2034:
        {
          size = (dart.nullCheck(this.flex) * 1000.0)[S$.$round]();
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let result = new ink_well.InkResponse.new({onTap: this.onTap, mouseCursor: this.mouseCursor, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: topPadding, bottom: bottomPadding}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.center, mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([new bottom_navigation_bar._TileIcon.new({colorTween: dart.nullCheck(this.colorTween), animation: this.animation, iconSize: this.iconSize, selected: this.selected, item: this.item, selectedIconTheme: this.selectedIconTheme, unselectedIconTheme: this.unselectedIconTheme, $creationLocationd_0dea112b090073317d4: C[2036] || CT.C2036}), new bottom_navigation_bar._Label.new({colorTween: dart.nullCheck(this.colorTween), animation: this.animation, item: this.item, selectedLabelStyle: this.selectedLabelStyle, unselectedLabelStyle: this.unselectedLabelStyle, showSelectedLabels: this.showSelectedLabels, showUnselectedLabels: this.showUnselectedLabels, $creationLocationd_0dea112b090073317d4: C[2045] || CT.C2045})]), $creationLocationd_0dea112b090073317d4: C[2054] || CT.C2054}), $creationLocationd_0dea112b090073317d4: C[2060] || CT.C2060}), $creationLocationd_0dea112b090073317d4: C[2064] || CT.C2064});
      if (effectiveTooltip != null) {
        result = new tooltip.Tooltip.new({message: effectiveTooltip, preferBelow: false, verticalOffset: dart.notNull(selectedIconSize) + selectedFontSize, excludeFromSemantics: true, child: result, $creationLocationd_0dea112b090073317d4: C[2069] || CT.C2069});
      }
      result = new basic.Semantics.new({selected: this.selected, container: true, child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([result, new basic.Semantics.new({label: this.indexLabel, $creationLocationd_0dea112b090073317d4: C[2075] || CT.C2075})]), $creationLocationd_0dea112b090073317d4: C[2078] || CT.C2078}), $creationLocationd_0dea112b090073317d4: C[2081] || CT.C2081});
      return new basic.Expanded.new({flex: size, child: result, $creationLocationd_0dea112b090073317d4: C[2086] || CT.C2086});
    }
  };
  (bottom_navigation_bar._BottomNavigationTile.new = function(type, item, animation, iconSize, opts) {
    if (type == null) dart.nullFailed(I[102], 421, 10, "type");
    if (item == null) dart.nullFailed(I[102], 422, 10, "item");
    if (animation == null) dart.nullFailed(I[102], 423, 10, "animation");
    if (iconSize == null) dart.nullFailed(I[102], 424, 10, "iconSize");
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    let flex = opts && 'flex' in opts ? opts.flex : null;
    let selected = opts && 'selected' in opts ? opts.selected : false;
    if (selected == null) dart.nullFailed(I[102], 428, 10, "selected");
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    if (selectedLabelStyle == null) dart.nullFailed(I[102], 429, 19, "selectedLabelStyle");
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    if (unselectedLabelStyle == null) dart.nullFailed(I[102], 430, 19, "unselectedLabelStyle");
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    if (showSelectedLabels == null) dart.nullFailed(I[102], 433, 19, "showSelectedLabels");
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    if (showUnselectedLabels == null) dart.nullFailed(I[102], 434, 19, "showUnselectedLabels");
    let indexLabel = opts && 'indexLabel' in opts ? opts.indexLabel : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    if (mouseCursor == null) dart.nullFailed(I[102], 436, 19, "mouseCursor");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.type$1] = type;
    this[S$0.item] = item;
    this[S$0.animation$7] = animation;
    this[S$0.iconSize$2] = iconSize;
    this[S$0.onTap$5] = onTap;
    this[S$0.colorTween] = colorTween;
    this[S$0.flex] = flex;
    this[S$0.selected$2] = selected;
    this[S$0.selectedLabelStyle$1] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$4] = unselectedLabelStyle;
    this[S$0.selectedIconTheme$3] = selectedIconTheme;
    this[S$0.unselectedIconTheme$3] = unselectedIconTheme;
    this[S$0.showSelectedLabels$1] = showSelectedLabels;
    this[S$0.showUnselectedLabels$1] = showUnselectedLabels;
    this[S$0.indexLabel] = indexLabel;
    this[S$0.mouseCursor$14] = mouseCursor;
    if (!(type != null)) dart.assertFailed(null, I[102], 437, 17, "type != null");
    if (!(item != null)) dart.assertFailed(null, I[102], 438, 17, "item != null");
    if (!(animation != null)) dart.assertFailed(null, I[102], 439, 17, "animation != null");
    if (!(selected != null)) dart.assertFailed(null, I[102], 440, 17, "selected != null");
    if (!(selectedLabelStyle != null)) dart.assertFailed(null, I[102], 441, 17, "selectedLabelStyle != null");
    if (!(unselectedLabelStyle != null)) dart.assertFailed(null, I[102], 442, 17, "unselectedLabelStyle != null");
    if (!(mouseCursor != null)) dart.assertFailed(null, I[102], 443, 17, "mouseCursor != null");
    bottom_navigation_bar._BottomNavigationTile.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._BottomNavigationTile.prototype;
  dart.addTypeTests(bottom_navigation_bar._BottomNavigationTile);
  dart.addTypeCaches(bottom_navigation_bar._BottomNavigationTile);
  dart.setMethodSignature(bottom_navigation_bar._BottomNavigationTile, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._BottomNavigationTile.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._BottomNavigationTile, I[103]);
  dart.setFieldSignature(bottom_navigation_bar._BottomNavigationTile, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._BottomNavigationTile.__proto__),
    type: dart.finalFieldType(bottom_navigation_bar.BottomNavigationBarType),
    item: dart.finalFieldType(bottom_navigation_bar_item.BottomNavigationBarItem),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    iconSize: dart.finalFieldType(core.double),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    colorTween: dart.finalFieldType(dart.nullable(tween.ColorTween)),
    flex: dart.finalFieldType(dart.nullable(core.double)),
    selected: dart.finalFieldType(core.bool),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    unselectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    indexLabel: dart.finalFieldType(dart.nullable(core.String)),
    showSelectedLabels: dart.finalFieldType(core.bool),
    showUnselectedLabels: dart.finalFieldType(core.bool),
    mouseCursor: dart.finalFieldType(mouse_cursor.MouseCursor)
  }));
  bottom_navigation_bar._TileIcon = class _TileIcon extends framework.StatelessWidget {
    get colorTween() {
      return this[S$0.colorTween$1];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get animation() {
      return this[S$0.animation$8];
    }
    set animation(value) {
      super.animation = value;
    }
    get iconSize() {
      return this[S$0.iconSize$3];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get selected() {
      return this[S$0.selected$3];
    }
    set selected(value) {
      super.selected = value;
    }
    get item() {
      return this[S$0.item$1];
    }
    set item(value) {
      super.item = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$4];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$4];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[102], 629, 29, "context");
      let iconColor = this.colorTween.evaluate(this.animation);
      let defaultIconTheme = new icon_theme_data.IconThemeData.new({color: iconColor, size: this.iconSize});
      let iconThemeData = icon_theme_data.IconThemeData.lerp(defaultIconTheme.merge(this.unselectedIconTheme), defaultIconTheme.merge(this.selectedIconTheme), this.animation.value);
      return new basic.Align.new({alignment: alignment.Alignment.topCenter, heightFactor: 1.0, child: new container.Container.new({child: new icon_theme.IconTheme.new({data: iconThemeData, child: dart.test(this.selected) ? this.item.activeIcon : this.item.icon, $creationLocationd_0dea112b090073317d4: C[2090] || CT.C2090}), $creationLocationd_0dea112b090073317d4: C[2094] || CT.C2094}), $creationLocationd_0dea112b090073317d4: C[2096] || CT.C2096});
    }
  };
  (bottom_navigation_bar._TileIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    if (colorTween == null) dart.nullFailed(I[102], 609, 19, "colorTween");
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[102], 610, 19, "animation");
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : null;
    if (iconSize == null) dart.nullFailed(I[102], 611, 19, "iconSize");
    let selected = opts && 'selected' in opts ? opts.selected : null;
    if (selected == null) dart.nullFailed(I[102], 612, 19, "selected");
    let item = opts && 'item' in opts ? opts.item : null;
    if (item == null) dart.nullFailed(I[102], 613, 19, "item");
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.colorTween$1] = colorTween;
    this[S$0.animation$8] = animation;
    this[S$0.iconSize$3] = iconSize;
    this[S$0.selected$3] = selected;
    this[S$0.item$1] = item;
    this[S$0.selectedIconTheme$4] = selectedIconTheme;
    this[S$0.unselectedIconTheme$4] = unselectedIconTheme;
    if (!(selected != null)) dart.assertFailed(null, I[102], 616, 15, "selected != null");
    if (!(item != null)) dart.assertFailed(null, I[102], 617, 15, "item != null");
    bottom_navigation_bar._TileIcon.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._TileIcon.prototype;
  dart.addTypeTests(bottom_navigation_bar._TileIcon);
  dart.addTypeCaches(bottom_navigation_bar._TileIcon);
  dart.setMethodSignature(bottom_navigation_bar._TileIcon, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._TileIcon.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._TileIcon, I[103]);
  dart.setFieldSignature(bottom_navigation_bar._TileIcon, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._TileIcon.__proto__),
    colorTween: dart.finalFieldType(tween.ColorTween),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    iconSize: dart.finalFieldType(core.double),
    selected: dart.finalFieldType(core.bool),
    item: dart.finalFieldType(bottom_navigation_bar_item.BottomNavigationBarItem),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData))
  }));
  bottom_navigation_bar._Label = class _Label extends framework.StatelessWidget {
    get colorTween() {
      return this[S$0.colorTween$2];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get animation() {
      return this[S$0.animation$9];
    }
    set animation(value) {
      super.animation = value;
    }
    get item() {
      return this[S$0.item$2];
    }
    set item(value) {
      super.item = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle$2];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$5];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels$2];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels$2];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    build(context) {
      let t59;
      if (context == null) dart.nullFailed(I[102], 682, 29, "context");
      let selectedFontSize = this.selectedLabelStyle.fontSize;
      let unselectedFontSize = this.unselectedLabelStyle.fontSize;
      let customStyle = dart.nullCheck(text_style.TextStyle.lerp(this.unselectedLabelStyle, this.selectedLabelStyle, this.animation.value));
      let text = text$.DefaultTextStyle.merge({style: customStyle.copyWith({fontSize: selectedFontSize, color: this.colorTween.evaluate(this.animation)}), child: new basic.Transform.new({transform: vector_math_64.Matrix4.diagonal3(vector_math_64.Vector3.all(new (T$.TweenOfdouble()).new({begin: dart.nullCheck(unselectedFontSize) / dart.nullCheck(selectedFontSize), end: 1.0}).evaluate(this.animation))), alignment: alignment.Alignment.bottomCenter, child: (t59 = this.item.title, t59 == null ? new text$.Text.new(dart.nullCheck(this.item.label), {$creationLocationd_0dea112b090073317d4: C[2101] || CT.C2101}) : t59), $creationLocationd_0dea112b090073317d4: C[2104] || CT.C2104})});
      if (!dart.test(this.showUnselectedLabels) && !dart.test(this.showSelectedLabels)) {
        text = new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: 0.0, child: text, $creationLocationd_0dea112b090073317d4: C[2109] || CT.C2109});
      } else if (!dart.test(this.showUnselectedLabels)) {
        text = new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: this.animation, child: text, $creationLocationd_0dea112b090073317d4: C[2114] || CT.C2114});
      } else if (!dart.test(this.showSelectedLabels)) {
        text = new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.0}).animate(this.animation), child: text, $creationLocationd_0dea112b090073317d4: C[2119] || CT.C2119});
      }
      text = new basic.Align.new({alignment: alignment.Alignment.bottomCenter, heightFactor: 1.0, child: new container.Container.new({child: text, $creationLocationd_0dea112b090073317d4: C[2124] || CT.C2124}), $creationLocationd_0dea112b090073317d4: C[2127] || CT.C2127});
      if (this.item.label != null) {
        let mediaQueryData = media_query.MediaQuery.of(context);
        text = new media_query.MediaQuery.new({data: mediaQueryData.copyWith({textScaleFactor: math.min(core.double, 1.0, mediaQueryData.textScaleFactor)}), child: text, $creationLocationd_0dea112b090073317d4: C[2132] || CT.C2132});
      }
      return text;
    }
  };
  (bottom_navigation_bar._Label.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    if (colorTween == null) dart.nullFailed(I[102], 657, 19, "colorTween");
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(I[102], 658, 19, "animation");
    let item = opts && 'item' in opts ? opts.item : null;
    if (item == null) dart.nullFailed(I[102], 659, 19, "item");
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    if (selectedLabelStyle == null) dart.nullFailed(I[102], 660, 19, "selectedLabelStyle");
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    if (unselectedLabelStyle == null) dart.nullFailed(I[102], 661, 19, "unselectedLabelStyle");
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    if (showSelectedLabels == null) dart.nullFailed(I[102], 662, 19, "showSelectedLabels");
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    if (showUnselectedLabels == null) dart.nullFailed(I[102], 663, 19, "showUnselectedLabels");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.colorTween$2] = colorTween;
    this[S$0.animation$9] = animation;
    this[S$0.item$2] = item;
    this[S$0.selectedLabelStyle$2] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$5] = unselectedLabelStyle;
    this[S$0.showSelectedLabels$2] = showSelectedLabels;
    this[S$0.showUnselectedLabels$2] = showUnselectedLabels;
    if (!(colorTween != null)) dart.assertFailed(null, I[102], 664, 15, "colorTween != null");
    if (!(animation != null)) dart.assertFailed(null, I[102], 665, 15, "animation != null");
    if (!(item != null)) dart.assertFailed(null, I[102], 666, 15, "item != null");
    if (!(selectedLabelStyle != null)) dart.assertFailed(null, I[102], 667, 15, "selectedLabelStyle != null");
    if (!(unselectedLabelStyle != null)) dart.assertFailed(null, I[102], 668, 15, "unselectedLabelStyle != null");
    if (!(showSelectedLabels != null)) dart.assertFailed(null, I[102], 669, 15, "showSelectedLabels != null");
    if (!(showUnselectedLabels != null)) dart.assertFailed(null, I[102], 670, 15, "showUnselectedLabels != null");
    bottom_navigation_bar._Label.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._Label.prototype;
  dart.addTypeTests(bottom_navigation_bar._Label);
  dart.addTypeCaches(bottom_navigation_bar._Label);
  dart.setMethodSignature(bottom_navigation_bar._Label, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._Label.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._Label, I[103]);
  dart.setFieldSignature(bottom_navigation_bar._Label, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._Label.__proto__),
    colorTween: dart.finalFieldType(tween.ColorTween),
    animation: dart.finalFieldType(animation.Animation$(core.double)),
    item: dart.finalFieldType(bottom_navigation_bar_item.BottomNavigationBarItem),
    selectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    unselectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    showSelectedLabels: dart.finalFieldType(core.bool),
    showUnselectedLabels: dart.finalFieldType(core.bool)
  }));
  const State_TickerProviderStateMixin$36$2 = class State_TickerProviderStateMixin extends framework.State$(bottom_navigation_bar.BottomNavigationBar) {};
  (State_TickerProviderStateMixin$36$2.new = function() {
    ticker_provider.TickerProviderStateMixin$(bottom_navigation_bar.BottomNavigationBar)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$2.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$2.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$2, ticker_provider.TickerProviderStateMixin$(bottom_navigation_bar.BottomNavigationBar));
  bottom_navigation_bar._BottomNavigationBarState = class _BottomNavigationBarState extends State_TickerProviderStateMixin$36$2 {
    get [S$0._animations]() {
      let t59;
      return dart.test(this[S$0.___BottomNavigationBarState__animations_isSet]) ? (t59 = this[S$0.___BottomNavigationBarState__animations], t59) : dart.throw(new _internal.LateError.fieldNI("_animations"));
    }
    set [S$0._animations](t59) {
      if (t59 == null) dart.nullFailed(I[102], 760, 30, "null");
      this[S$0.___BottomNavigationBarState__animations_isSet] = true;
      this[S$0.___BottomNavigationBarState__animations] = t59;
    }
    [S$0._resetState$1]() {
      for (let controller of this[S$0._controllers])
        controller.dispose();
      for (let circle of this[S$0._circles])
        circle.dispose();
      this[S$0._circles].clear();
      this[S$0._controllers] = T$.ListOfAnimationController().generate(this.widget.items[S.$length], dart.fn(index => {
        let t60;
        if (index == null) dart.nullFailed(I[102], 778, 81, "index");
        t60 = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this});
        return (() => {
          t60.addListener(dart.bind(this, S$0._rebuild$1));
          return t60;
        })();
      }, T$.intToAnimationController()));
      this[S$0._animations] = T$.ListOfCurvedAnimation().generate(this.widget.items[S.$length], dart.fn(index => {
        if (index == null) dart.nullFailed(I[102], 784, 76, "index");
        return new animations.CurvedAnimation.new({parent: this[S$0._controllers][S.$_get](index), curve: curves.Curves.fastOutSlowIn, reverseCurve: curves.Curves.fastOutSlowIn.flipped});
      }, T$.intToCurvedAnimation()));
      this[S$0._controllers][S.$_get](this.widget.currentIndex).value = 1.0;
      this[S$0._backgroundColor$1] = this.widget.items[S.$_get](this.widget.currentIndex).backgroundColor;
    }
    get [S$0._effectiveType]() {
      let t60, t60$;
      t60$ = (t60 = this.widget.type, t60 == null ? bottom_navigation_bar_theme.BottomNavigationBarTheme.of(this.context).type : t60);
      return t60$ == null ? dart.notNull(this.widget.items[S.$length]) <= 3 ? bottom_navigation_bar.BottomNavigationBarType.fixed : bottom_navigation_bar.BottomNavigationBarType.shifting : t60$;
    }
    get [S$0._defaultShowUnselected]() {
      switch (this[S$0._effectiveType]) {
        case C[2034] || CT.C2034:
        {
          return false;
        }
        case C[2033] || CT.C2033:
        {
          return true;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    initState() {
      super.initState();
      this[S$0._resetState$1]();
    }
    [S$0._rebuild$1]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    dispose() {
      for (let controller of this[S$0._controllers])
        controller.dispose();
      for (let circle of this[S$0._circles])
        circle.dispose();
      super.dispose();
    }
    [S$0._evaluateFlex](animation) {
      if (animation == null) dart.nullFailed(I[102], 842, 42, "animation");
      return bottom_navigation_bar._BottomNavigationBarState._flexTween.evaluate(animation);
    }
    [S$0._pushCircle](index) {
      let t60;
      if (index == null) dart.nullFailed(I[102], 844, 24, "index");
      if (this.widget.items[S.$_get](index).backgroundColor != null) {
        this[S$0._circles].add((t60 = new bottom_navigation_bar._Circle.new({state: this, index: index, color: dart.nullCheck(this.widget.items[S.$_get](index).backgroundColor), vsync: this}), (() => {
          t60.controller.addStatusListener(dart.fn(status => {
            if (status == null) dart.nullFailed(I[102], 853, 28, "status");
            switch (status) {
              case C[207] || CT.C207:
              {
                this.setState(dart.fn(() => {
                  let circle = this[S$0._circles].removeFirst();
                  this[S$0._backgroundColor$1] = circle.color;
                  circle.dispose();
                }, T$.VoidTovoid()));
                break;
              }
              case C[204] || CT.C204:
              case C[205] || CT.C205:
              case C[206] || CT.C206:
              {
                break;
              }
              default:
              {
                dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
              }
            }
          }, T$.AnimationStatusTovoid()));
          return t60;
        })()));
      }
    }
    didUpdateWidget(oldWidget) {
      bottom_navigation_bar.BottomNavigationBar.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[102], 874, 44, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this.widget.items[S.$length] != oldWidget.items[S.$length]) {
        this[S$0._resetState$1]();
        return;
      }
      if (this.widget.currentIndex != oldWidget.currentIndex) {
        switch (this[S$0._effectiveType]) {
          case C[2033] || CT.C2033:
          {
            break;
          }
          case C[2034] || CT.C2034:
          {
            this[S$0._pushCircle](this.widget.currentIndex);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        this[S$0._controllers][S.$_get](oldWidget.currentIndex).reverse();
        this[S$0._controllers][S.$_get](this.widget.currentIndex).forward();
      } else {
        if (!dart.equals(this[S$0._backgroundColor$1], this.widget.items[S.$_get](this.widget.currentIndex).backgroundColor)) this[S$0._backgroundColor$1] = this.widget.items[S.$_get](this.widget.currentIndex).backgroundColor;
      }
    }
    static _effectiveTextStyle(textStyle, fontSize) {
      if (fontSize == null) dart.nullFailed(I[102], 901, 69, "fontSize");
      textStyle == null ? textStyle = C[2136] || CT.C2136 : null;
      return textStyle.fontSize == null ? textStyle.copyWith({fontSize: fontSize}) : textStyle;
    }
    [S$0._createTiles]() {
      let t60, t60$, t60$0, t60$1, t60$2, t60$3, t60$4, t60$5, t60$6, t60$7, t60$8, t60$9, t60$10, t60$11, t60$12, t60$13, t60$14, t60$15;
      let localizations = material_localizations.MaterialLocalizations.of(this.context);
      if (!(localizations != null)) dart.assertFailed(null, I[102], 909, 12, "localizations != null");
      let themeData = theme$.Theme.of(this.context);
      let bottomTheme = bottom_navigation_bar_theme.BottomNavigationBarTheme.of(this.context);
      let effectiveSelectedLabelStyle = bottom_navigation_bar._BottomNavigationBarState._effectiveTextStyle((t60 = this.widget.selectedLabelStyle, t60 == null ? bottomTheme.selectedLabelStyle : t60), this.widget.selectedFontSize);
      let effectiveUnselectedLabelStyle = bottom_navigation_bar._BottomNavigationBarState._effectiveTextStyle((t60$ = this.widget.unselectedLabelStyle, t60$ == null ? bottomTheme.unselectedLabelStyle : t60$), this.widget.unselectedFontSize);
      let themeColor = null;
      switch (themeData.brightness) {
        case C[543] || CT.C543:
        {
          themeColor = themeData.primaryColor;
          break;
        }
        case C[544] || CT.C544:
        {
          themeColor = themeData.accentColor;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let colorTween = null;
      switch (this[S$0._effectiveType]) {
        case C[2033] || CT.C2033:
        {
          colorTween = new tween.ColorTween.new({begin: (t60$1 = (t60$0 = this.widget.unselectedItemColor, t60$0 == null ? bottomTheme.unselectedItemColor : t60$0), t60$1 == null ? themeData.unselectedWidgetColor : t60$1), end: (t60$4 = (t60$3 = (t60$2 = this.widget.selectedItemColor, t60$2 == null ? bottomTheme.selectedItemColor : t60$2), t60$3 == null ? this.widget.fixedColor : t60$3), t60$4 == null ? themeColor : t60$4)});
          break;
        }
        case C[2034] || CT.C2034:
        {
          colorTween = new tween.ColorTween.new({begin: (t60$6 = (t60$5 = this.widget.unselectedItemColor, t60$5 == null ? bottomTheme.unselectedItemColor : t60$5), t60$6 == null ? themeData.colorScheme.surface : t60$6), end: (t60$8 = (t60$7 = this.widget.selectedItemColor, t60$7 == null ? bottomTheme.selectedItemColor : t60$7), t60$8 == null ? themeData.colorScheme.surface : t60$8)});
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let effectiveMouseCursor = (t60$9 = this.widget.mouseCursor, t60$9 == null ? mouse_cursor.SystemMouseCursors.click : t60$9);
      let tiles = T$.JSArrayOfWidget().of([]);
      for (let i = 0; i < dart.notNull(this.widget.items[S.$length]); i = i + 1) {
        tiles[S.$add](new bottom_navigation_bar._BottomNavigationTile.new(this[S$0._effectiveType], this.widget.items[S.$_get](i), this[S$0._animations][S.$_get](i), this.widget.iconSize, {selectedIconTheme: (t60$10 = this.widget.selectedIconTheme, t60$10 == null ? bottomTheme.selectedIconTheme : t60$10), unselectedIconTheme: (t60$11 = this.widget.unselectedIconTheme, t60$11 == null ? bottomTheme.unselectedIconTheme : t60$11), selectedLabelStyle: effectiveSelectedLabelStyle, unselectedLabelStyle: effectiveUnselectedLabelStyle, onTap: dart.fn(() => {
            if (this.widget.onTap != null) dart.nullCheck(this.widget.onTap)(i);
          }, T$.VoidTovoid()), colorTween: colorTween, flex: this[S$0._evaluateFlex](this[S$0._animations][S.$_get](i)), selected: i === this.widget.currentIndex, showSelectedLabels: (t60$13 = (t60$12 = this.widget.showSelectedLabels, t60$12 == null ? bottomTheme.showSelectedLabels : t60$12), t60$13 == null ? true : t60$13), showUnselectedLabels: (t60$15 = (t60$14 = this.widget.showUnselectedLabels, t60$14 == null ? bottomTheme.showUnselectedLabels : t60$14), t60$15 == null ? this[S$0._defaultShowUnselected] : t60$15), indexLabel: localizations.tabLabel({tabIndex: i + 1, tabCount: this.widget.items[S.$length]}), mouseCursor: effectiveMouseCursor, $creationLocationd_0dea112b090073317d4: C[2137] || CT.C2137}));
      }
      return tiles;
    }
    [S$0._createContainer](tiles) {
      if (tiles == null) dart.nullFailed(I[102], 988, 40, "tiles");
      return text$.DefaultTextStyle.merge({overflow: paragraph.TextOverflow.ellipsis, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: tiles, $creationLocationd_0dea112b090073317d4: C[2155] || CT.C2155})});
    }
    build(context) {
      let t60, t60$, t60$0;
      if (context == null) dart.nullFailed(I[102], 999, 29, "context");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[102], 1000, 12, "debugCheckHasDirectionality(context)");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[102], 1001, 12, "debugCheckHasMaterialLocalizations(context)");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[102], 1002, 12, "debugCheckHasMediaQuery(context)");
      if (!(overlay$.Overlay.of(context, {debugRequiredFor: this.widget}) != null)) dart.assertFailed(null, I[102], 1003, 12, "Overlay.of(context, debugRequiredFor: widget) != null");
      let bottomTheme = bottom_navigation_bar_theme.BottomNavigationBarTheme.of(context);
      let additionalBottomPadding = math.max(core.double, dart.notNull(media_query.MediaQuery.of(context).padding.bottom) - dart.notNull(this.widget.selectedFontSize) / 2.0, 0.0);
      let backgroundColor = null;
      switch (this[S$0._effectiveType]) {
        case C[2033] || CT.C2033:
        {
          backgroundColor = (t60 = this.widget.backgroundColor, t60 == null ? bottomTheme.backgroundColor : t60);
          break;
        }
        case C[2034] || CT.C2034:
        {
          backgroundColor = this[S$0._backgroundColor$1];
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new basic.Semantics.new({explicitChildNodes: true, child: new material.Material.new({elevation: (t60$0 = (t60$ = this.widget.elevation, t60$ == null ? bottomTheme.elevation : t60$), t60$0 == null ? 8.0 : t60$0), color: backgroundColor, child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minHeight: 56 + additionalBottomPadding}), child: new basic.CustomPaint.new({painter: new bottom_navigation_bar._RadialPainter.new({circles: this[S$0._circles][S$.$toList](), textDirection: basic.Directionality.of(context)}), child: new material.Material.new({type: material.MaterialType.transparency, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: additionalBottomPadding}), child: media_query.MediaQuery.removePadding({context: context, removeBottom: true, child: this[S$0._createContainer](this[S$0._createTiles]()), $creationLocationd_0dea112b090073317d4: C[2159] || CT.C2159}), $creationLocationd_0dea112b090073317d4: C[2164] || CT.C2164}), $creationLocationd_0dea112b090073317d4: C[2168] || CT.C2168}), $creationLocationd_0dea112b090073317d4: C[2172] || CT.C2172}), $creationLocationd_0dea112b090073317d4: C[2176] || CT.C2176}), $creationLocationd_0dea112b090073317d4: C[2180] || CT.C2180}), $creationLocationd_0dea112b090073317d4: C[2185] || CT.C2185});
    }
  };
  (bottom_navigation_bar._BottomNavigationBarState.new = function() {
    this[S$0._controllers] = T$.JSArrayOfAnimationController().of([]);
    this[S$0.___BottomNavigationBarState__animations] = null;
    this[S$0.___BottomNavigationBarState__animations_isSet] = false;
    this[S$0._circles] = new (T$.ListQueueOf_Circle()).new();
    this[S$0._backgroundColor$1] = null;
    bottom_navigation_bar._BottomNavigationBarState.__proto__.new.call(this);
    ;
  }).prototype = bottom_navigation_bar._BottomNavigationBarState.prototype;
  dart.addTypeTests(bottom_navigation_bar._BottomNavigationBarState);
  dart.addTypeCaches(bottom_navigation_bar._BottomNavigationBarState);
  dart.setMethodSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._resetState$1]: dart.fnType(dart.void, []),
    [S$0._rebuild$1]: dart.fnType(dart.void, []),
    [S$0._evaluateFlex]: dart.fnType(core.double, [animation.Animation$(core.double)]),
    [S$0._pushCircle]: dart.fnType(dart.void, [core.int]),
    [S$0._createTiles]: dart.fnType(core.List$(framework.Widget), []),
    [S$0._createContainer]: dart.fnType(framework.Widget, [core.List$(framework.Widget)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._animations]: core.List$(animations.CurvedAnimation),
    [S$0._effectiveType]: bottom_navigation_bar.BottomNavigationBarType,
    [S$0._defaultShowUnselected]: core.bool
  }));
  dart.setSetterSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getSetters(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._animations]: core.List$(animations.CurvedAnimation)
  }));
  dart.setLibraryUri(bottom_navigation_bar._BottomNavigationBarState, I[103]);
  dart.setFieldSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._controllers]: dart.fieldType(core.List$(animation_controller.AnimationController)),
    [S$0.___BottomNavigationBarState__animations]: dart.fieldType(dart.nullable(core.List$(animations.CurvedAnimation))),
    [S$0.___BottomNavigationBarState__animations_isSet]: dart.fieldType(core.bool),
    [S$0._circles]: dart.finalFieldType(collection.Queue$(bottom_navigation_bar._Circle)),
    [S$0._backgroundColor$1]: dart.fieldType(dart.nullable(ui.Color))
  }));
  dart.defineLazy(bottom_navigation_bar._BottomNavigationBarState, {
    /*bottom_navigation_bar._BottomNavigationBarState._flexTween*/get _flexTween() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 1.5});
    }
  }, false);
  bottom_navigation_bar._Circle = class _Circle extends core.Object {
    get controller() {
      let t60;
      return dart.test(this[S$0.___Circle_controller_isSet]) ? (t60 = this[S$0.___Circle_controller], t60) : dart.throw(new _internal.LateError.fieldNI("controller"));
    }
    set controller(t60) {
      if (t60 == null) dart.nullFailed(I[102], 1072, 28, "null");
      this[S$0.___Circle_controller_isSet] = true;
      this[S$0.___Circle_controller] = t60;
    }
    get animation() {
      let t61;
      return dart.test(this[S$0.___Circle_animation_isSet]) ? (t61 = this[S$0.___Circle_animation], t61) : dart.throw(new _internal.LateError.fieldNI("animation"));
    }
    set animation(t61) {
      if (t61 == null) dart.nullFailed(I[102], 1073, 24, "null");
      this[S$0.___Circle_animation_isSet] = true;
      this[S$0.___Circle_animation] = t61;
    }
    get horizontalLeadingOffset() {
      const weightSum = animations => {
        if (animations == null) dart.nullFailed(I[102], 1076, 50, "animations");
        return animations[S$.$map](core.double, dart.bind(this.state, S$0._evaluateFlex))[S$0.$fold](core.double, 0.0, dart.fn((sum, value) => {
          if (sum == null) dart.nullFailed(I[102], 1079, 84, "sum");
          if (value == null) dart.nullFailed(I[102], 1079, 96, "value");
          return dart.notNull(sum) + dart.notNull(value);
        }, T$.doubleAnddoubleTodouble()));
      };
      dart.fn(weightSum, T$.IterableOfAnimationOfdoubleTodouble());
      let allWeights = weightSum(this.state[S$0._animations]);
      let leadingWeights = weightSum(this.state[S$0._animations][S$0.$sublist](0, this.index));
      return (dart.notNull(leadingWeights) + dart.notNull(this.state[S$0._evaluateFlex](this.state[S$0._animations][S.$_get](this.index))) / 2.0) / dart.notNull(allWeights);
    }
    dispose() {
      this.controller.dispose();
    }
  };
  (bottom_navigation_bar._Circle.new = function(opts) {
    let state = opts && 'state' in opts ? opts.state : null;
    if (state == null) dart.nullFailed(I[102], 1051, 19, "state");
    let index = opts && 'index' in opts ? opts.index : null;
    if (index == null) dart.nullFailed(I[102], 1052, 19, "index");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[102], 1053, 19, "color");
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(I[102], 1054, 29, "vsync");
    this[S$0.___Circle_controller] = null;
    this[S$0.___Circle_controller_isSet] = false;
    this[S$0.___Circle_animation] = null;
    this[S$0.___Circle_animation_isSet] = false;
    this.state = state;
    this.index = index;
    this.color = color;
    if (!(state != null)) dart.assertFailed(null, I[102], 1055, 15, "state != null");
    if (!(index != null)) dart.assertFailed(null, I[102], 1056, 15, "index != null");
    if (!(color != null)) dart.assertFailed(null, I[102], 1057, 15, "color != null");
    this.controller = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: vsync});
    this.animation = new animations.CurvedAnimation.new({parent: this.controller, curve: curves.Curves.fastOutSlowIn});
    this.controller.forward();
  }).prototype = bottom_navigation_bar._Circle.prototype;
  dart.addTypeTests(bottom_navigation_bar._Circle);
  dart.addTypeCaches(bottom_navigation_bar._Circle);
  dart.setMethodSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._Circle.__proto__),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar._Circle.__proto__),
    controller: animation_controller.AnimationController,
    animation: animations.CurvedAnimation,
    horizontalLeadingOffset: core.double
  }));
  dart.setSetterSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getSetters(bottom_navigation_bar._Circle.__proto__),
    controller: animation_controller.AnimationController,
    animation: animations.CurvedAnimation
  }));
  dart.setLibraryUri(bottom_navigation_bar._Circle, I[103]);
  dart.setFieldSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._Circle.__proto__),
    state: dart.finalFieldType(bottom_navigation_bar._BottomNavigationBarState),
    index: dart.finalFieldType(core.int),
    color: dart.finalFieldType(ui.Color),
    [S$0.___Circle_controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$0.___Circle_controller_isSet]: dart.fieldType(core.bool),
    [S$0.___Circle_animation]: dart.fieldType(dart.nullable(animations.CurvedAnimation)),
    [S$0.___Circle_animation_isSet]: dart.fieldType(core.bool)
  }));
  bottom_navigation_bar._RadialPainter = class _RadialPainter extends custom_paint.CustomPainter {
    static _maxRadius(center, size) {
      if (center == null) dart.nullFailed(I[102], 1110, 35, "center");
      if (size == null) dart.nullFailed(I[102], 1110, 48, "size");
      let maxX = math.max(core.double, center.dx, dart.notNull(size.width) - dart.notNull(center.dx));
      let maxY = math.max(core.double, center.dy, dart.notNull(size.height) - dart.notNull(center.dy));
      return math.sqrt(maxX * maxX + maxY * maxY);
    }
    shouldRepaint(oldPainter) {
      bottom_navigation_bar._RadialPainter.as(oldPainter);
      if (oldPainter == null) dart.nullFailed(I[102], 1117, 37, "oldPainter");
      if (this.textDirection != oldPainter.textDirection) return true;
      if (dart.equals(this.circles, oldPainter.circles)) return false;
      if (this.circles[S.$length] != oldPainter.circles[S.$length]) return true;
      for (let i = 0; i < dart.notNull(this.circles[S.$length]); i = i + 1)
        if (!dart.equals(this.circles[S.$_get](i), oldPainter.circles[S.$_get](i))) return true;
      return false;
    }
    paint(canvas, size) {
      let t62;
      if (canvas == null) dart.nullFailed(I[102], 1131, 21, "canvas");
      if (size == null) dart.nullFailed(I[102], 1131, 34, "size");
      for (let circle of this.circles) {
        let paint = (t62 = ui.Paint.new(), (() => {
          t62.color = circle.color;
          return t62;
        })());
        let rect = new ui.Rect.fromLTWH(0.0, 0.0, size.width, size.height);
        canvas.clipRect(rect);
        let leftFraction = null;
        switch (this.textDirection) {
          case C[328] || CT.C328:
          {
            leftFraction = 1.0 - dart.notNull(circle.horizontalLeadingOffset);
            break;
          }
          case C[329] || CT.C329:
          {
            leftFraction = circle.horizontalLeadingOffset;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        let center = new ui.Offset.new(dart.notNull(leftFraction) * dart.notNull(size.width), dart.notNull(size.height) / 2.0);
        let radiusTween = new (T$.TweenOfdouble()).new({begin: 0.0, end: bottom_navigation_bar._RadialPainter._maxRadius(center, size)});
        canvas.drawCircle(center, radiusTween.transform(circle.animation.value), paint);
      }
    }
  };
  (bottom_navigation_bar._RadialPainter.new = function(opts) {
    let circles = opts && 'circles' in opts ? opts.circles : null;
    if (circles == null) dart.nullFailed(I[102], 1098, 19, "circles");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[102], 1099, 19, "textDirection");
    this.circles = circles;
    this.textDirection = textDirection;
    if (!(circles != null)) dart.assertFailed(null, I[102], 1100, 15, "circles != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[102], 1101, 15, "textDirection != null");
    bottom_navigation_bar._RadialPainter.__proto__.new.call(this);
    ;
  }).prototype = bottom_navigation_bar._RadialPainter.prototype;
  dart.addTypeTests(bottom_navigation_bar._RadialPainter);
  dart.addTypeCaches(bottom_navigation_bar._RadialPainter);
  dart.setMethodSignature(bottom_navigation_bar._RadialPainter, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._RadialPainter.__proto__),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size])
  }));
  dart.setLibraryUri(bottom_navigation_bar._RadialPainter, I[103]);
  dart.setFieldSignature(bottom_navigation_bar._RadialPainter, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._RadialPainter.__proto__),
    circles: dart.finalFieldType(core.List$(bottom_navigation_bar._Circle)),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  const Object_Diagnosticable$36$22 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$22.new = function() {
  }).prototype = Object_Diagnosticable$36$22.prototype;
  dart.applyMixin(Object_Diagnosticable$36$22, diagnostics.Diagnosticable);
  bottom_navigation_bar_theme.BottomNavigationBarThemeData = class BottomNavigationBarThemeData extends Object_Diagnosticable$36$22 {
    get backgroundColor() {
      return this[S$0.backgroundColor$14];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$0.elevation$19];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$5];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$5];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedItemColor() {
      return this[S$0.selectedItemColor$1];
    }
    set selectedItemColor(value) {
      super.selectedItemColor = value;
    }
    get unselectedItemColor() {
      return this[S$0.unselectedItemColor$1];
    }
    set unselectedItemColor(value) {
      super.unselectedItemColor = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle$3];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$6];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels$3];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels$3];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get type() {
      return this[S$0.type$2];
    }
    set type(value) {
      super.type = value;
    }
    copyWith(opts) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7, t62$8;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
      let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
      let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
      let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
      let type = opts && 'type' in opts ? opts.type : null;
      return new bottom_navigation_bar_theme.BottomNavigationBarThemeData.new({backgroundColor: (t62 = backgroundColor, t62 == null ? this.backgroundColor : t62), elevation: (t62$ = elevation, t62$ == null ? this.elevation : t62$), selectedIconTheme: (t62$0 = selectedIconTheme, t62$0 == null ? this.selectedIconTheme : t62$0), unselectedIconTheme: (t62$1 = unselectedIconTheme, t62$1 == null ? this.unselectedIconTheme : t62$1), selectedItemColor: (t62$2 = selectedItemColor, t62$2 == null ? this.selectedItemColor : t62$2), unselectedItemColor: (t62$3 = unselectedItemColor, t62$3 == null ? this.unselectedItemColor : t62$3), selectedLabelStyle: (t62$4 = selectedLabelStyle, t62$4 == null ? this.selectedLabelStyle : t62$4), unselectedLabelStyle: (t62$5 = unselectedLabelStyle, t62$5 == null ? this.unselectedLabelStyle : t62$5), showSelectedLabels: (t62$6 = showSelectedLabels, t62$6 == null ? this.showSelectedLabels : t62$6), showUnselectedLabels: (t62$7 = showUnselectedLabels, t62$7 == null ? this.showUnselectedLabels : t62$7), type: (t62$8 = type, t62$8 == null ? this.type : t62$8)});
    }
    static lerp(a, b, t) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7, t62$8, t62$9, t62$10, t62$11, t62$12, t62$13, t62$14, t62$15, t62$16, t62$17, t62$18, t62$19;
      if (t == null) dart.nullFailed(I[104], 152, 117, "t");
      if (!(t != null)) dart.assertFailed(null, I[104], 153, 12, "t != null");
      return new bottom_navigation_bar_theme.BottomNavigationBarThemeData.new({backgroundColor: ui.Color.lerp((t62 = a, t62 == null ? null : t62.backgroundColor), (t62$ = b, t62$ == null ? null : t62$.backgroundColor), t), elevation: ui.lerpDouble((t62$0 = a, t62$0 == null ? null : t62$0.elevation), (t62$1 = b, t62$1 == null ? null : t62$1.elevation), t), selectedIconTheme: icon_theme_data.IconThemeData.lerp((t62$2 = a, t62$2 == null ? null : t62$2.selectedIconTheme), (t62$3 = b, t62$3 == null ? null : t62$3.selectedIconTheme), t), unselectedIconTheme: icon_theme_data.IconThemeData.lerp((t62$4 = a, t62$4 == null ? null : t62$4.unselectedIconTheme), (t62$5 = b, t62$5 == null ? null : t62$5.unselectedIconTheme), t), selectedItemColor: ui.Color.lerp((t62$6 = a, t62$6 == null ? null : t62$6.selectedItemColor), (t62$7 = b, t62$7 == null ? null : t62$7.selectedItemColor), t), unselectedItemColor: ui.Color.lerp((t62$8 = a, t62$8 == null ? null : t62$8.unselectedItemColor), (t62$9 = b, t62$9 == null ? null : t62$9.unselectedItemColor), t), selectedLabelStyle: text_style.TextStyle.lerp((t62$10 = a, t62$10 == null ? null : t62$10.selectedLabelStyle), (t62$11 = b, t62$11 == null ? null : t62$11.selectedLabelStyle), t), unselectedLabelStyle: text_style.TextStyle.lerp((t62$12 = a, t62$12 == null ? null : t62$12.unselectedLabelStyle), (t62$13 = b, t62$13 == null ? null : t62$13.unselectedLabelStyle), t), showSelectedLabels: dart.notNull(t) < 0.5 ? (t62$14 = a, t62$14 == null ? null : t62$14.showSelectedLabels) : (t62$15 = b, t62$15 == null ? null : t62$15.showSelectedLabels), showUnselectedLabels: dart.notNull(t) < 0.5 ? (t62$16 = a, t62$16 == null ? null : t62$16.showUnselectedLabels) : (t62$17 = b, t62$17 == null ? null : t62$17.showUnselectedLabels), type: dart.notNull(t) < 0.5 ? (t62$18 = a, t62$18 == null ? null : t62$18.type) : (t62$19 = b, t62$19 == null ? null : t62$19.type)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.elevation, this.selectedIconTheme, this.unselectedIconTheme, this.selectedItemColor, this.unselectedItemColor, this.selectedLabelStyle, this.unselectedLabelStyle, this.showSelectedLabels, this.showUnselectedLabels, this.type);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return bottom_navigation_bar_theme.BottomNavigationBarThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.selectedIconTheme, this.selectedIconTheme) && dart.equals(other.unselectedIconTheme, this.unselectedIconTheme) && dart.equals(other.selectedItemColor, this.selectedItemColor) && dart.equals(other.unselectedItemColor, this.unselectedItemColor) && dart.equals(other.selectedLabelStyle, this.selectedLabelStyle) && dart.equals(other.unselectedLabelStyle, this.unselectedLabelStyle) && other.showSelectedLabels == this.showSelectedLabels && other.showUnselectedLabels == this.showUnselectedLabels && other.type == this.type;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[104], 207, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("selectedIconTheme", this.selectedIconTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("unselectedIconTheme", this.unselectedIconTheme, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedItemColor", this.selectedItemColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("unselectedItemColor", this.unselectedItemColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("selectedLabelStyle", this.selectedLabelStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("unselectedLabelStyle", this.unselectedLabelStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("showSelectedLabels", this.showSelectedLabels, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("showUnselectedLabels", this.showUnselectedLabels, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomNavigationBarType()).new("type", this.type, {defaultValue: null}));
    }
  };
  (bottom_navigation_bar_theme.BottomNavigationBarThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
    let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let type = opts && 'type' in opts ? opts.type : null;
    this[S$0.backgroundColor$14] = backgroundColor;
    this[S$0.elevation$19] = elevation;
    this[S$0.selectedIconTheme$5] = selectedIconTheme;
    this[S$0.unselectedIconTheme$5] = unselectedIconTheme;
    this[S$0.selectedItemColor$1] = selectedItemColor;
    this[S$0.unselectedItemColor$1] = unselectedItemColor;
    this[S$0.selectedLabelStyle$3] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$6] = unselectedLabelStyle;
    this[S$0.showSelectedLabels$3] = showSelectedLabels;
    this[S$0.showUnselectedLabels$3] = showUnselectedLabels;
    this[S$0.type$2] = type;
    ;
  }).prototype = bottom_navigation_bar_theme.BottomNavigationBarThemeData.prototype;
  dart.addTypeTests(bottom_navigation_bar_theme.BottomNavigationBarThemeData);
  dart.addTypeCaches(bottom_navigation_bar_theme.BottomNavigationBarThemeData);
  dart.setMethodSignature(bottom_navigation_bar_theme.BottomNavigationBarThemeData, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar_theme.BottomNavigationBarThemeData.__proto__),
    copyWith: dart.fnType(bottom_navigation_bar_theme.BottomNavigationBarThemeData, [], {backgroundColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), selectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), selectedItemColor: dart.nullable(ui.Color), selectedLabelStyle: dart.nullable(text_style.TextStyle), showSelectedLabels: dart.nullable(core.bool), showUnselectedLabels: dart.nullable(core.bool), type: dart.nullable(bottom_navigation_bar.BottomNavigationBarType), unselectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), unselectedItemColor: dart.nullable(ui.Color), unselectedLabelStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(bottom_navigation_bar_theme.BottomNavigationBarThemeData, I[105]);
  dart.setFieldSignature(bottom_navigation_bar_theme.BottomNavigationBarThemeData, () => ({
    __proto__: dart.getFields(bottom_navigation_bar_theme.BottomNavigationBarThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    showSelectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    showUnselectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    type: dart.finalFieldType(dart.nullable(bottom_navigation_bar.BottomNavigationBarType))
  }));
  dart.defineExtensionMethods(bottom_navigation_bar_theme.BottomNavigationBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(bottom_navigation_bar_theme.BottomNavigationBarThemeData, ['hashCode']);
  bottom_navigation_bar_theme.BottomNavigationBarTheme = class BottomNavigationBarTheme extends framework.InheritedWidget {
    get data() {
      return this[S$0.data$17];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t62, t62$;
      if (context == null) dart.nullFailed(I[104], 262, 55, "context");
      let bottomNavTheme = context.dependOnInheritedWidgetOfExactType(bottom_navigation_bar_theme.BottomNavigationBarTheme);
      t62$ = (t62 = bottomNavTheme, t62 == null ? null : t62.data);
      return t62$ == null ? theme$.Theme.of(context).bottomNavigationBarTheme : t62$;
    }
    updateShouldNotify(oldWidget) {
      bottom_navigation_bar_theme.BottomNavigationBarTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[104], 268, 52, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (bottom_navigation_bar_theme.BottomNavigationBarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[104], 245, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[104], 246, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$17] = data;
    if (!(data != null)) dart.assertFailed(null, I[104], 247, 15, "data != null");
    bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar_theme.BottomNavigationBarTheme.prototype;
  dart.addTypeTests(bottom_navigation_bar_theme.BottomNavigationBarTheme);
  dart.addTypeCaches(bottom_navigation_bar_theme.BottomNavigationBarTheme);
  dart.setMethodSignature(bottom_navigation_bar_theme.BottomNavigationBarTheme, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(bottom_navigation_bar_theme.BottomNavigationBarTheme, I[105]);
  dart.setFieldSignature(bottom_navigation_bar_theme.BottomNavigationBarTheme, () => ({
    __proto__: dart.getFields(bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__),
    data: dart.finalFieldType(bottom_navigation_bar_theme.BottomNavigationBarThemeData)
  }));
  const Object_Diagnosticable$36$23 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$23.new = function() {
  }).prototype = Object_Diagnosticable$36$23.prototype;
  dart.applyMixin(Object_Diagnosticable$36$23, diagnostics.Diagnosticable);
  bottom_app_bar_theme.BottomAppBarTheme = class BottomAppBarTheme extends Object_Diagnosticable$36$23 {
    get color() {
      return this[S$0.color$12];
    }
    set color(value) {
      super.color = value;
    }
    get elevation() {
      return this[S$0.elevation$20];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$0.shape$18];
    }
    set shape(value) {
      super.shape = value;
    }
    copyWith(opts) {
      let t62, t62$, t62$0;
      let color = opts && 'color' in opts ? opts.color : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new bottom_app_bar_theme.BottomAppBarTheme.new({color: (t62 = color, t62 == null ? this.color : t62), elevation: (t62$ = elevation, t62$ == null ? this.elevation : t62$), shape: (t62$0 = shape, t62$0 == null ? this.shape : t62$0)});
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[106], 63, 44, "context");
      return theme$.Theme.of(context).bottomAppBarTheme;
    }
    static lerp(a, b, t) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3;
      if (t == null) dart.nullFailed(I[106], 72, 84, "t");
      if (!(t != null)) dart.assertFailed(null, I[106], 73, 12, "t != null");
      return new bottom_app_bar_theme.BottomAppBarTheme.new({color: ui.Color.lerp((t62 = a, t62 == null ? null : t62.color), (t62$ = b, t62$ == null ? null : t62$.color), t), elevation: ui.lerpDouble((t62$0 = a, t62$0 == null ? null : t62$0.elevation), (t62$1 = b, t62$1 == null ? null : t62$1.elevation), t), shape: dart.notNull(t) < 0.5 ? (t62$2 = a, t62$2 == null ? null : t62$2.shape) : (t62$3 = b, t62$3 == null ? null : t62$3.shape)});
    }
    get hashCode() {
      return ui.hashValues(this.color, this.elevation, this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return bottom_app_bar_theme.BottomAppBarTheme.is(other) && dart.equals(other.color, this.color) && other.elevation == this.elevation && dart.equals(other.shape, this.shape);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[106], 103, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfNotchedShape()).new("shape", this.shape, {defaultValue: null}));
    }
  };
  (bottom_app_bar_theme.BottomAppBarTheme.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    this[S$0.color$12] = color;
    this[S$0.elevation$20] = elevation;
    this[S$0.shape$18] = shape;
    ;
  }).prototype = bottom_app_bar_theme.BottomAppBarTheme.prototype;
  dart.addTypeTests(bottom_app_bar_theme.BottomAppBarTheme);
  dart.addTypeCaches(bottom_app_bar_theme.BottomAppBarTheme);
  dart.setMethodSignature(bottom_app_bar_theme.BottomAppBarTheme, () => ({
    __proto__: dart.getMethods(bottom_app_bar_theme.BottomAppBarTheme.__proto__),
    copyWith: dart.fnType(bottom_app_bar_theme.BottomAppBarTheme, [], {color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), shape: dart.nullable(notched_shapes.NotchedShape)}, {})
  }));
  dart.setLibraryUri(bottom_app_bar_theme.BottomAppBarTheme, I[107]);
  dart.setFieldSignature(bottom_app_bar_theme.BottomAppBarTheme, () => ({
    __proto__: dart.getFields(bottom_app_bar_theme.BottomAppBarTheme.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(notched_shapes.NotchedShape))
  }));
  dart.defineExtensionMethods(bottom_app_bar_theme.BottomAppBarTheme, ['_equals']);
  dart.defineExtensionAccessors(bottom_app_bar_theme.BottomAppBarTheme, ['hashCode']);
  const Object_Diagnosticable$36$24 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$24.new = function() {
  }).prototype = Object_Diagnosticable$36$24.prototype;
  dart.applyMixin(Object_Diagnosticable$36$24, diagnostics.Diagnosticable);
  banner_theme.MaterialBannerThemeData = class MaterialBannerThemeData extends Object_Diagnosticable$36$24 {
    get backgroundColor() {
      return this[S$0.backgroundColor$15];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get contentTextStyle() {
      return this[S$0.contentTextStyle$3];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get padding() {
      return this[S$0.padding$12];
    }
    set padding(value) {
      super.padding = value;
    }
    get leadingPadding() {
      return this[S$0.leadingPadding];
    }
    set leadingPadding(value) {
      super.leadingPadding = value;
    }
    copyWith(opts) {
      let t62, t62$, t62$0, t62$1;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
      return new banner_theme.MaterialBannerThemeData.new({backgroundColor: (t62 = backgroundColor, t62 == null ? this.backgroundColor : t62), contentTextStyle: (t62$ = contentTextStyle, t62$ == null ? this.contentTextStyle : t62$), padding: (t62$0 = padding, t62$0 == null ? this.padding : t62$0), leadingPadding: (t62$1 = leadingPadding, t62$1 == null ? this.leadingPadding : t62$1)});
    }
    static lerp(a, b, t) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5;
      if (t == null) dart.nullFailed(I[108], 72, 102, "t");
      if (!(t != null)) dart.assertFailed(null, I[108], 73, 12, "t != null");
      return new banner_theme.MaterialBannerThemeData.new({backgroundColor: ui.Color.lerp((t62 = a, t62 == null ? null : t62.backgroundColor), (t62$ = b, t62$ == null ? null : t62$.backgroundColor), t), contentTextStyle: text_style.TextStyle.lerp((t62$0 = a, t62$0 == null ? null : t62$0.contentTextStyle), (t62$1 = b, t62$1 == null ? null : t62$1.contentTextStyle), t), padding: edge_insets.EdgeInsetsGeometry.lerp((t62$2 = a, t62$2 == null ? null : t62$2.padding), (t62$3 = b, t62$3 == null ? null : t62$3.padding), t), leadingPadding: edge_insets.EdgeInsetsGeometry.lerp((t62$4 = a, t62$4 == null ? null : t62$4.leadingPadding), (t62$5 = b, t62$5 == null ? null : t62$5.leadingPadding), t)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.contentTextStyle, this.padding, this.leadingPadding);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return banner_theme.MaterialBannerThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.contentTextStyle, this.contentTextStyle) && dart.equals(other.padding, this.padding) && dart.equals(other.leadingPadding, this.leadingPadding);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[108], 106, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("leadingPadding", this.leadingPadding, {defaultValue: null}));
    }
  };
  (banner_theme.MaterialBannerThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
    this[S$0.backgroundColor$15] = backgroundColor;
    this[S$0.contentTextStyle$3] = contentTextStyle;
    this[S$0.padding$12] = padding;
    this[S$0.leadingPadding] = leadingPadding;
    ;
  }).prototype = banner_theme.MaterialBannerThemeData.prototype;
  dart.addTypeTests(banner_theme.MaterialBannerThemeData);
  dart.addTypeCaches(banner_theme.MaterialBannerThemeData);
  dart.setMethodSignature(banner_theme.MaterialBannerThemeData, () => ({
    __proto__: dart.getMethods(banner_theme.MaterialBannerThemeData.__proto__),
    copyWith: dart.fnType(banner_theme.MaterialBannerThemeData, [], {backgroundColor: dart.nullable(ui.Color), contentTextStyle: dart.nullable(text_style.TextStyle), leadingPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), padding: dart.nullable(edge_insets.EdgeInsetsGeometry)}, {})
  }));
  dart.setLibraryUri(banner_theme.MaterialBannerThemeData, I[109]);
  dart.setFieldSignature(banner_theme.MaterialBannerThemeData, () => ({
    __proto__: dart.getFields(banner_theme.MaterialBannerThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    leadingPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry))
  }));
  dart.defineExtensionMethods(banner_theme.MaterialBannerThemeData, ['_equals']);
  dart.defineExtensionAccessors(banner_theme.MaterialBannerThemeData, ['hashCode']);
  banner_theme.MaterialBannerTheme = class MaterialBannerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$0.data$18];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t62, t62$;
      if (context == null) dart.nullFailed(I[108], 143, 50, "context");
      let bannerTheme = context.dependOnInheritedWidgetOfExactType(banner_theme.MaterialBannerTheme);
      t62$ = (t62 = bannerTheme, t62 == null ? null : t62.data);
      return t62$ == null ? theme$.Theme.of(context).bannerTheme : t62$;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[108], 149, 28, "context");
      if (child == null) dart.nullFailed(I[108], 149, 44, "child");
      return new banner_theme.MaterialBannerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[2189] || CT.C2189});
    }
    updateShouldNotify(oldWidget) {
      banner_theme.MaterialBannerTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[108], 154, 47, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (banner_theme.MaterialBannerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[108], 126, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$18] = data;
    banner_theme.MaterialBannerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = banner_theme.MaterialBannerTheme.prototype;
  dart.addTypeTests(banner_theme.MaterialBannerTheme);
  dart.addTypeCaches(banner_theme.MaterialBannerTheme);
  dart.setMethodSignature(banner_theme.MaterialBannerTheme, () => ({
    __proto__: dart.getMethods(banner_theme.MaterialBannerTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(banner_theme.MaterialBannerTheme, I[109]);
  dart.setFieldSignature(banner_theme.MaterialBannerTheme, () => ({
    __proto__: dart.getFields(banner_theme.MaterialBannerTheme.__proto__),
    data: dart.finalFieldType(dart.nullable(banner_theme.MaterialBannerThemeData))
  }));
  theme_data.MaterialTapTargetSize = class MaterialTapTargetSize extends core.Object {
    toString() {
      return this[S._name$2];
    }
  };
  (theme_data.MaterialTapTargetSize.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[110], 95, 6, "index");
    if (_name == null) dart.nullFailed(I[110], 95, 6, "_name");
    this.index = index;
    this[S._name$2] = _name;
    ;
  }).prototype = theme_data.MaterialTapTargetSize.prototype;
  dart.addTypeTests(theme_data.MaterialTapTargetSize);
  dart.addTypeCaches(theme_data.MaterialTapTargetSize);
  dart.setLibraryUri(theme_data.MaterialTapTargetSize, I[111]);
  dart.setFieldSignature(theme_data.MaterialTapTargetSize, () => ({
    __proto__: dart.getFields(theme_data.MaterialTapTargetSize.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$2]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(theme_data.MaterialTapTargetSize, ['toString']);
  theme_data.MaterialTapTargetSize.padded = C[138] || CT.C138;
  theme_data.MaterialTapTargetSize.shrinkWrap = C[139] || CT.C139;
  theme_data.MaterialTapTargetSize.values = C[2193] || CT.C2193;
  const Object_Diagnosticable$36$25 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$25.new = function() {
  }).prototype = Object_Diagnosticable$36$25.prototype;
  dart.applyMixin(Object_Diagnosticable$36$25, diagnostics.Diagnosticable);
  theme_data.ThemeData = class ThemeData extends Object_Diagnosticable$36$25 {
    get visualDensity() {
      return this[S$0.visualDensity$10];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get primaryColor() {
      return this[S$0.primaryColor];
    }
    set primaryColor(value) {
      super.primaryColor = value;
    }
    get primaryColorBrightness() {
      return this[S$0.primaryColorBrightness];
    }
    set primaryColorBrightness(value) {
      super.primaryColorBrightness = value;
    }
    get primaryColorLight() {
      return this[S$0.primaryColorLight];
    }
    set primaryColorLight(value) {
      super.primaryColorLight = value;
    }
    get primaryColorDark() {
      return this[S$0.primaryColorDark];
    }
    set primaryColorDark(value) {
      super.primaryColorDark = value;
    }
    get canvasColor() {
      return this[S$0.canvasColor];
    }
    set canvasColor(value) {
      super.canvasColor = value;
    }
    get shadowColor() {
      return this[S$0.shadowColor$3];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get accentColor() {
      return this[S$0.accentColor];
    }
    set accentColor(value) {
      super.accentColor = value;
    }
    get accentColorBrightness() {
      return this[S$0.accentColorBrightness];
    }
    set accentColorBrightness(value) {
      super.accentColorBrightness = value;
    }
    get scaffoldBackgroundColor() {
      return this[S$0.scaffoldBackgroundColor];
    }
    set scaffoldBackgroundColor(value) {
      super.scaffoldBackgroundColor = value;
    }
    get bottomAppBarColor() {
      return this[S$0.bottomAppBarColor];
    }
    set bottomAppBarColor(value) {
      super.bottomAppBarColor = value;
    }
    get cardColor() {
      return this[S$0.cardColor];
    }
    set cardColor(value) {
      super.cardColor = value;
    }
    get dividerColor() {
      return this[S$0.dividerColor];
    }
    set dividerColor(value) {
      super.dividerColor = value;
    }
    get focusColor() {
      return this[S$0.focusColor$11];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$0.hoverColor$12];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$0.highlightColor$7];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[S$0.splashColor$8];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[S$0.splashFactory$2];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get selectedRowColor() {
      return this[S$0.selectedRowColor];
    }
    set selectedRowColor(value) {
      super.selectedRowColor = value;
    }
    get unselectedWidgetColor() {
      return this[S$0.unselectedWidgetColor];
    }
    set unselectedWidgetColor(value) {
      super.unselectedWidgetColor = value;
    }
    get disabledColor() {
      return this[S$0.disabledColor$4];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get buttonTheme() {
      return this[S$0.buttonTheme];
    }
    set buttonTheme(value) {
      super.buttonTheme = value;
    }
    get toggleButtonsTheme() {
      return this[S$0.toggleButtonsTheme];
    }
    set toggleButtonsTheme(value) {
      super.toggleButtonsTheme = value;
    }
    get buttonColor() {
      return this[S$0.buttonColor];
    }
    set buttonColor(value) {
      super.buttonColor = value;
    }
    get secondaryHeaderColor() {
      return this[S$0.secondaryHeaderColor];
    }
    set secondaryHeaderColor(value) {
      super.secondaryHeaderColor = value;
    }
    get textSelectionColor() {
      return this[S$0.textSelectionColor];
    }
    set textSelectionColor(value) {
      super.textSelectionColor = value;
    }
    get cursorColor() {
      return this[S$0.cursorColor$1];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get textSelectionHandleColor() {
      return this[S$0.textSelectionHandleColor];
    }
    set textSelectionHandleColor(value) {
      super.textSelectionHandleColor = value;
    }
    get backgroundColor() {
      return this[S$0.backgroundColor$16];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get dialogBackgroundColor() {
      return this[S$0.dialogBackgroundColor];
    }
    set dialogBackgroundColor(value) {
      super.dialogBackgroundColor = value;
    }
    get indicatorColor() {
      return this[S$0.indicatorColor$1];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get hintColor() {
      return this[S$0.hintColor];
    }
    set hintColor(value) {
      super.hintColor = value;
    }
    get errorColor() {
      return this[S$0.errorColor];
    }
    set errorColor(value) {
      super.errorColor = value;
    }
    get toggleableActiveColor() {
      return this[S$0.toggleableActiveColor];
    }
    set toggleableActiveColor(value) {
      super.toggleableActiveColor = value;
    }
    get textTheme() {
      return this[S$0.textTheme$2];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primaryTextTheme() {
      return this[S$0.primaryTextTheme];
    }
    set primaryTextTheme(value) {
      super.primaryTextTheme = value;
    }
    get accentTextTheme() {
      return this[S$0.accentTextTheme];
    }
    set accentTextTheme(value) {
      super.accentTextTheme = value;
    }
    get inputDecorationTheme() {
      return this[S$0.inputDecorationTheme$1];
    }
    set inputDecorationTheme(value) {
      super.inputDecorationTheme = value;
    }
    get iconTheme() {
      return this[S$0.iconTheme];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get primaryIconTheme() {
      return this[S$0.primaryIconTheme];
    }
    set primaryIconTheme(value) {
      super.primaryIconTheme = value;
    }
    get accentIconTheme() {
      return this[S$0.accentIconTheme];
    }
    set accentIconTheme(value) {
      super.accentIconTheme = value;
    }
    get sliderTheme() {
      return this[S$0.sliderTheme];
    }
    set sliderTheme(value) {
      super.sliderTheme = value;
    }
    get tabBarTheme() {
      return this[S$0.tabBarTheme];
    }
    set tabBarTheme(value) {
      super.tabBarTheme = value;
    }
    get tooltipTheme() {
      return this[S$0.tooltipTheme];
    }
    set tooltipTheme(value) {
      super.tooltipTheme = value;
    }
    get cardTheme() {
      return this[S$0.cardTheme];
    }
    set cardTheme(value) {
      super.cardTheme = value;
    }
    get chipTheme() {
      return this[S$0.chipTheme];
    }
    set chipTheme(value) {
      super.chipTheme = value;
    }
    get platform() {
      return this[S$0.platform];
    }
    set platform(value) {
      super.platform = value;
    }
    get materialTapTargetSize() {
      return this[S$0.materialTapTargetSize$7];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get applyElevationOverlayColor() {
      return this[S$0.applyElevationOverlayColor];
    }
    set applyElevationOverlayColor(value) {
      super.applyElevationOverlayColor = value;
    }
    get pageTransitionsTheme() {
      return this[S$0.pageTransitionsTheme];
    }
    set pageTransitionsTheme(value) {
      super.pageTransitionsTheme = value;
    }
    get appBarTheme() {
      return this[S$0.appBarTheme];
    }
    set appBarTheme(value) {
      super.appBarTheme = value;
    }
    get scrollbarTheme() {
      return this[S$0.scrollbarTheme];
    }
    set scrollbarTheme(value) {
      super.scrollbarTheme = value;
    }
    get bottomAppBarTheme() {
      return this[S$0.bottomAppBarTheme];
    }
    set bottomAppBarTheme(value) {
      super.bottomAppBarTheme = value;
    }
    get colorScheme() {
      return this[S$0.colorScheme];
    }
    set colorScheme(value) {
      super.colorScheme = value;
    }
    get snackBarTheme() {
      return this[S$0.snackBarTheme];
    }
    set snackBarTheme(value) {
      super.snackBarTheme = value;
    }
    get dialogTheme() {
      return this[S$1.dialogTheme];
    }
    set dialogTheme(value) {
      super.dialogTheme = value;
    }
    get floatingActionButtonTheme() {
      return this[S$1.floatingActionButtonTheme];
    }
    set floatingActionButtonTheme(value) {
      super.floatingActionButtonTheme = value;
    }
    get navigationRailTheme() {
      return this[S$1.navigationRailTheme];
    }
    set navigationRailTheme(value) {
      super.navigationRailTheme = value;
    }
    get typography() {
      return this[S$1.typography];
    }
    set typography(value) {
      super.typography = value;
    }
    get cupertinoOverrideTheme() {
      return this[S$1.cupertinoOverrideTheme];
    }
    set cupertinoOverrideTheme(value) {
      super.cupertinoOverrideTheme = value;
    }
    get bottomSheetTheme() {
      return this[S$1.bottomSheetTheme];
    }
    set bottomSheetTheme(value) {
      super.bottomSheetTheme = value;
    }
    get popupMenuTheme() {
      return this[S$1.popupMenuTheme];
    }
    set popupMenuTheme(value) {
      super.popupMenuTheme = value;
    }
    get bannerTheme() {
      return this[S$1.bannerTheme];
    }
    set bannerTheme(value) {
      super.bannerTheme = value;
    }
    get dividerTheme() {
      return this[S$1.dividerTheme];
    }
    set dividerTheme(value) {
      super.dividerTheme = value;
    }
    get buttonBarTheme() {
      return this[S$1.buttonBarTheme];
    }
    set buttonBarTheme(value) {
      super.buttonBarTheme = value;
    }
    get bottomNavigationBarTheme() {
      return this[S$1.bottomNavigationBarTheme];
    }
    set bottomNavigationBarTheme(value) {
      super.bottomNavigationBarTheme = value;
    }
    get timePickerTheme() {
      return this[S$1.timePickerTheme];
    }
    set timePickerTheme(value) {
      super.timePickerTheme = value;
    }
    get textButtonTheme() {
      return this[S$1.textButtonTheme];
    }
    set textButtonTheme(value) {
      super.textButtonTheme = value;
    }
    get elevatedButtonTheme() {
      return this[S$1.elevatedButtonTheme];
    }
    set elevatedButtonTheme(value) {
      super.elevatedButtonTheme = value;
    }
    get outlinedButtonTheme() {
      return this[S$1.outlinedButtonTheme];
    }
    set outlinedButtonTheme(value) {
      super.outlinedButtonTheme = value;
    }
    get textSelectionTheme() {
      return this[S$1.textSelectionTheme];
    }
    set textSelectionTheme(value) {
      super.textSelectionTheme = value;
    }
    get dataTableTheme() {
      return this[S$1.dataTableTheme];
    }
    set dataTableTheme(value) {
      super.dataTableTheme = value;
    }
    get checkboxTheme() {
      return this[S$1.checkboxTheme];
    }
    set checkboxTheme(value) {
      super.checkboxTheme = value;
    }
    get radioTheme() {
      return this[S$1.radioTheme];
    }
    set radioTheme(value) {
      super.radioTheme = value;
    }
    get switchTheme() {
      return this[S$1.switchTheme];
    }
    set switchTheme(value) {
      super.switchTheme = value;
    }
    get fixTextFieldOutlineLabel() {
      return this[S$1.fixTextFieldOutlineLabel$1];
    }
    set fixTextFieldOutlineLabel(value) {
      super.fixTextFieldOutlineLabel = value;
    }
    get useTextSelectionTheme() {
      return this[S$1.useTextSelectionTheme];
    }
    set useTextSelectionTheme(value) {
      super.useTextSelectionTheme = value;
    }
    static new(opts) {
      let t62, t63, t62$, t62$0, t62$1, t62$2, t62$3;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let primarySwatch = opts && 'primarySwatch' in opts ? opts.primarySwatch : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
      let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
      let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
      let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
      let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
      let textSelectionColor = opts && 'textSelectionColor' in opts ? opts.textSelectionColor : null;
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let textSelectionHandleColor = opts && 'textSelectionHandleColor' in opts ? opts.textSelectionHandleColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
      let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
      let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
      let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
      let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
      let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
      let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
      let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
      let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
      let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
      let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
      let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
      let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
      let typography = opts && 'typography' in opts ? opts.typography : null;
      let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
      let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
      let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
      let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
      let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
      let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
      let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
      let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
      let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
      let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
      let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
      let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
      let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
      let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
      let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
      let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
      let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
      let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
      let useTextSelectionTheme = opts && 'useTextSelectionTheme' in opts ? opts.useTextSelectionTheme : null;
      if (!((t62 = colorScheme, t62 == null ? null : t62.brightness) == null || brightness == null || dart.nullCheck(colorScheme).brightness == brightness)) dart.assertFailed(null, I[110], 313, 12, "colorScheme?.brightness == null || brightness == null || colorScheme!.brightness == brightness");
      let _brightness = (t62$0 = (t62$ = brightness, t62$ == null ? (t63 = colorScheme, t63 == null ? null : t63.brightness) : t62$), t62$0 == null ? ui.Brightness.light : t62$0);
      let isDark = _brightness == ui.Brightness.dark;
      visualDensity == null ? visualDensity = theme_data.VisualDensity.adaptivePlatformDensity : null;
      primarySwatch == null ? primarySwatch = colors$.Colors.blue : null;
      primaryColor == null ? primaryColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(900)) : primarySwatch : null;
      primaryColorBrightness == null ? primaryColorBrightness = theme_data.ThemeData.estimateBrightnessForColor(primaryColor) : null;
      primaryColorLight == null ? primaryColorLight = isDark ? dart.nullCheck(colors$.Colors.grey._get(500)) : dart.nullCheck(primarySwatch._get(100)) : null;
      primaryColorDark == null ? primaryColorDark = isDark ? colors$.Colors.black : dart.nullCheck(primarySwatch._get(700)) : null;
      let primaryIsDark = primaryColorBrightness == ui.Brightness.dark;
      toggleableActiveColor == null ? toggleableActiveColor = isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : (t62$1 = accentColor, t62$1 == null ? dart.nullCheck(primarySwatch._get(600)) : t62$1) : null;
      accentColor == null ? accentColor = isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : dart.nullCheck(primarySwatch._get(500)) : null;
      accentColorBrightness == null ? accentColorBrightness = theme_data.ThemeData.estimateBrightnessForColor(accentColor) : null;
      let accentIsDark = accentColorBrightness == ui.Brightness.dark;
      canvasColor == null ? canvasColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(850)) : dart.nullCheck(colors$.Colors.grey._get(50)) : null;
      shadowColor == null ? shadowColor = colors$.Colors.black : null;
      scaffoldBackgroundColor == null ? scaffoldBackgroundColor = canvasColor : null;
      bottomAppBarColor == null ? bottomAppBarColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : null;
      cardColor == null ? cardColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : null;
      dividerColor == null ? dividerColor = isDark ? C[2194] || CT.C2194 : C[2195] || CT.C2195 : null;
      colorScheme == null ? colorScheme = color_scheme.ColorScheme.fromSwatch({primarySwatch: primarySwatch, primaryColorDark: primaryColorDark, accentColor: accentColor, cardColor: cardColor, backgroundColor: backgroundColor, errorColor: errorColor, brightness: _brightness}) : null;
      splashFactory == null ? splashFactory = ink_splash.InkSplash.splashFactory : null;
      selectedRowColor == null ? selectedRowColor = dart.nullCheck(colors$.Colors.grey._get(100)) : null;
      unselectedWidgetColor == null ? unselectedWidgetColor = isDark ? colors$.Colors.white70 : colors$.Colors.black54 : null;
      secondaryHeaderColor == null ? secondaryHeaderColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(700)) : dart.nullCheck(primarySwatch._get(50)) : null;
      textSelectionColor == null ? textSelectionColor = isDark ? accentColor : dart.nullCheck(primarySwatch._get(200)) : null;
      cursorColor = (t62$2 = cursorColor, t62$2 == null ? C[2196] || CT.C2196 : t62$2);
      textSelectionHandleColor == null ? textSelectionHandleColor = isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(400)) : dart.nullCheck(primarySwatch._get(300)) : null;
      backgroundColor == null ? backgroundColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(700)) : dart.nullCheck(primarySwatch._get(200)) : null;
      dialogBackgroundColor == null ? dialogBackgroundColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : null;
      indicatorColor == null ? indicatorColor = dart.equals(accentColor, primaryColor) ? colors$.Colors.white : accentColor : null;
      hintColor == null ? hintColor = isDark ? colors$.Colors.white60 : colors$.Colors.black.withOpacity(0.6) : null;
      errorColor == null ? errorColor = dart.nullCheck(colors$.Colors.red._get(700)) : null;
      inputDecorationTheme == null ? inputDecorationTheme = C[1859] || CT.C1859 : null;
      pageTransitionsTheme == null ? pageTransitionsTheme = C[2197] || CT.C2197 : null;
      primaryIconTheme == null ? primaryIconTheme = primaryIsDark ? C[2198] || CT.C2198 : C[2200] || CT.C2200 : null;
      accentIconTheme == null ? accentIconTheme = accentIsDark ? C[2198] || CT.C2198 : C[2200] || CT.C2200 : null;
      iconTheme == null ? iconTheme = isDark ? C[2198] || CT.C2198 : C[2201] || CT.C2201 : null;
      platform == null ? platform = platform$.defaultTargetPlatform : null;
      typography == null ? typography = typography$.Typography.material2014({platform: platform}) : null;
      let defaultTextTheme = isDark ? typography.white : typography.black;
      let defaultPrimaryTextTheme = primaryIsDark ? typography.white : typography.black;
      let defaultAccentTextTheme = accentIsDark ? typography.white : typography.black;
      if (fontFamily != null) {
        defaultTextTheme = defaultTextTheme.apply({fontFamily: fontFamily});
        defaultPrimaryTextTheme = defaultPrimaryTextTheme.apply({fontFamily: fontFamily});
        defaultAccentTextTheme = defaultAccentTextTheme.apply({fontFamily: fontFamily});
      }
      textTheme = defaultTextTheme.merge(textTheme);
      primaryTextTheme = defaultPrimaryTextTheme.merge(primaryTextTheme);
      accentTextTheme = defaultAccentTextTheme.merge(accentTextTheme);
      switch (platform) {
        case C[44] || CT.C44:
        case C[45] || CT.C45:
        case C[48] || CT.C48:
        {
          materialTapTargetSize == null ? materialTapTargetSize = theme_data.MaterialTapTargetSize.padded : null;
          break;
        }
        case C[46] || CT.C46:
        case C[49] || CT.C49:
        case C[47] || CT.C47:
        {
          materialTapTargetSize == null ? materialTapTargetSize = theme_data.MaterialTapTargetSize.shrinkWrap : null;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      applyElevationOverlayColor == null ? applyElevationOverlayColor = false : null;
      buttonColor == null ? buttonColor = isDark ? dart.nullCheck(primarySwatch._get(600)) : dart.nullCheck(colors$.Colors.grey._get(300)) : null;
      focusColor == null ? focusColor = isDark ? colors$.Colors.white.withOpacity(0.12) : colors$.Colors.black.withOpacity(0.12) : null;
      hoverColor == null ? hoverColor = isDark ? colors$.Colors.white.withOpacity(0.04) : colors$.Colors.black.withOpacity(0.04) : null;
      buttonTheme == null ? buttonTheme = new button_theme.ButtonThemeData.new({colorScheme: colorScheme, buttonColor: buttonColor, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, materialTapTargetSize: materialTapTargetSize}) : null;
      toggleButtonsTheme == null ? toggleButtonsTheme = C[2203] || CT.C2203 : null;
      disabledColor == null ? disabledColor = isDark ? colors$.Colors.white38 : colors$.Colors.black38 : null;
      highlightColor == null ? highlightColor = isDark ? theme_data._kDarkThemeHighlightColor : theme_data._kLightThemeHighlightColor : null;
      splashColor == null ? splashColor = isDark ? theme_data._kDarkThemeSplashColor : theme_data._kLightThemeSplashColor : null;
      sliderTheme == null ? sliderTheme = C[1314] || CT.C1314 : null;
      tabBarTheme == null ? tabBarTheme = C[2204] || CT.C2204 : null;
      tooltipTheme == null ? tooltipTheme = C[2205] || CT.C2205 : null;
      appBarTheme == null ? appBarTheme = C[2206] || CT.C2206 : null;
      scrollbarTheme == null ? scrollbarTheme = C[2207] || CT.C2207 : null;
      bottomAppBarTheme == null ? bottomAppBarTheme = C[2208] || CT.C2208 : null;
      cardTheme == null ? cardTheme = C[2209] || CT.C2209 : null;
      chipTheme == null ? chipTheme = chip_theme.ChipThemeData.fromDefaults({secondaryColor: isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : primaryColor, brightness: colorScheme.brightness, labelStyle: dart.nullCheck(textTheme.bodyText1)}) : null;
      dialogTheme == null ? dialogTheme = C[2210] || CT.C2210 : null;
      floatingActionButtonTheme == null ? floatingActionButtonTheme = C[2211] || CT.C2211 : null;
      navigationRailTheme == null ? navigationRailTheme = C[1647] || CT.C1647 : null;
      cupertinoOverrideTheme = (t62$3 = cupertinoOverrideTheme, t62$3 == null ? null : t62$3.noDefault());
      snackBarTheme == null ? snackBarTheme = C[2212] || CT.C2212 : null;
      bottomSheetTheme == null ? bottomSheetTheme = C[2213] || CT.C2213 : null;
      popupMenuTheme == null ? popupMenuTheme = C[2214] || CT.C2214 : null;
      bannerTheme == null ? bannerTheme = C[2215] || CT.C2215 : null;
      dividerTheme == null ? dividerTheme = C[2216] || CT.C2216 : null;
      buttonBarTheme == null ? buttonBarTheme = C[2217] || CT.C2217 : null;
      bottomNavigationBarTheme == null ? bottomNavigationBarTheme = C[2218] || CT.C2218 : null;
      timePickerTheme == null ? timePickerTheme = C[2219] || CT.C2219 : null;
      textButtonTheme == null ? textButtonTheme = C[2220] || CT.C2220 : null;
      elevatedButtonTheme == null ? elevatedButtonTheme = C[2221] || CT.C2221 : null;
      outlinedButtonTheme == null ? outlinedButtonTheme = C[2222] || CT.C2222 : null;
      textSelectionTheme == null ? textSelectionTheme = C[2223] || CT.C2223 : null;
      dataTableTheme == null ? dataTableTheme = C[2224] || CT.C2224 : null;
      checkboxTheme == null ? checkboxTheme = C[2225] || CT.C2225 : null;
      radioTheme == null ? radioTheme = C[2226] || CT.C2226 : null;
      switchTheme == null ? switchTheme = C[2227] || CT.C2227 : null;
      fixTextFieldOutlineLabel == null ? fixTextFieldOutlineLabel = false : null;
      useTextSelectionTheme == null ? useTextSelectionTheme = true : null;
      return new theme_data.ThemeData.raw({visualDensity: visualDensity, primaryColor: primaryColor, primaryColorBrightness: primaryColorBrightness, primaryColorLight: primaryColorLight, primaryColorDark: primaryColorDark, accentColor: accentColor, accentColorBrightness: accentColorBrightness, canvasColor: canvasColor, shadowColor: shadowColor, scaffoldBackgroundColor: scaffoldBackgroundColor, bottomAppBarColor: bottomAppBarColor, cardColor: cardColor, dividerColor: dividerColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, splashFactory: splashFactory, selectedRowColor: selectedRowColor, unselectedWidgetColor: unselectedWidgetColor, disabledColor: disabledColor, buttonTheme: buttonTheme, buttonColor: buttonColor, toggleButtonsTheme: toggleButtonsTheme, toggleableActiveColor: toggleableActiveColor, secondaryHeaderColor: secondaryHeaderColor, textSelectionColor: textSelectionColor, cursorColor: cursorColor, textSelectionHandleColor: textSelectionHandleColor, backgroundColor: backgroundColor, dialogBackgroundColor: dialogBackgroundColor, indicatorColor: indicatorColor, hintColor: hintColor, errorColor: errorColor, textTheme: textTheme, primaryTextTheme: primaryTextTheme, accentTextTheme: accentTextTheme, inputDecorationTheme: inputDecorationTheme, iconTheme: iconTheme, primaryIconTheme: primaryIconTheme, accentIconTheme: accentIconTheme, sliderTheme: sliderTheme, tabBarTheme: tabBarTheme, tooltipTheme: tooltipTheme, cardTheme: cardTheme, chipTheme: chipTheme, platform: platform, materialTapTargetSize: materialTapTargetSize, applyElevationOverlayColor: applyElevationOverlayColor, pageTransitionsTheme: pageTransitionsTheme, appBarTheme: appBarTheme, scrollbarTheme: scrollbarTheme, bottomAppBarTheme: bottomAppBarTheme, colorScheme: colorScheme, dialogTheme: dialogTheme, floatingActionButtonTheme: floatingActionButtonTheme, navigationRailTheme: navigationRailTheme, typography: typography, cupertinoOverrideTheme: cupertinoOverrideTheme, snackBarTheme: snackBarTheme, bottomSheetTheme: bottomSheetTheme, popupMenuTheme: popupMenuTheme, bannerTheme: bannerTheme, dividerTheme: dividerTheme, buttonBarTheme: buttonBarTheme, bottomNavigationBarTheme: bottomNavigationBarTheme, timePickerTheme: timePickerTheme, textButtonTheme: textButtonTheme, elevatedButtonTheme: elevatedButtonTheme, outlinedButtonTheme: outlinedButtonTheme, textSelectionTheme: textSelectionTheme, dataTableTheme: dataTableTheme, checkboxTheme: checkboxTheme, radioTheme: radioTheme, switchTheme: switchTheme, fixTextFieldOutlineLabel: fixTextFieldOutlineLabel, useTextSelectionTheme: useTextSelectionTheme});
    }
    static from(opts) {
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      if (colorScheme == null) dart.nullFailed(I[110], 720, 26, "colorScheme");
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      if (!(colorScheme != null)) dart.assertFailed(null, I[110], 723, 12, "colorScheme != null");
      let isDark = colorScheme.brightness == ui.Brightness.dark;
      let primarySurfaceColor = isDark ? colorScheme.surface : colorScheme.primary;
      let onPrimarySurfaceColor = isDark ? colorScheme.onSurface : colorScheme.onPrimary;
      return theme_data.ThemeData.new({brightness: colorScheme.brightness, primaryColor: primarySurfaceColor, primaryColorBrightness: theme_data.ThemeData.estimateBrightnessForColor(primarySurfaceColor), canvasColor: colorScheme.background, accentColor: colorScheme.secondary, accentColorBrightness: theme_data.ThemeData.estimateBrightnessForColor(colorScheme.secondary), scaffoldBackgroundColor: colorScheme.background, bottomAppBarColor: colorScheme.surface, cardColor: colorScheme.surface, dividerColor: colorScheme.onSurface.withOpacity(0.12), backgroundColor: colorScheme.background, dialogBackgroundColor: colorScheme.background, errorColor: colorScheme.error, textTheme: textTheme, indicatorColor: onPrimarySurfaceColor, applyElevationOverlayColor: isDark, colorScheme: colorScheme});
    }
    static light() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.light});
    }
    static dark() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.dark});
    }
    static fallback() {
      return theme_data.ThemeData.light();
    }
    get brightness() {
      return this.colorScheme.brightness;
    }
    copyWith(opts) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7, t62$8, t62$9, t62$10, t62$11, t62$12, t62$13, t62$14, t62$15, t62$16, t62$17, t62$18, t62$19, t62$20, t62$21, t62$22, t62$23, t62$24, t62$25, t62$26, t62$27, t62$28, t62$29, t62$30, t62$31, t62$32, t62$33, t62$34, t62$35, t62$36, t62$37, t62$38, t62$39, t62$40, t62$41, t62$42, t62$43, t62$44, t62$45, t62$46, t62$47, t62$48, t62$49, t62$50, t62$51, t62$52, t62$53, t62$54, t62$55, t62$56, t62$57, t62$58, t62$59, t62$60, t62$61, t62$62, t62$63, t62$64, t62$65, t62$66, t62$67, t62$68, t62$69, t62$70, t62$71, t62$72, t62$73, t62$74, t62$75;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
      let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
      let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
      let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
      let textSelectionColor = opts && 'textSelectionColor' in opts ? opts.textSelectionColor : null;
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let textSelectionHandleColor = opts && 'textSelectionHandleColor' in opts ? opts.textSelectionHandleColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
      let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
      let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
      let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
      let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
      let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
      let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
      let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
      let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
      let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
      let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
      let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
      let typography = opts && 'typography' in opts ? opts.typography : null;
      let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
      let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
      let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
      let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
      let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
      let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
      let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
      let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
      let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
      let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
      let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
      let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
      let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
      let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
      let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
      let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
      let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
      let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
      let useTextSelectionTheme = opts && 'useTextSelectionTheme' in opts ? opts.useTextSelectionTheme : null;
      cupertinoOverrideTheme = (t62 = cupertinoOverrideTheme, t62 == null ? null : t62.noDefault());
      return new theme_data.ThemeData.raw({visualDensity: (t62$ = visualDensity, t62$ == null ? this.visualDensity : t62$), primaryColor: (t62$0 = primaryColor, t62$0 == null ? this.primaryColor : t62$0), primaryColorBrightness: (t62$1 = primaryColorBrightness, t62$1 == null ? this.primaryColorBrightness : t62$1), primaryColorLight: (t62$2 = primaryColorLight, t62$2 == null ? this.primaryColorLight : t62$2), primaryColorDark: (t62$3 = primaryColorDark, t62$3 == null ? this.primaryColorDark : t62$3), accentColor: (t62$4 = accentColor, t62$4 == null ? this.accentColor : t62$4), accentColorBrightness: (t62$5 = accentColorBrightness, t62$5 == null ? this.accentColorBrightness : t62$5), canvasColor: (t62$6 = canvasColor, t62$6 == null ? this.canvasColor : t62$6), shadowColor: (t62$7 = shadowColor, t62$7 == null ? this.shadowColor : t62$7), scaffoldBackgroundColor: (t62$8 = scaffoldBackgroundColor, t62$8 == null ? this.scaffoldBackgroundColor : t62$8), bottomAppBarColor: (t62$9 = bottomAppBarColor, t62$9 == null ? this.bottomAppBarColor : t62$9), cardColor: (t62$10 = cardColor, t62$10 == null ? this.cardColor : t62$10), dividerColor: (t62$11 = dividerColor, t62$11 == null ? this.dividerColor : t62$11), focusColor: (t62$12 = focusColor, t62$12 == null ? this.focusColor : t62$12), hoverColor: (t62$13 = hoverColor, t62$13 == null ? this.hoverColor : t62$13), highlightColor: (t62$14 = highlightColor, t62$14 == null ? this.highlightColor : t62$14), splashColor: (t62$15 = splashColor, t62$15 == null ? this.splashColor : t62$15), splashFactory: (t62$16 = splashFactory, t62$16 == null ? this.splashFactory : t62$16), selectedRowColor: (t62$17 = selectedRowColor, t62$17 == null ? this.selectedRowColor : t62$17), unselectedWidgetColor: (t62$18 = unselectedWidgetColor, t62$18 == null ? this.unselectedWidgetColor : t62$18), disabledColor: (t62$19 = disabledColor, t62$19 == null ? this.disabledColor : t62$19), buttonColor: (t62$20 = buttonColor, t62$20 == null ? this.buttonColor : t62$20), buttonTheme: (t62$21 = buttonTheme, t62$21 == null ? this.buttonTheme : t62$21), toggleButtonsTheme: (t62$22 = toggleButtonsTheme, t62$22 == null ? this.toggleButtonsTheme : t62$22), secondaryHeaderColor: (t62$23 = secondaryHeaderColor, t62$23 == null ? this.secondaryHeaderColor : t62$23), textSelectionColor: (t62$24 = textSelectionColor, t62$24 == null ? this.textSelectionColor : t62$24), cursorColor: (t62$25 = cursorColor, t62$25 == null ? this.cursorColor : t62$25), textSelectionHandleColor: (t62$26 = textSelectionHandleColor, t62$26 == null ? this.textSelectionHandleColor : t62$26), backgroundColor: (t62$27 = backgroundColor, t62$27 == null ? this.backgroundColor : t62$27), dialogBackgroundColor: (t62$28 = dialogBackgroundColor, t62$28 == null ? this.dialogBackgroundColor : t62$28), indicatorColor: (t62$29 = indicatorColor, t62$29 == null ? this.indicatorColor : t62$29), hintColor: (t62$30 = hintColor, t62$30 == null ? this.hintColor : t62$30), errorColor: (t62$31 = errorColor, t62$31 == null ? this.errorColor : t62$31), toggleableActiveColor: (t62$32 = toggleableActiveColor, t62$32 == null ? this.toggleableActiveColor : t62$32), textTheme: (t62$33 = textTheme, t62$33 == null ? this.textTheme : t62$33), primaryTextTheme: (t62$34 = primaryTextTheme, t62$34 == null ? this.primaryTextTheme : t62$34), accentTextTheme: (t62$35 = accentTextTheme, t62$35 == null ? this.accentTextTheme : t62$35), inputDecorationTheme: (t62$36 = inputDecorationTheme, t62$36 == null ? this.inputDecorationTheme : t62$36), iconTheme: (t62$37 = iconTheme, t62$37 == null ? this.iconTheme : t62$37), primaryIconTheme: (t62$38 = primaryIconTheme, t62$38 == null ? this.primaryIconTheme : t62$38), accentIconTheme: (t62$39 = accentIconTheme, t62$39 == null ? this.accentIconTheme : t62$39), sliderTheme: (t62$40 = sliderTheme, t62$40 == null ? this.sliderTheme : t62$40), tabBarTheme: (t62$41 = tabBarTheme, t62$41 == null ? this.tabBarTheme : t62$41), tooltipTheme: (t62$42 = tooltipTheme, t62$42 == null ? this.tooltipTheme : t62$42), cardTheme: (t62$43 = cardTheme, t62$43 == null ? this.cardTheme : t62$43), chipTheme: (t62$44 = chipTheme, t62$44 == null ? this.chipTheme : t62$44), platform: (t62$45 = platform, t62$45 == null ? this.platform : t62$45), materialTapTargetSize: (t62$46 = materialTapTargetSize, t62$46 == null ? this.materialTapTargetSize : t62$46), applyElevationOverlayColor: (t62$47 = applyElevationOverlayColor, t62$47 == null ? this.applyElevationOverlayColor : t62$47), pageTransitionsTheme: (t62$48 = pageTransitionsTheme, t62$48 == null ? this.pageTransitionsTheme : t62$48), appBarTheme: (t62$49 = appBarTheme, t62$49 == null ? this.appBarTheme : t62$49), scrollbarTheme: (t62$50 = scrollbarTheme, t62$50 == null ? this.scrollbarTheme : t62$50), bottomAppBarTheme: (t62$51 = bottomAppBarTheme, t62$51 == null ? this.bottomAppBarTheme : t62$51), colorScheme: (t62$52 = colorScheme, t62$52 == null ? this.colorScheme : t62$52).copyWith({brightness: brightness}), dialogTheme: (t62$53 = dialogTheme, t62$53 == null ? this.dialogTheme : t62$53), floatingActionButtonTheme: (t62$54 = floatingActionButtonTheme, t62$54 == null ? this.floatingActionButtonTheme : t62$54), navigationRailTheme: (t62$55 = navigationRailTheme, t62$55 == null ? this.navigationRailTheme : t62$55), typography: (t62$56 = typography, t62$56 == null ? this.typography : t62$56), cupertinoOverrideTheme: (t62$57 = cupertinoOverrideTheme, t62$57 == null ? this.cupertinoOverrideTheme : t62$57), snackBarTheme: (t62$58 = snackBarTheme, t62$58 == null ? this.snackBarTheme : t62$58), bottomSheetTheme: (t62$59 = bottomSheetTheme, t62$59 == null ? this.bottomSheetTheme : t62$59), popupMenuTheme: (t62$60 = popupMenuTheme, t62$60 == null ? this.popupMenuTheme : t62$60), bannerTheme: (t62$61 = bannerTheme, t62$61 == null ? this.bannerTheme : t62$61), dividerTheme: (t62$62 = dividerTheme, t62$62 == null ? this.dividerTheme : t62$62), buttonBarTheme: (t62$63 = buttonBarTheme, t62$63 == null ? this.buttonBarTheme : t62$63), bottomNavigationBarTheme: (t62$64 = bottomNavigationBarTheme, t62$64 == null ? this.bottomNavigationBarTheme : t62$64), timePickerTheme: (t62$65 = timePickerTheme, t62$65 == null ? this.timePickerTheme : t62$65), textButtonTheme: (t62$66 = textButtonTheme, t62$66 == null ? this.textButtonTheme : t62$66), elevatedButtonTheme: (t62$67 = elevatedButtonTheme, t62$67 == null ? this.elevatedButtonTheme : t62$67), outlinedButtonTheme: (t62$68 = outlinedButtonTheme, t62$68 == null ? this.outlinedButtonTheme : t62$68), textSelectionTheme: (t62$69 = textSelectionTheme, t62$69 == null ? this.textSelectionTheme : t62$69), dataTableTheme: (t62$70 = dataTableTheme, t62$70 == null ? this.dataTableTheme : t62$70), checkboxTheme: (t62$71 = checkboxTheme, t62$71 == null ? this.checkboxTheme : t62$71), radioTheme: (t62$72 = radioTheme, t62$72 == null ? this.radioTheme : t62$72), switchTheme: (t62$73 = switchTheme, t62$73 == null ? this.switchTheme : t62$73), fixTextFieldOutlineLabel: (t62$74 = fixTextFieldOutlineLabel, t62$74 == null ? this.fixTextFieldOutlineLabel : t62$74), useTextSelectionTheme: (t62$75 = useTextSelectionTheme, t62$75 == null ? this.useTextSelectionTheme : t62$75)});
    }
    static localize(baseTheme, localTextGeometry) {
      if (baseTheme == null) dart.nullFailed(I[110], 1412, 39, "baseTheme");
      if (localTextGeometry == null) dart.nullFailed(I[110], 1412, 60, "localTextGeometry");
      if (!(baseTheme != null)) dart.assertFailed(null, I[110], 1425, 12, "baseTheme != null");
      if (!(localTextGeometry != null)) dart.assertFailed(null, I[110], 1426, 12, "localTextGeometry != null");
      return theme_data.ThemeData._localizedThemeDataCache.putIfAbsent(new theme_data._IdentityThemeDataCacheKey.new(baseTheme, localTextGeometry), dart.fn(() => baseTheme.copyWith({primaryTextTheme: localTextGeometry.merge(baseTheme.primaryTextTheme), accentTextTheme: localTextGeometry.merge(baseTheme.accentTextTheme), textTheme: localTextGeometry.merge(baseTheme.textTheme)}), T$.VoidToThemeData()));
    }
    static estimateBrightnessForColor(color) {
      if (color == null) dart.nullFailed(I[110], 1445, 54, "color");
      let relativeLuminance = color.computeLuminance();
      if ((dart.notNull(relativeLuminance) + 0.05) * (dart.notNull(relativeLuminance) + 0.05) > 0.15) return ui.Brightness.light;
      return ui.Brightness.dark;
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[110], 1465, 35, "a");
      if (b == null) dart.nullFailed(I[110], 1465, 48, "b");
      if (t == null) dart.nullFailed(I[110], 1465, 58, "t");
      if (!(a != null)) dart.assertFailed(null, I[110], 1466, 12, "a != null");
      if (!(b != null)) dart.assertFailed(null, I[110], 1467, 12, "b != null");
      if (!(t != null)) dart.assertFailed(null, I[110], 1468, 12, "t != null");
      return new theme_data.ThemeData.raw({visualDensity: theme_data.VisualDensity.lerp(a.visualDensity, b.visualDensity, t), primaryColor: dart.nullCheck(ui.Color.lerp(a.primaryColor, b.primaryColor, t)), primaryColorBrightness: dart.notNull(t) < 0.5 ? a.primaryColorBrightness : b.primaryColorBrightness, primaryColorLight: dart.nullCheck(ui.Color.lerp(a.primaryColorLight, b.primaryColorLight, t)), primaryColorDark: dart.nullCheck(ui.Color.lerp(a.primaryColorDark, b.primaryColorDark, t)), canvasColor: dart.nullCheck(ui.Color.lerp(a.canvasColor, b.canvasColor, t)), shadowColor: dart.nullCheck(ui.Color.lerp(a.shadowColor, b.shadowColor, t)), accentColor: dart.nullCheck(ui.Color.lerp(a.accentColor, b.accentColor, t)), accentColorBrightness: dart.notNull(t) < 0.5 ? a.accentColorBrightness : b.accentColorBrightness, scaffoldBackgroundColor: dart.nullCheck(ui.Color.lerp(a.scaffoldBackgroundColor, b.scaffoldBackgroundColor, t)), bottomAppBarColor: dart.nullCheck(ui.Color.lerp(a.bottomAppBarColor, b.bottomAppBarColor, t)), cardColor: dart.nullCheck(ui.Color.lerp(a.cardColor, b.cardColor, t)), dividerColor: dart.nullCheck(ui.Color.lerp(a.dividerColor, b.dividerColor, t)), focusColor: dart.nullCheck(ui.Color.lerp(a.focusColor, b.focusColor, t)), hoverColor: dart.nullCheck(ui.Color.lerp(a.hoverColor, b.hoverColor, t)), highlightColor: dart.nullCheck(ui.Color.lerp(a.highlightColor, b.highlightColor, t)), splashColor: dart.nullCheck(ui.Color.lerp(a.splashColor, b.splashColor, t)), splashFactory: dart.notNull(t) < 0.5 ? a.splashFactory : b.splashFactory, selectedRowColor: dart.nullCheck(ui.Color.lerp(a.selectedRowColor, b.selectedRowColor, t)), unselectedWidgetColor: dart.nullCheck(ui.Color.lerp(a.unselectedWidgetColor, b.unselectedWidgetColor, t)), disabledColor: dart.nullCheck(ui.Color.lerp(a.disabledColor, b.disabledColor, t)), buttonTheme: dart.notNull(t) < 0.5 ? a.buttonTheme : b.buttonTheme, toggleButtonsTheme: dart.nullCheck(toggle_buttons_theme.ToggleButtonsThemeData.lerp(a.toggleButtonsTheme, b.toggleButtonsTheme, t)), buttonColor: dart.nullCheck(ui.Color.lerp(a.buttonColor, b.buttonColor, t)), secondaryHeaderColor: dart.nullCheck(ui.Color.lerp(a.secondaryHeaderColor, b.secondaryHeaderColor, t)), textSelectionColor: dart.nullCheck(ui.Color.lerp(a.textSelectionColor, b.textSelectionColor, t)), cursorColor: dart.nullCheck(ui.Color.lerp(a.cursorColor, b.cursorColor, t)), textSelectionHandleColor: dart.nullCheck(ui.Color.lerp(a.textSelectionHandleColor, b.textSelectionHandleColor, t)), backgroundColor: dart.nullCheck(ui.Color.lerp(a.backgroundColor, b.backgroundColor, t)), dialogBackgroundColor: dart.nullCheck(ui.Color.lerp(a.dialogBackgroundColor, b.dialogBackgroundColor, t)), indicatorColor: dart.nullCheck(ui.Color.lerp(a.indicatorColor, b.indicatorColor, t)), hintColor: dart.nullCheck(ui.Color.lerp(a.hintColor, b.hintColor, t)), errorColor: dart.nullCheck(ui.Color.lerp(a.errorColor, b.errorColor, t)), toggleableActiveColor: dart.nullCheck(ui.Color.lerp(a.toggleableActiveColor, b.toggleableActiveColor, t)), textTheme: text_theme.TextTheme.lerp(a.textTheme, b.textTheme, t), primaryTextTheme: text_theme.TextTheme.lerp(a.primaryTextTheme, b.primaryTextTheme, t), accentTextTheme: text_theme.TextTheme.lerp(a.accentTextTheme, b.accentTextTheme, t), inputDecorationTheme: dart.notNull(t) < 0.5 ? a.inputDecorationTheme : b.inputDecorationTheme, iconTheme: icon_theme_data.IconThemeData.lerp(a.iconTheme, b.iconTheme, t), primaryIconTheme: icon_theme_data.IconThemeData.lerp(a.primaryIconTheme, b.primaryIconTheme, t), accentIconTheme: icon_theme_data.IconThemeData.lerp(a.accentIconTheme, b.accentIconTheme, t), sliderTheme: slider_theme.SliderThemeData.lerp(a.sliderTheme, b.sliderTheme, t), tabBarTheme: tab_bar_theme.TabBarTheme.lerp(a.tabBarTheme, b.tabBarTheme, t), tooltipTheme: dart.nullCheck(tooltip_theme.TooltipThemeData.lerp(a.tooltipTheme, b.tooltipTheme, t)), cardTheme: card_theme.CardTheme.lerp(a.cardTheme, b.cardTheme, t), chipTheme: dart.nullCheck(chip_theme.ChipThemeData.lerp(a.chipTheme, b.chipTheme, t)), platform: dart.notNull(t) < 0.5 ? a.platform : b.platform, materialTapTargetSize: dart.notNull(t) < 0.5 ? a.materialTapTargetSize : b.materialTapTargetSize, applyElevationOverlayColor: dart.notNull(t) < 0.5 ? a.applyElevationOverlayColor : b.applyElevationOverlayColor, pageTransitionsTheme: dart.notNull(t) < 0.5 ? a.pageTransitionsTheme : b.pageTransitionsTheme, appBarTheme: app_bar_theme.AppBarTheme.lerp(a.appBarTheme, b.appBarTheme, t), scrollbarTheme: scrollbar_theme.ScrollbarThemeData.lerp(a.scrollbarTheme, b.scrollbarTheme, t), bottomAppBarTheme: bottom_app_bar_theme.BottomAppBarTheme.lerp(a.bottomAppBarTheme, b.bottomAppBarTheme, t), colorScheme: color_scheme.ColorScheme.lerp(a.colorScheme, b.colorScheme, t), dialogTheme: dialog_theme.DialogTheme.lerp(a.dialogTheme, b.dialogTheme, t), floatingActionButtonTheme: dart.nullCheck(floating_action_button_theme.FloatingActionButtonThemeData.lerp(a.floatingActionButtonTheme, b.floatingActionButtonTheme, t)), navigationRailTheme: dart.nullCheck(navigation_rail_theme.NavigationRailThemeData.lerp(a.navigationRailTheme, b.navigationRailTheme, t)), typography: typography$.Typography.lerp(a.typography, b.typography, t), cupertinoOverrideTheme: dart.notNull(t) < 0.5 ? a.cupertinoOverrideTheme : b.cupertinoOverrideTheme, snackBarTheme: snack_bar_theme.SnackBarThemeData.lerp(a.snackBarTheme, b.snackBarTheme, t), bottomSheetTheme: dart.nullCheck(bottom_sheet_theme.BottomSheetThemeData.lerp(a.bottomSheetTheme, b.bottomSheetTheme, t)), popupMenuTheme: dart.nullCheck(popup_menu_theme.PopupMenuThemeData.lerp(a.popupMenuTheme, b.popupMenuTheme, t)), bannerTheme: banner_theme.MaterialBannerThemeData.lerp(a.bannerTheme, b.bannerTheme, t), dividerTheme: divider_theme.DividerThemeData.lerp(a.dividerTheme, b.dividerTheme, t), buttonBarTheme: dart.nullCheck(button_bar_theme.ButtonBarThemeData.lerp(a.buttonBarTheme, b.buttonBarTheme, t)), bottomNavigationBarTheme: bottom_navigation_bar_theme.BottomNavigationBarThemeData.lerp(a.bottomNavigationBarTheme, b.bottomNavigationBarTheme, t), timePickerTheme: time_picker_theme.TimePickerThemeData.lerp(a.timePickerTheme, b.timePickerTheme, t), textButtonTheme: dart.nullCheck(text_button_theme.TextButtonThemeData.lerp(a.textButtonTheme, b.textButtonTheme, t)), elevatedButtonTheme: dart.nullCheck(elevated_button_theme.ElevatedButtonThemeData.lerp(a.elevatedButtonTheme, b.elevatedButtonTheme, t)), outlinedButtonTheme: dart.nullCheck(outlined_button_theme.OutlinedButtonThemeData.lerp(a.outlinedButtonTheme, b.outlinedButtonTheme, t)), textSelectionTheme: dart.nullCheck(text_selection_theme.TextSelectionThemeData.lerp(a.textSelectionTheme, b.textSelectionTheme, t)), dataTableTheme: data_table_theme.DataTableThemeData.lerp(a.dataTableTheme, b.dataTableTheme, t), checkboxTheme: checkbox_theme.CheckboxThemeData.lerp(a.checkboxTheme, b.checkboxTheme, t), radioTheme: radio_theme.RadioThemeData.lerp(a.radioTheme, b.radioTheme, t), switchTheme: switch_theme.SwitchThemeData.lerp(a.switchTheme, b.switchTheme, t), fixTextFieldOutlineLabel: dart.notNull(t) < 0.5 ? a.fixTextFieldOutlineLabel : b.fixTextFieldOutlineLabel, useTextSelectionTheme: dart.notNull(t) < 0.5 ? a.useTextSelectionTheme : b.useTextSelectionTheme});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return theme_data.ThemeData.is(other) && dart.equals(other.visualDensity, this.visualDensity) && dart.equals(other.primaryColor, this.primaryColor) && other.primaryColorBrightness == this.primaryColorBrightness && dart.equals(other.primaryColorLight, this.primaryColorLight) && dart.equals(other.primaryColorDark, this.primaryColorDark) && dart.equals(other.accentColor, this.accentColor) && other.accentColorBrightness == this.accentColorBrightness && dart.equals(other.canvasColor, this.canvasColor) && dart.equals(other.scaffoldBackgroundColor, this.scaffoldBackgroundColor) && dart.equals(other.bottomAppBarColor, this.bottomAppBarColor) && dart.equals(other.cardColor, this.cardColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.dividerColor, this.dividerColor) && dart.equals(other.highlightColor, this.highlightColor) && dart.equals(other.splashColor, this.splashColor) && dart.equals(other.splashFactory, this.splashFactory) && dart.equals(other.selectedRowColor, this.selectedRowColor) && dart.equals(other.unselectedWidgetColor, this.unselectedWidgetColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.buttonTheme, this.buttonTheme) && dart.equals(other.buttonColor, this.buttonColor) && dart.equals(other.toggleButtonsTheme, this.toggleButtonsTheme) && dart.equals(other.secondaryHeaderColor, this.secondaryHeaderColor) && dart.equals(other.textSelectionColor, this.textSelectionColor) && dart.equals(other.cursorColor, this.cursorColor) && dart.equals(other.textSelectionHandleColor, this.textSelectionHandleColor) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.dialogBackgroundColor, this.dialogBackgroundColor) && dart.equals(other.indicatorColor, this.indicatorColor) && dart.equals(other.hintColor, this.hintColor) && dart.equals(other.errorColor, this.errorColor) && dart.equals(other.toggleableActiveColor, this.toggleableActiveColor) && dart.equals(other.textTheme, this.textTheme) && dart.equals(other.primaryTextTheme, this.primaryTextTheme) && dart.equals(other.accentTextTheme, this.accentTextTheme) && dart.equals(other.inputDecorationTheme, this.inputDecorationTheme) && dart.equals(other.iconTheme, this.iconTheme) && dart.equals(other.primaryIconTheme, this.primaryIconTheme) && dart.equals(other.accentIconTheme, this.accentIconTheme) && dart.equals(other.sliderTheme, this.sliderTheme) && dart.equals(other.tabBarTheme, this.tabBarTheme) && dart.equals(other.tooltipTheme, this.tooltipTheme) && dart.equals(other.cardTheme, this.cardTheme) && dart.equals(other.chipTheme, this.chipTheme) && other.platform == this.platform && other.materialTapTargetSize == this.materialTapTargetSize && other.applyElevationOverlayColor == this.applyElevationOverlayColor && dart.equals(other.pageTransitionsTheme, this.pageTransitionsTheme) && dart.equals(other.appBarTheme, this.appBarTheme) && dart.equals(other.scrollbarTheme, this.scrollbarTheme) && dart.equals(other.bottomAppBarTheme, this.bottomAppBarTheme) && dart.equals(other.colorScheme, this.colorScheme) && dart.equals(other.dialogTheme, this.dialogTheme) && dart.equals(other.floatingActionButtonTheme, this.floatingActionButtonTheme) && dart.equals(other.navigationRailTheme, this.navigationRailTheme) && dart.equals(other.typography, this.typography) && dart.equals(other.cupertinoOverrideTheme, this.cupertinoOverrideTheme) && dart.equals(other.snackBarTheme, this.snackBarTheme) && dart.equals(other.bottomSheetTheme, this.bottomSheetTheme) && dart.equals(other.popupMenuTheme, this.popupMenuTheme) && dart.equals(other.bannerTheme, this.bannerTheme) && dart.equals(other.dividerTheme, this.dividerTheme) && dart.equals(other.buttonBarTheme, this.buttonBarTheme) && dart.equals(other.bottomNavigationBarTheme, this.bottomNavigationBarTheme) && dart.equals(other.timePickerTheme, this.timePickerTheme) && dart.equals(other.textButtonTheme, this.textButtonTheme) && dart.equals(other.elevatedButtonTheme, this.elevatedButtonTheme) && dart.equals(other.outlinedButtonTheme, this.outlinedButtonTheme) && dart.equals(other.textSelectionTheme, this.textSelectionTheme) && dart.equals(other.dataTableTheme, this.dataTableTheme) && dart.equals(other.checkboxTheme, this.checkboxTheme) && dart.equals(other.radioTheme, this.radioTheme) && dart.equals(other.switchTheme, this.switchTheme) && other.fixTextFieldOutlineLabel == this.fixTextFieldOutlineLabel && other.useTextSelectionTheme == this.useTextSelectionTheme;
    }
    get hashCode() {
      let values = T$.JSArrayOfObjectN().of([this.visualDensity, this.primaryColor, this.primaryColorBrightness, this.primaryColorLight, this.primaryColorDark, this.accentColor, this.accentColorBrightness, this.canvasColor, this.shadowColor, this.scaffoldBackgroundColor, this.bottomAppBarColor, this.cardColor, this.dividerColor, this.focusColor, this.hoverColor, this.highlightColor, this.splashColor, this.splashFactory, this.selectedRowColor, this.unselectedWidgetColor, this.disabledColor, this.buttonTheme, this.buttonColor, this.toggleButtonsTheme, this.toggleableActiveColor, this.secondaryHeaderColor, this.textSelectionColor, this.cursorColor, this.textSelectionHandleColor, this.backgroundColor, this.dialogBackgroundColor, this.indicatorColor, this.hintColor, this.errorColor, this.textTheme, this.primaryTextTheme, this.accentTextTheme, this.inputDecorationTheme, this.iconTheme, this.primaryIconTheme, this.accentIconTheme, this.sliderTheme, this.tabBarTheme, this.tooltipTheme, this.cardTheme, this.chipTheme, this.platform, this.materialTapTargetSize, this.applyElevationOverlayColor, this.pageTransitionsTheme, this.appBarTheme, this.scrollbarTheme, this.bottomAppBarTheme, this.colorScheme, this.dialogTheme, this.floatingActionButtonTheme, this.navigationRailTheme, this.typography, this.cupertinoOverrideTheme, this.snackBarTheme, this.bottomSheetTheme, this.popupMenuTheme, this.bannerTheme, this.dividerTheme, this.buttonBarTheme, this.bottomNavigationBarTheme, this.timePickerTheme, this.textButtonTheme, this.elevatedButtonTheme, this.outlinedButtonTheme, this.textSelectionTheme, this.dataTableTheme, this.checkboxTheme, this.radioTheme, this.switchTheme, this.fixTextFieldOutlineLabel, this.useTextSelectionTheme]);
      return ui.hashList(values);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[110], 1726, 56, "properties");
      super.debugFillProperties(properties);
      let defaultData = theme_data.ThemeData.fallback();
      properties.add(new (T$.EnumPropertyOfTargetPlatform()).new("platform", this.platform, {defaultValue: platform$.defaultTargetPlatform, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: defaultData.brightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("primaryColor", this.primaryColor, {defaultValue: defaultData.primaryColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("primaryColorBrightness", this.primaryColorBrightness, {defaultValue: defaultData.primaryColorBrightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("accentColor", this.accentColor, {defaultValue: defaultData.accentColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("accentColorBrightness", this.accentColorBrightness, {defaultValue: defaultData.accentColorBrightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("canvasColor", this.canvasColor, {defaultValue: defaultData.canvasColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: defaultData.shadowColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("scaffoldBackgroundColor", this.scaffoldBackgroundColor, {defaultValue: defaultData.scaffoldBackgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("bottomAppBarColor", this.bottomAppBarColor, {defaultValue: defaultData.bottomAppBarColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("cardColor", this.cardColor, {defaultValue: defaultData.cardColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("dividerColor", this.dividerColor, {defaultValue: defaultData.dividerColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: defaultData.focusColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: defaultData.hoverColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: defaultData.highlightColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: defaultData.splashColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("selectedRowColor", this.selectedRowColor, {defaultValue: defaultData.selectedRowColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("unselectedWidgetColor", this.unselectedWidgetColor, {defaultValue: defaultData.unselectedWidgetColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: defaultData.disabledColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("buttonColor", this.buttonColor, {defaultValue: defaultData.buttonColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("secondaryHeaderColor", this.secondaryHeaderColor, {defaultValue: defaultData.secondaryHeaderColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("textSelectionColor", this.textSelectionColor, {defaultValue: defaultData.textSelectionColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("cursorColor", this.cursorColor, {defaultValue: defaultData.cursorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("textSelectionHandleColor", this.textSelectionHandleColor, {defaultValue: defaultData.textSelectionHandleColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("dialogBackgroundColor", this.dialogBackgroundColor, {defaultValue: defaultData.dialogBackgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("indicatorColor", this.indicatorColor, {defaultValue: defaultData.indicatorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("hintColor", this.hintColor, {defaultValue: defaultData.hintColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("errorColor", this.errorColor, {defaultValue: defaultData.errorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("toggleableActiveColor", this.toggleableActiveColor, {defaultValue: defaultData.toggleableActiveColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonThemeData()).new("buttonTheme", this.buttonTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfToggleButtonsThemeData()).new("toggleButtonsTheme", this.toggleButtonsTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("textTheme", this.textTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("primaryTextTheme", this.primaryTextTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("accentTextTheme", this.accentTextTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfInputDecorationTheme()).new("inputDecorationTheme", this.inputDecorationTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("iconTheme", this.iconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("primaryIconTheme", this.primaryIconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("accentIconTheme", this.accentIconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderThemeData()).new("sliderTheme", this.sliderTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTabBarTheme()).new("tabBarTheme", this.tabBarTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTooltipThemeData()).new("tooltipTheme", this.tooltipTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfCardTheme()).new("cardTheme", this.cardTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfChipThemeData()).new("chipTheme", this.chipTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("applyElevationOverlayColor", this.applyElevationOverlayColor, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfPageTransitionsTheme()).new("pageTransitionsTheme", this.pageTransitionsTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfAppBarTheme()).new("appBarTheme", this.appBarTheme, {defaultValue: defaultData.appBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfScrollbarThemeData()).new("ScrollbarTheme", this.scrollbarTheme, {defaultValue: defaultData.scrollbarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomAppBarTheme()).new("bottomAppBarTheme", this.bottomAppBarTheme, {defaultValue: defaultData.bottomAppBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfColorScheme()).new("colorScheme", this.colorScheme, {defaultValue: defaultData.colorScheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfDialogTheme()).new("dialogTheme", this.dialogTheme, {defaultValue: defaultData.dialogTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfFloatingActionButtonThemeData()).new("floatingActionButtonThemeData", this.floatingActionButtonTheme, {defaultValue: defaultData.floatingActionButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfNavigationRailThemeData()).new("navigationRailThemeData", this.navigationRailTheme, {defaultValue: defaultData.navigationRailTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTypography()).new("typography", this.typography, {defaultValue: defaultData.typography, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfNoDefaultCupertinoThemeData()).new("cupertinoOverrideTheme", this.cupertinoOverrideTheme, {defaultValue: defaultData.cupertinoOverrideTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfSnackBarThemeData()).new("snackBarTheme", this.snackBarTheme, {defaultValue: defaultData.snackBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomSheetThemeData()).new("bottomSheetTheme", this.bottomSheetTheme, {defaultValue: defaultData.bottomSheetTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfPopupMenuThemeData()).new("popupMenuTheme", this.popupMenuTheme, {defaultValue: defaultData.popupMenuTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialBannerThemeData()).new("bannerTheme", this.bannerTheme, {defaultValue: defaultData.bannerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfDividerThemeData()).new("dividerTheme", this.dividerTheme, {defaultValue: defaultData.dividerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonBarThemeData()).new("buttonBarTheme", this.buttonBarTheme, {defaultValue: defaultData.buttonBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTimePickerThemeData()).new("timePickerTheme", this.timePickerTheme, {defaultValue: defaultData.timePickerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextSelectionThemeData()).new("textSelectionTheme", this.textSelectionTheme, {defaultValue: defaultData.textSelectionTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextSelectionThemeData()).new("textSelectionTheme", this.textSelectionTheme, {defaultValue: defaultData.textSelectionTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomNavigationBarThemeData()).new("bottomNavigationBarTheme", this.bottomNavigationBarTheme, {defaultValue: defaultData.bottomNavigationBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextButtonThemeData()).new("textButtonTheme", this.textButtonTheme, {defaultValue: defaultData.textButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfElevatedButtonThemeData()).new("elevatedButtonTheme", this.elevatedButtonTheme, {defaultValue: defaultData.elevatedButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfOutlinedButtonThemeData()).new("outlinedButtonTheme", this.outlinedButtonTheme, {defaultValue: defaultData.outlinedButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfDataTableThemeData()).new("dataTableTheme", this.dataTableTheme, {defaultValue: defaultData.dataTableTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfCheckboxThemeData()).new("checkboxTheme", this.checkboxTheme, {defaultValue: defaultData.checkboxTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfRadioThemeData()).new("radioTheme", this.radioTheme, {defaultValue: defaultData.radioTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfSwitchThemeData()).new("switchTheme", this.switchTheme, {defaultValue: defaultData.switchTheme, level: diagnostics.DiagnosticLevel.debug}));
    }
  };
  (theme_data.ThemeData.raw = function(opts) {
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    if (visualDensity == null) dart.nullFailed(I[110], 539, 19, "visualDensity");
    let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
    if (primaryColor == null) dart.nullFailed(I[110], 540, 19, "primaryColor");
    let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
    if (primaryColorBrightness == null) dart.nullFailed(I[110], 541, 19, "primaryColorBrightness");
    let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
    if (primaryColorLight == null) dart.nullFailed(I[110], 542, 19, "primaryColorLight");
    let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
    if (primaryColorDark == null) dart.nullFailed(I[110], 543, 19, "primaryColorDark");
    let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
    if (canvasColor == null) dart.nullFailed(I[110], 544, 19, "canvasColor");
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    if (shadowColor == null) dart.nullFailed(I[110], 545, 19, "shadowColor");
    let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
    if (accentColor == null) dart.nullFailed(I[110], 546, 19, "accentColor");
    let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
    if (accentColorBrightness == null) dart.nullFailed(I[110], 547, 19, "accentColorBrightness");
    let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
    if (scaffoldBackgroundColor == null) dart.nullFailed(I[110], 548, 19, "scaffoldBackgroundColor");
    let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
    if (bottomAppBarColor == null) dart.nullFailed(I[110], 549, 19, "bottomAppBarColor");
    let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
    if (cardColor == null) dart.nullFailed(I[110], 550, 19, "cardColor");
    let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
    if (dividerColor == null) dart.nullFailed(I[110], 551, 19, "dividerColor");
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    if (focusColor == null) dart.nullFailed(I[110], 552, 19, "focusColor");
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    if (hoverColor == null) dart.nullFailed(I[110], 553, 19, "hoverColor");
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    if (highlightColor == null) dart.nullFailed(I[110], 554, 19, "highlightColor");
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    if (splashColor == null) dart.nullFailed(I[110], 555, 19, "splashColor");
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    if (splashFactory == null) dart.nullFailed(I[110], 556, 19, "splashFactory");
    let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
    if (selectedRowColor == null) dart.nullFailed(I[110], 557, 19, "selectedRowColor");
    let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
    if (unselectedWidgetColor == null) dart.nullFailed(I[110], 558, 19, "unselectedWidgetColor");
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    if (disabledColor == null) dart.nullFailed(I[110], 559, 19, "disabledColor");
    let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
    if (buttonTheme == null) dart.nullFailed(I[110], 560, 19, "buttonTheme");
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    if (buttonColor == null) dart.nullFailed(I[110], 561, 19, "buttonColor");
    let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
    if (toggleButtonsTheme == null) dart.nullFailed(I[110], 562, 19, "toggleButtonsTheme");
    let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
    if (secondaryHeaderColor == null) dart.nullFailed(I[110], 563, 19, "secondaryHeaderColor");
    let textSelectionColor = opts && 'textSelectionColor' in opts ? opts.textSelectionColor : null;
    if (textSelectionColor == null) dart.nullFailed(I[110], 564, 19, "textSelectionColor");
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    if (cursorColor == null) dart.nullFailed(I[110], 565, 19, "cursorColor");
    let textSelectionHandleColor = opts && 'textSelectionHandleColor' in opts ? opts.textSelectionHandleColor : null;
    if (textSelectionHandleColor == null) dart.nullFailed(I[110], 566, 19, "textSelectionHandleColor");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    if (backgroundColor == null) dart.nullFailed(I[110], 567, 19, "backgroundColor");
    let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
    if (dialogBackgroundColor == null) dart.nullFailed(I[110], 568, 19, "dialogBackgroundColor");
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    if (indicatorColor == null) dart.nullFailed(I[110], 569, 19, "indicatorColor");
    let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
    if (hintColor == null) dart.nullFailed(I[110], 570, 19, "hintColor");
    let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
    if (errorColor == null) dart.nullFailed(I[110], 571, 19, "errorColor");
    let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
    if (toggleableActiveColor == null) dart.nullFailed(I[110], 572, 19, "toggleableActiveColor");
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    if (textTheme == null) dart.nullFailed(I[110], 573, 19, "textTheme");
    let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
    if (primaryTextTheme == null) dart.nullFailed(I[110], 574, 19, "primaryTextTheme");
    let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
    if (accentTextTheme == null) dart.nullFailed(I[110], 575, 19, "accentTextTheme");
    let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
    if (inputDecorationTheme == null) dart.nullFailed(I[110], 576, 19, "inputDecorationTheme");
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    if (iconTheme == null) dart.nullFailed(I[110], 577, 19, "iconTheme");
    let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
    if (primaryIconTheme == null) dart.nullFailed(I[110], 578, 19, "primaryIconTheme");
    let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
    if (accentIconTheme == null) dart.nullFailed(I[110], 579, 19, "accentIconTheme");
    let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
    if (sliderTheme == null) dart.nullFailed(I[110], 580, 19, "sliderTheme");
    let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
    if (tabBarTheme == null) dart.nullFailed(I[110], 581, 19, "tabBarTheme");
    let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
    if (tooltipTheme == null) dart.nullFailed(I[110], 582, 19, "tooltipTheme");
    let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
    if (cardTheme == null) dart.nullFailed(I[110], 583, 19, "cardTheme");
    let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
    if (chipTheme == null) dart.nullFailed(I[110], 584, 19, "chipTheme");
    let platform = opts && 'platform' in opts ? opts.platform : null;
    if (platform == null) dart.nullFailed(I[110], 585, 19, "platform");
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    if (materialTapTargetSize == null) dart.nullFailed(I[110], 586, 19, "materialTapTargetSize");
    let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
    if (applyElevationOverlayColor == null) dart.nullFailed(I[110], 587, 19, "applyElevationOverlayColor");
    let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
    if (pageTransitionsTheme == null) dart.nullFailed(I[110], 588, 19, "pageTransitionsTheme");
    let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
    if (appBarTheme == null) dart.nullFailed(I[110], 589, 19, "appBarTheme");
    let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
    if (scrollbarTheme == null) dart.nullFailed(I[110], 590, 19, "scrollbarTheme");
    let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
    if (bottomAppBarTheme == null) dart.nullFailed(I[110], 591, 19, "bottomAppBarTheme");
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    if (colorScheme == null) dart.nullFailed(I[110], 592, 19, "colorScheme");
    let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
    if (dialogTheme == null) dart.nullFailed(I[110], 593, 19, "dialogTheme");
    let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
    if (floatingActionButtonTheme == null) dart.nullFailed(I[110], 594, 19, "floatingActionButtonTheme");
    let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
    if (navigationRailTheme == null) dart.nullFailed(I[110], 595, 19, "navigationRailTheme");
    let typography = opts && 'typography' in opts ? opts.typography : null;
    if (typography == null) dart.nullFailed(I[110], 596, 19, "typography");
    let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
    let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
    if (snackBarTheme == null) dart.nullFailed(I[110], 598, 19, "snackBarTheme");
    let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
    if (bottomSheetTheme == null) dart.nullFailed(I[110], 599, 19, "bottomSheetTheme");
    let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
    if (popupMenuTheme == null) dart.nullFailed(I[110], 600, 19, "popupMenuTheme");
    let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
    if (bannerTheme == null) dart.nullFailed(I[110], 601, 19, "bannerTheme");
    let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
    if (dividerTheme == null) dart.nullFailed(I[110], 602, 19, "dividerTheme");
    let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
    if (buttonBarTheme == null) dart.nullFailed(I[110], 603, 19, "buttonBarTheme");
    let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
    if (bottomNavigationBarTheme == null) dart.nullFailed(I[110], 604, 19, "bottomNavigationBarTheme");
    let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
    if (timePickerTheme == null) dart.nullFailed(I[110], 605, 19, "timePickerTheme");
    let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
    if (textButtonTheme == null) dart.nullFailed(I[110], 606, 19, "textButtonTheme");
    let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
    if (elevatedButtonTheme == null) dart.nullFailed(I[110], 607, 19, "elevatedButtonTheme");
    let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
    if (outlinedButtonTheme == null) dart.nullFailed(I[110], 608, 19, "outlinedButtonTheme");
    let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
    if (textSelectionTheme == null) dart.nullFailed(I[110], 609, 19, "textSelectionTheme");
    let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
    if (dataTableTheme == null) dart.nullFailed(I[110], 610, 19, "dataTableTheme");
    let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
    if (checkboxTheme == null) dart.nullFailed(I[110], 611, 19, "checkboxTheme");
    let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
    if (radioTheme == null) dart.nullFailed(I[110], 612, 19, "radioTheme");
    let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
    if (switchTheme == null) dart.nullFailed(I[110], 613, 19, "switchTheme");
    let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
    if (fixTextFieldOutlineLabel == null) dart.nullFailed(I[110], 614, 19, "fixTextFieldOutlineLabel");
    let useTextSelectionTheme = opts && 'useTextSelectionTheme' in opts ? opts.useTextSelectionTheme : null;
    if (useTextSelectionTheme == null) dart.nullFailed(I[110], 615, 19, "useTextSelectionTheme");
    this[S$0.visualDensity$10] = visualDensity;
    this[S$0.primaryColor] = primaryColor;
    this[S$0.primaryColorBrightness] = primaryColorBrightness;
    this[S$0.primaryColorLight] = primaryColorLight;
    this[S$0.primaryColorDark] = primaryColorDark;
    this[S$0.canvasColor] = canvasColor;
    this[S$0.shadowColor$3] = shadowColor;
    this[S$0.accentColor] = accentColor;
    this[S$0.accentColorBrightness] = accentColorBrightness;
    this[S$0.scaffoldBackgroundColor] = scaffoldBackgroundColor;
    this[S$0.bottomAppBarColor] = bottomAppBarColor;
    this[S$0.cardColor] = cardColor;
    this[S$0.dividerColor] = dividerColor;
    this[S$0.focusColor$11] = focusColor;
    this[S$0.hoverColor$12] = hoverColor;
    this[S$0.highlightColor$7] = highlightColor;
    this[S$0.splashColor$8] = splashColor;
    this[S$0.splashFactory$2] = splashFactory;
    this[S$0.selectedRowColor] = selectedRowColor;
    this[S$0.unselectedWidgetColor] = unselectedWidgetColor;
    this[S$0.disabledColor$4] = disabledColor;
    this[S$0.buttonTheme] = buttonTheme;
    this[S$0.buttonColor] = buttonColor;
    this[S$0.toggleButtonsTheme] = toggleButtonsTheme;
    this[S$0.secondaryHeaderColor] = secondaryHeaderColor;
    this[S$0.textSelectionColor] = textSelectionColor;
    this[S$0.cursorColor$1] = cursorColor;
    this[S$0.textSelectionHandleColor] = textSelectionHandleColor;
    this[S$0.backgroundColor$16] = backgroundColor;
    this[S$0.dialogBackgroundColor] = dialogBackgroundColor;
    this[S$0.indicatorColor$1] = indicatorColor;
    this[S$0.hintColor] = hintColor;
    this[S$0.errorColor] = errorColor;
    this[S$0.toggleableActiveColor] = toggleableActiveColor;
    this[S$0.textTheme$2] = textTheme;
    this[S$0.primaryTextTheme] = primaryTextTheme;
    this[S$0.accentTextTheme] = accentTextTheme;
    this[S$0.inputDecorationTheme$1] = inputDecorationTheme;
    this[S$0.iconTheme] = iconTheme;
    this[S$0.primaryIconTheme] = primaryIconTheme;
    this[S$0.accentIconTheme] = accentIconTheme;
    this[S$0.sliderTheme] = sliderTheme;
    this[S$0.tabBarTheme] = tabBarTheme;
    this[S$0.tooltipTheme] = tooltipTheme;
    this[S$0.cardTheme] = cardTheme;
    this[S$0.chipTheme] = chipTheme;
    this[S$0.platform] = platform;
    this[S$0.materialTapTargetSize$7] = materialTapTargetSize;
    this[S$0.applyElevationOverlayColor] = applyElevationOverlayColor;
    this[S$0.pageTransitionsTheme] = pageTransitionsTheme;
    this[S$0.appBarTheme] = appBarTheme;
    this[S$0.scrollbarTheme] = scrollbarTheme;
    this[S$0.bottomAppBarTheme] = bottomAppBarTheme;
    this[S$0.colorScheme] = colorScheme;
    this[S$1.dialogTheme] = dialogTheme;
    this[S$1.floatingActionButtonTheme] = floatingActionButtonTheme;
    this[S$1.navigationRailTheme] = navigationRailTheme;
    this[S$1.typography] = typography;
    this[S$1.cupertinoOverrideTheme] = cupertinoOverrideTheme;
    this[S$0.snackBarTheme] = snackBarTheme;
    this[S$1.bottomSheetTheme] = bottomSheetTheme;
    this[S$1.popupMenuTheme] = popupMenuTheme;
    this[S$1.bannerTheme] = bannerTheme;
    this[S$1.dividerTheme] = dividerTheme;
    this[S$1.buttonBarTheme] = buttonBarTheme;
    this[S$1.bottomNavigationBarTheme] = bottomNavigationBarTheme;
    this[S$1.timePickerTheme] = timePickerTheme;
    this[S$1.textButtonTheme] = textButtonTheme;
    this[S$1.elevatedButtonTheme] = elevatedButtonTheme;
    this[S$1.outlinedButtonTheme] = outlinedButtonTheme;
    this[S$1.textSelectionTheme] = textSelectionTheme;
    this[S$1.dataTableTheme] = dataTableTheme;
    this[S$1.checkboxTheme] = checkboxTheme;
    this[S$1.radioTheme] = radioTheme;
    this[S$1.switchTheme] = switchTheme;
    this[S$1.fixTextFieldOutlineLabel$1] = fixTextFieldOutlineLabel;
    this[S$1.useTextSelectionTheme] = useTextSelectionTheme;
    if (!(visualDensity != null)) dart.assertFailed(null, I[110], 616, 15, "visualDensity != null");
    if (!(primaryColor != null)) dart.assertFailed(null, I[110], 617, 15, "primaryColor != null");
    if (!(primaryColorBrightness != null)) dart.assertFailed(null, I[110], 618, 15, "primaryColorBrightness != null");
    if (!(primaryColorLight != null)) dart.assertFailed(null, I[110], 619, 15, "primaryColorLight != null");
    if (!(primaryColorDark != null)) dart.assertFailed(null, I[110], 620, 15, "primaryColorDark != null");
    if (!(accentColor != null)) dart.assertFailed(null, I[110], 621, 15, "accentColor != null");
    if (!(accentColorBrightness != null)) dart.assertFailed(null, I[110], 622, 15, "accentColorBrightness != null");
    if (!(canvasColor != null)) dart.assertFailed(null, I[110], 623, 15, "canvasColor != null");
    if (!(shadowColor != null)) dart.assertFailed(null, I[110], 624, 15, "shadowColor != null");
    if (!(scaffoldBackgroundColor != null)) dart.assertFailed(null, I[110], 625, 15, "scaffoldBackgroundColor != null");
    if (!(bottomAppBarColor != null)) dart.assertFailed(null, I[110], 626, 15, "bottomAppBarColor != null");
    if (!(cardColor != null)) dart.assertFailed(null, I[110], 627, 15, "cardColor != null");
    if (!(dividerColor != null)) dart.assertFailed(null, I[110], 628, 15, "dividerColor != null");
    if (!(focusColor != null)) dart.assertFailed(null, I[110], 629, 15, "focusColor != null");
    if (!(hoverColor != null)) dart.assertFailed(null, I[110], 630, 15, "hoverColor != null");
    if (!(highlightColor != null)) dart.assertFailed(null, I[110], 631, 15, "highlightColor != null");
    if (!(splashColor != null)) dart.assertFailed(null, I[110], 632, 15, "splashColor != null");
    if (!(splashFactory != null)) dart.assertFailed(null, I[110], 633, 15, "splashFactory != null");
    if (!(selectedRowColor != null)) dart.assertFailed(null, I[110], 634, 15, "selectedRowColor != null");
    if (!(unselectedWidgetColor != null)) dart.assertFailed(null, I[110], 635, 15, "unselectedWidgetColor != null");
    if (!(disabledColor != null)) dart.assertFailed(null, I[110], 636, 15, "disabledColor != null");
    if (!(toggleableActiveColor != null)) dart.assertFailed(null, I[110], 637, 15, "toggleableActiveColor != null");
    if (!(buttonTheme != null)) dart.assertFailed(null, I[110], 638, 15, "buttonTheme != null");
    if (!(toggleButtonsTheme != null)) dart.assertFailed(null, I[110], 639, 15, "toggleButtonsTheme != null");
    if (!(secondaryHeaderColor != null)) dart.assertFailed(null, I[110], 640, 15, "secondaryHeaderColor != null");
    if (!(textSelectionColor != null)) dart.assertFailed(null, I[110], 641, 15, "textSelectionColor != null");
    if (!(cursorColor != null)) dart.assertFailed(null, I[110], 642, 15, "cursorColor != null");
    if (!(textSelectionHandleColor != null)) dart.assertFailed(null, I[110], 643, 15, "textSelectionHandleColor != null");
    if (!(backgroundColor != null)) dart.assertFailed(null, I[110], 644, 15, "backgroundColor != null");
    if (!(dialogBackgroundColor != null)) dart.assertFailed(null, I[110], 645, 15, "dialogBackgroundColor != null");
    if (!(indicatorColor != null)) dart.assertFailed(null, I[110], 646, 15, "indicatorColor != null");
    if (!(hintColor != null)) dart.assertFailed(null, I[110], 647, 15, "hintColor != null");
    if (!(errorColor != null)) dart.assertFailed(null, I[110], 648, 15, "errorColor != null");
    if (!(textTheme != null)) dart.assertFailed(null, I[110], 649, 15, "textTheme != null");
    if (!(primaryTextTheme != null)) dart.assertFailed(null, I[110], 650, 15, "primaryTextTheme != null");
    if (!(accentTextTheme != null)) dart.assertFailed(null, I[110], 651, 15, "accentTextTheme != null");
    if (!(inputDecorationTheme != null)) dart.assertFailed(null, I[110], 652, 15, "inputDecorationTheme != null");
    if (!(iconTheme != null)) dart.assertFailed(null, I[110], 653, 15, "iconTheme != null");
    if (!(primaryIconTheme != null)) dart.assertFailed(null, I[110], 654, 15, "primaryIconTheme != null");
    if (!(accentIconTheme != null)) dart.assertFailed(null, I[110], 655, 15, "accentIconTheme != null");
    if (!(sliderTheme != null)) dart.assertFailed(null, I[110], 656, 15, "sliderTheme != null");
    if (!(tabBarTheme != null)) dart.assertFailed(null, I[110], 657, 15, "tabBarTheme != null");
    if (!(tooltipTheme != null)) dart.assertFailed(null, I[110], 658, 15, "tooltipTheme != null");
    if (!(cardTheme != null)) dart.assertFailed(null, I[110], 659, 15, "cardTheme != null");
    if (!(chipTheme != null)) dart.assertFailed(null, I[110], 660, 15, "chipTheme != null");
    if (!(platform != null)) dart.assertFailed(null, I[110], 661, 15, "platform != null");
    if (!(materialTapTargetSize != null)) dart.assertFailed(null, I[110], 662, 15, "materialTapTargetSize != null");
    if (!(pageTransitionsTheme != null)) dart.assertFailed(null, I[110], 663, 15, "pageTransitionsTheme != null");
    if (!(appBarTheme != null)) dart.assertFailed(null, I[110], 664, 15, "appBarTheme != null");
    if (!(scrollbarTheme != null)) dart.assertFailed(null, I[110], 665, 15, "scrollbarTheme != null");
    if (!(bottomAppBarTheme != null)) dart.assertFailed(null, I[110], 666, 15, "bottomAppBarTheme != null");
    if (!(colorScheme != null)) dart.assertFailed(null, I[110], 667, 15, "colorScheme != null");
    if (!(dialogTheme != null)) dart.assertFailed(null, I[110], 668, 15, "dialogTheme != null");
    if (!(floatingActionButtonTheme != null)) dart.assertFailed(null, I[110], 669, 15, "floatingActionButtonTheme != null");
    if (!(navigationRailTheme != null)) dart.assertFailed(null, I[110], 670, 15, "navigationRailTheme != null");
    if (!(typography != null)) dart.assertFailed(null, I[110], 671, 15, "typography != null");
    if (!(snackBarTheme != null)) dart.assertFailed(null, I[110], 672, 15, "snackBarTheme != null");
    if (!(bottomSheetTheme != null)) dart.assertFailed(null, I[110], 673, 15, "bottomSheetTheme != null");
    if (!(popupMenuTheme != null)) dart.assertFailed(null, I[110], 674, 15, "popupMenuTheme != null");
    if (!(bannerTheme != null)) dart.assertFailed(null, I[110], 675, 15, "bannerTheme != null");
    if (!(dividerTheme != null)) dart.assertFailed(null, I[110], 676, 15, "dividerTheme != null");
    if (!(buttonBarTheme != null)) dart.assertFailed(null, I[110], 677, 15, "buttonBarTheme != null");
    if (!(bottomNavigationBarTheme != null)) dart.assertFailed(null, I[110], 678, 15, "bottomNavigationBarTheme != null");
    if (!(timePickerTheme != null)) dart.assertFailed(null, I[110], 679, 15, "timePickerTheme != null");
    if (!(textButtonTheme != null)) dart.assertFailed(null, I[110], 680, 15, "textButtonTheme != null");
    if (!(elevatedButtonTheme != null)) dart.assertFailed(null, I[110], 681, 15, "elevatedButtonTheme != null");
    if (!(outlinedButtonTheme != null)) dart.assertFailed(null, I[110], 682, 15, "outlinedButtonTheme != null");
    if (!(textSelectionTheme != null)) dart.assertFailed(null, I[110], 683, 15, "textSelectionTheme != null");
    if (!(dataTableTheme != null)) dart.assertFailed(null, I[110], 684, 15, "dataTableTheme != null");
    if (!(checkboxTheme != null)) dart.assertFailed(null, I[110], 685, 15, "checkboxTheme != null");
    if (!(radioTheme != null)) dart.assertFailed(null, I[110], 686, 15, "radioTheme != null");
    if (!(switchTheme != null)) dart.assertFailed(null, I[110], 687, 15, "switchTheme != null");
    if (!(fixTextFieldOutlineLabel != null)) dart.assertFailed(null, I[110], 688, 15, "fixTextFieldOutlineLabel != null");
    if (!(useTextSelectionTheme != null)) dart.assertFailed(null, I[110], 689, 15, "useTextSelectionTheme != null");
    ;
  }).prototype = theme_data.ThemeData.prototype;
  dart.addTypeTests(theme_data.ThemeData);
  dart.addTypeCaches(theme_data.ThemeData);
  dart.setMethodSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getMethods(theme_data.ThemeData.__proto__),
    copyWith: dart.fnType(theme_data.ThemeData, [], {accentColor: dart.nullable(ui.Color), accentColorBrightness: dart.nullable(ui.Brightness), accentIconTheme: dart.nullable(icon_theme_data.IconThemeData), accentTextTheme: dart.nullable(text_theme.TextTheme), appBarTheme: dart.nullable(app_bar_theme.AppBarTheme), applyElevationOverlayColor: dart.nullable(core.bool), backgroundColor: dart.nullable(ui.Color), bannerTheme: dart.nullable(banner_theme.MaterialBannerThemeData), bottomAppBarColor: dart.nullable(ui.Color), bottomAppBarTheme: dart.nullable(bottom_app_bar_theme.BottomAppBarTheme), bottomNavigationBarTheme: dart.nullable(bottom_navigation_bar_theme.BottomNavigationBarThemeData), bottomSheetTheme: dart.nullable(bottom_sheet_theme.BottomSheetThemeData), brightness: dart.nullable(ui.Brightness), buttonBarTheme: dart.nullable(button_bar_theme.ButtonBarThemeData), buttonColor: dart.nullable(ui.Color), buttonTheme: dart.nullable(button_theme.ButtonThemeData), canvasColor: dart.nullable(ui.Color), cardColor: dart.nullable(ui.Color), cardTheme: dart.nullable(card_theme.CardTheme), checkboxTheme: dart.nullable(checkbox_theme.CheckboxThemeData), chipTheme: dart.nullable(chip_theme.ChipThemeData), colorScheme: dart.nullable(color_scheme.ColorScheme), cupertinoOverrideTheme: dart.nullable(theme.NoDefaultCupertinoThemeData), cursorColor: dart.nullable(ui.Color), dataTableTheme: dart.nullable(data_table_theme.DataTableThemeData), dialogBackgroundColor: dart.nullable(ui.Color), dialogTheme: dart.nullable(dialog_theme.DialogTheme), disabledColor: dart.nullable(ui.Color), dividerColor: dart.nullable(ui.Color), dividerTheme: dart.nullable(divider_theme.DividerThemeData), elevatedButtonTheme: dart.nullable(elevated_button_theme.ElevatedButtonThemeData), errorColor: dart.nullable(ui.Color), fixTextFieldOutlineLabel: dart.nullable(core.bool), floatingActionButtonTheme: dart.nullable(floating_action_button_theme.FloatingActionButtonThemeData), focusColor: dart.nullable(ui.Color), highlightColor: dart.nullable(ui.Color), hintColor: dart.nullable(ui.Color), hoverColor: dart.nullable(ui.Color), iconTheme: dart.nullable(icon_theme_data.IconThemeData), indicatorColor: dart.nullable(ui.Color), inputDecorationTheme: dart.nullable(input_decorator.InputDecorationTheme), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), navigationRailTheme: dart.nullable(navigation_rail_theme.NavigationRailThemeData), outlinedButtonTheme: dart.nullable(outlined_button_theme.OutlinedButtonThemeData), pageTransitionsTheme: dart.nullable(page_transitions_theme.PageTransitionsTheme), platform: dart.nullable(platform$.TargetPlatform), popupMenuTheme: dart.nullable(popup_menu_theme.PopupMenuThemeData), primaryColor: dart.nullable(ui.Color), primaryColorBrightness: dart.nullable(ui.Brightness), primaryColorDark: dart.nullable(ui.Color), primaryColorLight: dart.nullable(ui.Color), primaryIconTheme: dart.nullable(icon_theme_data.IconThemeData), primaryTextTheme: dart.nullable(text_theme.TextTheme), radioTheme: dart.nullable(radio_theme.RadioThemeData), scaffoldBackgroundColor: dart.nullable(ui.Color), scrollbarTheme: dart.nullable(scrollbar_theme.ScrollbarThemeData), secondaryHeaderColor: dart.nullable(ui.Color), selectedRowColor: dart.nullable(ui.Color), shadowColor: dart.nullable(ui.Color), sliderTheme: dart.nullable(slider_theme.SliderThemeData), snackBarTheme: dart.nullable(snack_bar_theme.SnackBarThemeData), splashColor: dart.nullable(ui.Color), splashFactory: dart.nullable(ink_well.InteractiveInkFeatureFactory), switchTheme: dart.nullable(switch_theme.SwitchThemeData), tabBarTheme: dart.nullable(tab_bar_theme.TabBarTheme), textButtonTheme: dart.nullable(text_button_theme.TextButtonThemeData), textSelectionColor: dart.nullable(ui.Color), textSelectionHandleColor: dart.nullable(ui.Color), textSelectionTheme: dart.nullable(text_selection_theme.TextSelectionThemeData), textTheme: dart.nullable(text_theme.TextTheme), timePickerTheme: dart.nullable(time_picker_theme.TimePickerThemeData), toggleButtonsTheme: dart.nullable(toggle_buttons_theme.ToggleButtonsThemeData), toggleableActiveColor: dart.nullable(ui.Color), tooltipTheme: dart.nullable(tooltip_theme.TooltipThemeData), typography: dart.nullable(typography$.Typography), unselectedWidgetColor: dart.nullable(ui.Color), useTextSelectionTheme: dart.nullable(core.bool), visualDensity: dart.nullable(theme_data.VisualDensity)}, {})
  }));
  dart.setGetterSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getGetters(theme_data.ThemeData.__proto__),
    brightness: ui.Brightness
  }));
  dart.setLibraryUri(theme_data.ThemeData, I[111]);
  dart.setFieldSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getFields(theme_data.ThemeData.__proto__),
    visualDensity: dart.finalFieldType(theme_data.VisualDensity),
    primaryColor: dart.finalFieldType(ui.Color),
    primaryColorBrightness: dart.finalFieldType(ui.Brightness),
    primaryColorLight: dart.finalFieldType(ui.Color),
    primaryColorDark: dart.finalFieldType(ui.Color),
    canvasColor: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color),
    accentColor: dart.finalFieldType(ui.Color),
    accentColorBrightness: dart.finalFieldType(ui.Brightness),
    scaffoldBackgroundColor: dart.finalFieldType(ui.Color),
    bottomAppBarColor: dart.finalFieldType(ui.Color),
    cardColor: dart.finalFieldType(ui.Color),
    dividerColor: dart.finalFieldType(ui.Color),
    focusColor: dart.finalFieldType(ui.Color),
    hoverColor: dart.finalFieldType(ui.Color),
    highlightColor: dart.finalFieldType(ui.Color),
    splashColor: dart.finalFieldType(ui.Color),
    splashFactory: dart.finalFieldType(ink_well.InteractiveInkFeatureFactory),
    selectedRowColor: dart.finalFieldType(ui.Color),
    unselectedWidgetColor: dart.finalFieldType(ui.Color),
    disabledColor: dart.finalFieldType(ui.Color),
    buttonTheme: dart.finalFieldType(button_theme.ButtonThemeData),
    toggleButtonsTheme: dart.finalFieldType(toggle_buttons_theme.ToggleButtonsThemeData),
    buttonColor: dart.finalFieldType(ui.Color),
    secondaryHeaderColor: dart.finalFieldType(ui.Color),
    textSelectionColor: dart.finalFieldType(ui.Color),
    cursorColor: dart.finalFieldType(ui.Color),
    textSelectionHandleColor: dart.finalFieldType(ui.Color),
    backgroundColor: dart.finalFieldType(ui.Color),
    dialogBackgroundColor: dart.finalFieldType(ui.Color),
    indicatorColor: dart.finalFieldType(ui.Color),
    hintColor: dart.finalFieldType(ui.Color),
    errorColor: dart.finalFieldType(ui.Color),
    toggleableActiveColor: dart.finalFieldType(ui.Color),
    textTheme: dart.finalFieldType(text_theme.TextTheme),
    primaryTextTheme: dart.finalFieldType(text_theme.TextTheme),
    accentTextTheme: dart.finalFieldType(text_theme.TextTheme),
    inputDecorationTheme: dart.finalFieldType(input_decorator.InputDecorationTheme),
    iconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    primaryIconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    accentIconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    sliderTheme: dart.finalFieldType(slider_theme.SliderThemeData),
    tabBarTheme: dart.finalFieldType(tab_bar_theme.TabBarTheme),
    tooltipTheme: dart.finalFieldType(tooltip_theme.TooltipThemeData),
    cardTheme: dart.finalFieldType(card_theme.CardTheme),
    chipTheme: dart.finalFieldType(chip_theme.ChipThemeData),
    platform: dart.finalFieldType(platform$.TargetPlatform),
    materialTapTargetSize: dart.finalFieldType(theme_data.MaterialTapTargetSize),
    applyElevationOverlayColor: dart.finalFieldType(core.bool),
    pageTransitionsTheme: dart.finalFieldType(page_transitions_theme.PageTransitionsTheme),
    appBarTheme: dart.finalFieldType(app_bar_theme.AppBarTheme),
    scrollbarTheme: dart.finalFieldType(scrollbar_theme.ScrollbarThemeData),
    bottomAppBarTheme: dart.finalFieldType(bottom_app_bar_theme.BottomAppBarTheme),
    colorScheme: dart.finalFieldType(color_scheme.ColorScheme),
    snackBarTheme: dart.finalFieldType(snack_bar_theme.SnackBarThemeData),
    dialogTheme: dart.finalFieldType(dialog_theme.DialogTheme),
    floatingActionButtonTheme: dart.finalFieldType(floating_action_button_theme.FloatingActionButtonThemeData),
    navigationRailTheme: dart.finalFieldType(navigation_rail_theme.NavigationRailThemeData),
    typography: dart.finalFieldType(typography$.Typography),
    cupertinoOverrideTheme: dart.finalFieldType(dart.nullable(theme.NoDefaultCupertinoThemeData)),
    bottomSheetTheme: dart.finalFieldType(bottom_sheet_theme.BottomSheetThemeData),
    popupMenuTheme: dart.finalFieldType(popup_menu_theme.PopupMenuThemeData),
    bannerTheme: dart.finalFieldType(banner_theme.MaterialBannerThemeData),
    dividerTheme: dart.finalFieldType(divider_theme.DividerThemeData),
    buttonBarTheme: dart.finalFieldType(button_bar_theme.ButtonBarThemeData),
    bottomNavigationBarTheme: dart.finalFieldType(bottom_navigation_bar_theme.BottomNavigationBarThemeData),
    timePickerTheme: dart.finalFieldType(time_picker_theme.TimePickerThemeData),
    textButtonTheme: dart.finalFieldType(text_button_theme.TextButtonThemeData),
    elevatedButtonTheme: dart.finalFieldType(elevated_button_theme.ElevatedButtonThemeData),
    outlinedButtonTheme: dart.finalFieldType(outlined_button_theme.OutlinedButtonThemeData),
    textSelectionTheme: dart.finalFieldType(text_selection_theme.TextSelectionThemeData),
    dataTableTheme: dart.finalFieldType(data_table_theme.DataTableThemeData),
    checkboxTheme: dart.finalFieldType(checkbox_theme.CheckboxThemeData),
    radioTheme: dart.finalFieldType(radio_theme.RadioThemeData),
    switchTheme: dart.finalFieldType(switch_theme.SwitchThemeData),
    fixTextFieldOutlineLabel: dart.finalFieldType(core.bool),
    useTextSelectionTheme: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(theme_data.ThemeData, ['_equals']);
  dart.defineExtensionAccessors(theme_data.ThemeData, ['hashCode']);
  dart.defineLazy(theme_data.ThemeData, {
    /*theme_data.ThemeData._localizedThemeDataCacheSize*/get _localizedThemeDataCacheSize() {
      return 5;
    },
    /*theme_data.ThemeData._localizedThemeDataCache*/get _localizedThemeDataCache() {
      return new (T$._FifoCacheOf_IdentityThemeDataCacheKey$ThemeData()).new(5);
    }
  }, false);
  theme_data.MaterialBasedCupertinoThemeData = class MaterialBasedCupertinoThemeData extends theme.CupertinoThemeData {
    get brightness() {
      let t62;
      t62 = this[S$1._cupertinoOverrideTheme].brightness;
      return t62 == null ? this[S$1._materialTheme].brightness : t62;
    }
    get primaryColor() {
      let t62;
      t62 = this[S$1._cupertinoOverrideTheme].primaryColor;
      return t62 == null ? this[S$1._materialTheme].colorScheme.primary : t62;
    }
    get primaryContrastingColor() {
      let t62;
      t62 = this[S$1._cupertinoOverrideTheme].primaryContrastingColor;
      return t62 == null ? this[S$1._materialTheme].colorScheme.onPrimary : t62;
    }
    get scaffoldBackgroundColor() {
      let t62;
      t62 = this[S$1._cupertinoOverrideTheme].scaffoldBackgroundColor;
      return t62 == null ? this[S$1._materialTheme].scaffoldBackgroundColor : t62;
    }
    copyWith(opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryContrastingColor = opts && 'primaryContrastingColor' in opts ? opts.primaryContrastingColor : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let barBackgroundColor = opts && 'barBackgroundColor' in opts ? opts.barBackgroundColor : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      return new theme_data.MaterialBasedCupertinoThemeData.__(this[S$1._materialTheme], this[S$1._cupertinoOverrideTheme].copyWith({brightness: brightness, primaryColor: primaryColor, primaryContrastingColor: primaryContrastingColor, textTheme: textTheme, barBackgroundColor: barBackgroundColor, scaffoldBackgroundColor: scaffoldBackgroundColor}));
    }
    resolveFrom(context) {
      if (context == null) dart.nullFailed(I[110], 1912, 47, "context");
      return new theme_data.MaterialBasedCupertinoThemeData.__(this[S$1._materialTheme], this[S$1._cupertinoOverrideTheme].resolveFrom(context));
    }
  };
  (theme_data.MaterialBasedCupertinoThemeData.new = function(opts) {
    let t62;
    let materialTheme = opts && 'materialTheme' in opts ? opts.materialTheme : null;
    if (materialTheme == null) dart.nullFailed(I[110], 1840, 24, "materialTheme");
    theme_data.MaterialBasedCupertinoThemeData.__.call(this, materialTheme, (t62 = materialTheme.cupertinoOverrideTheme, t62 == null ? C[2228] || CT.C2228 : t62).noDefault());
  }).prototype = theme_data.MaterialBasedCupertinoThemeData.prototype;
  (theme_data.MaterialBasedCupertinoThemeData.__ = function(_materialTheme, _cupertinoOverrideTheme) {
    if (_materialTheme == null) dart.nullFailed(I[110], 1847, 10, "_materialTheme");
    if (_cupertinoOverrideTheme == null) dart.nullFailed(I[110], 1848, 10, "_cupertinoOverrideTheme");
    this[S$1._materialTheme] = _materialTheme;
    this[S$1._cupertinoOverrideTheme] = _cupertinoOverrideTheme;
    if (!(_materialTheme != null)) dart.assertFailed(null, I[110], 1849, 14, "_materialTheme != null");
    if (!(_cupertinoOverrideTheme != null)) dart.assertFailed(null, I[110], 1850, 14, "_cupertinoOverrideTheme != null");
    theme_data.MaterialBasedCupertinoThemeData.__proto__.raw.call(this, _cupertinoOverrideTheme.brightness, _cupertinoOverrideTheme.primaryColor, _cupertinoOverrideTheme.primaryContrastingColor, _cupertinoOverrideTheme.textTheme, _cupertinoOverrideTheme.barBackgroundColor, _cupertinoOverrideTheme.scaffoldBackgroundColor);
    ;
  }).prototype = theme_data.MaterialBasedCupertinoThemeData.prototype;
  dart.addTypeTests(theme_data.MaterialBasedCupertinoThemeData);
  dart.addTypeCaches(theme_data.MaterialBasedCupertinoThemeData);
  dart.setMethodSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getMethods(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    copyWith: dart.fnType(theme_data.MaterialBasedCupertinoThemeData, [], {barBackgroundColor: dart.nullable(ui.Color), brightness: dart.nullable(ui.Brightness), primaryColor: dart.nullable(ui.Color), primaryContrastingColor: dart.nullable(ui.Color), scaffoldBackgroundColor: dart.nullable(ui.Color), textTheme: dart.nullable(text_theme$.CupertinoTextThemeData)}, {})
  }));
  dart.setGetterSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getGetters(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    brightness: ui.Brightness
  }));
  dart.setLibraryUri(theme_data.MaterialBasedCupertinoThemeData, I[111]);
  dart.setFieldSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getFields(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    [S$1._materialTheme]: dart.finalFieldType(theme_data.ThemeData),
    [S$1._cupertinoOverrideTheme]: dart.finalFieldType(theme.NoDefaultCupertinoThemeData)
  }));
  theme_data._IdentityThemeDataCacheKey = class _IdentityThemeDataCacheKey extends core.Object {
    get baseTheme() {
      return this[S$1.baseTheme];
    }
    set baseTheme(value) {
      super.baseTheme = value;
    }
    get localTextGeometry() {
      return this[S$1.localTextGeometry];
    }
    set localTextGeometry(value) {
      super.localTextGeometry = value;
    }
    get hashCode() {
      return (dart.notNull(core.identityHashCode(this.baseTheme)) ^ dart.notNull(core.identityHashCode(this.localTextGeometry))) >>> 0;
    }
    _equals(other) {
      if (other == null) return false;
      return theme_data._IdentityThemeDataCacheKey.is(other) && other.baseTheme == this.baseTheme && other.localTextGeometry == this.localTextGeometry;
    }
  };
  (theme_data._IdentityThemeDataCacheKey.new = function(baseTheme, localTextGeometry) {
    if (baseTheme == null) dart.nullFailed(I[110], 1924, 41, "baseTheme");
    if (localTextGeometry == null) dart.nullFailed(I[110], 1924, 57, "localTextGeometry");
    this[S$1.baseTheme] = baseTheme;
    this[S$1.localTextGeometry] = localTextGeometry;
    ;
  }).prototype = theme_data._IdentityThemeDataCacheKey.prototype;
  dart.addTypeTests(theme_data._IdentityThemeDataCacheKey);
  dart.addTypeCaches(theme_data._IdentityThemeDataCacheKey);
  dart.setLibraryUri(theme_data._IdentityThemeDataCacheKey, I[111]);
  dart.setFieldSignature(theme_data._IdentityThemeDataCacheKey, () => ({
    __proto__: dart.getFields(theme_data._IdentityThemeDataCacheKey.__proto__),
    baseTheme: dart.finalFieldType(theme_data.ThemeData),
    localTextGeometry: dart.finalFieldType(text_theme.TextTheme)
  }));
  dart.defineExtensionMethods(theme_data._IdentityThemeDataCacheKey, ['_equals']);
  dart.defineExtensionAccessors(theme_data._IdentityThemeDataCacheKey, ['hashCode']);
  const _is__FifoCache_default = Symbol('_is__FifoCache_default');
  theme_data._FifoCache$ = dart.generic((K, V) => {
    var LinkedMapOfK$V = () => (LinkedMapOfK$V = dart.constFn(_js_helper.LinkedMap$(K, V)))();
    var VoidToV = () => (VoidToV = dart.constFn(dart.fnType(V, [])))();
    class _FifoCache extends core.Object {
      putIfAbsent(key, loader) {
        let t64, t63, t62;
        K.as(key);
        VoidToV().as(loader);
        if (loader == null) dart.nullFailed(I[110], 1967, 26, "loader");
        if (!(key != null)) dart.assertFailed(null, I[110], 1968, 12, "key != null");
        if (!(loader != null)) dart.assertFailed(null, I[110], 1969, 12, "loader != null");
        let result = this[S$1._cache][S.$_get](key);
        if (result != null) return result;
        if (this[S$1._cache][S.$length] == this[S$1._maximumSize]) this[S$1._cache][S.$remove](this[S$1._cache][S.$keys][S$1.$first]);
        t62 = this[S$1._cache];
        t63 = key;
        t64 = loader();
        t62[S.$_set](t63, t64);
        return t64;
      }
    }
    (_FifoCache.new = function(_maximumSize) {
      if (_maximumSize == null) dart.nullFailed(I[110], 1950, 19, "_maximumSize");
      this[S$1._cache] = new (LinkedMapOfK$V()).new();
      this[S$1._maximumSize] = _maximumSize;
      if (!(_maximumSize != null && dart.notNull(_maximumSize) > 0)) dart.assertFailed(null, I[110], 1950, 42, "_maximumSize != null && _maximumSize > 0");
      ;
    }).prototype = _FifoCache.prototype;
    dart.addTypeTests(_FifoCache);
    _FifoCache.prototype[_is__FifoCache_default] = true;
    dart.addTypeCaches(_FifoCache);
    dart.setMethodSignature(_FifoCache, () => ({
      __proto__: dart.getMethods(_FifoCache.__proto__),
      putIfAbsent: dart.fnType(V, [dart.nullable(core.Object), dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(_FifoCache, I[111]);
    dart.setFieldSignature(_FifoCache, () => ({
      __proto__: dart.getFields(_FifoCache.__proto__),
      [S$1._cache]: dart.finalFieldType(core.Map$(K, V)),
      [S$1._maximumSize]: dart.finalFieldType(core.int)
    }));
    return _FifoCache;
  });
  theme_data._FifoCache = theme_data._FifoCache$();
  dart.addTypeTests(theme_data._FifoCache, _is__FifoCache_default);
  const Object_Diagnosticable$36$26 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$26.new = function() {
  }).prototype = Object_Diagnosticable$36$26.prototype;
  dart.applyMixin(Object_Diagnosticable$36$26, diagnostics.Diagnosticable);
  theme_data.VisualDensity = class VisualDensity extends Object_Diagnosticable$36$26 {
    get horizontal() {
      return this[S$1.horizontal];
    }
    set horizontal(value) {
      super.horizontal = value;
    }
    get vertical() {
      return this[S$1.vertical];
    }
    set vertical(value) {
      super.vertical = value;
    }
    static get adaptivePlatformDensity() {
      switch (platform$.defaultTargetPlatform) {
        case C[44] || CT.C44:
        case C[48] || CT.C48:
        case C[45] || CT.C45:
        {
          break;
        }
        case C[46] || CT.C46:
        case C[49] || CT.C49:
        case C[47] || CT.C47:
        {
          return theme_data.VisualDensity.compact;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return C[1048] || CT.C1048;
    }
    copyWith(opts) {
      let t62, t62$;
      let horizontal = opts && 'horizontal' in opts ? opts.horizontal : null;
      let vertical = opts && 'vertical' in opts ? opts.vertical : null;
      return new theme_data.VisualDensity.new({horizontal: (t62 = horizontal, t62 == null ? this.horizontal : t62), vertical: (t62$ = vertical, t62$ == null ? this.vertical : t62$)});
    }
    get baseSizeAdjustment() {
      return new ui.Offset.new(this.horizontal, this.vertical)['*'](4);
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[110], 2129, 43, "a");
      if (b == null) dart.nullFailed(I[110], 2129, 60, "b");
      if (t == null) dart.nullFailed(I[110], 2129, 70, "t");
      return new theme_data.VisualDensity.new({horizontal: dart.nullCheck(ui.lerpDouble(a.horizontal, b.horizontal, t)), vertical: dart.nullCheck(ui.lerpDouble(a.horizontal, b.horizontal, t))});
    }
    effectiveConstraints(constraints) {
      if (constraints == null) dart.nullFailed(I[110], 2138, 54, "constraints");
      if (!(constraints != null && dart.test(constraints.debugAssertIsValid()))) dart.assertFailed(null, I[110], 2139, 12, "constraints != null && constraints.debugAssertIsValid()");
      return constraints.copyWith({minWidth: (dart.notNull(constraints.minWidth) + dart.notNull(this.baseSizeAdjustment.dx))[S.$clamp](0.0, 1 / 0)[S.$toDouble](), minHeight: (dart.notNull(constraints.minHeight) + dart.notNull(this.baseSizeAdjustment.dy))[S.$clamp](0.0, 1 / 0)[S.$toDouble]()});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) {
        return false;
      }
      return theme_data.VisualDensity.is(other) && other.horizontal == this.horizontal && other.vertical == this.vertical;
    }
    get hashCode() {
      return ui.hashValues(this.horizontal, this.vertical);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[110], 2160, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("horizontal", this.horizontal, {defaultValue: 0.0}));
      properties.add(new diagnostics.DoubleProperty.new("vertical", this.vertical, {defaultValue: 0.0}));
    }
    toStringShort() {
      return dart.str(super.toStringShort()) + "(h: " + dart.str(debug$.debugFormatDouble(this.horizontal)) + ", v: " + dart.str(debug$.debugFormatDouble(this.vertical)) + ")";
    }
  };
  (theme_data.VisualDensity.new = function(opts) {
    let horizontal = opts && 'horizontal' in opts ? opts.horizontal : 0;
    if (horizontal == null) dart.nullFailed(I[110], 2008, 10, "horizontal");
    let vertical = opts && 'vertical' in opts ? opts.vertical : 0;
    if (vertical == null) dart.nullFailed(I[110], 2009, 10, "vertical");
    this[S$1.horizontal] = horizontal;
    this[S$1.vertical] = vertical;
    if (!(horizontal != null)) dart.assertFailed(null, I[110], 2010, 15, "horizontal != null");
    if (!(vertical != null)) dart.assertFailed(null, I[110], 2011, 15, "vertical != null");
    if (!(dart.notNull(vertical) <= 4)) dart.assertFailed(null, I[110], 2012, 15, "vertical <= maximumDensity");
    if (!(dart.notNull(vertical) >= -4)) dart.assertFailed(null, I[110], 2013, 15, "vertical >= minimumDensity");
    if (!(dart.notNull(horizontal) <= 4)) dart.assertFailed(null, I[110], 2014, 15, "horizontal <= maximumDensity");
    if (!(dart.notNull(horizontal) >= -4)) dart.assertFailed(null, I[110], 2015, 15, "horizontal >= minimumDensity");
    ;
  }).prototype = theme_data.VisualDensity.prototype;
  dart.addTypeTests(theme_data.VisualDensity);
  dart.addTypeCaches(theme_data.VisualDensity);
  dart.setMethodSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getMethods(theme_data.VisualDensity.__proto__),
    copyWith: dart.fnType(theme_data.VisualDensity, [], {horizontal: dart.nullable(core.double), vertical: dart.nullable(core.double)}, {}),
    effectiveConstraints: dart.fnType(box$.BoxConstraints, [box$.BoxConstraints])
  }));
  dart.setGetterSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getGetters(theme_data.VisualDensity.__proto__),
    baseSizeAdjustment: ui.Offset
  }));
  dart.setLibraryUri(theme_data.VisualDensity, I[111]);
  dart.setFieldSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getFields(theme_data.VisualDensity.__proto__),
    horizontal: dart.finalFieldType(core.double),
    vertical: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(theme_data.VisualDensity, ['_equals']);
  dart.defineExtensionAccessors(theme_data.VisualDensity, ['hashCode']);
  dart.defineLazy(theme_data.VisualDensity, {
    /*theme_data.VisualDensity.minimumDensity*/get minimumDensity() {
      return -4;
    },
    /*theme_data.VisualDensity.maximumDensity*/get maximumDensity() {
      return 4;
    },
    /*theme_data.VisualDensity.standard*/get standard() {
      return C[1048] || CT.C1048;
    },
    /*theme_data.VisualDensity.comfortable*/get comfortable() {
      return C[2246] || CT.C2246;
    },
    /*theme_data.VisualDensity.compact*/get compact() {
      return C[2247] || CT.C2247;
    }
  }, false);
  dart.defineLazy(theme_data, {
    /*theme_data._kLightThemeHighlightColor*/get _kLightThemeHighlightColor() {
      return C[2248] || CT.C2248;
    },
    /*theme_data._kLightThemeSplashColor*/get _kLightThemeSplashColor() {
      return C[2249] || CT.C2249;
    },
    /*theme_data._kDarkThemeHighlightColor*/get _kDarkThemeHighlightColor() {
      return C[2250] || CT.C2250;
    },
    /*theme_data._kDarkThemeSplashColor*/get _kDarkThemeSplashColor() {
      return C[2250] || CT.C2250;
    }
  }, false);
  const Object_Diagnosticable$36$27 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$27.new = function() {
  }).prototype = Object_Diagnosticable$36$27.prototype;
  dart.applyMixin(Object_Diagnosticable$36$27, diagnostics.Diagnosticable);
  color_scheme.ColorScheme = class ColorScheme extends Object_Diagnosticable$36$27 {
    get primary() {
      return this[S$1.primary];
    }
    set primary(value) {
      super.primary = value;
    }
    get primaryVariant() {
      return this[S$1.primaryVariant];
    }
    set primaryVariant(value) {
      super.primaryVariant = value;
    }
    get secondary() {
      return this[S$1.secondary];
    }
    set secondary(value) {
      super.secondary = value;
    }
    get secondaryVariant() {
      return this[S$1.secondaryVariant];
    }
    set secondaryVariant(value) {
      super.secondaryVariant = value;
    }
    get surface() {
      return this[S$1.surface];
    }
    set surface(value) {
      super.surface = value;
    }
    get background() {
      return this[S$1.background$1];
    }
    set background(value) {
      super.background = value;
    }
    get error() {
      return this[S$1.error];
    }
    set error(value) {
      super.error = value;
    }
    get onPrimary() {
      return this[S$1.onPrimary];
    }
    set onPrimary(value) {
      super.onPrimary = value;
    }
    get onSecondary() {
      return this[S$1.onSecondary];
    }
    set onSecondary(value) {
      super.onSecondary = value;
    }
    get onSurface() {
      return this[S$1.onSurface];
    }
    set onSurface(value) {
      super.onSurface = value;
    }
    get onBackground() {
      return this[S$1.onBackground];
    }
    set onBackground(value) {
      super.onBackground = value;
    }
    get onError() {
      return this[S$1.onError];
    }
    set onError(value) {
      super.onError = value;
    }
    get brightness() {
      return this[S$1.brightness$2];
    }
    set brightness(value) {
      super.brightness = value;
    }
    static fromSwatch(opts) {
      let t62, t62$, t62$0, t62$1, t62$2;
      let primarySwatch = opts && 'primarySwatch' in opts ? opts.primarySwatch : C[2266] || CT.C2266;
      if (primarySwatch == null) dart.nullFailed(I[112], 175, 19, "primarySwatch");
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : C[543] || CT.C543;
      if (brightness == null) dart.nullFailed(I[112], 181, 16, "brightness");
      if (!(primarySwatch != null)) dart.assertFailed(null, I[112], 183, 12, "primarySwatch != null");
      if (!(brightness != null)) dart.assertFailed(null, I[112], 184, 12, "brightness != null");
      let isDark = brightness == ui.Brightness.dark;
      let primaryIsDark = color_scheme.ColorScheme._brightnessFor(primarySwatch) == ui.Brightness.dark;
      let secondary = (t62 = accentColor, t62 == null ? isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : primarySwatch : t62);
      let secondaryIsDark = color_scheme.ColorScheme._brightnessFor(secondary) == ui.Brightness.dark;
      return new color_scheme.ColorScheme.new({primary: primarySwatch, primaryVariant: (t62$ = primaryColorDark, t62$ == null ? isDark ? colors$.Colors.black : dart.nullCheck(primarySwatch._get(700)) : t62$), secondary: secondary, secondaryVariant: isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(700)) : dart.nullCheck(primarySwatch._get(700)), surface: (t62$0 = cardColor, t62$0 == null ? isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : t62$0), background: (t62$1 = backgroundColor, t62$1 == null ? isDark ? dart.nullCheck(colors$.Colors.grey._get(700)) : dart.nullCheck(primarySwatch._get(200)) : t62$1), error: (t62$2 = errorColor, t62$2 == null ? dart.nullCheck(colors$.Colors.red._get(700)) : t62$2), onPrimary: primaryIsDark ? colors$.Colors.white : colors$.Colors.black, onSecondary: secondaryIsDark ? colors$.Colors.white : colors$.Colors.black, onSurface: isDark ? colors$.Colors.white : colors$.Colors.black, onBackground: primaryIsDark ? colors$.Colors.white : colors$.Colors.black, onError: isDark ? colors$.Colors.black : colors$.Colors.white, brightness: brightness});
    }
    static _brightnessFor(color) {
      if (color == null) dart.nullFailed(I[112], 208, 42, "color");
      return theme_data.ThemeData.estimateBrightnessForColor(color);
    }
    copyWith(opts) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7, t62$8, t62$9, t62$10;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : null;
      let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : null;
      let surface = opts && 'surface' in opts ? opts.surface : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let error = opts && 'error' in opts ? opts.error : null;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      return new color_scheme.ColorScheme.new({primary: (t62 = primary, t62 == null ? this.primary : t62), primaryVariant: (t62$ = primaryVariant, t62$ == null ? this.primaryVariant : t62$), secondary: (t62$0 = secondary, t62$0 == null ? this.secondary : t62$0), secondaryVariant: (t62$1 = secondaryVariant, t62$1 == null ? this.secondaryVariant : t62$1), surface: (t62$2 = surface, t62$2 == null ? this.surface : t62$2), background: (t62$3 = background, t62$3 == null ? this.background : t62$3), error: (t62$4 = error, t62$4 == null ? this.error : t62$4), onPrimary: (t62$5 = onPrimary, t62$5 == null ? this.onPrimary : t62$5), onSecondary: (t62$6 = onSecondary, t62$6 == null ? this.onSecondary : t62$6), onSurface: (t62$7 = onSurface, t62$7 == null ? this.onSurface : t62$7), onBackground: (t62$8 = onBackground, t62$8 == null ? this.onBackground : t62$8), onError: (t62$9 = onError, t62$9 == null ? this.onError : t62$9), brightness: (t62$10 = brightness, t62$10 == null ? this.brightness : t62$10)});
    }
    static lerp(a, b, t) {
      if (a == null) dart.nullFailed(I[112], 308, 39, "a");
      if (b == null) dart.nullFailed(I[112], 308, 54, "b");
      if (t == null) dart.nullFailed(I[112], 308, 64, "t");
      return new color_scheme.ColorScheme.new({primary: dart.nullCheck(ui.Color.lerp(a.primary, b.primary, t)), primaryVariant: dart.nullCheck(ui.Color.lerp(a.primaryVariant, b.primaryVariant, t)), secondary: dart.nullCheck(ui.Color.lerp(a.secondary, b.secondary, t)), secondaryVariant: dart.nullCheck(ui.Color.lerp(a.secondaryVariant, b.secondaryVariant, t)), surface: dart.nullCheck(ui.Color.lerp(a.surface, b.surface, t)), background: dart.nullCheck(ui.Color.lerp(a.background, b.background, t)), error: dart.nullCheck(ui.Color.lerp(a.error, b.error, t)), onPrimary: dart.nullCheck(ui.Color.lerp(a.onPrimary, b.onPrimary, t)), onSecondary: dart.nullCheck(ui.Color.lerp(a.onSecondary, b.onSecondary, t)), onSurface: dart.nullCheck(ui.Color.lerp(a.onSurface, b.onSurface, t)), onBackground: dart.nullCheck(ui.Color.lerp(a.onBackground, b.onBackground, t)), onError: dart.nullCheck(ui.Color.lerp(a.onError, b.onError, t)), brightness: dart.notNull(t) < 0.5 ? a.brightness : b.brightness});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return color_scheme.ColorScheme.is(other) && dart.equals(other.primary, this.primary) && dart.equals(other.primaryVariant, this.primaryVariant) && dart.equals(other.secondary, this.secondary) && dart.equals(other.secondaryVariant, this.secondaryVariant) && dart.equals(other.surface, this.surface) && dart.equals(other.background, this.background) && dart.equals(other.error, this.error) && dart.equals(other.onPrimary, this.onPrimary) && dart.equals(other.onSecondary, this.onSecondary) && dart.equals(other.onSurface, this.onSurface) && dart.equals(other.onBackground, this.onBackground) && dart.equals(other.onError, this.onError) && other.brightness == this.brightness;
    }
    get hashCode() {
      return ui.hashValues(this.primary, this.primaryVariant, this.secondary, this.secondaryVariant, this.surface, this.background, this.error, this.onPrimary, this.onSecondary, this.onSurface, this.onBackground, this.onError, this.brightness);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[112], 368, 56, "properties");
      super.debugFillProperties(properties);
      let defaultScheme = C[2278] || CT.C2278;
      properties.add(new colors.ColorProperty.new("primary", this.primary, {defaultValue: defaultScheme.primary}));
      properties.add(new colors.ColorProperty.new("primaryVariant", this.primaryVariant, {defaultValue: defaultScheme.primaryVariant}));
      properties.add(new colors.ColorProperty.new("secondary", this.secondary, {defaultValue: defaultScheme.secondary}));
      properties.add(new colors.ColorProperty.new("secondaryVariant", this.secondaryVariant, {defaultValue: defaultScheme.secondaryVariant}));
      properties.add(new colors.ColorProperty.new("surface", this.surface, {defaultValue: defaultScheme.surface}));
      properties.add(new colors.ColorProperty.new("background", this.background, {defaultValue: defaultScheme.background}));
      properties.add(new colors.ColorProperty.new("error", this.error, {defaultValue: defaultScheme.error}));
      properties.add(new colors.ColorProperty.new("onPrimary", this.onPrimary, {defaultValue: defaultScheme.onPrimary}));
      properties.add(new colors.ColorProperty.new("onSecondary", this.onSecondary, {defaultValue: defaultScheme.onSecondary}));
      properties.add(new colors.ColorProperty.new("onSurface", this.onSurface, {defaultValue: defaultScheme.onSurface}));
      properties.add(new colors.ColorProperty.new("onBackground", this.onBackground, {defaultValue: defaultScheme.onBackground}));
      properties.add(new colors.ColorProperty.new("onError", this.onError, {defaultValue: defaultScheme.onError}));
      properties.add(new (T$.DiagnosticsPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: defaultScheme.brightness}));
    }
  };
  (color_scheme.ColorScheme.new = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : null;
    if (primary == null) dart.nullFailed(I[112], 22, 19, "primary");
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : null;
    if (primaryVariant == null) dart.nullFailed(I[112], 23, 19, "primaryVariant");
    let secondary = opts && 'secondary' in opts ? opts.secondary : null;
    if (secondary == null) dart.nullFailed(I[112], 24, 19, "secondary");
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : null;
    if (secondaryVariant == null) dart.nullFailed(I[112], 25, 19, "secondaryVariant");
    let surface = opts && 'surface' in opts ? opts.surface : null;
    if (surface == null) dart.nullFailed(I[112], 26, 19, "surface");
    let background = opts && 'background' in opts ? opts.background : null;
    if (background == null) dart.nullFailed(I[112], 27, 19, "background");
    let error = opts && 'error' in opts ? opts.error : null;
    if (error == null) dart.nullFailed(I[112], 28, 19, "error");
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
    if (onPrimary == null) dart.nullFailed(I[112], 29, 19, "onPrimary");
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
    if (onSecondary == null) dart.nullFailed(I[112], 30, 19, "onSecondary");
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
    if (onSurface == null) dart.nullFailed(I[112], 31, 19, "onSurface");
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
    if (onBackground == null) dart.nullFailed(I[112], 32, 19, "onBackground");
    let onError = opts && 'onError' in opts ? opts.onError : null;
    if (onError == null) dart.nullFailed(I[112], 33, 19, "onError");
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    if (brightness == null) dart.nullFailed(I[112], 34, 19, "brightness");
    this[S$1.primary] = primary;
    this[S$1.primaryVariant] = primaryVariant;
    this[S$1.secondary] = secondary;
    this[S$1.secondaryVariant] = secondaryVariant;
    this[S$1.surface] = surface;
    this[S$1.background$1] = background;
    this[S$1.error] = error;
    this[S$1.onPrimary] = onPrimary;
    this[S$1.onSecondary] = onSecondary;
    this[S$1.onSurface] = onSurface;
    this[S$1.onBackground] = onBackground;
    this[S$1.onError] = onError;
    this[S$1.brightness$2] = brightness;
    if (!(primary != null)) dart.assertFailed(null, I[112], 35, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, I[112], 36, 15, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, I[112], 37, 15, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, I[112], 38, 15, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, I[112], 39, 15, "surface != null");
    if (!(background != null)) dart.assertFailed(null, I[112], 40, 15, "background != null");
    if (!(error != null)) dart.assertFailed(null, I[112], 41, 15, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, I[112], 42, 15, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, I[112], 43, 15, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, I[112], 44, 15, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, I[112], 45, 15, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, I[112], 46, 15, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, I[112], 47, 15, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.light = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : C[2251] || CT.C2251;
    if (primary == null) dart.nullFailed(I[112], 52, 10, "primary");
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[2252] || CT.C2252;
    if (primaryVariant == null) dart.nullFailed(I[112], 53, 10, "primaryVariant");
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[2253] || CT.C2253;
    if (secondary == null) dart.nullFailed(I[112], 54, 10, "secondary");
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[2254] || CT.C2254;
    if (secondaryVariant == null) dart.nullFailed(I[112], 55, 10, "secondaryVariant");
    let surface = opts && 'surface' in opts ? opts.surface : C[2199] || CT.C2199;
    if (surface == null) dart.nullFailed(I[112], 56, 10, "surface");
    let background = opts && 'background' in opts ? opts.background : C[2199] || CT.C2199;
    if (background == null) dart.nullFailed(I[112], 57, 10, "background");
    let error = opts && 'error' in opts ? opts.error : C[2255] || CT.C2255;
    if (error == null) dart.nullFailed(I[112], 58, 10, "error");
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[2199] || CT.C2199;
    if (onPrimary == null) dart.nullFailed(I[112], 59, 10, "onPrimary");
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[159] || CT.C159;
    if (onSecondary == null) dart.nullFailed(I[112], 60, 10, "onSecondary");
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[159] || CT.C159;
    if (onSurface == null) dart.nullFailed(I[112], 61, 10, "onSurface");
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[159] || CT.C159;
    if (onBackground == null) dart.nullFailed(I[112], 62, 10, "onBackground");
    let onError = opts && 'onError' in opts ? opts.onError : C[2199] || CT.C2199;
    if (onError == null) dart.nullFailed(I[112], 63, 10, "onError");
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[543] || CT.C543;
    if (brightness == null) dart.nullFailed(I[112], 64, 10, "brightness");
    this[S$1.primary] = primary;
    this[S$1.primaryVariant] = primaryVariant;
    this[S$1.secondary] = secondary;
    this[S$1.secondaryVariant] = secondaryVariant;
    this[S$1.surface] = surface;
    this[S$1.background$1] = background;
    this[S$1.error] = error;
    this[S$1.onPrimary] = onPrimary;
    this[S$1.onSecondary] = onSecondary;
    this[S$1.onSurface] = onSurface;
    this[S$1.onBackground] = onBackground;
    this[S$1.onError] = onError;
    this[S$1.brightness$2] = brightness;
    if (!(primary != null)) dart.assertFailed(null, I[112], 65, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, I[112], 66, 15, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, I[112], 67, 15, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, I[112], 68, 15, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, I[112], 69, 15, "surface != null");
    if (!(background != null)) dart.assertFailed(null, I[112], 70, 15, "background != null");
    if (!(error != null)) dart.assertFailed(null, I[112], 71, 15, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, I[112], 72, 15, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, I[112], 73, 15, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, I[112], 74, 15, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, I[112], 75, 15, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, I[112], 76, 15, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, I[112], 77, 15, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.dark = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : C[2256] || CT.C2256;
    if (primary == null) dart.nullFailed(I[112], 82, 10, "primary");
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[2252] || CT.C2252;
    if (primaryVariant == null) dart.nullFailed(I[112], 83, 10, "primaryVariant");
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[2253] || CT.C2253;
    if (secondary == null) dart.nullFailed(I[112], 84, 10, "secondary");
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[2253] || CT.C2253;
    if (secondaryVariant == null) dart.nullFailed(I[112], 85, 10, "secondaryVariant");
    let surface = opts && 'surface' in opts ? opts.surface : C[2257] || CT.C2257;
    if (surface == null) dart.nullFailed(I[112], 86, 10, "surface");
    let background = opts && 'background' in opts ? opts.background : C[2257] || CT.C2257;
    if (background == null) dart.nullFailed(I[112], 87, 10, "background");
    let error = opts && 'error' in opts ? opts.error : C[2258] || CT.C2258;
    if (error == null) dart.nullFailed(I[112], 88, 10, "error");
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[159] || CT.C159;
    if (onPrimary == null) dart.nullFailed(I[112], 89, 10, "onPrimary");
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[159] || CT.C159;
    if (onSecondary == null) dart.nullFailed(I[112], 90, 10, "onSecondary");
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[2199] || CT.C2199;
    if (onSurface == null) dart.nullFailed(I[112], 91, 10, "onSurface");
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[2199] || CT.C2199;
    if (onBackground == null) dart.nullFailed(I[112], 92, 10, "onBackground");
    let onError = opts && 'onError' in opts ? opts.onError : C[159] || CT.C159;
    if (onError == null) dart.nullFailed(I[112], 93, 10, "onError");
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[544] || CT.C544;
    if (brightness == null) dart.nullFailed(I[112], 94, 10, "brightness");
    this[S$1.primary] = primary;
    this[S$1.primaryVariant] = primaryVariant;
    this[S$1.secondary] = secondary;
    this[S$1.secondaryVariant] = secondaryVariant;
    this[S$1.surface] = surface;
    this[S$1.background$1] = background;
    this[S$1.error] = error;
    this[S$1.onPrimary] = onPrimary;
    this[S$1.onSecondary] = onSecondary;
    this[S$1.onSurface] = onSurface;
    this[S$1.onBackground] = onBackground;
    this[S$1.onError] = onError;
    this[S$1.brightness$2] = brightness;
    if (!(primary != null)) dart.assertFailed(null, I[112], 95, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, I[112], 96, 15, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, I[112], 97, 15, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, I[112], 98, 15, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, I[112], 99, 15, "surface != null");
    if (!(background != null)) dart.assertFailed(null, I[112], 100, 15, "background != null");
    if (!(error != null)) dart.assertFailed(null, I[112], 101, 15, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, I[112], 102, 15, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, I[112], 103, 15, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, I[112], 104, 15, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, I[112], 105, 15, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, I[112], 106, 15, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, I[112], 107, 15, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.highContrastLight = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : C[2259] || CT.C2259;
    if (primary == null) dart.nullFailed(I[112], 113, 10, "primary");
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[2260] || CT.C2260;
    if (primaryVariant == null) dart.nullFailed(I[112], 114, 10, "primaryVariant");
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[2261] || CT.C2261;
    if (secondary == null) dart.nullFailed(I[112], 115, 10, "secondary");
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[2254] || CT.C2254;
    if (secondaryVariant == null) dart.nullFailed(I[112], 116, 10, "secondaryVariant");
    let surface = opts && 'surface' in opts ? opts.surface : C[2199] || CT.C2199;
    if (surface == null) dart.nullFailed(I[112], 117, 10, "surface");
    let background = opts && 'background' in opts ? opts.background : C[2199] || CT.C2199;
    if (background == null) dart.nullFailed(I[112], 118, 10, "background");
    let error = opts && 'error' in opts ? opts.error : C[2262] || CT.C2262;
    if (error == null) dart.nullFailed(I[112], 119, 10, "error");
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[2199] || CT.C2199;
    if (onPrimary == null) dart.nullFailed(I[112], 120, 10, "onPrimary");
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[159] || CT.C159;
    if (onSecondary == null) dart.nullFailed(I[112], 121, 10, "onSecondary");
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[159] || CT.C159;
    if (onSurface == null) dart.nullFailed(I[112], 122, 10, "onSurface");
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[159] || CT.C159;
    if (onBackground == null) dart.nullFailed(I[112], 123, 10, "onBackground");
    let onError = opts && 'onError' in opts ? opts.onError : C[2199] || CT.C2199;
    if (onError == null) dart.nullFailed(I[112], 124, 10, "onError");
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[543] || CT.C543;
    if (brightness == null) dart.nullFailed(I[112], 125, 10, "brightness");
    this[S$1.primary] = primary;
    this[S$1.primaryVariant] = primaryVariant;
    this[S$1.secondary] = secondary;
    this[S$1.secondaryVariant] = secondaryVariant;
    this[S$1.surface] = surface;
    this[S$1.background$1] = background;
    this[S$1.error] = error;
    this[S$1.onPrimary] = onPrimary;
    this[S$1.onSecondary] = onSecondary;
    this[S$1.onSurface] = onSurface;
    this[S$1.onBackground] = onBackground;
    this[S$1.onError] = onError;
    this[S$1.brightness$2] = brightness;
    if (!(primary != null)) dart.assertFailed(null, I[112], 126, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, I[112], 127, 16, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, I[112], 128, 16, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, I[112], 129, 16, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, I[112], 130, 16, "surface != null");
    if (!(background != null)) dart.assertFailed(null, I[112], 131, 16, "background != null");
    if (!(error != null)) dart.assertFailed(null, I[112], 132, 16, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, I[112], 133, 16, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, I[112], 134, 16, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, I[112], 135, 16, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, I[112], 136, 16, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, I[112], 137, 16, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, I[112], 138, 16, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.highContrastDark = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : C[2263] || CT.C2263;
    if (primary == null) dart.nullFailed(I[112], 143, 10, "primary");
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[2264] || CT.C2264;
    if (primaryVariant == null) dart.nullFailed(I[112], 144, 10, "primaryVariant");
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[2261] || CT.C2261;
    if (secondary == null) dart.nullFailed(I[112], 145, 10, "secondary");
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[2261] || CT.C2261;
    if (secondaryVariant == null) dart.nullFailed(I[112], 146, 10, "secondaryVariant");
    let surface = opts && 'surface' in opts ? opts.surface : C[2257] || CT.C2257;
    if (surface == null) dart.nullFailed(I[112], 147, 10, "surface");
    let background = opts && 'background' in opts ? opts.background : C[2257] || CT.C2257;
    if (background == null) dart.nullFailed(I[112], 148, 10, "background");
    let error = opts && 'error' in opts ? opts.error : C[2265] || CT.C2265;
    if (error == null) dart.nullFailed(I[112], 149, 10, "error");
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[159] || CT.C159;
    if (onPrimary == null) dart.nullFailed(I[112], 150, 10, "onPrimary");
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[159] || CT.C159;
    if (onSecondary == null) dart.nullFailed(I[112], 151, 10, "onSecondary");
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[2199] || CT.C2199;
    if (onSurface == null) dart.nullFailed(I[112], 152, 10, "onSurface");
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[2199] || CT.C2199;
    if (onBackground == null) dart.nullFailed(I[112], 153, 10, "onBackground");
    let onError = opts && 'onError' in opts ? opts.onError : C[159] || CT.C159;
    if (onError == null) dart.nullFailed(I[112], 154, 10, "onError");
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[544] || CT.C544;
    if (brightness == null) dart.nullFailed(I[112], 155, 10, "brightness");
    this[S$1.primary] = primary;
    this[S$1.primaryVariant] = primaryVariant;
    this[S$1.secondary] = secondary;
    this[S$1.secondaryVariant] = secondaryVariant;
    this[S$1.surface] = surface;
    this[S$1.background$1] = background;
    this[S$1.error] = error;
    this[S$1.onPrimary] = onPrimary;
    this[S$1.onSecondary] = onSecondary;
    this[S$1.onSurface] = onSurface;
    this[S$1.onBackground] = onBackground;
    this[S$1.onError] = onError;
    this[S$1.brightness$2] = brightness;
    if (!(primary != null)) dart.assertFailed(null, I[112], 156, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, I[112], 157, 16, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, I[112], 158, 16, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, I[112], 159, 16, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, I[112], 160, 16, "surface != null");
    if (!(background != null)) dart.assertFailed(null, I[112], 161, 16, "background != null");
    if (!(error != null)) dart.assertFailed(null, I[112], 162, 16, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, I[112], 163, 16, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, I[112], 164, 16, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, I[112], 165, 16, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, I[112], 166, 16, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, I[112], 167, 16, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, I[112], 168, 16, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  dart.addTypeTests(color_scheme.ColorScheme);
  dart.addTypeCaches(color_scheme.ColorScheme);
  dart.setMethodSignature(color_scheme.ColorScheme, () => ({
    __proto__: dart.getMethods(color_scheme.ColorScheme.__proto__),
    copyWith: dart.fnType(color_scheme.ColorScheme, [], {background: dart.nullable(ui.Color), brightness: dart.nullable(ui.Brightness), error: dart.nullable(ui.Color), onBackground: dart.nullable(ui.Color), onError: dart.nullable(ui.Color), onPrimary: dart.nullable(ui.Color), onSecondary: dart.nullable(ui.Color), onSurface: dart.nullable(ui.Color), primary: dart.nullable(ui.Color), primaryVariant: dart.nullable(ui.Color), secondary: dart.nullable(ui.Color), secondaryVariant: dart.nullable(ui.Color), surface: dart.nullable(ui.Color)}, {})
  }));
  dart.setLibraryUri(color_scheme.ColorScheme, I[113]);
  dart.setFieldSignature(color_scheme.ColorScheme, () => ({
    __proto__: dart.getFields(color_scheme.ColorScheme.__proto__),
    primary: dart.finalFieldType(ui.Color),
    primaryVariant: dart.finalFieldType(ui.Color),
    secondary: dart.finalFieldType(ui.Color),
    secondaryVariant: dart.finalFieldType(ui.Color),
    surface: dart.finalFieldType(ui.Color),
    background: dart.finalFieldType(ui.Color),
    error: dart.finalFieldType(ui.Color),
    onPrimary: dart.finalFieldType(ui.Color),
    onSecondary: dart.finalFieldType(ui.Color),
    onSurface: dart.finalFieldType(ui.Color),
    onBackground: dart.finalFieldType(ui.Color),
    onError: dart.finalFieldType(ui.Color),
    brightness: dart.finalFieldType(ui.Brightness)
  }));
  dart.defineExtensionMethods(color_scheme.ColorScheme, ['_equals']);
  dart.defineExtensionAccessors(color_scheme.ColorScheme, ['hashCode']);
  button_theme.ButtonTextTheme = class ButtonTextTheme extends core.Object {
    toString() {
      return this[S$1._name$22];
    }
  };
  (button_theme.ButtonTextTheme.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[114], 27, 6, "index");
    if (_name == null) dart.nullFailed(I[114], 27, 6, "_name");
    this.index = index;
    this[S$1._name$22] = _name;
    ;
  }).prototype = button_theme.ButtonTextTheme.prototype;
  dart.addTypeTests(button_theme.ButtonTextTheme);
  dart.addTypeCaches(button_theme.ButtonTextTheme);
  dart.setLibraryUri(button_theme.ButtonTextTheme, I[115]);
  dart.setFieldSignature(button_theme.ButtonTextTheme, () => ({
    __proto__: dart.getFields(button_theme.ButtonTextTheme.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$22]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(button_theme.ButtonTextTheme, ['toString']);
  button_theme.ButtonTextTheme.normal = C[2279] || CT.C2279;
  button_theme.ButtonTextTheme.accent = C[2280] || CT.C2280;
  button_theme.ButtonTextTheme.primary = C[2281] || CT.C2281;
  button_theme.ButtonTextTheme.values = C[2282] || CT.C2282;
  button_theme.ButtonBarLayoutBehavior = class ButtonBarLayoutBehavior extends core.Object {
    toString() {
      return this[S$1._name$22];
    }
  };
  (button_theme.ButtonBarLayoutBehavior.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[114], 40, 6, "index");
    if (_name == null) dart.nullFailed(I[114], 40, 6, "_name");
    this.index = index;
    this[S$1._name$22] = _name;
    ;
  }).prototype = button_theme.ButtonBarLayoutBehavior.prototype;
  dart.addTypeTests(button_theme.ButtonBarLayoutBehavior);
  dart.addTypeCaches(button_theme.ButtonBarLayoutBehavior);
  dart.setLibraryUri(button_theme.ButtonBarLayoutBehavior, I[115]);
  dart.setFieldSignature(button_theme.ButtonBarLayoutBehavior, () => ({
    __proto__: dart.getFields(button_theme.ButtonBarLayoutBehavior.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$22]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(button_theme.ButtonBarLayoutBehavior, ['toString']);
  button_theme.ButtonBarLayoutBehavior.constrained = C[2283] || CT.C2283;
  button_theme.ButtonBarLayoutBehavior.padded = C[2284] || CT.C2284;
  button_theme.ButtonBarLayoutBehavior.values = C[2285] || CT.C2285;
  button_theme.ButtonTheme = class ButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$1.data$19];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t62, t62$, t62$0;
      if (context == null) dart.nullFailed(I[114], 143, 42, "context");
      let inheritedButtonTheme = context.dependOnInheritedWidgetOfExactType(button_theme.ButtonTheme);
      let buttonTheme = (t62 = inheritedButtonTheme, t62 == null ? null : t62.data);
      if ((t62$ = buttonTheme, t62$ == null ? null : t62$.colorScheme) == null) {
        let theme = theme$.Theme.of(context);
        buttonTheme == null ? buttonTheme = theme.buttonTheme : null;
        if (buttonTheme.colorScheme == null) {
          buttonTheme = buttonTheme.copyWith({colorScheme: (t62$0 = theme.buttonTheme.colorScheme, t62$0 == null ? theme.colorScheme : t62$0)});
          if (!(buttonTheme.colorScheme != null)) dart.assertFailed(null, I[114], 153, 16, "buttonTheme.colorScheme != null");
        }
      }
      return dart.nullCheck(buttonTheme);
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[114], 160, 28, "context");
      if (child == null) dart.nullFailed(I[114], 160, 44, "child");
      return new button_theme.ButtonTheme.fromButtonThemeData({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[2286] || CT.C2286});
    }
    updateShouldNotify(oldWidget) {
      button_theme.ButtonTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[114], 165, 39, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (button_theme.ButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C[2279] || CT.C2279;
    if (textTheme == null) dart.nullFailed(I[114], 83, 21, "textTheme");
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C[2284] || CT.C2284;
    if (layoutBehavior == null) dart.nullFailed(I[114], 84, 29, "layoutBehavior");
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 88;
    if (minWidth == null) dart.nullFailed(I[114], 85, 12, "minWidth");
    let height = opts && 'height' in opts ? opts.height : 36;
    if (height == null) dart.nullFailed(I[114], 86, 12, "height");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
    if (alignedDropdown == null) dart.nullFailed(I[114], 89, 10, "alignedDropdown");
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[114], 98, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(textTheme != null)) dart.assertFailed(null, I[114], 99, 15, "textTheme != null");
    if (!(minWidth != null && dart.notNull(minWidth) >= 0.0)) dart.assertFailed(null, I[114], 100, 15, "minWidth != null && minWidth >= 0.0");
    if (!(height != null && dart.notNull(height) >= 0.0)) dart.assertFailed(null, I[114], 101, 15, "height != null && height >= 0.0");
    if (!(alignedDropdown != null)) dart.assertFailed(null, I[114], 102, 15, "alignedDropdown != null");
    if (!(layoutBehavior != null)) dart.assertFailed(null, I[114], 103, 15, "layoutBehavior != null");
    this[S$1.data$19] = new button_theme.ButtonThemeData.new({textTheme: textTheme, minWidth: minWidth, height: height, padding: padding, shape: shape, alignedDropdown: alignedDropdown, layoutBehavior: layoutBehavior, buttonColor: buttonColor, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorScheme: colorScheme, materialTapTargetSize: materialTapTargetSize});
    button_theme.ButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_theme.ButtonTheme.prototype;
  (button_theme.ButtonTheme.fromButtonThemeData = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[114], 128, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[114], 129, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$19] = data;
    if (!(data != null)) dart.assertFailed(null, I[114], 130, 15, "data != null");
    button_theme.ButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_theme.ButtonTheme.prototype;
  dart.addTypeTests(button_theme.ButtonTheme);
  dart.addTypeCaches(button_theme.ButtonTheme);
  dart.setMethodSignature(button_theme.ButtonTheme, () => ({
    __proto__: dart.getMethods(button_theme.ButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(button_theme.ButtonTheme, I[115]);
  dart.setFieldSignature(button_theme.ButtonTheme, () => ({
    __proto__: dart.getFields(button_theme.ButtonTheme.__proto__),
    data: dart.finalFieldType(button_theme.ButtonThemeData)
  }));
  const Object_Diagnosticable$36$28 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$28.new = function() {
  }).prototype = Object_Diagnosticable$36$28.prototype;
  dart.applyMixin(Object_Diagnosticable$36$28, diagnostics.Diagnosticable);
  button_theme.ButtonThemeData = class ButtonThemeData extends Object_Diagnosticable$36$28 {
    get minWidth() {
      return this[S$1.minWidth$2];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get height() {
      return this[S$1.height$5];
    }
    set height(value) {
      super.height = value;
    }
    get textTheme() {
      return this[S$1.textTheme$3];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get layoutBehavior() {
      return this[S$1.layoutBehavior];
    }
    set layoutBehavior(value) {
      super.layoutBehavior = value;
    }
    get [S$1._padding$1]() {
      return this[S$1._padding];
    }
    set [S$1._padding$1](value) {
      super[S$1._padding$1] = value;
    }
    get [S$1._shape$2]() {
      return this[S$1._shape$1];
    }
    set [S$1._shape$2](value) {
      super[S$1._shape$2] = value;
    }
    get alignedDropdown() {
      return this[S$1.alignedDropdown];
    }
    set alignedDropdown(value) {
      super.alignedDropdown = value;
    }
    get [S$1._buttonColor$1]() {
      return this[S$1._buttonColor];
    }
    set [S$1._buttonColor$1](value) {
      super[S$1._buttonColor$1] = value;
    }
    get [S$1._disabledColor$1]() {
      return this[S$1._disabledColor];
    }
    set [S$1._disabledColor$1](value) {
      super[S$1._disabledColor$1] = value;
    }
    get [S$1._focusColor$1]() {
      return this[S$1._focusColor];
    }
    set [S$1._focusColor$1](value) {
      super[S$1._focusColor$1] = value;
    }
    get [S$1._hoverColor$1]() {
      return this[S$1._hoverColor];
    }
    set [S$1._hoverColor$1](value) {
      super[S$1._hoverColor$1] = value;
    }
    get [S$1._highlightColor$1]() {
      return this[S$1._highlightColor];
    }
    set [S$1._highlightColor$1](value) {
      super[S$1._highlightColor$1] = value;
    }
    get [S$1._splashColor$1]() {
      return this[S$1._splashColor];
    }
    set [S$1._splashColor$1](value) {
      super[S$1._splashColor$1] = value;
    }
    get colorScheme() {
      return this[S$1.colorScheme$1];
    }
    set colorScheme(value) {
      super.colorScheme = value;
    }
    get [S$1._materialTapTargetSize$1]() {
      return this[S$1._materialTapTargetSize];
    }
    set [S$1._materialTapTargetSize$1](value) {
      super[S$1._materialTapTargetSize$1] = value;
    }
    get constraints() {
      return new box$.BoxConstraints.new({minWidth: this.minWidth, minHeight: this.height});
    }
    get padding() {
      if (this[S$1._padding$1] != null) return dart.nullCheck(this[S$1._padding$1]);
      switch (this.textTheme) {
        case C[2279] || CT.C2279:
        case C[2280] || CT.C2280:
        {
          return C[567] || CT.C567;
        }
        case C[2281] || CT.C2281:
        {
          return C[2290] || CT.C2290;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    get shape() {
      if (this[S$1._shape$2] != null) return dart.nullCheck(this[S$1._shape$2]);
      switch (this.textTheme) {
        case C[2279] || CT.C2279:
        case C[2280] || CT.C2280:
        {
          return C[2291] || CT.C2291;
        }
        case C[2281] || CT.C2281:
        {
          return C[156] || CT.C156;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getBrightness(button) {
      let t62;
      if (button == null) dart.nullFailed(I[114], 435, 43, "button");
      t62 = button.colorBrightness;
      return t62 == null ? dart.nullCheck(this.colorScheme).brightness : t62;
    }
    getTextTheme(button) {
      let t62;
      if (button == null) dart.nullFailed(I[114], 444, 47, "button");
      t62 = button.textTheme;
      return t62 == null ? this.textTheme : t62;
    }
    getDisabledTextColor(button) {
      if (button == null) dart.nullFailed(I[114], 457, 45, "button");
      if (T$.MaterialStatePropertyOfColorN().is(button.textColor)) return dart.nullCheck(button.textColor);
      if (button.disabledTextColor != null) return dart.nullCheck(button.disabledTextColor);
      return dart.nullCheck(this.colorScheme).onSurface.withOpacity(0.38);
    }
    getDisabledFillColor(button) {
      if (button == null) dart.nullFailed(I[114], 475, 45, "button");
      if (button.disabledColor != null) return dart.nullCheck(button.disabledColor);
      if (this[S$1._disabledColor$1] != null) return dart.nullCheck(this[S$1._disabledColor$1]);
      return dart.nullCheck(this.colorScheme).onSurface.withOpacity(0.38);
    }
    getFillColor(button) {
      let t62;
      if (button == null) dart.nullFailed(I[114], 508, 38, "button");
      let fillColor = dart.test(button.enabled) ? button.color : button.disabledColor;
      if (fillColor != null) return fillColor;
      if (flat_button.FlatButton.is(button) || outline_button.OutlineButton.is(button) || dart.equals(dart.runtimeType(button), dart.wrapType(material_button.MaterialButton))) return null;
      if (dart.test(button.enabled) && raised_button.RaisedButton.is(button) && this[S$1._buttonColor$1] != null) return this[S$1._buttonColor$1];
      switch (this.getTextTheme(button)) {
        case C[2279] || CT.C2279:
        case C[2280] || CT.C2280:
        {
          return dart.test(button.enabled) ? dart.nullCheck(this.colorScheme).primary : this.getDisabledFillColor(button);
        }
        case C[2281] || CT.C2281:
        {
          return dart.test(button.enabled) ? (t62 = this[S$1._buttonColor$1], t62 == null ? dart.nullCheck(this.colorScheme).primary : t62) : dart.nullCheck(this.colorScheme).onSurface.withOpacity(0.12);
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getTextColor(button) {
      if (button == null) dart.nullFailed(I[114], 547, 37, "button");
      if (!dart.test(button.enabled)) return this.getDisabledTextColor(button);
      if (button.textColor != null) return dart.nullCheck(button.textColor);
      switch (this.getTextTheme(button)) {
        case C[2279] || CT.C2279:
        {
          return this.getBrightness(button) == ui.Brightness.dark ? colors$.Colors.white : colors$.Colors.black87;
        }
        case C[2280] || CT.C2280:
        {
          return dart.nullCheck(this.colorScheme).secondary;
        }
        case C[2281] || CT.C2281:
        {
          let fillColor = this.getFillColor(button);
          let fillIsDark = fillColor != null ? theme_data.ThemeData.estimateBrightnessForColor(fillColor) == ui.Brightness.dark : this.getBrightness(button) == ui.Brightness.dark;
          if (fillIsDark) return colors$.Colors.white;
          if (flat_button.FlatButton.is(button) || outline_button.OutlineButton.is(button)) return dart.nullCheck(this.colorScheme).primary;
          return colors$.Colors.black;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getSplashColor(button) {
      if (button == null) dart.nullFailed(I[114], 587, 39, "button");
      if (button.splashColor != null) return dart.nullCheck(button.splashColor);
      if (this[S$1._splashColor$1] != null && (raised_button.RaisedButton.is(button) || outline_button.OutlineButton.is(button))) return dart.nullCheck(this[S$1._splashColor$1]);
      if (this[S$1._splashColor$1] != null && flat_button.FlatButton.is(button)) {
        switch (this.getTextTheme(button)) {
          case C[2279] || CT.C2279:
          case C[2280] || CT.C2280:
          {
            return dart.nullCheck(this[S$1._splashColor$1]);
          }
          case C[2281] || CT.C2281:
          {
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      return this.getTextColor(button).withOpacity(0.12);
    }
    getFocusColor(button) {
      let t62, t62$;
      if (button == null) dart.nullFailed(I[114], 616, 38, "button");
      t62$ = (t62 = button.focusColor, t62 == null ? this[S$1._focusColor$1] : t62);
      return t62$ == null ? this.getTextColor(button).withOpacity(0.12) : t62$;
    }
    getHoverColor(button) {
      let t62, t62$;
      if (button == null) dart.nullFailed(I[114], 629, 38, "button");
      t62$ = (t62 = button.hoverColor, t62 == null ? this[S$1._hoverColor$1] : t62);
      return t62$ == null ? this.getTextColor(button).withOpacity(0.04) : t62$;
    }
    getHighlightColor(button) {
      let t62;
      if (button == null) dart.nullFailed(I[114], 642, 42, "button");
      if (button.highlightColor != null) return dart.nullCheck(button.highlightColor);
      switch (this.getTextTheme(button)) {
        case C[2279] || CT.C2279:
        case C[2280] || CT.C2280:
        {
          t62 = this[S$1._highlightColor$1];
          return t62 == null ? this.getTextColor(button).withOpacity(0.16) : t62;
        }
        case C[2281] || CT.C2281:
        {
          return colors$.Colors.transparent;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getElevation(button) {
      if (button == null) dart.nullFailed(I[114], 660, 38, "button");
      if (button.elevation != null) return dart.nullCheck(button.elevation);
      if (flat_button.FlatButton.is(button)) return 0.0;
      return 2.0;
    }
    getFocusElevation(button) {
      if (button == null) dart.nullFailed(I[114], 674, 43, "button");
      if (button.focusElevation != null) return dart.nullCheck(button.focusElevation);
      if (flat_button.FlatButton.is(button)) return 0.0;
      if (outline_button.OutlineButton.is(button)) return 0.0;
      return 4.0;
    }
    getHoverElevation(button) {
      if (button == null) dart.nullFailed(I[114], 690, 43, "button");
      if (button.hoverElevation != null) return dart.nullCheck(button.hoverElevation);
      if (flat_button.FlatButton.is(button)) return 0.0;
      if (outline_button.OutlineButton.is(button)) return 0.0;
      return 4.0;
    }
    getHighlightElevation(button) {
      if (button == null) dart.nullFailed(I[114], 706, 47, "button");
      if (button.highlightElevation != null) return dart.nullCheck(button.highlightElevation);
      if (flat_button.FlatButton.is(button)) return 0.0;
      if (outline_button.OutlineButton.is(button)) return 0.0;
      return 8.0;
    }
    getDisabledElevation(button) {
      if (button == null) dart.nullFailed(I[114], 722, 46, "button");
      if (button.disabledElevation != null) return dart.nullCheck(button.disabledElevation);
      return 0.0;
    }
    getPadding(button) {
      if (button == null) dart.nullFailed(I[114], 741, 48, "button");
      if (button.padding != null) return dart.nullCheck(button.padding);
      if (material_button.MaterialButtonWithIconMixin.is(button)) return C[2294] || CT.C2294;
      if (this[S$1._padding$1] != null) return dart.nullCheck(this[S$1._padding$1]);
      switch (this.getTextTheme(button)) {
        case C[2279] || CT.C2279:
        case C[2280] || CT.C2280:
        {
          return C[567] || CT.C567;
        }
        case C[2281] || CT.C2281:
        {
          return C[2290] || CT.C2290;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getShape(button) {
      let t62;
      if (button == null) dart.nullFailed(I[114], 764, 39, "button");
      t62 = button.shape;
      return t62 == null ? this.shape : t62;
    }
    getAnimationDuration(button) {
      let t62;
      if (button == null) dart.nullFailed(I[114], 772, 48, "button");
      t62 = button.animationDuration;
      return t62 == null ? constants.kThemeChangeDuration : t62;
    }
    getConstraints(button) {
      if (button == null) dart.nullFailed(I[114], 781, 48, "button");
      return this.constraints;
    }
    getMaterialTapTargetSize(button) {
      let t62, t62$;
      if (button == null) dart.nullFailed(I[114], 791, 65, "button");
      t62$ = (t62 = button.materialTapTargetSize, t62 == null ? this[S$1._materialTapTargetSize$1] : t62);
      return t62$ == null ? theme_data.MaterialTapTargetSize.padded : t62$;
    }
    copyWith(opts) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7, t62$8, t62$9, t62$10, t62$11, t62$12;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      return new button_theme.ButtonThemeData.new({textTheme: (t62 = textTheme, t62 == null ? this.textTheme : t62), layoutBehavior: (t62$ = layoutBehavior, t62$ == null ? this.layoutBehavior : t62$), minWidth: (t62$0 = minWidth, t62$0 == null ? this.minWidth : t62$0), height: (t62$1 = height, t62$1 == null ? this.height : t62$1), padding: (t62$2 = padding, t62$2 == null ? this.padding : t62$2), shape: (t62$3 = shape, t62$3 == null ? this.shape : t62$3), alignedDropdown: (t62$4 = alignedDropdown, t62$4 == null ? this.alignedDropdown : t62$4), buttonColor: (t62$5 = buttonColor, t62$5 == null ? this[S$1._buttonColor$1] : t62$5), disabledColor: (t62$6 = disabledColor, t62$6 == null ? this[S$1._disabledColor$1] : t62$6), focusColor: (t62$7 = focusColor, t62$7 == null ? this[S$1._focusColor$1] : t62$7), hoverColor: (t62$8 = hoverColor, t62$8 == null ? this[S$1._hoverColor$1] : t62$8), highlightColor: (t62$9 = highlightColor, t62$9 == null ? this[S$1._highlightColor$1] : t62$9), splashColor: (t62$10 = splashColor, t62$10 == null ? this[S$1._splashColor$1] : t62$10), colorScheme: (t62$11 = colorScheme, t62$11 == null ? this.colorScheme : t62$11), materialTapTargetSize: (t62$12 = materialTapTargetSize, t62$12 == null ? this[S$1._materialTapTargetSize$1] : t62$12)});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return button_theme.ButtonThemeData.is(other) && other.textTheme == this.textTheme && other.minWidth == this.minWidth && other.height == this.height && dart.equals(other.padding, this.padding) && dart.equals(other.shape, this.shape) && other.alignedDropdown == this.alignedDropdown && dart.equals(other[S$1._buttonColor$1], this[S$1._buttonColor$1]) && dart.equals(other[S$1._disabledColor$1], this[S$1._disabledColor$1]) && dart.equals(other[S$1._focusColor$1], this[S$1._focusColor$1]) && dart.equals(other[S$1._hoverColor$1], this[S$1._hoverColor$1]) && dart.equals(other[S$1._highlightColor$1], this[S$1._highlightColor$1]) && dart.equals(other[S$1._splashColor$1], this[S$1._splashColor$1]) && dart.equals(other.colorScheme, this.colorScheme) && other[S$1._materialTapTargetSize$1] == this[S$1._materialTapTargetSize$1];
    }
    get hashCode() {
      return ui.hashValues(this.textTheme, this.minWidth, this.height, this.padding, this.shape, this.alignedDropdown, this[S$1._buttonColor$1], this[S$1._disabledColor$1], this[S$1._focusColor$1], this[S$1._hoverColor$1], this[S$1._highlightColor$1], this[S$1._splashColor$1], this.colorScheme, this[S$1._materialTapTargetSize$1]);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[114], 875, 56, "properties");
      super.debugFillProperties(properties);
      let defaultTheme = C[2295] || CT.C2295;
      properties.add(new (T$.EnumPropertyOfButtonTextTheme()).new("textTheme", this.textTheme, {defaultValue: defaultTheme.textTheme}));
      properties.add(new diagnostics.DoubleProperty.new("minWidth", this.minWidth, {defaultValue: defaultTheme.minWidth}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: defaultTheme.height}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: defaultTheme.padding}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: defaultTheme.shape}));
      properties.add(new diagnostics.FlagProperty.new("alignedDropdown", {value: this.alignedDropdown, defaultValue: defaultTheme.alignedDropdown, ifTrue: "dropdown width matches button"}));
      properties.add(new colors.ColorProperty.new("buttonColor", this[S$1._buttonColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this[S$1._disabledColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this[S$1._focusColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this[S$1._hoverColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this[S$1._highlightColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this[S$1._splashColor$1], {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfColorScheme()).new("colorScheme", this.colorScheme, {defaultValue: defaultTheme.colorScheme}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this[S$1._materialTapTargetSize$1], {defaultValue: null}));
    }
  };
  (button_theme.ButtonThemeData.new = function(opts) {
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C[2279] || CT.C2279;
    if (textTheme == null) dart.nullFailed(I[114], 203, 10, "textTheme");
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 88;
    if (minWidth == null) dart.nullFailed(I[114], 204, 10, "minWidth");
    let height = opts && 'height' in opts ? opts.height : 36;
    if (height == null) dart.nullFailed(I[114], 205, 10, "height");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C[2284] || CT.C2284;
    if (layoutBehavior == null) dart.nullFailed(I[114], 208, 10, "layoutBehavior");
    let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
    if (alignedDropdown == null) dart.nullFailed(I[114], 209, 10, "alignedDropdown");
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    this[S$1.textTheme$3] = textTheme;
    this[S$1.minWidth$2] = minWidth;
    this[S$1.height$5] = height;
    this[S$1.layoutBehavior] = layoutBehavior;
    this[S$1.alignedDropdown] = alignedDropdown;
    this[S$1.colorScheme$1] = colorScheme;
    if (!(textTheme != null)) dart.assertFailed(null, I[114], 218, 15, "textTheme != null");
    if (!(minWidth != null && dart.notNull(minWidth) >= 0.0)) dart.assertFailed(null, I[114], 219, 15, "minWidth != null && minWidth >= 0.0");
    if (!(height != null && dart.notNull(height) >= 0.0)) dart.assertFailed(null, I[114], 220, 15, "height != null && height >= 0.0");
    if (!(alignedDropdown != null)) dart.assertFailed(null, I[114], 221, 15, "alignedDropdown != null");
    if (!(layoutBehavior != null)) dart.assertFailed(null, I[114], 222, 15, "layoutBehavior != null");
    this[S$1._buttonColor] = buttonColor;
    this[S$1._disabledColor] = disabledColor;
    this[S$1._focusColor] = focusColor;
    this[S$1._hoverColor] = hoverColor;
    this[S$1._highlightColor] = highlightColor;
    this[S$1._splashColor] = splashColor;
    this[S$1._padding] = padding;
    this[S$1._shape$1] = shape;
    this[S$1._materialTapTargetSize] = materialTapTargetSize;
    ;
  }).prototype = button_theme.ButtonThemeData.prototype;
  dart.addTypeTests(button_theme.ButtonThemeData);
  dart.addTypeCaches(button_theme.ButtonThemeData);
  dart.setMethodSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getMethods(button_theme.ButtonThemeData.__proto__),
    getBrightness: dart.fnType(ui.Brightness, [material_button.MaterialButton]),
    getTextTheme: dart.fnType(button_theme.ButtonTextTheme, [material_button.MaterialButton]),
    getDisabledTextColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getDisabledFillColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getFillColor: dart.fnType(dart.nullable(ui.Color), [material_button.MaterialButton]),
    getTextColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getSplashColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getFocusColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getHoverColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getHighlightColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getFocusElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getHoverElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getHighlightElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getDisabledElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getPadding: dart.fnType(edge_insets.EdgeInsetsGeometry, [material_button.MaterialButton]),
    getShape: dart.fnType(borders.ShapeBorder, [material_button.MaterialButton]),
    getAnimationDuration: dart.fnType(core.Duration, [material_button.MaterialButton]),
    getConstraints: dart.fnType(box$.BoxConstraints, [material_button.MaterialButton]),
    getMaterialTapTargetSize: dart.fnType(theme_data.MaterialTapTargetSize, [material_button.MaterialButton]),
    copyWith: dart.fnType(button_theme.ButtonThemeData, [], {alignedDropdown: dart.nullable(core.bool), buttonColor: dart.nullable(ui.Color), colorScheme: dart.nullable(color_scheme.ColorScheme), disabledColor: dart.nullable(ui.Color), focusColor: dart.nullable(ui.Color), height: dart.nullable(core.double), highlightColor: dart.nullable(ui.Color), hoverColor: dart.nullable(ui.Color), layoutBehavior: dart.nullable(button_theme.ButtonBarLayoutBehavior), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), minWidth: dart.nullable(core.double), padding: dart.nullable(edge_insets.EdgeInsetsGeometry), shape: dart.nullable(borders.ShapeBorder), splashColor: dart.nullable(ui.Color), textTheme: dart.nullable(button_theme.ButtonTextTheme)}, {})
  }));
  dart.setGetterSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getGetters(button_theme.ButtonThemeData.__proto__),
    constraints: box$.BoxConstraints,
    padding: edge_insets.EdgeInsetsGeometry,
    shape: borders.ShapeBorder
  }));
  dart.setLibraryUri(button_theme.ButtonThemeData, I[115]);
  dart.setFieldSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getFields(button_theme.ButtonThemeData.__proto__),
    minWidth: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    textTheme: dart.finalFieldType(button_theme.ButtonTextTheme),
    layoutBehavior: dart.finalFieldType(button_theme.ButtonBarLayoutBehavior),
    [S$1._padding$1]: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$1._shape$2]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    alignedDropdown: dart.finalFieldType(core.bool),
    [S$1._buttonColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$1._disabledColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$1._focusColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$1._hoverColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$1._highlightColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$1._splashColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    colorScheme: dart.finalFieldType(dart.nullable(color_scheme.ColorScheme)),
    [S$1._materialTapTargetSize$1]: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize))
  }));
  dart.defineExtensionMethods(button_theme.ButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(button_theme.ButtonThemeData, ['hashCode']);
  const Object_Diagnosticable$36$29 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$29.new = function() {
  }).prototype = Object_Diagnosticable$36$29.prototype;
  dart.applyMixin(Object_Diagnosticable$36$29, diagnostics.Diagnosticable);
  button_bar_theme.ButtonBarThemeData = class ButtonBarThemeData extends Object_Diagnosticable$36$29 {
    get alignment() {
      return this[S$1.alignment$3];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get mainAxisSize() {
      return this[S$1.mainAxisSize];
    }
    set mainAxisSize(value) {
      super.mainAxisSize = value;
    }
    get buttonTextTheme() {
      return this[S$1.buttonTextTheme];
    }
    set buttonTextTheme(value) {
      super.buttonTextTheme = value;
    }
    get buttonMinWidth() {
      return this[S$1.buttonMinWidth];
    }
    set buttonMinWidth(value) {
      super.buttonMinWidth = value;
    }
    get buttonHeight() {
      return this[S$1.buttonHeight];
    }
    set buttonHeight(value) {
      super.buttonHeight = value;
    }
    get buttonPadding() {
      return this[S$1.buttonPadding$1];
    }
    set buttonPadding(value) {
      super.buttonPadding = value;
    }
    get buttonAlignedDropdown() {
      return this[S$1.buttonAlignedDropdown];
    }
    set buttonAlignedDropdown(value) {
      super.buttonAlignedDropdown = value;
    }
    get layoutBehavior() {
      return this[S$1.layoutBehavior$1];
    }
    set layoutBehavior(value) {
      super.layoutBehavior = value;
    }
    get overflowDirection() {
      return this[S$1.overflowDirection];
    }
    set overflowDirection(value) {
      super.overflowDirection = value;
    }
    copyWith(opts) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
      let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
      let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
      let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
      let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
      let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
      let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
      return new button_bar_theme.ButtonBarThemeData.new({alignment: (t62 = alignment, t62 == null ? this.alignment : t62), mainAxisSize: (t62$ = mainAxisSize, t62$ == null ? this.mainAxisSize : t62$), buttonTextTheme: (t62$0 = buttonTextTheme, t62$0 == null ? this.buttonTextTheme : t62$0), buttonMinWidth: (t62$1 = buttonMinWidth, t62$1 == null ? this.buttonMinWidth : t62$1), buttonHeight: (t62$2 = buttonHeight, t62$2 == null ? this.buttonHeight : t62$2), buttonPadding: (t62$3 = buttonPadding, t62$3 == null ? this.buttonPadding : t62$3), buttonAlignedDropdown: (t62$4 = buttonAlignedDropdown, t62$4 == null ? this.buttonAlignedDropdown : t62$4), layoutBehavior: (t62$5 = layoutBehavior, t62$5 == null ? this.layoutBehavior : t62$5), overflowDirection: (t62$6 = overflowDirection, t62$6 == null ? this.overflowDirection : t62$6)});
    }
    static lerp(a, b, t) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7, t62$8, t62$9, t62$10, t62$11, t62$12, t62$13, t62$14, t62$15;
      if (t == null) dart.nullFailed(I[116], 145, 88, "t");
      if (!(t != null)) dart.assertFailed(null, I[116], 146, 12, "t != null");
      if (a == null && b == null) return null;
      return new button_bar_theme.ButtonBarThemeData.new({alignment: dart.notNull(t) < 0.5 ? (t62 = a, t62 == null ? null : t62.alignment) : (t62$ = b, t62$ == null ? null : t62$.alignment), mainAxisSize: dart.notNull(t) < 0.5 ? (t62$0 = a, t62$0 == null ? null : t62$0.mainAxisSize) : (t62$1 = b, t62$1 == null ? null : t62$1.mainAxisSize), buttonTextTheme: dart.notNull(t) < 0.5 ? (t62$2 = a, t62$2 == null ? null : t62$2.buttonTextTheme) : (t62$3 = b, t62$3 == null ? null : t62$3.buttonTextTheme), buttonMinWidth: ui.lerpDouble((t62$4 = a, t62$4 == null ? null : t62$4.buttonMinWidth), (t62$5 = b, t62$5 == null ? null : t62$5.buttonMinWidth), t), buttonHeight: ui.lerpDouble((t62$6 = a, t62$6 == null ? null : t62$6.buttonHeight), (t62$7 = b, t62$7 == null ? null : t62$7.buttonHeight), t), buttonPadding: edge_insets.EdgeInsetsGeometry.lerp((t62$8 = a, t62$8 == null ? null : t62$8.buttonPadding), (t62$9 = b, t62$9 == null ? null : t62$9.buttonPadding), t), buttonAlignedDropdown: dart.notNull(t) < 0.5 ? (t62$10 = a, t62$10 == null ? null : t62$10.buttonAlignedDropdown) : (t62$11 = b, t62$11 == null ? null : t62$11.buttonAlignedDropdown), layoutBehavior: dart.notNull(t) < 0.5 ? (t62$12 = a, t62$12 == null ? null : t62$12.layoutBehavior) : (t62$13 = b, t62$13 == null ? null : t62$13.layoutBehavior), overflowDirection: dart.notNull(t) < 0.5 ? (t62$14 = a, t62$14 == null ? null : t62$14.overflowDirection) : (t62$15 = b, t62$15 == null ? null : t62$15.overflowDirection)});
    }
    get hashCode() {
      return ui.hashValues(this.alignment, this.mainAxisSize, this.buttonTextTheme, this.buttonMinWidth, this.buttonHeight, this.buttonPadding, this.buttonAlignedDropdown, this.layoutBehavior, this.overflowDirection);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return button_bar_theme.ButtonBarThemeData.is(other) && other.alignment == this.alignment && other.mainAxisSize == this.mainAxisSize && other.buttonTextTheme == this.buttonTextTheme && other.buttonMinWidth == this.buttonMinWidth && other.buttonHeight == this.buttonHeight && dart.equals(other.buttonPadding, this.buttonPadding) && other.buttonAlignedDropdown == this.buttonAlignedDropdown && other.layoutBehavior == this.layoutBehavior && other.overflowDirection == this.overflowDirection;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[116], 196, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMainAxisAlignment()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMainAxisSize()).new("mainAxisSize", this.mainAxisSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonTextTheme()).new("textTheme", this.buttonTextTheme, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("minWidth", this.buttonMinWidth, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.buttonHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.buttonPadding, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("buttonAlignedDropdown", {value: this.buttonAlignedDropdown, ifTrue: "dropdown width matches button", defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonBarLayoutBehavior()).new("layoutBehavior", this.layoutBehavior, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVerticalDirection()).new("overflowDirection", this.overflowDirection, {defaultValue: null}));
    }
  };
  (button_bar_theme.ButtonBarThemeData.new = function(opts) {
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
    let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
    let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
    let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
    let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
    let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
    let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
    this[S$1.alignment$3] = alignment;
    this[S$1.mainAxisSize] = mainAxisSize;
    this[S$1.buttonTextTheme] = buttonTextTheme;
    this[S$1.buttonMinWidth] = buttonMinWidth;
    this[S$1.buttonHeight] = buttonHeight;
    this[S$1.buttonPadding$1] = buttonPadding;
    this[S$1.buttonAlignedDropdown] = buttonAlignedDropdown;
    this[S$1.layoutBehavior$1] = layoutBehavior;
    this[S$1.overflowDirection] = overflowDirection;
    if (!(buttonMinWidth == null || dart.notNull(buttonMinWidth) >= 0.0)) dart.assertFailed(null, I[116], 43, 15, "buttonMinWidth == null || buttonMinWidth >= 0.0");
    if (!(buttonHeight == null || dart.notNull(buttonHeight) >= 0.0)) dart.assertFailed(null, I[116], 44, 15, "buttonHeight == null || buttonHeight >= 0.0");
    ;
  }).prototype = button_bar_theme.ButtonBarThemeData.prototype;
  dart.addTypeTests(button_bar_theme.ButtonBarThemeData);
  dart.addTypeCaches(button_bar_theme.ButtonBarThemeData);
  dart.setMethodSignature(button_bar_theme.ButtonBarThemeData, () => ({
    __proto__: dart.getMethods(button_bar_theme.ButtonBarThemeData.__proto__),
    copyWith: dart.fnType(button_bar_theme.ButtonBarThemeData, [], {alignment: dart.nullable(flex.MainAxisAlignment), buttonAlignedDropdown: dart.nullable(core.bool), buttonHeight: dart.nullable(core.double), buttonMinWidth: dart.nullable(core.double), buttonPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), buttonTextTheme: dart.nullable(button_theme.ButtonTextTheme), layoutBehavior: dart.nullable(button_theme.ButtonBarLayoutBehavior), mainAxisSize: dart.nullable(flex.MainAxisSize), overflowDirection: dart.nullable(basic_types.VerticalDirection)}, {})
  }));
  dart.setLibraryUri(button_bar_theme.ButtonBarThemeData, I[117]);
  dart.setFieldSignature(button_bar_theme.ButtonBarThemeData, () => ({
    __proto__: dart.getFields(button_bar_theme.ButtonBarThemeData.__proto__),
    alignment: dart.finalFieldType(dart.nullable(flex.MainAxisAlignment)),
    mainAxisSize: dart.finalFieldType(dart.nullable(flex.MainAxisSize)),
    buttonTextTheme: dart.finalFieldType(dart.nullable(button_theme.ButtonTextTheme)),
    buttonMinWidth: dart.finalFieldType(dart.nullable(core.double)),
    buttonHeight: dart.finalFieldType(dart.nullable(core.double)),
    buttonPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    buttonAlignedDropdown: dart.finalFieldType(dart.nullable(core.bool)),
    layoutBehavior: dart.finalFieldType(dart.nullable(button_theme.ButtonBarLayoutBehavior)),
    overflowDirection: dart.finalFieldType(dart.nullable(basic_types.VerticalDirection))
  }));
  dart.defineExtensionMethods(button_bar_theme.ButtonBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(button_bar_theme.ButtonBarThemeData, ['hashCode']);
  button_bar_theme.ButtonBarTheme = class ButtonBarTheme extends framework.InheritedWidget {
    get data() {
      return this[S$1.data$20];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t62, t62$;
      if (context == null) dart.nullFailed(I[116], 253, 45, "context");
      let buttonBarTheme = context.dependOnInheritedWidgetOfExactType(button_bar_theme.ButtonBarTheme);
      t62$ = (t62 = buttonBarTheme, t62 == null ? null : t62.data);
      return t62$ == null ? theme$.Theme.of(context).buttonBarTheme : t62$;
    }
    updateShouldNotify(oldWidget) {
      button_bar_theme.ButtonBarTheme.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[116], 259, 42, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (button_bar_theme.ButtonBarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[116], 237, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[116], 238, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$20] = data;
    if (!(data != null)) dart.assertFailed(null, I[116], 239, 15, "data != null");
    button_bar_theme.ButtonBarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_bar_theme.ButtonBarTheme.prototype;
  dart.addTypeTests(button_bar_theme.ButtonBarTheme);
  dart.addTypeCaches(button_bar_theme.ButtonBarTheme);
  dart.setMethodSignature(button_bar_theme.ButtonBarTheme, () => ({
    __proto__: dart.getMethods(button_bar_theme.ButtonBarTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(button_bar_theme.ButtonBarTheme, I[117]);
  dart.setFieldSignature(button_bar_theme.ButtonBarTheme, () => ({
    __proto__: dart.getFields(button_bar_theme.ButtonBarTheme.__proto__),
    data: dart.finalFieldType(button_bar_theme.ButtonBarThemeData)
  }));
  button_bar.ButtonBar = class ButtonBar extends framework.StatelessWidget {
    get alignment() {
      return this[S$1.alignment$4];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get mainAxisSize() {
      return this[S$1.mainAxisSize$1];
    }
    set mainAxisSize(value) {
      super.mainAxisSize = value;
    }
    get buttonTextTheme() {
      return this[S$1.buttonTextTheme$1];
    }
    set buttonTextTheme(value) {
      super.buttonTextTheme = value;
    }
    get buttonMinWidth() {
      return this[S$1.buttonMinWidth$1];
    }
    set buttonMinWidth(value) {
      super.buttonMinWidth = value;
    }
    get buttonHeight() {
      return this[S$1.buttonHeight$1];
    }
    set buttonHeight(value) {
      super.buttonHeight = value;
    }
    get buttonPadding() {
      return this[S$1.buttonPadding$2];
    }
    set buttonPadding(value) {
      super.buttonPadding = value;
    }
    get buttonAlignedDropdown() {
      return this[S$1.buttonAlignedDropdown$1];
    }
    set buttonAlignedDropdown(value) {
      super.buttonAlignedDropdown = value;
    }
    get layoutBehavior() {
      return this[S$1.layoutBehavior$2];
    }
    set layoutBehavior(value) {
      super.layoutBehavior = value;
    }
    get overflowDirection() {
      return this[S$1.overflowDirection$1];
    }
    set overflowDirection(value) {
      super.overflowDirection = value;
    }
    get overflowButtonSpacing() {
      return this[S$1.overflowButtonSpacing];
    }
    set overflowButtonSpacing(value) {
      super.overflowButtonSpacing = value;
    }
    get children() {
      return this[S$1.children$2];
    }
    set children(value) {
      super.children = value;
    }
    build(context) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7, t62$8, t62$9, t62$10, t62$11, t62$12, t62$13, t62$14, t62$15;
      if (context == null) dart.nullFailed(I[118], 170, 29, "context");
      let parentButtonTheme = button_theme.ButtonTheme.of(context);
      let barTheme = button_bar_theme.ButtonBarTheme.of(context);
      let buttonTheme = parentButtonTheme.copyWith({textTheme: (t62$ = (t62 = this.buttonTextTheme, t62 == null ? barTheme.buttonTextTheme : t62), t62$ == null ? button_theme.ButtonTextTheme.primary : t62$), minWidth: (t62$1 = (t62$0 = this.buttonMinWidth, t62$0 == null ? barTheme.buttonMinWidth : t62$0), t62$1 == null ? 64.0 : t62$1), height: (t62$3 = (t62$2 = this.buttonHeight, t62$2 == null ? barTheme.buttonHeight : t62$2), t62$3 == null ? 36.0 : t62$3), padding: (t62$5 = (t62$4 = this.buttonPadding, t62$4 == null ? barTheme.buttonPadding : t62$4), t62$5 == null ? C[153] || CT.C153 : t62$5), alignedDropdown: (t62$7 = (t62$6 = this.buttonAlignedDropdown, t62$6 == null ? barTheme.buttonAlignedDropdown : t62$6), t62$7 == null ? false : t62$7), layoutBehavior: (t62$9 = (t62$8 = this.layoutBehavior, t62$8 == null ? barTheme.layoutBehavior : t62$8), t62$9 == null ? button_theme.ButtonBarLayoutBehavior.padded : t62$9)});
      let paddingUnit = dart.notNull(buttonTheme.padding.horizontal) / 4.0;
      let child = new button_theme.ButtonTheme.fromButtonThemeData({data: buttonTheme, child: new button_bar._ButtonBarRow.new({mainAxisAlignment: (t62$11 = (t62$10 = this.alignment, t62$10 == null ? barTheme.alignment : t62$10), t62$11 == null ? flex.MainAxisAlignment.end : t62$11), mainAxisSize: (t62$13 = (t62$12 = this.mainAxisSize, t62$12 == null ? barTheme.mainAxisSize : t62$12), t62$13 == null ? flex.MainAxisSize.max : t62$13), overflowDirection: (t62$15 = (t62$14 = this.overflowDirection, t62$14 == null ? barTheme.overflowDirection : t62$14), t62$15 == null ? basic_types.VerticalDirection.down : t62$15), children: this.children[S$.$map](framework.Widget, dart.fn(child => {
            if (child == null) dart.nullFailed(I[118], 191, 48, "child");
            return new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: paddingUnit}), child: child, $creationLocationd_0dea112b090073317d4: C[2296] || CT.C2296});
          }, T$.WidgetToPadding()))[S$.$toList](), overflowButtonSpacing: this.overflowButtonSpacing, $creationLocationd_0dea112b090073317d4: C[2300] || CT.C2300}), $creationLocationd_0dea112b090073317d4: C[2307] || CT.C2307});
      switch (buttonTheme.layoutBehavior) {
        case C[2284] || CT.C2284:
        {
          return new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: 2.0 * paddingUnit, horizontal: paddingUnit}), child: child, $creationLocationd_0dea112b090073317d4: C[2311] || CT.C2311});
        }
        case C[2283] || CT.C2283:
        {
          return new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: paddingUnit}), constraints: C[2315] || CT.C2315, alignment: alignment.Alignment.center, child: child, $creationLocationd_0dea112b090073317d4: C[2316] || CT.C2316});
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  (button_bar.ButtonBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
    let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
    let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
    let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
    let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
    let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
    let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
    let overflowButtonSpacing = opts && 'overflowButtonSpacing' in opts ? opts.overflowButtonSpacing : null;
    let children = opts && 'children' in opts ? opts.children : C[1183] || CT.C1183;
    if (children == null) dart.nullFailed(I[118], 68, 10, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.alignment$4] = alignment;
    this[S$1.mainAxisSize$1] = mainAxisSize;
    this[S$1.buttonTextTheme$1] = buttonTextTheme;
    this[S$1.buttonMinWidth$1] = buttonMinWidth;
    this[S$1.buttonHeight$1] = buttonHeight;
    this[S$1.buttonPadding$2] = buttonPadding;
    this[S$1.buttonAlignedDropdown$1] = buttonAlignedDropdown;
    this[S$1.layoutBehavior$2] = layoutBehavior;
    this[S$1.overflowDirection$1] = overflowDirection;
    this[S$1.overflowButtonSpacing] = overflowButtonSpacing;
    this[S$1.children$2] = children;
    if (!(buttonMinWidth == null || dart.notNull(buttonMinWidth) >= 0.0)) dart.assertFailed(null, I[118], 69, 15, "buttonMinWidth == null || buttonMinWidth >= 0.0");
    if (!(buttonHeight == null || dart.notNull(buttonHeight) >= 0.0)) dart.assertFailed(null, I[118], 70, 15, "buttonHeight == null || buttonHeight >= 0.0");
    if (!(overflowButtonSpacing == null || dart.notNull(overflowButtonSpacing) >= 0.0)) dart.assertFailed(null, I[118], 71, 15, "overflowButtonSpacing == null || overflowButtonSpacing >= 0.0");
    button_bar.ButtonBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_bar.ButtonBar.prototype;
  dart.addTypeTests(button_bar.ButtonBar);
  dart.addTypeCaches(button_bar.ButtonBar);
  dart.setMethodSignature(button_bar.ButtonBar, () => ({
    __proto__: dart.getMethods(button_bar.ButtonBar.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(button_bar.ButtonBar, I[119]);
  dart.setFieldSignature(button_bar.ButtonBar, () => ({
    __proto__: dart.getFields(button_bar.ButtonBar.__proto__),
    alignment: dart.finalFieldType(dart.nullable(flex.MainAxisAlignment)),
    mainAxisSize: dart.finalFieldType(dart.nullable(flex.MainAxisSize)),
    buttonTextTheme: dart.finalFieldType(dart.nullable(button_theme.ButtonTextTheme)),
    buttonMinWidth: dart.finalFieldType(dart.nullable(core.double)),
    buttonHeight: dart.finalFieldType(dart.nullable(core.double)),
    buttonPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    buttonAlignedDropdown: dart.finalFieldType(dart.nullable(core.bool)),
    layoutBehavior: dart.finalFieldType(dart.nullable(button_theme.ButtonBarLayoutBehavior)),
    overflowDirection: dart.finalFieldType(dart.nullable(basic_types.VerticalDirection)),
    overflowButtonSpacing: dart.finalFieldType(dart.nullable(core.double)),
    children: dart.finalFieldType(core.List$(framework.Widget))
  }));
  button_bar._ButtonBarRow = class _ButtonBarRow extends basic.Flex {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[118], 261, 55, "context");
      return new button_bar._RenderButtonBarRow.new({direction: this.direction, mainAxisAlignment: this.mainAxisAlignment, mainAxisSize: this.mainAxisSize, crossAxisAlignment: this.crossAxisAlignment, textDirection: dart.nullCheck(this.getEffectiveTextDirection(context)), verticalDirection: this.verticalDirection, textBaseline: this.textBaseline, overflowButtonSpacing: this.overflowButtonSpacing});
    }
    updateRenderObject(context, renderObject) {
      let t62;
      if (context == null) dart.nullFailed(I[118], 275, 40, "context");
      button_bar._RenderButtonBarRow.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[118], 275, 79, "renderObject");
      t62 = renderObject;
      (() => {
        t62.direction = this.direction;
        t62.mainAxisAlignment = this.mainAxisAlignment;
        t62.mainAxisSize = this.mainAxisSize;
        t62.crossAxisAlignment = this.crossAxisAlignment;
        t62.textDirection = this.getEffectiveTextDirection(context);
        t62.verticalDirection = this.verticalDirection;
        t62.textBaseline = this.textBaseline;
        t62.overflowButtonSpacing = this.overflowButtonSpacing;
        return t62;
      })();
    }
  };
  (button_bar._ButtonBarRow.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(I[118], 238, 27, "children");
    let direction = opts && 'direction' in opts ? opts.direction : C[2322] || CT.C2322;
    if (direction == null) dart.nullFailed(I[118], 239, 10, "direction");
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : C[2323] || CT.C2323;
    if (mainAxisSize == null) dart.nullFailed(I[118], 240, 18, "mainAxisSize");
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C[2324] || CT.C2324;
    if (mainAxisAlignment == null) dart.nullFailed(I[118], 241, 23, "mainAxisAlignment");
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C[2325] || CT.C2325;
    if (crossAxisAlignment == null) dart.nullFailed(I[118], 242, 24, "crossAxisAlignment");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : C[2326] || CT.C2326;
    if (overflowDirection == null) dart.nullFailed(I[118], 244, 23, "overflowDirection");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let overflowButtonSpacing = opts && 'overflowButtonSpacing' in opts ? opts.overflowButtonSpacing : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.overflowButtonSpacing = overflowButtonSpacing;
    button_bar._ButtonBarRow.__proto__.new.call(this, {children: children, direction: direction, mainAxisSize: mainAxisSize, mainAxisAlignment: mainAxisAlignment, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: overflowDirection, textBaseline: textBaseline, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_bar._ButtonBarRow.prototype;
  dart.addTypeTests(button_bar._ButtonBarRow);
  dart.addTypeCaches(button_bar._ButtonBarRow);
  dart.setMethodSignature(button_bar._ButtonBarRow, () => ({
    __proto__: dart.getMethods(button_bar._ButtonBarRow.__proto__),
    createRenderObject: dart.fnType(button_bar._RenderButtonBarRow, [framework.BuildContext])
  }));
  dart.setLibraryUri(button_bar._ButtonBarRow, I[119]);
  dart.setFieldSignature(button_bar._ButtonBarRow, () => ({
    __proto__: dart.getFields(button_bar._ButtonBarRow.__proto__),
    overflowButtonSpacing: dart.finalFieldType(dart.nullable(core.double))
  }));
  button_bar._RenderButtonBarRow = class _RenderButtonBarRow extends flex.RenderFlex {
    get constraints() {
      if (dart.test(this[S$1._hasCheckedLayoutWidth])) return super.constraints;
      return super.constraints.copyWith({maxWidth: 1 / 0});
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[118], 339, 40, "constraints");
      let size = super.computeDryLayout(constraints.copyWith({maxWidth: 1 / 0}));
      if (dart.notNull(size.width) <= dart.notNull(constraints.maxWidth)) {
        return super.computeDryLayout(constraints);
      }
      let currentHeight = 0.0;
      let child = this.firstChild;
      while (child != null) {
        let childConstraints = constraints.copyWith({minWidth: 0.0});
        let childSize = child.getDryLayout(childConstraints);
        currentHeight = currentHeight + dart.notNull(childSize.height);
        child = this.childAfter(child);
        if (this.overflowButtonSpacing != null && child != null) currentHeight = currentHeight + dart.nullCheck(this.overflowButtonSpacing);
      }
      return constraints.constrain(new ui.Size.new(constraints.maxWidth, currentHeight));
    }
    performLayout() {
      this[S$1._hasCheckedLayoutWidth] = false;
      super.performLayout();
      this[S$1._hasCheckedLayoutWidth] = true;
      if (dart.notNull(this.size.width) <= dart.notNull(this.constraints.maxWidth)) {
        super.performLayout();
      } else {
        let childConstraints = this.constraints.copyWith({minWidth: 0.0});
        let child = null;
        let currentHeight = 0.0;
        switch (this.verticalDirection) {
          case C[2326] || CT.C2326:
          {
            child = this.firstChild;
            break;
          }
          case C[2327] || CT.C2327:
          {
            child = this.lastChild;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        while (child != null) {
          let childParentData = flex.FlexParentData.as(dart.nullCheck(child.parentData));
          child.layout(childConstraints, {parentUsesSize: true});
          switch (dart.nullCheck(this.textDirection)) {
            case C[329] || CT.C329:
            {
              switch (this.mainAxisAlignment) {
                case C[2328] || CT.C2328:
                {
                  let midpoint = (dart.notNull(this.constraints.maxWidth) - dart.notNull(child.size.width)) / 2.0;
                  childParentData.offset = new ui.Offset.new(midpoint, currentHeight);
                  break;
                }
                case C[2329] || CT.C2329:
                {
                  childParentData.offset = new ui.Offset.new(dart.notNull(this.constraints.maxWidth) - dart.notNull(child.size.width), currentHeight);
                  break;
                }
                default:
                {
                  childParentData.offset = new ui.Offset.new(0.0, currentHeight);
                  break;
                }
              }
              break;
            }
            case C[328] || CT.C328:
            {
              switch (this.mainAxisAlignment) {
                case C[2328] || CT.C2328:
                {
                  let midpoint = dart.notNull(this.constraints.maxWidth) / 2.0 - dart.notNull(child.size.width) / 2.0;
                  childParentData.offset = new ui.Offset.new(midpoint, currentHeight);
                  break;
                }
                case C[2329] || CT.C2329:
                {
                  childParentData.offset = new ui.Offset.new(0.0, currentHeight);
                  break;
                }
                default:
                {
                  childParentData.offset = new ui.Offset.new(dart.notNull(this.constraints.maxWidth) - dart.notNull(child.size.width), currentHeight);
                  break;
                }
              }
              break;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
          currentHeight = currentHeight + dart.notNull(child.size.height);
          switch (this.verticalDirection) {
            case C[2326] || CT.C2326:
            {
              child = childParentData.nextSibling;
              break;
            }
            case C[2327] || CT.C2327:
            {
              child = childParentData.previousSibling;
              break;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
          if (this.overflowButtonSpacing != null && child != null) currentHeight = currentHeight + dart.nullCheck(this.overflowButtonSpacing);
        }
        this.size = this.constraints.constrain(new ui.Size.new(this.constraints.maxWidth, currentHeight));
      }
    }
  };
  (button_bar._RenderButtonBarRow.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let direction = opts && 'direction' in opts ? opts.direction : C[2322] || CT.C2322;
    if (direction == null) dart.nullFailed(I[118], 307, 10, "direction");
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : C[2323] || CT.C2323;
    if (mainAxisSize == null) dart.nullFailed(I[118], 308, 18, "mainAxisSize");
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C[2324] || CT.C2324;
    if (mainAxisAlignment == null) dart.nullFailed(I[118], 309, 23, "mainAxisAlignment");
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C[2325] || CT.C2325;
    if (crossAxisAlignment == null) dart.nullFailed(I[118], 310, 24, "crossAxisAlignment");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[118], 311, 28, "textDirection");
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : C[2326] || CT.C2326;
    if (verticalDirection == null) dart.nullFailed(I[118], 312, 23, "verticalDirection");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let overflowButtonSpacing = opts && 'overflowButtonSpacing' in opts ? opts.overflowButtonSpacing : null;
    this[S$1._hasCheckedLayoutWidth] = false;
    this.overflowButtonSpacing = overflowButtonSpacing;
    if (!(textDirection != null)) dart.assertFailed(null, I[118], 315, 15, "textDirection != null");
    if (!(overflowButtonSpacing == null || dart.notNull(overflowButtonSpacing) >= 0)) dart.assertFailed(null, I[118], 316, 15, "overflowButtonSpacing == null || overflowButtonSpacing >= 0");
    button_bar._RenderButtonBarRow.__proto__.new.call(this, {children: children, direction: direction, mainAxisSize: mainAxisSize, mainAxisAlignment: mainAxisAlignment, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection, textBaseline: textBaseline});
    ;
  }).prototype = button_bar._RenderButtonBarRow.prototype;
  dart.addTypeTests(button_bar._RenderButtonBarRow);
  dart.addTypeCaches(button_bar._RenderButtonBarRow);
  dart.setLibraryUri(button_bar._RenderButtonBarRow, I[119]);
  dart.setFieldSignature(button_bar._RenderButtonBarRow, () => ({
    __proto__: dart.getFields(button_bar._RenderButtonBarRow.__proto__),
    [S$1._hasCheckedLayoutWidth]: dart.fieldType(core.bool),
    overflowButtonSpacing: dart.fieldType(dart.nullable(core.double))
  }));
  bottom_sheet.BottomSheet = class BottomSheet extends framework.StatefulWidget {
    get animationController() {
      return this[S$1.animationController];
    }
    set animationController(value) {
      super.animationController = value;
    }
    get onClosing() {
      return this[S$1.onClosing];
    }
    set onClosing(value) {
      super.onClosing = value;
    }
    get builder() {
      return this[S$1.builder];
    }
    set builder(value) {
      super.builder = value;
    }
    get enableDrag() {
      return this[S$1.enableDrag];
    }
    set enableDrag(value) {
      super.enableDrag = value;
    }
    get onDragStart() {
      return this[S$1.onDragStart];
    }
    set onDragStart(value) {
      super.onDragStart = value;
    }
    get onDragEnd() {
      return this[S$1.onDragEnd];
    }
    set onDragEnd(value) {
      super.onDragEnd = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$17];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$1.elevation$21];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$1.shape$19];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S$1.clipBehavior$9];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createState() {
      return new bottom_sheet._BottomSheetState.new();
    }
    static createAnimationController(vsync) {
      if (vsync == null) dart.nullFailed(I[120], 175, 71, "vsync");
      return new animation_controller.AnimationController.new({duration: bottom_sheet._bottomSheetEnterDuration, reverseDuration: bottom_sheet._bottomSheetExitDuration, debugLabel: "BottomSheet", vsync: vsync});
    }
  };
  (bottom_sheet.BottomSheet.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animationController = opts && 'animationController' in opts ? opts.animationController : null;
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    if (enableDrag == null) dart.nullFailed(I[120], 75, 10, "enableDrag");
    let onDragStart = opts && 'onDragStart' in opts ? opts.onDragStart : null;
    let onDragEnd = opts && 'onDragEnd' in opts ? opts.onDragEnd : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let onClosing = opts && 'onClosing' in opts ? opts.onClosing : null;
    if (onClosing == null) dart.nullFailed(I[120], 82, 19, "onClosing");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[120], 83, 19, "builder");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.animationController] = animationController;
    this[S$1.enableDrag] = enableDrag;
    this[S$1.onDragStart] = onDragStart;
    this[S$1.onDragEnd] = onDragEnd;
    this[S$1.backgroundColor$17] = backgroundColor;
    this[S$1.elevation$21] = elevation;
    this[S$1.shape$19] = shape;
    this[S$1.clipBehavior$9] = clipBehavior;
    this[S$1.onClosing] = onClosing;
    this[S$1.builder] = builder;
    if (!(enableDrag != null)) dart.assertFailed(null, I[120], 84, 15, "enableDrag != null");
    if (!(onClosing != null)) dart.assertFailed(null, I[120], 85, 15, "onClosing != null");
    if (!(builder != null)) dart.assertFailed(null, I[120], 86, 15, "builder != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[120], 87, 15, "elevation == null || elevation >= 0.0");
    bottom_sheet.BottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_sheet.BottomSheet.prototype;
  dart.addTypeTests(bottom_sheet.BottomSheet);
  dart.addTypeCaches(bottom_sheet.BottomSheet);
  dart.setMethodSignature(bottom_sheet.BottomSheet, () => ({
    __proto__: dart.getMethods(bottom_sheet.BottomSheet.__proto__),
    createState: dart.fnType(bottom_sheet._BottomSheetState, [])
  }));
  dart.setLibraryUri(bottom_sheet.BottomSheet, I[121]);
  dart.setFieldSignature(bottom_sheet.BottomSheet, () => ({
    __proto__: dart.getFields(bottom_sheet.BottomSheet.__proto__),
    animationController: dart.finalFieldType(dart.nullable(animation_controller.AnimationController)),
    onClosing: dart.finalFieldType(dart.fnType(dart.void, [])),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
    enableDrag: dart.finalFieldType(core.bool),
    onDragStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragStartDetails]))),
    onDragEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragEndDetails], {}, {isClosing: core.bool}))),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip))
  }));
  bottom_sheet._BottomSheetState = class _BottomSheetState extends framework.State$(bottom_sheet.BottomSheet) {
    get [S$1._childHeight]() {
      let renderBox = box$.RenderBox.as(dart.nullCheck(dart.nullCheck(this[S$1._childKey].currentContext).findRenderObject()));
      return renderBox.size.height;
    }
    get [S$1._dismissUnderway]() {
      return dart.nullCheck(this.widget.animationController).status == animation.AnimationStatus.reverse;
    }
    [S$1._handleDragStart](details) {
      if (details == null) dart.nullFailed(I[120], 196, 42, "details");
      if (this.widget.onDragStart != null) {
        dart.nullCheck(this.widget.onDragStart)(details);
      }
    }
    [S$1._handleDragUpdate](details) {
      let t62;
      if (details == null) dart.nullFailed(I[120], 202, 44, "details");
      if (!dart.test(this.widget.enableDrag)) dart.assertFailed(null, I[120], 203, 12, "widget.enableDrag");
      if (dart.test(this[S$1._dismissUnderway])) return;
      t62 = dart.nullCheck(this.widget.animationController);
      t62.value = dart.notNull(t62.value) - dart.nullCheck(details.primaryDelta) / dart.notNull(this[S$1._childHeight]);
    }
    [S$1._handleDragEnd](details) {
      if (details == null) dart.nullFailed(I[120], 209, 38, "details");
      if (!dart.test(this.widget.enableDrag)) dart.assertFailed(null, I[120], 210, 12, "widget.enableDrag");
      if (dart.test(this[S$1._dismissUnderway])) return;
      let isClosing = false;
      if (dart.notNull(details.velocity.pixelsPerSecond.dy) > 700) {
        let flingVelocity = -dart.notNull(details.velocity.pixelsPerSecond.dy) / dart.notNull(this[S$1._childHeight]);
        if (dart.notNull(dart.nullCheck(this.widget.animationController).value) > 0.0) {
          dart.nullCheck(this.widget.animationController).fling({velocity: flingVelocity});
        }
        if (flingVelocity < 0.0) {
          isClosing = true;
        }
      } else if (dart.notNull(dart.nullCheck(this.widget.animationController).value) < 0.5) {
        if (dart.notNull(dart.nullCheck(this.widget.animationController).value) > 0.0) dart.nullCheck(this.widget.animationController).fling({velocity: -1.0});
        isClosing = true;
      } else {
        dart.nullCheck(this.widget.animationController).forward();
      }
      if (this.widget.onDragEnd != null) {
        dart.nullCheck(this.widget.onDragEnd)(details, {isClosing: isClosing});
      }
      if (isClosing) {
        this.widget.onClosing();
      }
    }
    extentChanged(notification) {
      if (notification == null) dart.nullFailed(I[120], 242, 54, "notification");
      if (notification.extent == notification.minExtent) {
        this.widget.onClosing();
      }
      return false;
    }
    build(context) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t63, t62$4;
      if (context == null) dart.nullFailed(I[120], 250, 29, "context");
      let bottomSheetTheme = theme$.Theme.of(context).bottomSheetTheme;
      let color = (t62 = this.widget.backgroundColor, t62 == null ? bottomSheetTheme.backgroundColor : t62);
      let elevation = (t62$0 = (t62$ = this.widget.elevation, t62$ == null ? bottomSheetTheme.elevation : t62$), t62$0 == null ? 0.0 : t62$0);
      let shape = (t62$1 = this.widget.shape, t62$1 == null ? bottomSheetTheme.shape : t62$1);
      let clipBehavior = (t62$3 = (t62$2 = this.widget.clipBehavior, t62$2 == null ? bottomSheetTheme.clipBehavior : t62$2), t62$3 == null ? ui.Clip.none : t62$3);
      let bottomSheet = new material.Material.new({key: this[S$1._childKey], color: color, elevation: elevation, shape: shape, clipBehavior: clipBehavior, child: new (T$.NotificationListenerOfDraggableScrollableNotification()).new({onNotification: dart.bind(this, 'extentChanged'), child: (t62$4 = this.widget, t63 = context, t62$4.builder(t63)), $creationLocationd_0dea112b090073317d4: C[2330] || CT.C2330}), $creationLocationd_0dea112b090073317d4: C[2334] || CT.C2334});
      return !dart.test(this.widget.enableDrag) ? bottomSheet : new gesture_detector.GestureDetector.new({onVerticalDragStart: dart.bind(this, S$1._handleDragStart), onVerticalDragUpdate: dart.bind(this, S$1._handleDragUpdate), onVerticalDragEnd: dart.bind(this, S$1._handleDragEnd), child: bottomSheet, excludeFromSemantics: true, $creationLocationd_0dea112b090073317d4: C[2342] || CT.C2342});
    }
  };
  (bottom_sheet._BottomSheetState.new = function() {
    this[S$1._childKey] = T$.GlobalKeyOfStateOfStatefulWidget().new({debugLabel: "BottomSheet child"});
    bottom_sheet._BottomSheetState.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._BottomSheetState.prototype;
  dart.addTypeTests(bottom_sheet._BottomSheetState);
  dart.addTypeCaches(bottom_sheet._BottomSheetState);
  dart.setMethodSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getMethods(bottom_sheet._BottomSheetState.__proto__),
    [S$1._handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [S$1._handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [S$1._handleDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    extentChanged: dart.fnType(core.bool, [draggable_scrollable_sheet.DraggableScrollableNotification]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getGetters(bottom_sheet._BottomSheetState.__proto__),
    [S$1._childHeight]: core.double,
    [S$1._dismissUnderway]: core.bool
  }));
  dart.setLibraryUri(bottom_sheet._BottomSheetState, I[121]);
  dart.setFieldSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getFields(bottom_sheet._BottomSheetState.__proto__),
    [S$1._childKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  bottom_sheet._ModalBottomSheetLayout = class _ModalBottomSheetLayout extends shifted_box.SingleChildLayoutDelegate {
    getConstraintsForChild(constraints) {
      if (constraints == null) dart.nullFailed(I[120], 291, 56, "constraints");
      return new box$.BoxConstraints.new({minWidth: constraints.maxWidth, maxWidth: constraints.maxWidth, minHeight: 0.0, maxHeight: dart.test(this.isScrollControlled) ? constraints.maxHeight : dart.notNull(constraints.maxHeight) * 9.0 / 16.0});
    }
    getPositionForChild(size, childSize) {
      if (size == null) dart.nullFailed(I[120], 303, 35, "size");
      if (childSize == null) dart.nullFailed(I[120], 303, 46, "childSize");
      return new ui.Offset.new(0.0, dart.notNull(size.height) - dart.notNull(childSize.height) * dart.notNull(this.progress));
    }
    shouldRelayout(oldDelegate) {
      bottom_sheet._ModalBottomSheetLayout.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[120], 308, 47, "oldDelegate");
      return this.progress != oldDelegate.progress;
    }
  };
  (bottom_sheet._ModalBottomSheetLayout.new = function(progress, isScrollControlled) {
    if (progress == null) dart.nullFailed(I[120], 285, 32, "progress");
    if (isScrollControlled == null) dart.nullFailed(I[120], 285, 47, "isScrollControlled");
    this.progress = progress;
    this.isScrollControlled = isScrollControlled;
    bottom_sheet._ModalBottomSheetLayout.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._ModalBottomSheetLayout.prototype;
  dart.addTypeTests(bottom_sheet._ModalBottomSheetLayout);
  dart.addTypeCaches(bottom_sheet._ModalBottomSheetLayout);
  dart.setMethodSignature(bottom_sheet._ModalBottomSheetLayout, () => ({
    __proto__: dart.getMethods(bottom_sheet._ModalBottomSheetLayout.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(bottom_sheet._ModalBottomSheetLayout, I[121]);
  dart.setFieldSignature(bottom_sheet._ModalBottomSheetLayout, () => ({
    __proto__: dart.getFields(bottom_sheet._ModalBottomSheetLayout.__proto__),
    progress: dart.finalFieldType(core.double),
    isScrollControlled: dart.finalFieldType(core.bool)
  }));
  const _is__ModalBottomSheet_default = Symbol('_is__ModalBottomSheet_default');
  bottom_sheet._ModalBottomSheet$ = dart.generic(T => {
    var _ModalBottomSheetStateOfT = () => (_ModalBottomSheetStateOfT = dart.constFn(bottom_sheet._ModalBottomSheetState$(T)))();
    class _ModalBottomSheet extends framework.StatefulWidget {
      get route() {
        return this[S$1.route];
      }
      set route(value) {
        super.route = value;
      }
      get isScrollControlled() {
        return this[S$1.isScrollControlled];
      }
      set isScrollControlled(value) {
        super.isScrollControlled = value;
      }
      get backgroundColor() {
        return this[S$1.backgroundColor$18];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get elevation() {
        return this[S$1.elevation$22];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get shape() {
        return this[S$1.shape$20];
      }
      set shape(value) {
        super.shape = value;
      }
      get clipBehavior() {
        return this[S$1.clipBehavior$10];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get enableDrag() {
        return this[S$1.enableDrag$1];
      }
      set enableDrag(value) {
        super.enableDrag = value;
      }
      createState() {
        return new (_ModalBottomSheetStateOfT()).new();
      }
    }
    (_ModalBottomSheet.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
      if (isScrollControlled == null) dart.nullFailed(I[120], 321, 10, "isScrollControlled");
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      if (enableDrag == null) dart.nullFailed(I[120], 322, 10, "enableDrag");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[S$1.route] = route;
      this[S$1.backgroundColor$18] = backgroundColor;
      this[S$1.elevation$22] = elevation;
      this[S$1.shape$20] = shape;
      this[S$1.clipBehavior$10] = clipBehavior;
      this[S$1.isScrollControlled] = isScrollControlled;
      this[S$1.enableDrag$1] = enableDrag;
      if (!(isScrollControlled != null)) dart.assertFailed(null, I[120], 323, 15, "isScrollControlled != null");
      if (!(enableDrag != null)) dart.assertFailed(null, I[120], 324, 15, "enableDrag != null");
      _ModalBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _ModalBottomSheet.prototype;
    dart.addTypeTests(_ModalBottomSheet);
    _ModalBottomSheet.prototype[_is__ModalBottomSheet_default] = true;
    dart.addTypeCaches(_ModalBottomSheet);
    dart.setMethodSignature(_ModalBottomSheet, () => ({
      __proto__: dart.getMethods(_ModalBottomSheet.__proto__),
      createState: dart.fnType(bottom_sheet._ModalBottomSheetState$(T), [])
    }));
    dart.setLibraryUri(_ModalBottomSheet, I[121]);
    dart.setFieldSignature(_ModalBottomSheet, () => ({
      __proto__: dart.getFields(_ModalBottomSheet.__proto__),
      route: dart.finalFieldType(dart.nullable(bottom_sheet._ModalBottomSheetRoute$(T))),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      enableDrag: dart.finalFieldType(core.bool)
    }));
    return _ModalBottomSheet;
  });
  bottom_sheet._ModalBottomSheet = bottom_sheet._ModalBottomSheet$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheet, _is__ModalBottomSheet_default);
  const _is__ModalBottomSheetState_default = Symbol('_is__ModalBottomSheetState_default');
  bottom_sheet._ModalBottomSheetState$ = dart.generic(T => {
    class _ModalBottomSheetState extends framework.State$(bottom_sheet._ModalBottomSheet$(T)) {
      [S$1._getRouteLabel](localizations) {
        if (localizations == null) dart.nullFailed(I[120], 342, 47, "localizations");
        switch (theme$.Theme.of(this.context).platform) {
          case C[48] || CT.C48:
          case C[49] || CT.C49:
          {
            return "";
          }
          case C[44] || CT.C44:
          case C[45] || CT.C45:
          case C[46] || CT.C46:
          case C[47] || CT.C47:
          {
            return localizations.dialogLabel;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      handleDragStart(details) {
        if (details == null) dart.nullFailed(I[120], 355, 41, "details");
        this.animationCurve = curves.Curves.linear;
      }
      handleDragEnd(details, opts) {
        if (details == null) dart.nullFailed(I[120], 360, 37, "details");
        let isClosing = opts && 'isClosing' in opts ? opts.isClosing : null;
        this.animationCurve = new bottom_sheet._BottomSheetSuspendedCurve.new(dart.nullCheck(dart.nullCheck(this.widget.route).animation).value, {curve: bottom_sheet._modalBottomSheetCurve});
      }
      build(context) {
        if (context == null) dart.nullFailed(I[120], 369, 29, "context");
        if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[120], 370, 12, "debugCheckHasMediaQuery(context)");
        if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[120], 371, 12, "debugCheckHasMaterialLocalizations(context)");
        let mediaQuery = media_query.MediaQuery.of(context);
        let localizations = material_localizations.MaterialLocalizations.of(context);
        let routeLabel = this[S$1._getRouteLabel](localizations);
        return new transitions.AnimatedBuilder.new({animation: dart.nullCheck(dart.nullCheck(this.widget.route).animation), child: new basic.Padding.new({padding: media_query.MediaQuery.of(context).viewInsets, child: new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[S$1._animationController], onClosing: dart.fn(() => {
                if (dart.test(dart.nullCheck(this.widget.route).isCurrent)) {
                  navigator$.Navigator.pop(T$.ObjectN(), context);
                }
              }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, enableDrag: this.widget.enableDrag, onDragStart: dart.bind(this, 'handleDragStart'), onDragEnd: dart.bind(this, 'handleDragEnd'), $creationLocationd_0dea112b090073317d4: C[2349] || CT.C2349}), $creationLocationd_0dea112b090073317d4: C[2361] || CT.C2361}), builder: dart.fn((context, child) => {
            if (context == null) dart.nullFailed(I[120], 397, 30, "context");
            let animationValue = this.animationCurve.transform(dart.test(mediaQuery.accessibleNavigation) ? 1.0 : dart.nullCheck(dart.nullCheck(this.widget.route).animation).value);
            return new basic.Semantics.new({scopesRoute: true, namesRoute: true, label: routeLabel, explicitChildNodes: true, child: new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new bottom_sheet._ModalBottomSheetLayout.new(animationValue, this.widget.isScrollControlled), child: child, $creationLocationd_0dea112b090073317d4: C[2364] || CT.C2364}), $creationLocationd_0dea112b090073317d4: C[2368] || CT.C2368}), $creationLocationd_0dea112b090073317d4: C[2371] || CT.C2371});
          }, T$.BuildContextAndWidgetNToSemantics()), $creationLocationd_0dea112b090073317d4: C[2378] || CT.C2378});
      }
    }
    (_ModalBottomSheetState.new = function() {
      this.animationCurve = bottom_sheet._modalBottomSheetCurve;
      _ModalBottomSheetState.__proto__.new.call(this);
      ;
    }).prototype = _ModalBottomSheetState.prototype;
    dart.addTypeTests(_ModalBottomSheetState);
    _ModalBottomSheetState.prototype[_is__ModalBottomSheetState_default] = true;
    dart.addTypeCaches(_ModalBottomSheetState);
    dart.setMethodSignature(_ModalBottomSheetState, () => ({
      __proto__: dart.getMethods(_ModalBottomSheetState.__proto__),
      [S$1._getRouteLabel]: dart.fnType(core.String, [material_localizations.MaterialLocalizations]),
      handleDragStart: dart.fnType(dart.void, [drag_details.DragStartDetails]),
      handleDragEnd: dart.fnType(dart.void, [drag_details.DragEndDetails], {isClosing: dart.nullable(core.bool)}, {}),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_ModalBottomSheetState, I[121]);
    dart.setFieldSignature(_ModalBottomSheetState, () => ({
      __proto__: dart.getFields(_ModalBottomSheetState.__proto__),
      animationCurve: dart.fieldType(curves.ParametricCurve$(core.double))
    }));
    return _ModalBottomSheetState;
  });
  bottom_sheet._ModalBottomSheetState = bottom_sheet._ModalBottomSheetState$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheetState, _is__ModalBottomSheetState_default);
  const _is__ModalBottomSheetRoute_default = Symbol('_is__ModalBottomSheetRoute_default');
  bottom_sheet._ModalBottomSheetRoute$ = dart.generic(T => {
    var _ModalBottomSheetOfT = () => (_ModalBottomSheetOfT = dart.constFn(bottom_sheet._ModalBottomSheet$(T)))();
    var BuildContextTo_ModalBottomSheetOfT = () => (BuildContextTo_ModalBottomSheetOfT = dart.constFn(dart.fnType(_ModalBottomSheetOfT(), [framework.BuildContext])))();
    class _ModalBottomSheetRoute extends routes.PopupRoute$(T) {
      get barrierLabel() {
        return this[S$1.barrierLabel];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      get transitionDuration() {
        return bottom_sheet._bottomSheetEnterDuration;
      }
      get reverseTransitionDuration() {
        return bottom_sheet._bottomSheetExitDuration;
      }
      get barrierDismissible() {
        return this.isDismissible;
      }
      get barrierColor() {
        let t62;
        t62 = this.modalBarrierColor;
        return t62 == null ? colors$.Colors.black54 : t62;
      }
      createAnimationController() {
        let t62;
        if (!(this[S$1._animationController] == null)) dart.assertFailed(null, I[120], 471, 12, "_animationController == null");
        this[S$1._animationController] = (t62 = this.transitionAnimationController, t62 == null ? bottom_sheet.BottomSheet.createAnimationController(dart.nullCheck(dart.nullCheck(this.navigator).overlay)) : t62);
        return dart.nullCheck(this[S$1._animationController]);
      }
      buildPage(context, animation, secondaryAnimation) {
        if (context == null) dart.nullFailed(I[120], 477, 33, "context");
        if (animation == null) dart.nullFailed(I[120], 477, 60, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[120], 477, 89, "secondaryAnimation");
        let bottomSheet = media_query.MediaQuery.removePadding({context: context, removeTop: true, child: new basic.Builder.new({builder: dart.fn(context => {
              let t62, t62$, t62$0, t62$1;
              if (context == null) dart.nullFailed(I[120], 484, 32, "context");
              let sheetTheme = theme$.Theme.of(context).bottomSheetTheme;
              return new (_ModalBottomSheetOfT()).new({route: this, backgroundColor: (t62$ = (t62 = this.backgroundColor, t62 == null ? sheetTheme.modalBackgroundColor : t62), t62$ == null ? sheetTheme.backgroundColor : t62$), elevation: (t62$1 = (t62$0 = this.elevation, t62$0 == null ? sheetTheme.modalElevation : t62$0), t62$1 == null ? sheetTheme.elevation : t62$1), shape: this.shape, clipBehavior: this.clipBehavior, isScrollControlled: this.isScrollControlled, enableDrag: this.enableDrag, $creationLocationd_0dea112b090073317d4: C[2382] || CT.C2382});
            }, BuildContextTo_ModalBottomSheetOfT()), $creationLocationd_0dea112b090073317d4: C[2391] || CT.C2391}), $creationLocationd_0dea112b090073317d4: C[2394] || CT.C2394});
        return this.capturedThemes.wrap(bottomSheet);
      }
    }
    (_ModalBottomSheetRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let capturedThemes = opts && 'capturedThemes' in opts ? opts.capturedThemes : null;
      if (capturedThemes == null) dart.nullFailed(I[120], 423, 19, "capturedThemes");
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      if (isDismissible == null) dart.nullFailed(I[120], 430, 10, "isDismissible");
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      if (enableDrag == null) dart.nullFailed(I[120], 431, 10, "enableDrag");
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : null;
      if (isScrollControlled == null) dart.nullFailed(I[120], 432, 19, "isScrollControlled");
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
      this[S$1._animationController] = null;
      this.builder = builder;
      this.capturedThemes = capturedThemes;
      this[S$1.barrierLabel] = barrierLabel;
      this.backgroundColor = backgroundColor;
      this.elevation = elevation;
      this.shape = shape;
      this.clipBehavior = clipBehavior;
      this.modalBarrierColor = modalBarrierColor;
      this.isDismissible = isDismissible;
      this.enableDrag = enableDrag;
      this.isScrollControlled = isScrollControlled;
      this.transitionAnimationController = transitionAnimationController;
      if (!(isScrollControlled != null)) dart.assertFailed(null, I[120], 435, 15, "isScrollControlled != null");
      if (!(isDismissible != null)) dart.assertFailed(null, I[120], 436, 15, "isDismissible != null");
      if (!(enableDrag != null)) dart.assertFailed(null, I[120], 437, 15, "enableDrag != null");
      _ModalBottomSheetRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = _ModalBottomSheetRoute.prototype;
    dart.addTypeTests(_ModalBottomSheetRoute);
    _ModalBottomSheetRoute.prototype[_is__ModalBottomSheetRoute_default] = true;
    dart.addTypeCaches(_ModalBottomSheetRoute);
    dart.setMethodSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getMethods(_ModalBottomSheetRoute.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setGetterSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getGetters(_ModalBottomSheetRoute.__proto__),
      transitionDuration: core.Duration,
      barrierDismissible: core.bool,
      barrierColor: ui.Color
    }));
    dart.setLibraryUri(_ModalBottomSheetRoute, I[121]);
    dart.setFieldSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getFields(_ModalBottomSheetRoute.__proto__),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext]))),
      capturedThemes: dart.finalFieldType(inherited_theme.CapturedThemes),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      modalBarrierColor: dart.finalFieldType(dart.nullable(ui.Color)),
      isDismissible: dart.finalFieldType(core.bool),
      enableDrag: dart.finalFieldType(core.bool),
      transitionAnimationController: dart.finalFieldType(dart.nullable(animation_controller.AnimationController)),
      barrierLabel: dart.finalFieldType(dart.nullable(core.String)),
      [S$1._animationController]: dart.fieldType(dart.nullable(animation_controller.AnimationController))
    }));
    return _ModalBottomSheetRoute;
  });
  bottom_sheet._ModalBottomSheetRoute = bottom_sheet._ModalBottomSheetRoute$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheetRoute, _is__ModalBottomSheetRoute_default);
  bottom_sheet._BottomSheetSuspendedCurve = class _BottomSheetSuspendedCurve extends curves.ParametricCurve$(core.double) {
    get startingPoint() {
      return this[S$1.startingPoint];
    }
    set startingPoint(value) {
      super.startingPoint = value;
    }
    get curve() {
      return this[S$1.curve];
    }
    set curve(value) {
      super.curve = value;
    }
    transform(t) {
      if (t == null) dart.nullFailed(I[120], 537, 27, "t");
      if (!(dart.notNull(t) >= 0.0 && dart.notNull(t) <= 1.0)) dart.assertFailed(null, I[120], 538, 12, "t >= 0.0 && t <= 1.0");
      if (!(dart.notNull(this.startingPoint) >= 0.0 && dart.notNull(this.startingPoint) <= 1.0)) dart.assertFailed(null, I[120], 539, 12, "startingPoint >= 0.0 && startingPoint <= 1.0");
      if (dart.notNull(t) < dart.notNull(this.startingPoint)) {
        return t;
      }
      if (t === 1.0) {
        return t;
      }
      let curveProgress = (dart.notNull(t) - dart.notNull(this.startingPoint)) / (1 - dart.notNull(this.startingPoint));
      let transformed = this.curve.transform(curveProgress);
      return dart.nullCheck(ui.lerpDouble(this.startingPoint, 1, transformed));
    }
    toString() {
      return dart.str(diagnostics.describeIdentity(this)) + "(" + dart.str(this.startingPoint) + ", " + dart.str(this.curve) + ")";
    }
  };
  (bottom_sheet._BottomSheetSuspendedCurve.new = function(startingPoint, opts) {
    if (startingPoint == null) dart.nullFailed(I[120], 523, 10, "startingPoint");
    let curve = opts && 'curve' in opts ? opts.curve : C[2399] || CT.C2399;
    if (curve == null) dart.nullFailed(I[120], 524, 10, "curve");
    this[S$1.startingPoint] = startingPoint;
    this[S$1.curve] = curve;
    if (!(startingPoint != null)) dart.assertFailed(null, I[120], 525, 15, "startingPoint != null");
    if (!(curve != null)) dart.assertFailed(null, I[120], 526, 15, "curve != null");
    bottom_sheet._BottomSheetSuspendedCurve.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._BottomSheetSuspendedCurve.prototype;
  dart.addTypeTests(bottom_sheet._BottomSheetSuspendedCurve);
  dart.addTypeCaches(bottom_sheet._BottomSheetSuspendedCurve);
  dart.setLibraryUri(bottom_sheet._BottomSheetSuspendedCurve, I[121]);
  dart.setFieldSignature(bottom_sheet._BottomSheetSuspendedCurve, () => ({
    __proto__: dart.getFields(bottom_sheet._BottomSheetSuspendedCurve.__proto__),
    startingPoint: dart.finalFieldType(core.double),
    curve: dart.finalFieldType(curves.Curve)
  }));
  dart.defineExtensionMethods(bottom_sheet._BottomSheetSuspendedCurve, ['toString']);
  bottom_sheet.showModalBottomSheet = function showModalBottomSheet(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(I[120], 658, 25, "context");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[120], 659, 26, "builder");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
    let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
    if (isScrollControlled == null) dart.nullFailed(I[120], 665, 8, "isScrollControlled");
    let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : false;
    if (useRootNavigator == null) dart.nullFailed(I[120], 666, 8, "useRootNavigator");
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
    if (isDismissible == null) dart.nullFailed(I[120], 667, 8, "isDismissible");
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    if (enableDrag == null) dart.nullFailed(I[120], 668, 8, "enableDrag");
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
    if (!(context != null)) dart.assertFailed(null, I[120], 672, 10, "context != null");
    if (!(builder != null)) dart.assertFailed(null, I[120], 673, 10, "builder != null");
    if (!(isScrollControlled != null)) dart.assertFailed(null, I[120], 674, 10, "isScrollControlled != null");
    if (!(useRootNavigator != null)) dart.assertFailed(null, I[120], 675, 10, "useRootNavigator != null");
    if (!(isDismissible != null)) dart.assertFailed(null, I[120], 676, 10, "isDismissible != null");
    if (!(enableDrag != null)) dart.assertFailed(null, I[120], 677, 10, "enableDrag != null");
    if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[120], 678, 10, "debugCheckHasMediaQuery(context)");
    if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[120], 679, 10, "debugCheckHasMaterialLocalizations(context)");
    let navigator = navigator$.Navigator.of(context, {rootNavigator: useRootNavigator});
    return navigator.push(T, new (bottom_sheet._ModalBottomSheetRoute$(T)).new({builder: builder, capturedThemes: inherited_theme.InheritedTheme.capture({from: context, to: navigator.context}), isScrollControlled: isScrollControlled, barrierLabel: material_localizations.MaterialLocalizations.of(context).modalBarrierDismissLabel, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, isDismissible: isDismissible, modalBarrierColor: barrierColor, enableDrag: enableDrag, settings: routeSettings, transitionAnimationController: transitionAnimationController}));
  };
  bottom_sheet.showBottomSheet = function showBottomSheet(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(I[120], 739, 25, "context");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[120], 740, 26, "builder");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
    if (!(context != null)) dart.assertFailed(null, I[120], 747, 10, "context != null");
    if (!(builder != null)) dart.assertFailed(null, I[120], 748, 10, "builder != null");
    if (!dart.test(debug$0.debugCheckHasScaffold(context))) dart.assertFailed(null, I[120], 749, 10, "debugCheckHasScaffold(context)");
    return scaffold$.Scaffold.of(context).showBottomSheet(T, builder, {backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, transitionAnimationController: transitionAnimationController});
  };
  dart.defineLazy(bottom_sheet, {
    /*bottom_sheet._bottomSheetEnterDuration*/get _bottomSheetEnterDuration() {
      return C[306] || CT.C306;
    },
    /*bottom_sheet._bottomSheetExitDuration*/get _bottomSheetExitDuration() {
      return C[334] || CT.C334;
    },
    /*bottom_sheet._modalBottomSheetCurve*/get _modalBottomSheetCurve() {
      return C[2400] || CT.C2400;
    },
    /*bottom_sheet._minFlingVelocity*/get _minFlingVelocity() {
      return 700;
    },
    /*bottom_sheet._closeProgressThreshold*/get _closeProgressThreshold() {
      return 0.5;
    }
  }, false);
  scaffold$._ScaffoldSlot = class _ScaffoldSlot extends core.Object {
    toString() {
      return this[S$1._name$25];
    }
  };
  (scaffold$._ScaffoldSlot.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[122], 49, 6, "index");
    if (_name == null) dart.nullFailed(I[122], 49, 6, "_name");
    this.index = index;
    this[S$1._name$25] = _name;
    ;
  }).prototype = scaffold$._ScaffoldSlot.prototype;
  dart.addTypeTests(scaffold$._ScaffoldSlot);
  dart.addTypeCaches(scaffold$._ScaffoldSlot);
  dart.setLibraryUri(scaffold$._ScaffoldSlot, I[123]);
  dart.setFieldSignature(scaffold$._ScaffoldSlot, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldSlot.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$25]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(scaffold$._ScaffoldSlot, ['toString']);
  scaffold$._ScaffoldSlot.body = C[2401] || CT.C2401;
  scaffold$._ScaffoldSlot.appBar = C[2402] || CT.C2402;
  scaffold$._ScaffoldSlot.bodyScrim = C[2403] || CT.C2403;
  scaffold$._ScaffoldSlot.bottomSheet = C[2404] || CT.C2404;
  scaffold$._ScaffoldSlot.snackBar = C[2405] || CT.C2405;
  scaffold$._ScaffoldSlot.persistentFooter = C[2406] || CT.C2406;
  scaffold$._ScaffoldSlot.bottomNavigationBar = C[2407] || CT.C2407;
  scaffold$._ScaffoldSlot.floatingActionButton = C[2408] || CT.C2408;
  scaffold$._ScaffoldSlot.drawer = C[2409] || CT.C2409;
  scaffold$._ScaffoldSlot.endDrawer = C[2410] || CT.C2410;
  scaffold$._ScaffoldSlot.statusBar = C[2411] || CT.C2411;
  scaffold$._ScaffoldSlot.values = C[2412] || CT.C2412;
  scaffold$.ScaffoldMessenger = class ScaffoldMessenger extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$22];
    }
    set child(value) {
      super.child = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[122], 222, 49, "context");
      if (!(context != null)) dart.assertFailed(null, I[122], 223, 12, "context != null");
      if (!dart.test(debug$0.debugCheckHasScaffoldMessenger(context))) dart.assertFailed(null, I[122], 224, 12, "debugCheckHasScaffoldMessenger(context)");
      let scope = dart.nullCheck(context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldMessengerScope));
      return scope[S$1._scaffoldMessengerState];
    }
    static maybeOf(context) {
      let t62;
      if (context == null) dart.nullFailed(I[122], 239, 55, "context");
      if (!(context != null)) dart.assertFailed(null, I[122], 240, 12, "context != null");
      let scope = context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldMessengerScope);
      t62 = scope;
      return t62 == null ? null : t62[S$1._scaffoldMessengerState];
    }
    createState() {
      return new scaffold$.ScaffoldMessengerState.new();
    }
  };
  (scaffold$.ScaffoldMessenger.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[122], 108, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$22] = child;
    if (!(child != null)) dart.assertFailed(null, I[122], 109, 15, "child != null");
    scaffold$.ScaffoldMessenger.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$.ScaffoldMessenger.prototype;
  dart.addTypeTests(scaffold$.ScaffoldMessenger);
  dart.addTypeCaches(scaffold$.ScaffoldMessenger);
  dart.setMethodSignature(scaffold$.ScaffoldMessenger, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldMessenger.__proto__),
    createState: dart.fnType(scaffold$.ScaffoldMessengerState, [])
  }));
  dart.setLibraryUri(scaffold$.ScaffoldMessenger, I[123]);
  dart.setFieldSignature(scaffold$.ScaffoldMessenger, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldMessenger.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  const State_TickerProviderStateMixin$36$3 = class State_TickerProviderStateMixin extends framework.State$(scaffold$.ScaffoldMessenger) {};
  (State_TickerProviderStateMixin$36$3.new = function() {
    ticker_provider.TickerProviderStateMixin$(scaffold$.ScaffoldMessenger)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$3.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$3.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$3, ticker_provider.TickerProviderStateMixin$(scaffold$.ScaffoldMessenger));
  scaffold$.ScaffoldMessengerState = class ScaffoldMessengerState extends State_TickerProviderStateMixin$36$3 {
    didChangeDependencies() {
      let mediaQuery = media_query.MediaQuery.of(this.context);
      if (this[S$1._accessibleNavigation] === true && !dart.test(mediaQuery.accessibleNavigation) && this[S$1._snackBarTimer] != null && !dart.test(dart.nullCheck(this[S$1._snackBarTimer]).isActive)) {
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
      }
      this[S$1._accessibleNavigation] = mediaQuery.accessibleNavigation;
      super.didChangeDependencies();
    }
    [S$1._register](scaffold) {
      if (scaffold == null) dart.nullFailed(I[122], 282, 32, "scaffold");
      this[S$1._scaffolds].add(scaffold);
      if (dart.test(this[S$1._snackBars][S$.$isNotEmpty])) {
        scaffold[S$1._updateSnackBar]();
      }
    }
    [S$1._unregister](scaffold) {
      if (scaffold == null) dart.nullFailed(I[122], 289, 34, "scaffold");
      let removed = this[S$1._scaffolds].remove(scaffold);
      if (!dart.test(removed)) dart.assertFailed(null, I[122], 292, 12, "removed");
    }
    showSnackBar(snackBar) {
      let t62;
      if (snackBar == null) dart.nullFailed(I[122], 331, 83, "snackBar");
      this[S$1._snackBarController] == null ? this[S$1._snackBarController] = (t62 = snack_bar.SnackBar.createAnimationController({vsync: this}), (() => {
        t62.addStatusListener(dart.bind(this, S$1._handleStatusChanged$1));
        return t62;
      })()) : null;
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty])) {
        if (!dart.test(dart.nullCheck(this[S$1._snackBarController]).isDismissed)) dart.assertFailed(null, I[122], 335, 14, "_snackBarController!.isDismissed");
        dart.nullCheck(this[S$1._snackBarController]).forward();
      }
      let controller = null;
      let controller$35isSet = false;
      function controller$35get() {
        return controller$35isSet ? controller : dart.throw(new _internal.LateError.localNI("controller"));
      }
      dart.fn(controller$35get, T$.VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason());
      function controller$35set(t65) {
        if (t65 == null) dart.nullFailed(I[122], 338, 68, "null");
        controller$35isSet = true;
        return controller = t65;
      }
      dart.fn(controller$35set, T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic());
      controller$35set(new (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()).__(snackBar.withAnimation(dart.nullCheck(this[S$1._snackBarController]), {fallbackKey: new framework.UniqueKey.new()}), T$.CompleterOfSnackBarClosedReason().new(), dart.fn(() => {
        if (!dart.equals(this[S$1._snackBars][S$1.$first], controller$35get())) dart.assertFailed(null, I[122], 346, 18, "_snackBars.first == controller");
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.hide});
      }, T$.VoidTovoid()), null));
      this.setState(dart.fn(() => {
        this[S$1._snackBars].addLast(controller$35get());
      }, T$.VoidTovoid()));
      this[S$1._updateScaffolds]();
      return controller$35get();
    }
    [S$1._handleStatusChanged$1](status) {
      if (status == null) dart.nullFailed(I[122], 358, 45, "status");
      switch (status) {
        case C[204] || CT.C204:
        {
          if (!dart.test(this[S$1._snackBars][S$.$isNotEmpty])) dart.assertFailed(null, I[122], 361, 16, "_snackBars.isNotEmpty");
          this.setState(dart.fn(() => {
            this[S$1._snackBars].removeFirst();
          }, T$.VoidTovoid()));
          this[S$1._updateScaffolds]();
          if (dart.test(this[S$1._snackBars][S$.$isNotEmpty])) {
            dart.nullCheck(this[S$1._snackBarController]).forward();
          }
          break;
        }
        case C[207] || CT.C207:
        {
          this.setState(dart.fn(() => {
            if (!(this[S$1._snackBarTimer] == null)) dart.assertFailed(null, I[122], 372, 18, "_snackBarTimer == null");
          }, T$.VoidTovoid()));
          this[S$1._updateScaffolds]();
          break;
        }
        case C[205] || CT.C205:
        {
          break;
        }
        case C[206] || CT.C206:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [S$1._updateScaffolds]() {
      for (let scaffold of this[S$1._scaffolds]) {
        if (dart.test(this[S$1._isRoot](scaffold))) scaffold[S$1._updateSnackBar]();
      }
    }
    [S$1._isRoot](scaffold) {
      if (scaffold == null) dart.nullFailed(I[122], 393, 30, "scaffold");
      let parent = scaffold.context.findAncestorStateOfType(scaffold$.ScaffoldState);
      return parent == null || !dart.test(this[S$1._scaffolds].contains(parent));
    }
    removeCurrentSnackBar(opts) {
      let t67;
      let reason = opts && 'reason' in opts ? opts.reason : C[177] || CT.C177;
      if (reason == null) dart.nullFailed(I[122], 403, 53, "reason");
      if (!(reason != null)) dart.assertFailed(null, I[122], 404, 12, "reason != null");
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty])) return;
      let completer = this[S$1._snackBars][S$1.$first][S$1._completer];
      if (!dart.test(completer.isCompleted)) completer.complete(reason);
      t67 = this[S$1._snackBarTimer];
      t67 == null ? null : t67.cancel();
      this[S$1._snackBarTimer] = null;
      dart.nullCheck(this[S$1._snackBarController]).value = 0.0;
    }
    hideCurrentSnackBar(opts) {
      let t67;
      let reason = opts && 'reason' in opts ? opts.reason : C[176] || CT.C176;
      if (reason == null) dart.nullFailed(I[122], 419, 51, "reason");
      if (!(reason != null)) dart.assertFailed(null, I[122], 420, 12, "reason != null");
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty]) || dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.dismissed) return;
      let completer = this[S$1._snackBars][S$1.$first][S$1._completer];
      if (dart.nullCheck(this[S$1._accessibleNavigation])) {
        dart.nullCheck(this[S$1._snackBarController]).value = 0.0;
        completer.complete(reason);
      } else {
        dart.nullCheck(this[S$1._snackBarController]).reverse().then(dart.void, dart.fn(value => {
          if (!dart.test(this.mounted)) dart.assertFailed(null, I[122], 429, 16, "mounted");
          if (!dart.test(completer.isCompleted)) completer.complete(reason);
        }, T$.voidToNull()));
      }
      t67 = this[S$1._snackBarTimer];
      t67 == null ? null : t67.cancel();
      this[S$1._snackBarTimer] = null;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[122], 439, 29, "context");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[122], 440, 12, "debugCheckHasMediaQuery(context)");
      let mediaQuery = media_query.MediaQuery.of(context);
      this[S$1._accessibleNavigation] = mediaQuery.accessibleNavigation;
      if (dart.test(this[S$1._snackBars][S$.$isNotEmpty])) {
        let route = routes.ModalRoute.of(T$.ObjectN(), context);
        if (route == null || dart.test(route.isCurrent)) {
          if (dart.test(dart.nullCheck(this[S$1._snackBarController]).isCompleted) && this[S$1._snackBarTimer] == null) {
            let snackBar = this[S$1._snackBars][S$1.$first][S$1._widget];
            this[S$1._snackBarTimer] = async.Timer.new(snackBar.duration, dart.fn(() => {
              if (!(dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.forward || dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.completed)) dart.assertFailed(null, I[122], 450, 20, "_snackBarController!.status == AnimationStatus.forward ||\r\n                   _snackBarController!.status == AnimationStatus.completed");
              let mediaQuery = media_query.MediaQuery.of(context);
              if (dart.test(mediaQuery.accessibleNavigation) && snackBar.action != null) return;
              this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
            }, T$.VoidTovoid()));
          }
        }
      }
      return new scaffold$._ScaffoldMessengerScope.new({scaffoldMessengerState: this, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[2413] || CT.C2413});
    }
    dispose() {
      let t67, t67$;
      t67 = this[S$1._snackBarController];
      t67 == null ? null : t67.dispose();
      t67$ = this[S$1._snackBarTimer];
      t67$ == null ? null : t67$.cancel();
      this[S$1._snackBarTimer] = null;
      super.dispose();
    }
  };
  (scaffold$.ScaffoldMessengerState.new = function() {
    this[S$1._scaffolds] = new (T$._HashSetOfScaffoldState()).new();
    this[S$1._snackBars] = new (T$.ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()).new();
    this[S$1._snackBarController] = null;
    this[S$1._snackBarTimer] = null;
    this[S$1._accessibleNavigation] = null;
    scaffold$.ScaffoldMessengerState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$.ScaffoldMessengerState.prototype;
  dart.addTypeTests(scaffold$.ScaffoldMessengerState);
  dart.addTypeCaches(scaffold$.ScaffoldMessengerState);
  dart.setMethodSignature(scaffold$.ScaffoldMessengerState, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldMessengerState.__proto__),
    [S$1._register]: dart.fnType(dart.void, [scaffold$.ScaffoldState]),
    [S$1._unregister]: dart.fnType(dart.void, [scaffold$.ScaffoldState]),
    showSnackBar: dart.fnType(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason), [snack_bar.SnackBar]),
    [S$1._handleStatusChanged$1]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [S$1._updateScaffolds]: dart.fnType(dart.void, []),
    [S$1._isRoot]: dart.fnType(core.bool, [scaffold$.ScaffoldState]),
    removeCurrentSnackBar: dart.fnType(dart.void, [], {reason: snack_bar.SnackBarClosedReason}, {}),
    hideCurrentSnackBar: dart.fnType(dart.void, [], {reason: snack_bar.SnackBarClosedReason}, {}),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scaffold$.ScaffoldMessengerState, I[123]);
  dart.setFieldSignature(scaffold$.ScaffoldMessengerState, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldMessengerState.__proto__),
    [S$1._scaffolds]: dart.finalFieldType(collection.LinkedHashSet$(scaffold$.ScaffoldState)),
    [S$1._snackBars]: dart.finalFieldType(collection.Queue$(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason))),
    [S$1._snackBarController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1._snackBarTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$1._accessibleNavigation]: dart.fieldType(dart.nullable(core.bool))
  }));
  scaffold$._ScaffoldMessengerScope = class _ScaffoldMessengerScope extends framework.InheritedWidget {
    get [S$1._scaffoldMessengerState]() {
      return this[S$1._scaffoldMessengerState$1];
    }
    set [S$1._scaffoldMessengerState](value) {
      super[S$1._scaffoldMessengerState] = value;
    }
    updateShouldNotify(old) {
      scaffold$._ScaffoldMessengerScope.as(old);
      if (old == null) dart.nullFailed(I[122], 488, 51, "old");
      return !dart.equals(this[S$1._scaffoldMessengerState], old[S$1._scaffoldMessengerState]);
    }
  };
  (scaffold$._ScaffoldMessengerScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[122], 480, 21, "child");
    let scaffoldMessengerState = opts && 'scaffoldMessengerState' in opts ? opts.scaffoldMessengerState : null;
    if (scaffoldMessengerState == null) dart.nullFailed(I[122], 481, 37, "scaffoldMessengerState");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1._scaffoldMessengerState$1] = scaffoldMessengerState;
    scaffold$._ScaffoldMessengerScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._ScaffoldMessengerScope.prototype;
  dart.addTypeTests(scaffold$._ScaffoldMessengerScope);
  dart.addTypeCaches(scaffold$._ScaffoldMessengerScope);
  dart.setMethodSignature(scaffold$._ScaffoldMessengerScope, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldMessengerScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldMessengerScope, I[123]);
  dart.setFieldSignature(scaffold$._ScaffoldMessengerScope, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldMessengerScope.__proto__),
    [S$1._scaffoldMessengerState]: dart.finalFieldType(scaffold$.ScaffoldMessengerState)
  }));
  scaffold$.ScaffoldPrelayoutGeometry = class ScaffoldPrelayoutGeometry extends core.Object {
    get floatingActionButtonSize() {
      return this[S$1.floatingActionButtonSize];
    }
    set floatingActionButtonSize(value) {
      super.floatingActionButtonSize = value;
    }
    get bottomSheetSize() {
      return this[S$1.bottomSheetSize];
    }
    set bottomSheetSize(value) {
      super.bottomSheetSize = value;
    }
    get contentBottom() {
      return this[S$1.contentBottom];
    }
    set contentBottom(value) {
      super.contentBottom = value;
    }
    get contentTop() {
      return this[S$1.contentTop];
    }
    set contentTop(value) {
      super.contentTop = value;
    }
    get minInsets() {
      return this[S$1.minInsets];
    }
    set minInsets(value) {
      super.minInsets = value;
    }
    get minViewPadding() {
      return this[S$1.minViewPadding];
    }
    set minViewPadding(value) {
      super.minViewPadding = value;
    }
    get scaffoldSize() {
      return this[S$1.scaffoldSize];
    }
    set scaffoldSize(value) {
      super.scaffoldSize = value;
    }
    get snackBarSize() {
      return this[S$1.snackBarSize];
    }
    set snackBarSize(value) {
      super.snackBarSize = value;
    }
    get textDirection() {
      return this[S$1.textDirection$2];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
  };
  (scaffold$.ScaffoldPrelayoutGeometry.new = function(opts) {
    let bottomSheetSize = opts && 'bottomSheetSize' in opts ? opts.bottomSheetSize : null;
    if (bottomSheetSize == null) dart.nullFailed(I[122], 505, 19, "bottomSheetSize");
    let contentBottom = opts && 'contentBottom' in opts ? opts.contentBottom : null;
    if (contentBottom == null) dart.nullFailed(I[122], 506, 19, "contentBottom");
    let contentTop = opts && 'contentTop' in opts ? opts.contentTop : null;
    if (contentTop == null) dart.nullFailed(I[122], 507, 19, "contentTop");
    let floatingActionButtonSize = opts && 'floatingActionButtonSize' in opts ? opts.floatingActionButtonSize : null;
    if (floatingActionButtonSize == null) dart.nullFailed(I[122], 508, 19, "floatingActionButtonSize");
    let minInsets = opts && 'minInsets' in opts ? opts.minInsets : null;
    if (minInsets == null) dart.nullFailed(I[122], 509, 19, "minInsets");
    let minViewPadding = opts && 'minViewPadding' in opts ? opts.minViewPadding : null;
    if (minViewPadding == null) dart.nullFailed(I[122], 510, 19, "minViewPadding");
    let scaffoldSize = opts && 'scaffoldSize' in opts ? opts.scaffoldSize : null;
    if (scaffoldSize == null) dart.nullFailed(I[122], 511, 19, "scaffoldSize");
    let snackBarSize = opts && 'snackBarSize' in opts ? opts.snackBarSize : null;
    if (snackBarSize == null) dart.nullFailed(I[122], 512, 19, "snackBarSize");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[122], 513, 19, "textDirection");
    this[S$1.bottomSheetSize] = bottomSheetSize;
    this[S$1.contentBottom] = contentBottom;
    this[S$1.contentTop] = contentTop;
    this[S$1.floatingActionButtonSize] = floatingActionButtonSize;
    this[S$1.minInsets] = minInsets;
    this[S$1.minViewPadding] = minViewPadding;
    this[S$1.scaffoldSize] = scaffoldSize;
    this[S$1.snackBarSize] = snackBarSize;
    this[S$1.textDirection$2] = textDirection;
    ;
  }).prototype = scaffold$.ScaffoldPrelayoutGeometry.prototype;
  dart.addTypeTests(scaffold$.ScaffoldPrelayoutGeometry);
  dart.addTypeCaches(scaffold$.ScaffoldPrelayoutGeometry);
  dart.setLibraryUri(scaffold$.ScaffoldPrelayoutGeometry, I[123]);
  dart.setFieldSignature(scaffold$.ScaffoldPrelayoutGeometry, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldPrelayoutGeometry.__proto__),
    floatingActionButtonSize: dart.finalFieldType(ui.Size),
    bottomSheetSize: dart.finalFieldType(ui.Size),
    contentBottom: dart.finalFieldType(core.double),
    contentTop: dart.finalFieldType(core.double),
    minInsets: dart.finalFieldType(edge_insets.EdgeInsets),
    minViewPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    scaffoldSize: dart.finalFieldType(ui.Size),
    snackBarSize: dart.finalFieldType(ui.Size),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  scaffold$._TransitionSnapshotFabLocation = class _TransitionSnapshotFabLocation extends floating_action_button_location.FloatingActionButtonLocation {
    get begin() {
      return this[S$1.begin];
    }
    set begin(value) {
      super.begin = value;
    }
    get end() {
      return this[S$1.end$2];
    }
    set end(value) {
      super.end = value;
    }
    get animator() {
      return this[S$1.animator];
    }
    set animator(value) {
      super.animator = value;
    }
    get progress() {
      return this[S$1.progress];
    }
    set progress(value) {
      super.progress = value;
    }
    getOffset(scaffoldGeometry) {
      if (scaffoldGeometry == null) dart.nullFailed(I[122], 615, 46, "scaffoldGeometry");
      return this.animator.getOffset({begin: this.begin.getOffset(scaffoldGeometry), end: this.end.getOffset(scaffoldGeometry), progress: this.progress});
    }
    toString() {
      return dart.str(object$.objectRuntimeType(this, "_TransitionSnapshotFabLocation")) + "(begin: " + dart.str(this.begin) + ", end: " + dart.str(this.end) + ", progress: " + dart.str(this.progress) + ")";
    }
  };
  (scaffold$._TransitionSnapshotFabLocation.new = function(begin, end, animator, progress) {
    if (begin == null) dart.nullFailed(I[122], 607, 45, "begin");
    if (end == null) dart.nullFailed(I[122], 607, 57, "end");
    if (animator == null) dart.nullFailed(I[122], 607, 67, "animator");
    if (progress == null) dart.nullFailed(I[122], 607, 82, "progress");
    this[S$1.begin] = begin;
    this[S$1.end$2] = end;
    this[S$1.animator] = animator;
    this[S$1.progress] = progress;
    scaffold$._TransitionSnapshotFabLocation.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._TransitionSnapshotFabLocation.prototype;
  dart.addTypeTests(scaffold$._TransitionSnapshotFabLocation);
  dart.addTypeCaches(scaffold$._TransitionSnapshotFabLocation);
  dart.setMethodSignature(scaffold$._TransitionSnapshotFabLocation, () => ({
    __proto__: dart.getMethods(scaffold$._TransitionSnapshotFabLocation.__proto__),
    getOffset: dart.fnType(ui.Offset, [scaffold$.ScaffoldPrelayoutGeometry])
  }));
  dart.setLibraryUri(scaffold$._TransitionSnapshotFabLocation, I[123]);
  dart.setFieldSignature(scaffold$._TransitionSnapshotFabLocation, () => ({
    __proto__: dart.getFields(scaffold$._TransitionSnapshotFabLocation.__proto__),
    begin: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    end: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    animator: dart.finalFieldType(floating_action_button_location.FloatingActionButtonAnimator),
    progress: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(scaffold$._TransitionSnapshotFabLocation, ['toString']);
  scaffold$.ScaffoldGeometry = class ScaffoldGeometry extends core.Object {
    get bottomNavigationBarTop() {
      return this[S$1.bottomNavigationBarTop];
    }
    set bottomNavigationBarTop(value) {
      super.bottomNavigationBarTop = value;
    }
    get floatingActionButtonArea() {
      return this[S$1.floatingActionButtonArea];
    }
    set floatingActionButtonArea(value) {
      super.floatingActionButtonArea = value;
    }
    [S$1._scaleFloatingActionButton](scaleFactor) {
      if (scaleFactor == null) dart.nullFailed(I[122], 662, 54, "scaleFactor");
      if (scaleFactor === 1.0) return this;
      if (scaleFactor === 0.0) {
        return new scaffold$.ScaffoldGeometry.new({bottomNavigationBarTop: this.bottomNavigationBarTop});
      }
      let scaledButton = dart.nullCheck(ui.Rect.lerp(dart.nullCheck(this.floatingActionButtonArea).center['&'](ui.Size.zero), this.floatingActionButtonArea, scaleFactor));
      return this.copyWith({floatingActionButtonArea: scaledButton});
    }
    copyWith(opts) {
      let t67, t67$;
      let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
      let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
      return new scaffold$.ScaffoldGeometry.new({bottomNavigationBarTop: (t67 = bottomNavigationBarTop, t67 == null ? this.bottomNavigationBarTop : t67), floatingActionButtonArea: (t67$ = floatingActionButtonArea, t67$ == null ? this.floatingActionButtonArea : t67$)});
    }
  };
  (scaffold$.ScaffoldGeometry.new = function(opts) {
    let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
    let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
    this[S$1.bottomNavigationBarTop] = bottomNavigationBarTop;
    this[S$1.floatingActionButtonArea] = floatingActionButtonArea;
    ;
  }).prototype = scaffold$.ScaffoldGeometry.prototype;
  dart.addTypeTests(scaffold$.ScaffoldGeometry);
  dart.addTypeCaches(scaffold$.ScaffoldGeometry);
  dart.setMethodSignature(scaffold$.ScaffoldGeometry, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldGeometry.__proto__),
    [S$1._scaleFloatingActionButton]: dart.fnType(scaffold$.ScaffoldGeometry, [core.double]),
    copyWith: dart.fnType(scaffold$.ScaffoldGeometry, [], {bottomNavigationBarTop: dart.nullable(core.double), floatingActionButtonArea: dart.nullable(ui.Rect)}, {})
  }));
  dart.setLibraryUri(scaffold$.ScaffoldGeometry, I[123]);
  dart.setFieldSignature(scaffold$.ScaffoldGeometry, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldGeometry.__proto__),
    bottomNavigationBarTop: dart.finalFieldType(dart.nullable(core.double)),
    floatingActionButtonArea: dart.finalFieldType(dart.nullable(ui.Rect))
  }));
  scaffold$._ScaffoldGeometryNotifier = class _ScaffoldGeometryNotifier extends change_notifier.ChangeNotifier {
    get value() {
      if (!dart.test(dart.fn(() => {
        let renderObject = this.context.findRenderObject();
        if (renderObject == null || !dart.test(dart.nullCheck(renderObject.owner).debugDoingPaint)) dart.throw(assertions.FlutterError.new("Scaffold.geometryOf() must only be accessed during the paint phase.\n" + "The ScaffoldGeometry is only available during the paint phase, because " + "its value is computed during the animation and layout phases prior to painting."));
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[122], 703, 12, "() {\r\n      final RenderObject? renderObject = context.findRenderObject();\r\n      if (renderObject == null || !renderObject.owner!.debugDoingPaint)\r\n        throw FlutterError(\r\n            'Scaffold.geometryOf() must only be accessed during the paint phase.\\n'\r\n            'The ScaffoldGeometry is only available during the paint phase, because '\r\n            'its value is computed during the animation and layout phases prior to painting.'\r\n        );\r\n      return true;\r\n    }()");
      return this.geometry[S$1._scaleFloatingActionButton](dart.nullCheck(this.floatingActionButtonScale));
    }
    [S$1._updateWith](opts) {
      let t67;
      let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
      let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
      let floatingActionButtonScale = opts && 'floatingActionButtonScale' in opts ? opts.floatingActionButtonScale : null;
      this.floatingActionButtonScale = (t67 = floatingActionButtonScale, t67 == null ? this.floatingActionButtonScale : t67);
      this.geometry = this.geometry.copyWith({bottomNavigationBarTop: bottomNavigationBarTop, floatingActionButtonArea: floatingActionButtonArea});
      this.notifyListeners();
    }
  };
  (scaffold$._ScaffoldGeometryNotifier.new = function(geometry, context) {
    if (geometry == null) dart.nullFailed(I[122], 694, 34, "geometry");
    if (context == null) dart.nullFailed(I[122], 694, 49, "context");
    this.floatingActionButtonScale = null;
    this.geometry = geometry;
    this.context = context;
    if (!(context != null)) dart.assertFailed(null, I[122], 695, 15, "context != null");
    scaffold$._ScaffoldGeometryNotifier.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._ScaffoldGeometryNotifier.prototype;
  dart.addTypeTests(scaffold$._ScaffoldGeometryNotifier);
  dart.addTypeCaches(scaffold$._ScaffoldGeometryNotifier);
  scaffold$._ScaffoldGeometryNotifier[dart.implements] = () => [change_notifier.ValueListenable$(scaffold$.ScaffoldGeometry)];
  dart.setMethodSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldGeometryNotifier.__proto__),
    [S$1._updateWith]: dart.fnType(dart.void, [], {bottomNavigationBarTop: dart.nullable(core.double), floatingActionButtonArea: dart.nullable(ui.Rect), floatingActionButtonScale: dart.nullable(core.double)}, {})
  }));
  dart.setGetterSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getGetters(scaffold$._ScaffoldGeometryNotifier.__proto__),
    value: scaffold$.ScaffoldGeometry
  }));
  dart.setLibraryUri(scaffold$._ScaffoldGeometryNotifier, I[123]);
  dart.setFieldSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldGeometryNotifier.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    floatingActionButtonScale: dart.fieldType(dart.nullable(core.double)),
    geometry: dart.fieldType(scaffold$.ScaffoldGeometry)
  }));
  scaffold$._BodyBoxConstraints = class _BodyBoxConstraints extends box$.BoxConstraints {
    get bottomWidgetsHeight() {
      return this[S$1.bottomWidgetsHeight];
    }
    set bottomWidgetsHeight(value) {
      super.bottomWidgetsHeight = value;
    }
    get appBarHeight() {
      return this[S$1.appBarHeight];
    }
    set appBarHeight(value) {
      super.appBarHeight = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!super._equals(other)) return false;
      return scaffold$._BodyBoxConstraints.is(other) && other.bottomWidgetsHeight == this.bottomWidgetsHeight && other.appBarHeight == this.appBarHeight;
    }
    get hashCode() {
      return ui.hashValues(super.hashCode, this.bottomWidgetsHeight, this.appBarHeight);
    }
  };
  (scaffold$._BodyBoxConstraints.new = function(opts) {
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 0;
    if (minWidth == null) dart.nullFailed(I[122], 741, 12, "minWidth");
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : 1 / 0;
    if (maxWidth == null) dart.nullFailed(I[122], 742, 12, "maxWidth");
    let minHeight = opts && 'minHeight' in opts ? opts.minHeight : 0;
    if (minHeight == null) dart.nullFailed(I[122], 743, 12, "minHeight");
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : 1 / 0;
    if (maxHeight == null) dart.nullFailed(I[122], 744, 12, "maxHeight");
    let bottomWidgetsHeight = opts && 'bottomWidgetsHeight' in opts ? opts.bottomWidgetsHeight : null;
    if (bottomWidgetsHeight == null) dart.nullFailed(I[122], 745, 19, "bottomWidgetsHeight");
    let appBarHeight = opts && 'appBarHeight' in opts ? opts.appBarHeight : null;
    if (appBarHeight == null) dart.nullFailed(I[122], 746, 19, "appBarHeight");
    this[S$1.bottomWidgetsHeight] = bottomWidgetsHeight;
    this[S$1.appBarHeight] = appBarHeight;
    if (!(bottomWidgetsHeight != null)) dart.assertFailed(null, I[122], 747, 15, "bottomWidgetsHeight != null");
    if (!(dart.notNull(bottomWidgetsHeight) >= 0)) dart.assertFailed(null, I[122], 748, 15, "bottomWidgetsHeight >= 0");
    if (!(appBarHeight != null)) dart.assertFailed(null, I[122], 749, 15, "appBarHeight != null");
    if (!(dart.notNull(appBarHeight) >= 0)) dart.assertFailed(null, I[122], 750, 15, "appBarHeight >= 0");
    scaffold$._BodyBoxConstraints.__proto__.new.call(this, {minWidth: minWidth, maxWidth: maxWidth, minHeight: minHeight, maxHeight: maxHeight});
    ;
  }).prototype = scaffold$._BodyBoxConstraints.prototype;
  dart.addTypeTests(scaffold$._BodyBoxConstraints);
  dart.addTypeCaches(scaffold$._BodyBoxConstraints);
  dart.setLibraryUri(scaffold$._BodyBoxConstraints, I[123]);
  dart.setFieldSignature(scaffold$._BodyBoxConstraints, () => ({
    __proto__: dart.getFields(scaffold$._BodyBoxConstraints.__proto__),
    bottomWidgetsHeight: dart.finalFieldType(core.double),
    appBarHeight: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(scaffold$._BodyBoxConstraints, ['_equals']);
  dart.defineExtensionAccessors(scaffold$._BodyBoxConstraints, ['hashCode']);
  scaffold$._BodyBuilder = class _BodyBuilder extends framework.StatelessWidget {
    get body() {
      return this[S$1.body];
    }
    set body(value) {
      super.body = value;
    }
    get extendBody() {
      return this[S$1.extendBody];
    }
    set extendBody(value) {
      super.extendBody = value;
    }
    get extendBodyBehindAppBar() {
      return this[S$1.extendBodyBehindAppBar];
    }
    set extendBodyBehindAppBar(value) {
      super.extendBodyBehindAppBar = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[122], 797, 29, "context");
      if (!dart.test(this.extendBody) && !dart.test(this.extendBodyBehindAppBar)) return this.body;
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          if (context == null) dart.nullFailed(I[122], 802, 30, "context");
          if (constraints == null) dart.nullFailed(I[122], 802, 54, "constraints");
          let bodyConstraints = scaffold$._BodyBoxConstraints.as(constraints);
          let metrics = media_query.MediaQuery.of(context);
          let bottom = dart.test(this.extendBody) ? math.max(core.double, metrics.padding.bottom, bodyConstraints.bottomWidgetsHeight) : metrics.padding.bottom;
          let top = dart.test(this.extendBodyBehindAppBar) ? math.max(core.double, metrics.padding.top, bodyConstraints.appBarHeight) : metrics.padding.top;
          return new media_query.MediaQuery.new({data: metrics.copyWith({padding: metrics.padding.copyWith({top: top, bottom: bottom})}), child: this.body, $creationLocationd_0dea112b090073317d4: C[2417] || CT.C2417});
        }, T$.BuildContextAndBoxConstraintsToMediaQuery()), $creationLocationd_0dea112b090073317d4: C[2421] || CT.C2421});
    }
  };
  (scaffold$._BodyBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : null;
    if (extendBody == null) dart.nullFailed(I[122], 784, 19, "extendBody");
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : null;
    if (extendBodyBehindAppBar == null) dart.nullFailed(I[122], 785, 19, "extendBodyBehindAppBar");
    let body = opts && 'body' in opts ? opts.body : null;
    if (body == null) dart.nullFailed(I[122], 786, 19, "body");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.extendBody] = extendBody;
    this[S$1.extendBodyBehindAppBar] = extendBodyBehindAppBar;
    this[S$1.body] = body;
    if (!(extendBody != null)) dart.assertFailed(null, I[122], 787, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar != null)) dart.assertFailed(null, I[122], 788, 15, "extendBodyBehindAppBar != null");
    if (!(body != null)) dart.assertFailed(null, I[122], 789, 15, "body != null");
    scaffold$._BodyBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._BodyBuilder.prototype;
  dart.addTypeTests(scaffold$._BodyBuilder);
  dart.addTypeCaches(scaffold$._BodyBuilder);
  dart.setMethodSignature(scaffold$._BodyBuilder, () => ({
    __proto__: dart.getMethods(scaffold$._BodyBuilder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scaffold$._BodyBuilder, I[123]);
  dart.setFieldSignature(scaffold$._BodyBuilder, () => ({
    __proto__: dart.getFields(scaffold$._BodyBuilder.__proto__),
    body: dart.finalFieldType(framework.Widget),
    extendBody: dart.finalFieldType(core.bool),
    extendBodyBehindAppBar: dart.finalFieldType(core.bool)
  }));
  scaffold$._ScaffoldLayout = class _ScaffoldLayout extends custom_layout.MultiChildLayoutDelegate {
    performLayout(size) {
      if (size == null) dart.nullFailed(I[122], 867, 27, "size");
      let looseConstraints = new box$.BoxConstraints.loose(size);
      let fullWidthConstraints = looseConstraints.tighten({width: size.width});
      let bottom = size.height;
      let contentTop = 0.0;
      let bottomWidgetsHeight = 0.0;
      let appBarHeight = 0.0;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.appBar))) {
        appBarHeight = this.layoutChild(scaffold$._ScaffoldSlot.appBar, fullWidthConstraints).height;
        contentTop = dart.test(this.extendBodyBehindAppBar) ? 0.0 : appBarHeight;
        this.positionChild(scaffold$._ScaffoldSlot.appBar, ui.Offset.zero);
      }
      let bottomNavigationBarTop = null;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.bottomNavigationBar))) {
        let bottomNavigationBarHeight = this.layoutChild(scaffold$._ScaffoldSlot.bottomNavigationBar, fullWidthConstraints).height;
        bottomWidgetsHeight = bottomWidgetsHeight + dart.notNull(bottomNavigationBarHeight);
        bottomNavigationBarTop = math.max(core.double, 0.0, dart.notNull(bottom) - bottomWidgetsHeight);
        this.positionChild(scaffold$._ScaffoldSlot.bottomNavigationBar, new ui.Offset.new(0.0, bottomNavigationBarTop));
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.persistentFooter))) {
        let footerConstraints = new box$.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: math.max(core.double, 0.0, dart.notNull(bottom) - bottomWidgetsHeight - dart.notNull(contentTop))});
        let persistentFooterHeight = this.layoutChild(scaffold$._ScaffoldSlot.persistentFooter, footerConstraints).height;
        bottomWidgetsHeight = bottomWidgetsHeight + dart.notNull(persistentFooterHeight);
        this.positionChild(scaffold$._ScaffoldSlot.persistentFooter, new ui.Offset.new(0.0, math.max(core.double, 0.0, dart.notNull(bottom) - bottomWidgetsHeight)));
      }
      let contentBottom = math.max(core.double, 0.0, dart.notNull(bottom) - math.max(core.num, this.minInsets.bottom, bottomWidgetsHeight));
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.body))) {
        let bodyMaxHeight = math.max(core.double, 0.0, contentBottom - dart.notNull(contentTop));
        if (dart.test(this.extendBody)) {
          bodyMaxHeight = bodyMaxHeight + bottomWidgetsHeight;
          bodyMaxHeight = bodyMaxHeight[S.$clamp](0.0, dart.notNull(looseConstraints.maxHeight) - dart.notNull(contentTop))[S.$toDouble]();
          if (!(bodyMaxHeight <= math.max(core.num, 0.0, dart.notNull(looseConstraints.maxHeight) - dart.notNull(contentTop)))) dart.assertFailed(null, I[122], 916, 16, "bodyMaxHeight <= math.max(0.0, looseConstraints.maxHeight - contentTop)");
        }
        let bodyConstraints = new scaffold$._BodyBoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: bodyMaxHeight, bottomWidgetsHeight: dart.test(this.extendBody) ? bottomWidgetsHeight : 0.0, appBarHeight: appBarHeight});
        this.layoutChild(scaffold$._ScaffoldSlot.body, bodyConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.body, new ui.Offset.new(0.0, contentTop));
      }
      let bottomSheetSize = ui.Size.zero;
      let snackBarSize = ui.Size.zero;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.bodyScrim))) {
        let bottomSheetScrimConstraints = new box$.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: contentBottom});
        this.layoutChild(scaffold$._ScaffoldSlot.bodyScrim, bottomSheetScrimConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.bodyScrim, ui.Offset.zero);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.snackBar)) && !dart.test(this.isSnackBarFloating)) {
        snackBarSize = this.layoutChild(scaffold$._ScaffoldSlot.snackBar, fullWidthConstraints);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.bottomSheet))) {
        let bottomSheetConstraints = new box$.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: math.max(core.double, 0.0, contentBottom - dart.notNull(contentTop))});
        bottomSheetSize = this.layoutChild(scaffold$._ScaffoldSlot.bottomSheet, bottomSheetConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.bottomSheet, new ui.Offset.new((dart.notNull(size.width) - dart.notNull(bottomSheetSize.width)) / 2.0, contentBottom - dart.notNull(bottomSheetSize.height)));
      }
      let floatingActionButtonRect = null;
      let floatingActionButtonRect$35isSet = false;
      function floatingActionButtonRect$35get() {
        return floatingActionButtonRect$35isSet ? floatingActionButtonRect : dart.throw(new _internal.LateError.localNI("floatingActionButtonRect"));
      }
      dart.fn(floatingActionButtonRect$35get, T$.VoidToRect());
      function floatingActionButtonRect$35set(t70) {
        if (t70 == null) dart.nullFailed(I[122], 967, 15, "null");
        floatingActionButtonRect$35isSet = true;
        return floatingActionButtonRect = t70;
      }
      dart.fn(floatingActionButtonRect$35set, T$.RectTodynamic());
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.floatingActionButton))) {
        let fabSize = this.layoutChild(scaffold$._ScaffoldSlot.floatingActionButton, looseConstraints);
        let currentGeometry = new scaffold$.ScaffoldPrelayoutGeometry.new({bottomSheetSize: bottomSheetSize, contentBottom: contentBottom, contentTop: appBarHeight, floatingActionButtonSize: fabSize, minInsets: this.minInsets, scaffoldSize: size, snackBarSize: snackBarSize, textDirection: this.textDirection, minViewPadding: this.minViewPadding});
        let currentFabOffset = this.currentFloatingActionButtonLocation.getOffset(currentGeometry);
        let previousFabOffset = this.previousFloatingActionButtonLocation.getOffset(currentGeometry);
        let fabOffset = this.floatingActionButtonMotionAnimator.getOffset({begin: previousFabOffset, end: currentFabOffset, progress: this.floatingActionButtonMoveAnimationProgress});
        this.positionChild(scaffold$._ScaffoldSlot.floatingActionButton, fabOffset);
        floatingActionButtonRect$35set(fabOffset['&'](fabSize));
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.snackBar))) {
        let hasCustomWidth = this.snackBarWidth != null && dart.nullCheck(this.snackBarWidth) < dart.notNull(size.width);
        if (dart.equals(snackBarSize, ui.Size.zero)) {
          snackBarSize = this.layoutChild(scaffold$._ScaffoldSlot.snackBar, hasCustomWidth ? looseConstraints : fullWidthConstraints);
        }
        let snackBarYOffsetBase = null;
        if (!dart.equals(floatingActionButtonRect$35get().size, ui.Size.zero) && dart.test(this.isSnackBarFloating)) {
          snackBarYOffsetBase = floatingActionButtonRect$35get().top;
        } else {
          let safeYOffsetBase = dart.notNull(size.height) - dart.notNull(this.minViewPadding.bottom);
          snackBarYOffsetBase = dart.test(this.isSnackBarFloating) ? math.min(core.double, contentBottom, safeYOffsetBase) : contentBottom;
        }
        let xOffset = hasCustomWidth ? (dart.notNull(size.width) - dart.nullCheck(this.snackBarWidth)) / 2 : 0.0;
        this.positionChild(scaffold$._ScaffoldSlot.snackBar, new ui.Offset.new(xOffset, dart.notNull(snackBarYOffsetBase) - dart.notNull(snackBarSize.height)));
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.statusBar))) {
        this.layoutChild(scaffold$._ScaffoldSlot.statusBar, fullWidthConstraints.tighten({height: this.minInsets.top}));
        this.positionChild(scaffold$._ScaffoldSlot.statusBar, ui.Offset.zero);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.drawer))) {
        this.layoutChild(scaffold$._ScaffoldSlot.drawer, new box$.BoxConstraints.tight(size));
        this.positionChild(scaffold$._ScaffoldSlot.drawer, ui.Offset.zero);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.endDrawer))) {
        this.layoutChild(scaffold$._ScaffoldSlot.endDrawer, new box$.BoxConstraints.tight(size));
        this.positionChild(scaffold$._ScaffoldSlot.endDrawer, ui.Offset.zero);
      }
      this.geometryNotifier[S$1._updateWith]({bottomNavigationBarTop: bottomNavigationBarTop, floatingActionButtonArea: floatingActionButtonRect$35get()});
    }
    shouldRelayout(oldDelegate) {
      scaffold$._ScaffoldLayout.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[122], 1047, 39, "oldDelegate");
      return !dart.equals(oldDelegate.minInsets, this.minInsets) || oldDelegate.textDirection != this.textDirection || oldDelegate.floatingActionButtonMoveAnimationProgress != this.floatingActionButtonMoveAnimationProgress || !dart.equals(oldDelegate.previousFloatingActionButtonLocation, this.previousFloatingActionButtonLocation) || !dart.equals(oldDelegate.currentFloatingActionButtonLocation, this.currentFloatingActionButtonLocation) || oldDelegate.extendBody != this.extendBody || oldDelegate.extendBodyBehindAppBar != this.extendBodyBehindAppBar;
    }
  };
  (scaffold$._ScaffoldLayout.new = function(opts) {
    let minInsets = opts && 'minInsets' in opts ? opts.minInsets : null;
    if (minInsets == null) dart.nullFailed(I[122], 830, 19, "minInsets");
    let minViewPadding = opts && 'minViewPadding' in opts ? opts.minViewPadding : null;
    if (minViewPadding == null) dart.nullFailed(I[122], 831, 19, "minViewPadding");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[122], 832, 19, "textDirection");
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    if (geometryNotifier == null) dart.nullFailed(I[122], 833, 19, "geometryNotifier");
    let previousFloatingActionButtonLocation = opts && 'previousFloatingActionButtonLocation' in opts ? opts.previousFloatingActionButtonLocation : null;
    if (previousFloatingActionButtonLocation == null) dart.nullFailed(I[122], 835, 19, "previousFloatingActionButtonLocation");
    let currentFloatingActionButtonLocation = opts && 'currentFloatingActionButtonLocation' in opts ? opts.currentFloatingActionButtonLocation : null;
    if (currentFloatingActionButtonLocation == null) dart.nullFailed(I[122], 836, 19, "currentFloatingActionButtonLocation");
    let floatingActionButtonMoveAnimationProgress = opts && 'floatingActionButtonMoveAnimationProgress' in opts ? opts.floatingActionButtonMoveAnimationProgress : null;
    if (floatingActionButtonMoveAnimationProgress == null) dart.nullFailed(I[122], 837, 19, "floatingActionButtonMoveAnimationProgress");
    let floatingActionButtonMotionAnimator = opts && 'floatingActionButtonMotionAnimator' in opts ? opts.floatingActionButtonMotionAnimator : null;
    if (floatingActionButtonMotionAnimator == null) dart.nullFailed(I[122], 838, 19, "floatingActionButtonMotionAnimator");
    let isSnackBarFloating = opts && 'isSnackBarFloating' in opts ? opts.isSnackBarFloating : null;
    if (isSnackBarFloating == null) dart.nullFailed(I[122], 839, 19, "isSnackBarFloating");
    let snackBarWidth = opts && 'snackBarWidth' in opts ? opts.snackBarWidth : null;
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : null;
    if (extendBody == null) dart.nullFailed(I[122], 841, 19, "extendBody");
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : null;
    if (extendBodyBehindAppBar == null) dart.nullFailed(I[122], 842, 19, "extendBodyBehindAppBar");
    this.minInsets = minInsets;
    this.minViewPadding = minViewPadding;
    this.textDirection = textDirection;
    this.geometryNotifier = geometryNotifier;
    this.previousFloatingActionButtonLocation = previousFloatingActionButtonLocation;
    this.currentFloatingActionButtonLocation = currentFloatingActionButtonLocation;
    this.floatingActionButtonMoveAnimationProgress = floatingActionButtonMoveAnimationProgress;
    this.floatingActionButtonMotionAnimator = floatingActionButtonMotionAnimator;
    this.isSnackBarFloating = isSnackBarFloating;
    this.snackBarWidth = snackBarWidth;
    this.extendBody = extendBody;
    this.extendBodyBehindAppBar = extendBodyBehindAppBar;
    if (!(minInsets != null)) dart.assertFailed(null, I[122], 843, 15, "minInsets != null");
    if (!(textDirection != null)) dart.assertFailed(null, I[122], 844, 15, "textDirection != null");
    if (!(geometryNotifier != null)) dart.assertFailed(null, I[122], 845, 15, "geometryNotifier != null");
    if (!(previousFloatingActionButtonLocation != null)) dart.assertFailed(null, I[122], 846, 15, "previousFloatingActionButtonLocation != null");
    if (!(currentFloatingActionButtonLocation != null)) dart.assertFailed(null, I[122], 847, 15, "currentFloatingActionButtonLocation != null");
    if (!(extendBody != null)) dart.assertFailed(null, I[122], 848, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar != null)) dart.assertFailed(null, I[122], 849, 15, "extendBodyBehindAppBar != null");
    scaffold$._ScaffoldLayout.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._ScaffoldLayout.prototype;
  dart.addTypeTests(scaffold$._ScaffoldLayout);
  dart.addTypeCaches(scaffold$._ScaffoldLayout);
  dart.setMethodSignature(scaffold$._ScaffoldLayout, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldLayout.__proto__),
    performLayout: dart.fnType(dart.void, [ui.Size]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldLayout, I[123]);
  dart.setFieldSignature(scaffold$._ScaffoldLayout, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldLayout.__proto__),
    extendBody: dart.finalFieldType(core.bool),
    extendBodyBehindAppBar: dart.finalFieldType(core.bool),
    minInsets: dart.finalFieldType(edge_insets.EdgeInsets),
    minViewPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    textDirection: dart.finalFieldType(ui.TextDirection),
    geometryNotifier: dart.finalFieldType(scaffold$._ScaffoldGeometryNotifier),
    previousFloatingActionButtonLocation: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    currentFloatingActionButtonLocation: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    floatingActionButtonMoveAnimationProgress: dart.finalFieldType(core.double),
    floatingActionButtonMotionAnimator: dart.finalFieldType(floating_action_button_location.FloatingActionButtonAnimator),
    isSnackBarFloating: dart.finalFieldType(core.bool),
    snackBarWidth: dart.finalFieldType(dart.nullable(core.double))
  }));
  scaffold$._FloatingActionButtonTransition = class _FloatingActionButtonTransition extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$23];
    }
    set child(value) {
      super.child = value;
    }
    get fabMoveAnimation() {
      return this[S$1.fabMoveAnimation];
    }
    set fabMoveAnimation(value) {
      super.fabMoveAnimation = value;
    }
    get fabMotionAnimator() {
      return this[S$1.fabMotionAnimator];
    }
    set fabMotionAnimator(value) {
      super.fabMotionAnimator = value;
    }
    get geometryNotifier() {
      return this[S$1.geometryNotifier];
    }
    set geometryNotifier(value) {
      super.geometryNotifier = value;
    }
    get currentController() {
      return this[S$1.currentController];
    }
    set currentController(value) {
      super.currentController = value;
    }
    createState() {
      return new scaffold$._FloatingActionButtonTransitionState.new();
    }
  };
  (scaffold$._FloatingActionButtonTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let fabMoveAnimation = opts && 'fabMoveAnimation' in opts ? opts.fabMoveAnimation : null;
    if (fabMoveAnimation == null) dart.nullFailed(I[122], 1070, 19, "fabMoveAnimation");
    let fabMotionAnimator = opts && 'fabMotionAnimator' in opts ? opts.fabMotionAnimator : null;
    if (fabMotionAnimator == null) dart.nullFailed(I[122], 1071, 19, "fabMotionAnimator");
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    if (geometryNotifier == null) dart.nullFailed(I[122], 1072, 19, "geometryNotifier");
    let currentController = opts && 'currentController' in opts ? opts.currentController : null;
    if (currentController == null) dart.nullFailed(I[122], 1073, 19, "currentController");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$23] = child;
    this[S$1.fabMoveAnimation] = fabMoveAnimation;
    this[S$1.fabMotionAnimator] = fabMotionAnimator;
    this[S$1.geometryNotifier] = geometryNotifier;
    this[S$1.currentController] = currentController;
    if (!(fabMoveAnimation != null)) dart.assertFailed(null, I[122], 1074, 15, "fabMoveAnimation != null");
    if (!(fabMotionAnimator != null)) dart.assertFailed(null, I[122], 1075, 15, "fabMotionAnimator != null");
    if (!(currentController != null)) dart.assertFailed(null, I[122], 1076, 15, "currentController != null");
    scaffold$._FloatingActionButtonTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._FloatingActionButtonTransition.prototype;
  dart.addTypeTests(scaffold$._FloatingActionButtonTransition);
  dart.addTypeCaches(scaffold$._FloatingActionButtonTransition);
  dart.setMethodSignature(scaffold$._FloatingActionButtonTransition, () => ({
    __proto__: dart.getMethods(scaffold$._FloatingActionButtonTransition.__proto__),
    createState: dart.fnType(scaffold$._FloatingActionButtonTransitionState, [])
  }));
  dart.setLibraryUri(scaffold$._FloatingActionButtonTransition, I[123]);
  dart.setFieldSignature(scaffold$._FloatingActionButtonTransition, () => ({
    __proto__: dart.getFields(scaffold$._FloatingActionButtonTransition.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    fabMoveAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    fabMotionAnimator: dart.finalFieldType(floating_action_button_location.FloatingActionButtonAnimator),
    geometryNotifier: dart.finalFieldType(scaffold$._ScaffoldGeometryNotifier),
    currentController: dart.finalFieldType(animation_controller.AnimationController)
  }));
  const State_TickerProviderStateMixin$36$4 = class State_TickerProviderStateMixin extends framework.State$(scaffold$._FloatingActionButtonTransition) {};
  (State_TickerProviderStateMixin$36$4.new = function() {
    ticker_provider.TickerProviderStateMixin$(scaffold$._FloatingActionButtonTransition)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$4.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$4.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$4, ticker_provider.TickerProviderStateMixin$(scaffold$._FloatingActionButtonTransition));
  scaffold$._FloatingActionButtonTransitionState = class _FloatingActionButtonTransitionState extends State_TickerProviderStateMixin$36$4 {
    get [S$1._previousController]() {
      let t72;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__previousController_isSet]) ? (t72 = this[S$1.___FloatingActionButtonTransitionState__previousController], t72) : dart.throw(new _internal.LateError.fieldNI("_previousController"));
    }
    set [S$1._previousController](t72) {
      if (t72 == null) dart.nullFailed(I[122], 1094, 28, "null");
      this[S$1.___FloatingActionButtonTransitionState__previousController_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__previousController] = t72;
    }
    get [S$1._previousScaleAnimation]() {
      let t73;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation_isSet]) ? (t73 = this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation], t73) : dart.throw(new _internal.LateError.fieldNI("_previousScaleAnimation"));
    }
    set [S$1._previousScaleAnimation](t73) {
      if (t73 == null) dart.nullFailed(I[122], 1095, 26, "null");
      this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation] = t73;
    }
    get [S$1._previousRotationAnimation]() {
      let t74;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation_isSet]) ? (t74 = this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation], t74) : dart.throw(new _internal.LateError.fieldNI("_previousRotationAnimation"));
    }
    set [S$1._previousRotationAnimation](t74) {
      if (t74 == null) dart.nullFailed(I[122], 1096, 26, "null");
      this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation] = t74;
    }
    get [S$1._currentScaleAnimation]() {
      let t75;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation_isSet]) ? (t75 = this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation], t75) : dart.throw(new _internal.LateError.fieldNI("_currentScaleAnimation"));
    }
    set [S$1._currentScaleAnimation](t75) {
      if (t75 == null) dart.nullFailed(I[122], 1098, 26, "null");
      this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation] = t75;
    }
    get [S$1._extendedCurrentScaleAnimation]() {
      let t76;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_isSet]) ? (t76 = this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation], t76) : dart.throw(new _internal.LateError.fieldNI("_extendedCurrentScaleAnimation"));
    }
    set [S$1._extendedCurrentScaleAnimation](t76) {
      if (t76 == null) dart.nullFailed(I[122], 1099, 26, "null");
      this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation] = t76;
    }
    get [S$1._currentRotationAnimation]() {
      let t77;
      return dart.test(this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation_isSet]) ? (t77 = this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation], t77) : dart.throw(new _internal.LateError.fieldNI("_currentRotationAnimation"));
    }
    set [S$1._currentRotationAnimation](t77) {
      if (t77 == null) dart.nullFailed(I[122], 1100, 26, "null");
      this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation_isSet] = true;
      this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation] = t77;
    }
    initState() {
      let t78;
      super.initState();
      this[S$1._previousController] = (t78 = new animation_controller.AnimationController.new({duration: floating_action_button_location.kFloatingActionButtonSegue, vsync: this}), (() => {
        t78.addStatusListener(dart.bind(this, S$1._handlePreviousAnimationStatusChanged));
        return t78;
      })());
      this[S$1._updateAnimations]();
      if (this.widget.child != null) {
        this.widget.currentController.value = 1.0;
      } else {
        this[S$1._updateGeometryScale](0.0);
      }
    }
    dispose() {
      this[S$1._previousController].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      let t78, t78$, t78$0;
      scaffold$._FloatingActionButtonTransition.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[122], 1131, 56, "oldWidget");
      super.didUpdateWidget(oldWidget);
      let oldChildIsNull = oldWidget.child == null;
      let newChildIsNull = this.widget.child == null;
      if (oldChildIsNull === newChildIsNull && dart.equals((t78 = oldWidget.child, t78 == null ? null : t78.key), (t78$ = this.widget.child, t78$ == null ? null : t78$.key))) return;
      if (!dart.equals(oldWidget.fabMotionAnimator, this.widget.fabMotionAnimator) || !dart.equals(oldWidget.fabMoveAnimation, this.widget.fabMoveAnimation)) {
        this[S$1._updateAnimations]();
      }
      if (this[S$1._previousController].status == animation.AnimationStatus.dismissed) {
        let currentValue = this.widget.currentController.value;
        if (currentValue === 0.0 || oldWidget.child == null) {
          this[S$1._previousChild] = null;
          if (this.widget.child != null) this.widget.currentController.forward();
        } else {
          this[S$1._previousChild] = oldWidget.child;
          t78$0 = this[S$1._previousController];
          (() => {
            t78$0.value = currentValue;
            t78$0.reverse();
            return t78$0;
          })();
          this.widget.currentController.value = 0.0;
        }
      }
    }
    [S$1._updateAnimations]() {
      let previousExitScaleAnimation = new animations.CurvedAnimation.new({parent: this[S$1._previousController], curve: curves.Curves.easeIn});
      let previousExitRotationAnimation = new (T$.TweenOfdouble()).new({begin: 1.0, end: 1.0}).animate(new animations.CurvedAnimation.new({parent: this[S$1._previousController], curve: curves.Curves.easeIn}));
      let currentEntranceScaleAnimation = new animations.CurvedAnimation.new({parent: this.widget.currentController, curve: curves.Curves.easeIn});
      let currentEntranceRotationAnimation = this.widget.currentController.drive(core.double, scaffold$._FloatingActionButtonTransitionState._entranceTurnTween);
      let moveScaleAnimation = this.widget.fabMotionAnimator.getScaleAnimation({parent: this.widget.fabMoveAnimation});
      let moveRotationAnimation = this.widget.fabMotionAnimator.getRotationAnimation({parent: this.widget.fabMoveAnimation});
      this[S$1._previousScaleAnimation] = new (T$.AnimationMinOfdouble()).new(moveScaleAnimation, previousExitScaleAnimation);
      this[S$1._currentScaleAnimation] = new (T$.AnimationMinOfdouble()).new(moveScaleAnimation, currentEntranceScaleAnimation);
      this[S$1._extendedCurrentScaleAnimation] = this[S$1._currentScaleAnimation].drive(core.double, new tween.CurveTween.new({curve: C[2424] || CT.C2424}));
      this[S$1._previousRotationAnimation] = new animations.TrainHoppingAnimation.new(previousExitRotationAnimation, moveRotationAnimation);
      this[S$1._currentRotationAnimation] = new animations.TrainHoppingAnimation.new(currentEntranceRotationAnimation, moveRotationAnimation);
      this[S$1._currentScaleAnimation].addListener(dart.bind(this, S$1._onProgressChanged));
      this[S$1._previousScaleAnimation].addListener(dart.bind(this, S$1._onProgressChanged));
    }
    [S$1._handlePreviousAnimationStatusChanged](status) {
      if (status == null) dart.nullFailed(I[122], 1202, 62, "status");
      this.setState(dart.fn(() => {
        if (status == animation.AnimationStatus.dismissed) {
          if (!(this.widget.currentController.status == animation.AnimationStatus.dismissed)) dart.assertFailed(null, I[122], 1205, 16, "widget.currentController.status == AnimationStatus.dismissed");
          if (this.widget.child != null) this.widget.currentController.forward();
        }
      }, T$.VoidTovoid()));
    }
    [S$1._isExtendedFloatingActionButton](widget) {
      return floating_action_button.FloatingActionButton.is(widget) && dart.test(widget.isExtended);
    }
    build(context) {
      if (context == null) dart.nullFailed(I[122], 1218, 29, "context");
      return new basic.Stack.new({alignment: alignment.Alignment.centerRight, children: (() => {
          let t78 = T$.JSArrayOfWidget().of([]);
          if (this[S$1._previousController].status != animation.AnimationStatus.dismissed) if (dart.test(this[S$1._isExtendedFloatingActionButton](this[S$1._previousChild])))
            t78[S.$add](new transitions.FadeTransition.new({opacity: this[S$1._previousScaleAnimation], child: this[S$1._previousChild], $creationLocationd_0dea112b090073317d4: C[2425] || CT.C2425}));
          else
            t78[S.$add](new transitions.ScaleTransition.new({scale: this[S$1._previousScaleAnimation], child: new transitions.RotationTransition.new({turns: this[S$1._previousRotationAnimation], child: this[S$1._previousChild], $creationLocationd_0dea112b090073317d4: C[2429] || CT.C2429}), $creationLocationd_0dea112b090073317d4: C[2433] || CT.C2433}));
          if (dart.test(this[S$1._isExtendedFloatingActionButton](this.widget.child)))
            t78[S.$add](new transitions.ScaleTransition.new({scale: this[S$1._extendedCurrentScaleAnimation], child: new transitions.FadeTransition.new({opacity: this[S$1._currentScaleAnimation], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[2437] || CT.C2437}), $creationLocationd_0dea112b090073317d4: C[2441] || CT.C2441}));
          else
            t78[S.$add](new transitions.ScaleTransition.new({scale: this[S$1._currentScaleAnimation], child: new transitions.RotationTransition.new({turns: this[S$1._currentRotationAnimation], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[2445] || CT.C2445}), $creationLocationd_0dea112b090073317d4: C[2449] || CT.C2449}));
          return t78;
        })(), $creationLocationd_0dea112b090073317d4: C[2453] || CT.C2453});
    }
    [S$1._onProgressChanged]() {
      this[S$1._updateGeometryScale](math.max(core.double, this[S$1._previousScaleAnimation].value, this[S$1._currentScaleAnimation].value));
    }
    [S$1._updateGeometryScale](scale) {
      if (scale == null) dart.nullFailed(I[122], 1260, 36, "scale");
      this.widget.geometryNotifier[S$1._updateWith]({floatingActionButtonScale: scale});
    }
  };
  (scaffold$._FloatingActionButtonTransitionState.new = function() {
    this[S$1.___FloatingActionButtonTransitionState__previousController] = null;
    this[S$1.___FloatingActionButtonTransitionState__previousController_isSet] = false;
    this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation_isSet] = false;
    this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation_isSet] = false;
    this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation_isSet] = false;
    this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_isSet] = false;
    this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation_isSet] = false;
    this[S$1._previousChild] = null;
    scaffold$._FloatingActionButtonTransitionState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._FloatingActionButtonTransitionState.prototype;
  dart.addTypeTests(scaffold$._FloatingActionButtonTransitionState);
  dart.addTypeCaches(scaffold$._FloatingActionButtonTransitionState);
  dart.setMethodSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getMethods(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1._updateAnimations]: dart.fnType(dart.void, []),
    [S$1._handlePreviousAnimationStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [S$1._isExtendedFloatingActionButton]: dart.fnType(core.bool, [dart.nullable(framework.Widget)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$1._onProgressChanged]: dart.fnType(dart.void, []),
    [S$1._updateGeometryScale]: dart.fnType(dart.void, [core.double])
  }));
  dart.setGetterSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getGetters(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1._previousController]: animation_controller.AnimationController,
    [S$1._previousScaleAnimation]: animation.Animation$(core.double),
    [S$1._previousRotationAnimation]: animation.Animation$(core.double),
    [S$1._currentScaleAnimation]: animation.Animation$(core.double),
    [S$1._extendedCurrentScaleAnimation]: animation.Animation$(core.double),
    [S$1._currentRotationAnimation]: animation.Animation$(core.double)
  }));
  dart.setSetterSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getSetters(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1._previousController]: animation_controller.AnimationController,
    [S$1._previousScaleAnimation]: animation.Animation$(core.double),
    [S$1._previousRotationAnimation]: animation.Animation$(core.double),
    [S$1._currentScaleAnimation]: animation.Animation$(core.double),
    [S$1._extendedCurrentScaleAnimation]: animation.Animation$(core.double),
    [S$1._currentRotationAnimation]: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(scaffold$._FloatingActionButtonTransitionState, I[123]);
  dart.setFieldSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getFields(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1.___FloatingActionButtonTransitionState__previousController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1.___FloatingActionButtonTransitionState__previousController_isSet]: dart.fieldType(core.bool),
    [S$1.___FloatingActionButtonTransitionState__previousScaleAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__previousScaleAnimation_isSet]: dart.fieldType(core.bool),
    [S$1.___FloatingActionButtonTransitionState__previousRotationAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__previousRotationAnimation_isSet]: dart.fieldType(core.bool),
    [S$1.___FloatingActionButtonTransitionState__currentScaleAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__currentScaleAnimation_isSet]: dart.fieldType(core.bool),
    [S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_isSet]: dart.fieldType(core.bool),
    [S$1.___FloatingActionButtonTransitionState__currentRotationAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__currentRotationAnimation_isSet]: dart.fieldType(core.bool),
    [S$1._previousChild]: dart.fieldType(dart.nullable(framework.Widget))
  }));
  dart.defineLazy(scaffold$._FloatingActionButtonTransitionState, {
    /*scaffold$._FloatingActionButtonTransitionState._entranceTurnTween*/get _entranceTurnTween() {
      return new (T$.TweenOfdouble()).new({begin: 1.0 - 0.125, end: 1.0}).chain(new tween.CurveTween.new({curve: curves.Curves.easeIn}));
    }
  }, false);
  scaffold$.Scaffold = class Scaffold extends framework.StatefulWidget {
    get extendBody() {
      return this[S$1.extendBody$1];
    }
    set extendBody(value) {
      super.extendBody = value;
    }
    get extendBodyBehindAppBar() {
      return this[S$1.extendBodyBehindAppBar$1];
    }
    set extendBodyBehindAppBar(value) {
      super.extendBodyBehindAppBar = value;
    }
    get appBar() {
      return this[S$1.appBar];
    }
    set appBar(value) {
      super.appBar = value;
    }
    get body() {
      return this[S$1.body$1];
    }
    set body(value) {
      super.body = value;
    }
    get floatingActionButton() {
      return this[S$1.floatingActionButton];
    }
    set floatingActionButton(value) {
      super.floatingActionButton = value;
    }
    get floatingActionButtonLocation() {
      return this[S$1.floatingActionButtonLocation];
    }
    set floatingActionButtonLocation(value) {
      super.floatingActionButtonLocation = value;
    }
    get floatingActionButtonAnimator() {
      return this[S$1.floatingActionButtonAnimator];
    }
    set floatingActionButtonAnimator(value) {
      super.floatingActionButtonAnimator = value;
    }
    get persistentFooterButtons() {
      return this[S$1.persistentFooterButtons];
    }
    set persistentFooterButtons(value) {
      super.persistentFooterButtons = value;
    }
    get drawer() {
      return this[S$1.drawer];
    }
    set drawer(value) {
      super.drawer = value;
    }
    get onDrawerChanged() {
      return this[S$1.onDrawerChanged];
    }
    set onDrawerChanged(value) {
      super.onDrawerChanged = value;
    }
    get endDrawer() {
      return this[S$1.endDrawer];
    }
    set endDrawer(value) {
      super.endDrawer = value;
    }
    get onEndDrawerChanged() {
      return this[S$1.onEndDrawerChanged];
    }
    set onEndDrawerChanged(value) {
      super.onEndDrawerChanged = value;
    }
    get drawerScrimColor() {
      return this[S$1.drawerScrimColor];
    }
    set drawerScrimColor(value) {
      super.drawerScrimColor = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$19];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get bottomNavigationBar() {
      return this[S$1.bottomNavigationBar];
    }
    set bottomNavigationBar(value) {
      super.bottomNavigationBar = value;
    }
    get bottomSheet() {
      return this[S$1.bottomSheet];
    }
    set bottomSheet(value) {
      super.bottomSheet = value;
    }
    get resizeToAvoidBottomInset() {
      return this[S$1.resizeToAvoidBottomInset];
    }
    set resizeToAvoidBottomInset(value) {
      super.resizeToAvoidBottomInset = value;
    }
    get primary() {
      return this[S$1.primary$1];
    }
    set primary(value) {
      super.primary = value;
    }
    get drawerDragStartBehavior() {
      return this[S$1.drawerDragStartBehavior];
    }
    set drawerDragStartBehavior(value) {
      super.drawerDragStartBehavior = value;
    }
    get drawerEdgeDragWidth() {
      return this[S$1.drawerEdgeDragWidth];
    }
    set drawerEdgeDragWidth(value) {
      super.drawerEdgeDragWidth = value;
    }
    get drawerEnableOpenDragGesture() {
      return this[S$1.drawerEnableOpenDragGesture];
    }
    set drawerEnableOpenDragGesture(value) {
      super.drawerEnableOpenDragGesture = value;
    }
    get endDrawerEnableOpenDragGesture() {
      return this[S$1.endDrawerEnableOpenDragGesture];
    }
    set endDrawerEnableOpenDragGesture(value) {
      super.endDrawerEnableOpenDragGesture = value;
    }
    get restorationId() {
      return this[S$1.restorationId];
    }
    set restorationId(value) {
      super.restorationId = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[122], 1944, 40, "context");
      if (!(context != null)) dart.assertFailed(null, I[122], 1945, 12, "context != null");
      let result = context.findAncestorStateOfType(scaffold$.ScaffoldState);
      if (result != null) return result;
      dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Scaffold.of() called with a context that does not contain a Scaffold."), new assertions.ErrorDescription.new("No Scaffold ancestor could be found starting from the context that was passed to Scaffold.of(). " + "This usually happens when the context provided is from the same StatefulWidget as that " + "whose build function actually creates the Scaffold widget being sought."), new assertions.ErrorHint.new("There are several ways to avoid this problem. The simplest is to use a Builder to get a " + "context that is \"under\" the Scaffold. For an example of this, please see the " + "documentation for Scaffold.of():\n" + "  https://api.flutter.dev/flutter/material/Scaffold/of.html"), new assertions.ErrorHint.new("A more efficient solution is to split your build function into several widgets. This " + "introduces a new context from which you can obtain the Scaffold. In this solution, " + "you would have an outer widget that creates the Scaffold populated by instances of " + "your new inner widgets, and then in these inner widgets you would use Scaffold.of().\n" + "A less elegant but more expedient solution is assign a GlobalKey to the Scaffold, " + "then use the key.currentState property to obtain the ScaffoldState rather than " + "using the Scaffold.of() function."), context.describeElement("The context used was")])));
    }
    static maybeOf(context) {
      if (context == null) dart.nullFailed(I[122], 1988, 46, "context");
      if (!(context != null)) dart.assertFailed(null, I[122], 1989, 12, "context != null");
      return context.findAncestorStateOfType(scaffold$.ScaffoldState);
    }
    static geometryOf(context) {
      if (context == null) dart.nullFailed(I[122], 2013, 68, "context");
      let scaffoldScope = context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldScope);
      if (scaffoldScope == null) dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Scaffold.geometryOf() called with a context that does not contain a Scaffold."), new assertions.ErrorDescription.new("This usually happens when the context provided is from the same StatefulWidget as that " + "whose build function actually creates the Scaffold widget being sought."), new assertions.ErrorHint.new("There are several ways to avoid this problem. The simplest is to use a Builder to get a " + "context that is \"under\" the Scaffold. For an example of this, please see the " + "documentation for Scaffold.of():\n" + "  https://api.flutter.dev/flutter/material/Scaffold/of.html"), new assertions.ErrorHint.new("A more efficient solution is to split your build function into several widgets. This " + "introduces a new context from which you can obtain the Scaffold. In this solution, " + "you would have an outer widget that creates the Scaffold populated by instances of " + "your new inner widgets, and then in these inner widgets you would use Scaffold.geometryOf()."), context.describeElement("The context used was")])));
      return scaffoldScope.geometryNotifier;
    }
    static hasDrawer(context, opts) {
      let t79, t79$, t79$0, t79$1;
      if (context == null) dart.nullFailed(I[122], 2054, 38, "context");
      let registerForUpdates = opts && 'registerForUpdates' in opts ? opts.registerForUpdates : true;
      if (registerForUpdates == null) dart.nullFailed(I[122], 2054, 54, "registerForUpdates");
      if (!(registerForUpdates != null)) dart.assertFailed(null, I[122], 2055, 12, "registerForUpdates != null");
      if (!(context != null)) dart.assertFailed(null, I[122], 2056, 12, "context != null");
      if (dart.test(registerForUpdates)) {
        let scaffold = context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldScope);
        t79$ = (t79 = scaffold, t79 == null ? null : t79.hasDrawer);
        return t79$ == null ? false : t79$;
      } else {
        let scaffold = context.findAncestorStateOfType(scaffold$.ScaffoldState);
        t79$1 = (t79$0 = scaffold, t79$0 == null ? null : t79$0.hasDrawer);
        return t79$1 == null ? false : t79$1;
      }
    }
    createState() {
      return new scaffold$.ScaffoldState.new();
    }
  };
  (scaffold$.Scaffold.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let appBar = opts && 'appBar' in opts ? opts.appBar : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let floatingActionButton = opts && 'floatingActionButton' in opts ? opts.floatingActionButton : null;
    let floatingActionButtonLocation = opts && 'floatingActionButtonLocation' in opts ? opts.floatingActionButtonLocation : null;
    let floatingActionButtonAnimator = opts && 'floatingActionButtonAnimator' in opts ? opts.floatingActionButtonAnimator : null;
    let persistentFooterButtons = opts && 'persistentFooterButtons' in opts ? opts.persistentFooterButtons : null;
    let drawer = opts && 'drawer' in opts ? opts.drawer : null;
    let onDrawerChanged = opts && 'onDrawerChanged' in opts ? opts.onDrawerChanged : null;
    let endDrawer = opts && 'endDrawer' in opts ? opts.endDrawer : null;
    let onEndDrawerChanged = opts && 'onEndDrawerChanged' in opts ? opts.onEndDrawerChanged : null;
    let bottomNavigationBar = opts && 'bottomNavigationBar' in opts ? opts.bottomNavigationBar : null;
    let bottomSheet = opts && 'bottomSheet' in opts ? opts.bottomSheet : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let resizeToAvoidBottomInset = opts && 'resizeToAvoidBottomInset' in opts ? opts.resizeToAvoidBottomInset : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    if (primary == null) dart.nullFailed(I[122], 1467, 10, "primary");
    let drawerDragStartBehavior = opts && 'drawerDragStartBehavior' in opts ? opts.drawerDragStartBehavior : C[635] || CT.C635;
    if (drawerDragStartBehavior == null) dart.nullFailed(I[122], 1468, 10, "drawerDragStartBehavior");
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : false;
    if (extendBody == null) dart.nullFailed(I[122], 1469, 10, "extendBody");
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : false;
    if (extendBodyBehindAppBar == null) dart.nullFailed(I[122], 1470, 10, "extendBodyBehindAppBar");
    let drawerScrimColor = opts && 'drawerScrimColor' in opts ? opts.drawerScrimColor : null;
    let drawerEdgeDragWidth = opts && 'drawerEdgeDragWidth' in opts ? opts.drawerEdgeDragWidth : null;
    let drawerEnableOpenDragGesture = opts && 'drawerEnableOpenDragGesture' in opts ? opts.drawerEnableOpenDragGesture : true;
    if (drawerEnableOpenDragGesture == null) dart.nullFailed(I[122], 1473, 10, "drawerEnableOpenDragGesture");
    let endDrawerEnableOpenDragGesture = opts && 'endDrawerEnableOpenDragGesture' in opts ? opts.endDrawerEnableOpenDragGesture : true;
    if (endDrawerEnableOpenDragGesture == null) dart.nullFailed(I[122], 1474, 10, "endDrawerEnableOpenDragGesture");
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.appBar] = appBar;
    this[S$1.body$1] = body;
    this[S$1.floatingActionButton] = floatingActionButton;
    this[S$1.floatingActionButtonLocation] = floatingActionButtonLocation;
    this[S$1.floatingActionButtonAnimator] = floatingActionButtonAnimator;
    this[S$1.persistentFooterButtons] = persistentFooterButtons;
    this[S$1.drawer] = drawer;
    this[S$1.onDrawerChanged] = onDrawerChanged;
    this[S$1.endDrawer] = endDrawer;
    this[S$1.onEndDrawerChanged] = onEndDrawerChanged;
    this[S$1.bottomNavigationBar] = bottomNavigationBar;
    this[S$1.bottomSheet] = bottomSheet;
    this[S$1.backgroundColor$19] = backgroundColor;
    this[S$1.resizeToAvoidBottomInset] = resizeToAvoidBottomInset;
    this[S$1.primary$1] = primary;
    this[S$1.drawerDragStartBehavior] = drawerDragStartBehavior;
    this[S$1.extendBody$1] = extendBody;
    this[S$1.extendBodyBehindAppBar$1] = extendBodyBehindAppBar;
    this[S$1.drawerScrimColor] = drawerScrimColor;
    this[S$1.drawerEdgeDragWidth] = drawerEdgeDragWidth;
    this[S$1.drawerEnableOpenDragGesture] = drawerEnableOpenDragGesture;
    this[S$1.endDrawerEnableOpenDragGesture] = endDrawerEnableOpenDragGesture;
    this[S$1.restorationId] = restorationId;
    if (!(primary != null)) dart.assertFailed(null, I[122], 1476, 15, "primary != null");
    if (!(extendBody != null)) dart.assertFailed(null, I[122], 1477, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar != null)) dart.assertFailed(null, I[122], 1478, 15, "extendBodyBehindAppBar != null");
    if (!(drawerDragStartBehavior != null)) dart.assertFailed(null, I[122], 1479, 15, "drawerDragStartBehavior != null");
    scaffold$.Scaffold.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$.Scaffold.prototype;
  dart.addTypeTests(scaffold$.Scaffold);
  dart.addTypeCaches(scaffold$.Scaffold);
  dart.setMethodSignature(scaffold$.Scaffold, () => ({
    __proto__: dart.getMethods(scaffold$.Scaffold.__proto__),
    createState: dart.fnType(scaffold$.ScaffoldState, [])
  }));
  dart.setLibraryUri(scaffold$.Scaffold, I[123]);
  dart.setFieldSignature(scaffold$.Scaffold, () => ({
    __proto__: dart.getFields(scaffold$.Scaffold.__proto__),
    extendBody: dart.finalFieldType(core.bool),
    extendBodyBehindAppBar: dart.finalFieldType(core.bool),
    appBar: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    body: dart.finalFieldType(dart.nullable(framework.Widget)),
    floatingActionButton: dart.finalFieldType(dart.nullable(framework.Widget)),
    floatingActionButtonLocation: dart.finalFieldType(dart.nullable(floating_action_button_location.FloatingActionButtonLocation)),
    floatingActionButtonAnimator: dart.finalFieldType(dart.nullable(floating_action_button_location.FloatingActionButtonAnimator)),
    persistentFooterButtons: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    drawer: dart.finalFieldType(dart.nullable(framework.Widget)),
    onDrawerChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    endDrawer: dart.finalFieldType(dart.nullable(framework.Widget)),
    onEndDrawerChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    drawerScrimColor: dart.finalFieldType(dart.nullable(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    bottomNavigationBar: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottomSheet: dart.finalFieldType(dart.nullable(framework.Widget)),
    resizeToAvoidBottomInset: dart.finalFieldType(dart.nullable(core.bool)),
    primary: dart.finalFieldType(core.bool),
    drawerDragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    drawerEdgeDragWidth: dart.finalFieldType(dart.nullable(core.double)),
    drawerEnableOpenDragGesture: dart.finalFieldType(core.bool),
    endDrawerEnableOpenDragGesture: dart.finalFieldType(core.bool),
    restorationId: dart.finalFieldType(dart.nullable(core.String))
  }));
  const State_TickerProviderStateMixin$36$5 = class State_TickerProviderStateMixin extends framework.State$(scaffold$.Scaffold) {};
  (State_TickerProviderStateMixin$36$5.new = function() {
    ticker_provider.TickerProviderStateMixin$(scaffold$.Scaffold)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$5.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$5.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$5, ticker_provider.TickerProviderStateMixin$(scaffold$.Scaffold));
  const State_RestorationMixin$36 = class State_RestorationMixin extends State_TickerProviderStateMixin$36$5 {};
  (State_RestorationMixin$36.new = function() {
    restoration.RestorationMixin$(scaffold$.Scaffold)[dart.mixinNew].call(this);
    State_RestorationMixin$36.__proto__.new.call(this);
  }).prototype = State_RestorationMixin$36.prototype;
  dart.applyMixin(State_RestorationMixin$36, restoration.RestorationMixin$(scaffold$.Scaffold));
  scaffold$.ScaffoldState = class ScaffoldState extends State_RestorationMixin$36 {
    get restorationId() {
      return this.widget.restorationId;
    }
    restoreState(oldBucket, initialRestore) {
      if (initialRestore == null) dart.nullFailed(I[122], 2079, 56, "initialRestore");
      this.registerForRestoration(this[S$1._drawerOpened], "drawer_open");
      this.registerForRestoration(this[S$1._endDrawerOpened], "end_drawer_open");
    }
    get hasAppBar() {
      return this.widget.appBar != null;
    }
    get hasDrawer() {
      return this.widget.drawer != null;
    }
    get hasEndDrawer() {
      return this.widget.endDrawer != null;
    }
    get hasFloatingActionButton() {
      return this.widget.floatingActionButton != null;
    }
    get appBarMaxHeight() {
      return this[S$1._appBarMaxHeight];
    }
    get isDrawerOpen() {
      return this[S$1._drawerOpened].value;
    }
    get isEndDrawerOpen() {
      return this[S$1._endDrawerOpened].value;
    }
    [S$1._drawerOpenedCallback](isOpened) {
      let t79;
      if (isOpened == null) dart.nullFailed(I[122], 2122, 35, "isOpened");
      this.setState(dart.fn(() => {
        this[S$1._drawerOpened].value = isOpened;
      }, T$.VoidTovoid()));
      t79 = this.widget.onDrawerChanged;
      t79 == null ? null : t79(isOpened);
    }
    [S$1._endDrawerOpenedCallback](isOpened) {
      let t79;
      if (isOpened == null) dart.nullFailed(I[122], 2129, 38, "isOpened");
      this.setState(dart.fn(() => {
        this[S$1._endDrawerOpened].value = isOpened;
      }, T$.VoidTovoid()));
      t79 = this.widget.onEndDrawerChanged;
      t79 == null ? null : t79(isOpened);
    }
    openDrawer() {
      let t79;
      if (this[S$1._endDrawerKey].currentState != null && dart.test(this[S$1._endDrawerOpened].value)) dart.nullCheck(this[S$1._endDrawerKey].currentState).close();
      t79 = this[S$1._drawerKey$1].currentState;
      t79 == null ? null : t79.open();
    }
    openEndDrawer() {
      let t79;
      if (this[S$1._drawerKey$1].currentState != null && dart.test(this[S$1._drawerOpened].value)) dart.nullCheck(this[S$1._drawerKey$1].currentState).close();
      t79 = this[S$1._endDrawerKey].currentState;
      t79 == null ? null : t79.open();
    }
    showSnackBar(snackbar) {
      let t79;
      if (snackbar == null) dart.nullFailed(I[122], 2226, 83, "snackbar");
      this[S$1._snackBarController] == null ? this[S$1._snackBarController] = (t79 = snack_bar.SnackBar.createAnimationController({vsync: this}), (() => {
        t79.addStatusListener(dart.bind(this, S$1._handleSnackBarStatusChange));
        return t79;
      })()) : null;
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty])) {
        if (!dart.test(dart.nullCheck(this[S$1._snackBarController]).isDismissed)) dart.assertFailed(null, I[122], 2230, 14, "_snackBarController!.isDismissed");
        dart.nullCheck(this[S$1._snackBarController]).forward();
      }
      let controller = null;
      let controller$35isSet = false;
      function controller$35get() {
        return controller$35isSet ? controller : dart.throw(new _internal.LateError.localNI("controller"));
      }
      dart.fn(controller$35get, T$.VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason());
      function controller$35set(t82) {
        if (t82 == null) dart.nullFailed(I[122], 2233, 68, "null");
        controller$35isSet = true;
        return controller = t82;
      }
      dart.fn(controller$35set, T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic());
      controller$35set(new (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()).__(snackbar.withAnimation(dart.nullCheck(this[S$1._snackBarController]), {fallbackKey: new framework.UniqueKey.new()}), T$.CompleterOfSnackBarClosedReason().new(), dart.fn(() => {
        if (!dart.equals(this[S$1._snackBars][S$1.$first], controller$35get())) dart.assertFailed(null, I[122], 2241, 16, "_snackBars.first == controller");
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.hide});
      }, T$.VoidTovoid()), null));
      this.setState(dart.fn(() => {
        this[S$1._snackBars].addLast(controller$35get());
      }, T$.VoidTovoid()));
      return controller$35get();
    }
    [S$1._handleSnackBarStatusChange](status) {
      if (status == null) dart.nullFailed(I[122], 2252, 52, "status");
      switch (status) {
        case C[204] || CT.C204:
        {
          if (!dart.test(this[S$1._snackBars][S$.$isNotEmpty])) dart.assertFailed(null, I[122], 2255, 16, "_snackBars.isNotEmpty");
          this.setState(dart.fn(() => {
            this[S$1._snackBars].removeFirst();
          }, T$.VoidTovoid()));
          if (dart.test(this[S$1._snackBars][S$.$isNotEmpty])) dart.nullCheck(this[S$1._snackBarController]).forward();
          break;
        }
        case C[207] || CT.C207:
        {
          this.setState(dart.fn(() => {
            if (!(this[S$1._snackBarTimer] == null)) dart.assertFailed(null, I[122], 2264, 18, "_snackBarTimer == null");
          }, T$.VoidTovoid()));
          break;
        }
        case C[205] || CT.C205:
        case C[206] || CT.C206:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    removeCurrentSnackBar(opts) {
      let t84;
      let reason = opts && 'reason' in opts ? opts.reason : C[177] || CT.C177;
      if (reason == null) dart.nullFailed(I[122], 2288, 53, "reason");
      if (!(reason != null)) dart.assertFailed(null, I[122], 2289, 12, "reason != null");
      if (this[S$1._messengerSnackBar] != null) {
        if (!dart.test(debug$0.debugCheckHasScaffoldMessenger(this.context))) dart.assertFailed(null, I[122], 2298, 14, "debugCheckHasScaffoldMessenger(context)");
        if (!(this[S$1._scaffoldMessenger] != null)) dart.assertFailed("A SnackBar was shown by the ScaffoldMessenger, but has been called upon" + "to be removed from a Scaffold that is not registered with a " + "ScaffoldMessenger, this can happen if a Scaffold has been rebuilt " + "without an ancestor ScaffoldMessenger.", I[122], 2300, 9, "_scaffoldMessenger != null");
        dart.nullCheck(this[S$1._scaffoldMessenger]).removeCurrentSnackBar({reason: reason});
        return;
      }
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty])) return;
      let completer = this[S$1._snackBars][S$1.$first][S$1._completer];
      if (!dart.test(completer.isCompleted)) completer.complete(reason);
      t84 = this[S$1._snackBarTimer];
      t84 == null ? null : t84.cancel();
      this[S$1._snackBarTimer] = null;
      dart.nullCheck(this[S$1._snackBarController]).value = 0.0;
    }
    hideCurrentSnackBar(opts) {
      let t84;
      let reason = opts && 'reason' in opts ? opts.reason : C[176] || CT.C176;
      if (reason == null) dart.nullFailed(I[122], 2333, 51, "reason");
      if (!(reason != null)) dart.assertFailed(null, I[122], 2334, 12, "reason != null");
      if (this[S$1._messengerSnackBar] != null) {
        if (!dart.test(debug$0.debugCheckHasScaffoldMessenger(this.context))) dart.assertFailed(null, I[122], 2343, 14, "debugCheckHasScaffoldMessenger(context)");
        if (!(this[S$1._scaffoldMessenger] != null)) dart.assertFailed("A SnackBar was shown by the ScaffoldMessenger, but has been called upon" + "to be removed from a Scaffold that is not registered with a " + "ScaffoldMessenger, this can happen if a Scaffold has been rebuilt " + "without an ancestor ScaffoldMessenger.", I[122], 2345, 7, "_scaffoldMessenger != null");
        dart.nullCheck(this[S$1._scaffoldMessenger]).hideCurrentSnackBar({reason: reason});
        return;
      }
      if (dart.test(this[S$1._snackBars][S$1.$isEmpty]) || dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.dismissed) return;
      let mediaQuery = media_query.MediaQuery.of(this.context);
      let completer = this[S$1._snackBars][S$1.$first][S$1._completer];
      if (dart.test(mediaQuery.accessibleNavigation)) {
        dart.nullCheck(this[S$1._snackBarController]).value = 0.0;
        completer.complete(reason);
      } else {
        dart.nullCheck(this[S$1._snackBarController]).reverse().then(dart.void, dart.fn(value => {
          if (!dart.test(this.mounted)) dart.assertFailed(null, I[122], 2364, 16, "mounted");
          if (!dart.test(completer.isCompleted)) completer.complete(reason);
        }, T$.voidToNull()));
      }
      t84 = this[S$1._snackBarTimer];
      t84 == null ? null : t84.cancel();
      this[S$1._snackBarTimer] = null;
    }
    [S$1._updateSnackBar]() {
      this.setState(dart.fn(() => {
        this[S$1._messengerSnackBar] = dart.test(dart.nullCheck(this[S$1._scaffoldMessenger])[S$1._snackBars][S$.$isNotEmpty]) ? dart.nullCheck(this[S$1._scaffoldMessenger])[S$1._snackBars][S$1.$first] : null;
      }, T$.VoidTovoid()));
    }
    [S$1._maybeBuildPersistentBottomSheet]() {
      let t84;
      if (this.widget.bottomSheet != null && this[S$1._currentBottomSheet] == null) {
        let animationController = (t84 = bottom_sheet.BottomSheet.createAnimationController(this), (() => {
          t84.value = 1.0;
          return t84;
        })());
        let _persistentSheetHistoryEntry = null;
        const _persistentBottomSheetExtentChanged = notification => {
          if (notification == null) dart.nullFailed(I[122], 2402, 80, "notification");
          if (dart.notNull(notification.extent) > dart.notNull(notification.initialExtent)) {
            if (_persistentSheetHistoryEntry == null) {
              _persistentSheetHistoryEntry = new routes.LocalHistoryEntry.new({onRemove: dart.fn(() => {
                  if (dart.notNull(notification.extent) > dart.notNull(notification.initialExtent)) {
                    draggable_scrollable_sheet.DraggableScrollableActuator.reset(notification.context);
                  }
                  this.showBodyScrim(false, 0.0);
                  this[S$1._floatingActionButtonVisibilityValue] = 1.0;
                  _persistentSheetHistoryEntry = null;
                }, T$.VoidTovoid())});
              dart.nullCheck(routes.ModalRoute.of(T$.ObjectN(), this.context)).addLocalHistoryEntry(dart.nullCheck(_persistentSheetHistoryEntry));
            }
          } else if (_persistentSheetHistoryEntry != null) {
            dart.nullCheck(routes.ModalRoute.of(T$.ObjectN(), this.context)).removeLocalHistoryEntry(dart.nullCheck(_persistentSheetHistoryEntry));
          }
          return false;
        };
        dart.fn(_persistentBottomSheetExtentChanged, T$.DraggableScrollableNotificationTobool());
        this[S$1._currentBottomSheet] = this[S$1._buildBottomSheet](dart.void, dart.fn(context => {
          if (context == null) dart.nullFailed(I[122], 2422, 23, "context");
          return new (T$.NotificationListenerOfDraggableScrollableNotification()).new({onNotification: _persistentBottomSheetExtentChanged, child: new draggable_scrollable_sheet.DraggableScrollableActuator.new({child: new basic.StatefulBuilder.new({key: this[S$1._currentBottomSheetKey], builder: dart.fn((context, setState) => {
                  if (context == null) dart.nullFailed(I[122], 2428, 40, "context");
                  if (setState == null) dart.nullFailed(I[122], 2428, 61, "setState");
                  return dart.nullCheck(this.widget.bottomSheet);
                }, T$.BuildContextAndFnToWidget()), $creationLocationd_0dea112b090073317d4: C[2457] || CT.C2457}), $creationLocationd_0dea112b090073317d4: C[2461] || CT.C2461}), $creationLocationd_0dea112b090073317d4: C[2464] || CT.C2464});
        }, T$.BuildContextToNotificationListenerOfDraggableScrollableNotification()), true, {animationController: animationController});
      }
    }
    [S$1._closeCurrentBottomSheet]() {
      if (this[S$1._currentBottomSheet] != null) {
        if (!dart.test(dart.nullCheck(this[S$1._currentBottomSheet])[S$1._isLocalHistoryEntry])) {
          dart.nullCheck(this[S$1._currentBottomSheet]).close();
        }
        if (!dart.test(dart.fn(() => {
          let t84;
          t84 = this[S$1._currentBottomSheet];
          t84 == null ? null : t84[S$1._completer].future.whenComplete(dart.fn(() => {
            if (!(this[S$1._currentBottomSheet] == null)) dart.assertFailed(null, I[122], 2446, 18, "_currentBottomSheet == null");
          }, T$.VoidToNull()));
          return true;
        }, T$.VoidTobool())())) dart.assertFailed(null, I[122], 2444, 14, "() {\r\n        _currentBottomSheet?._completer.future.whenComplete(() {\r\n          assert(_currentBottomSheet == null);\r\n        });\r\n        return true;\r\n      }()");
      }
    }
    [S$1._updatePersistentBottomSheet]() {
      dart.nullCheck(this[S$1._currentBottomSheetKey].currentState).setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    [S$1._buildBottomSheet](T, builder, isPersistent, opts) {
      if (builder == null) dart.nullFailed(I[122], 2458, 19, "builder");
      if (isPersistent == null) dart.nullFailed(I[122], 2459, 10, "isPersistent");
      let animationController = opts && 'animationController' in opts ? opts.animationController : null;
      if (animationController == null) dart.nullFailed(I[122], 2460, 34, "animationController");
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      if (!dart.test(dart.fn(() => {
        if (this.widget.bottomSheet != null && dart.test(isPersistent) && this[S$1._currentBottomSheet] != null) {
          dart.throw(assertions.FlutterError.new("Scaffold.bottomSheet cannot be specified while a bottom sheet " + "displayed with showBottomSheet() is still visible.\n" + "Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet()."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[122], 2466, 12, "() {\r\n      if (widget.bottomSheet != null && isPersistent && _currentBottomSheet != null) {\r\n        throw FlutterError(\r\n          'Scaffold.bottomSheet cannot be specified while a bottom sheet '\r\n          'displayed with showBottomSheet() is still visible.\\n'\r\n          'Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet().'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let completer = async.Completer$(T).new();
      let bottomSheetKey = T$.GlobalKeyOf_StandardBottomSheetState().new();
      let bottomSheet = null;
      let bottomSheet$35isSet = false;
      function bottomSheet$35get() {
        return bottomSheet$35isSet ? bottomSheet : dart.throw(new _internal.LateError.localNI("bottomSheet"));
      }
      dart.fn(bottomSheet$35get, T$.VoidTo_StandardBottomSheet());
      function bottomSheet$35set(t87) {
        if (t87 == null) dart.nullFailed(I[122], 2479, 31, "null");
        bottomSheet$35isSet = true;
        return bottomSheet = t87;
      }
      dart.fn(bottomSheet$35set, T$._StandardBottomSheetTodynamic());
      let removedEntry = false;
      const _removeCurrentBottomSheet = () => {
        removedEntry = true;
        if (this[S$1._currentBottomSheet] == null) {
          return;
        }
        if (!dart.equals(dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget], bottomSheet$35get())) dart.assertFailed(null, I[122], 2487, 14, "_currentBottomSheet!._widget == bottomSheet");
        if (!(bottomSheetKey.currentState != null)) dart.assertFailed(null, I[122], 2488, 14, "bottomSheetKey.currentState != null");
        this[S$1._showFloatingActionButton]();
        dart.nullCheck(bottomSheetKey.currentState).close();
        this.setState(dart.fn(() => {
          this[S$1._currentBottomSheet] = null;
        }, T$.VoidTovoid()));
        if (animationController.status != animation.AnimationStatus.dismissed) {
          this[S$1._dismissedBottomSheets][S.$add](bottomSheet$35get());
        }
        completer.complete();
      };
      dart.fn(_removeCurrentBottomSheet, T$.VoidTovoid());
      let entry = dart.test(isPersistent) ? null : new routes.LocalHistoryEntry.new({onRemove: dart.fn(() => {
          if (!removedEntry) {
            _removeCurrentBottomSheet();
          }
        }, T$.VoidTovoid())});
      bottomSheet$35set(new scaffold$._StandardBottomSheet.new({key: bottomSheetKey, animationController: animationController, enableDrag: !dart.test(isPersistent), onClosing: dart.fn(() => {
          if (this[S$1._currentBottomSheet] == null) {
            return;
          }
          if (!dart.equals(dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget], bottomSheet$35get())) dart.assertFailed(null, I[122], 2518, 16, "_currentBottomSheet!._widget == bottomSheet");
          if (!dart.test(isPersistent) && !removedEntry) {
            if (!(entry != null)) dart.assertFailed(null, I[122], 2520, 18, "entry != null");
            dart.nullCheck(entry).remove();
            removedEntry = true;
          }
        }, T$.VoidTovoid()), onDismissed: dart.fn(() => {
          if (dart.test(this[S$1._dismissedBottomSheets][S.$contains](bottomSheet$35get()))) {
            this.setState(dart.fn(() => {
              this[S$1._dismissedBottomSheets][S.$remove](bottomSheet$35get());
            }, T$.VoidTovoid()));
          }
        }, T$.VoidTovoid()), builder: builder, isPersistent: isPersistent, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, $creationLocationd_0dea112b090073317d4: C[2468] || CT.C2468}));
      if (!dart.test(isPersistent)) dart.nullCheck(routes.ModalRoute.of(T$.ObjectN(), this.context)).addLocalHistoryEntry(dart.nullCheck(entry));
      return new (scaffold$.PersistentBottomSheetController$(T)).__(bottomSheet$35get(), completer, entry != null ? dart.bind(entry, 'remove') : _removeCurrentBottomSheet, dart.fn(fn => {
        let t89;
        if (fn == null) dart.nullFailed(I[122], 2549, 21, "fn");
        t89 = bottomSheetKey.currentState;
        t89 == null ? null : t89.setState(fn);
      }, T$.FnTovoid()), !dart.test(isPersistent));
    }
    showBottomSheet(T, builder, opts) {
      let t89, t89$;
      if (builder == null) dart.nullFailed(I[122], 2632, 19, "builder");
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
      if (!dart.test(dart.fn(() => {
        if (this.widget.bottomSheet != null) {
          dart.throw(assertions.FlutterError.new("Scaffold.bottomSheet cannot be specified while a bottom sheet " + "displayed with showBottomSheet() is still visible.\n" + "Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet()."));
        }
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[122], 2639, 12, "() {\r\n      if (widget.bottomSheet != null) {\r\n        throw FlutterError(\r\n          'Scaffold.bottomSheet cannot be specified while a bottom sheet '\r\n          'displayed with showBottomSheet() is still visible.\\n'\r\n          'Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet().'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      if (!dart.test(debug.debugCheckHasMediaQuery(this.context))) dart.assertFailed(null, I[122], 2649, 12, "debugCheckHasMediaQuery(context)");
      this[S$1._closeCurrentBottomSheet]();
      let controller = (t89$ = (t89 = transitionAnimationController, t89 == null ? bottom_sheet.BottomSheet.createAnimationController(this) : t89), (() => {
        t89$.forward();
        return t89$;
      })());
      this.setState(dart.fn(() => {
        this[S$1._currentBottomSheet] = this[S$1._buildBottomSheet](T, builder, false, {animationController: controller, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior});
      }, T$.VoidTovoid()));
      return scaffold$.PersistentBottomSheetController$(T).as(dart.nullCheck(this[S$1._currentBottomSheet]));
    }
    get [S$1._floatingActionButtonMoveController]() {
      let t89;
      return dart.test(this[S$1.__ScaffoldState__floatingActionButtonMoveController_isSet]) ? (t89 = this[S$1.__ScaffoldState__floatingActionButtonMoveController], t89) : dart.throw(new _internal.LateError.fieldNI("_floatingActionButtonMoveController"));
    }
    set [S$1._floatingActionButtonMoveController](t89) {
      if (t89 == null) dart.nullFailed(I[122], 2668, 28, "null");
      this[S$1.__ScaffoldState__floatingActionButtonMoveController_isSet] = true;
      this[S$1.__ScaffoldState__floatingActionButtonMoveController] = t89;
    }
    get [S$1._floatingActionButtonAnimator]() {
      let t90;
      return dart.test(this[S$1.__ScaffoldState__floatingActionButtonAnimator_isSet]) ? (t90 = this[S$1.__ScaffoldState__floatingActionButtonAnimator], t90) : dart.throw(new _internal.LateError.fieldNI("_floatingActionButtonAnimator"));
    }
    set [S$1._floatingActionButtonAnimator](t90) {
      if (t90 == null) dart.nullFailed(I[122], 2669, 37, "null");
      this[S$1.__ScaffoldState__floatingActionButtonAnimator_isSet] = true;
      this[S$1.__ScaffoldState__floatingActionButtonAnimator] = t90;
    }
    get [S$1._floatingActionButtonVisibilityController]() {
      let t91;
      return dart.test(this[S$1.__ScaffoldState__floatingActionButtonVisibilityController_isSet]) ? (t91 = this[S$1.__ScaffoldState__floatingActionButtonVisibilityController], t91) : dart.throw(new _internal.LateError.fieldNI("_floatingActionButtonVisibilityController"));
    }
    set [S$1._floatingActionButtonVisibilityController](t91) {
      if (t91 == null) dart.nullFailed(I[122], 2673, 28, "null");
      this[S$1.__ScaffoldState__floatingActionButtonVisibilityController_isSet] = true;
      this[S$1.__ScaffoldState__floatingActionButtonVisibilityController] = t91;
    }
    get [S$1._floatingActionButtonVisibilityValue]() {
      return this[S$1._floatingActionButtonVisibilityController].value;
    }
    set [S$1._floatingActionButtonVisibilityValue](newValue) {
      if (newValue == null) dart.nullFailed(I[122], 2681, 51, "newValue");
      if (!(newValue != null)) dart.assertFailed(null, I[122], 2682, 12, "newValue != null");
      this[S$1._floatingActionButtonVisibilityController].value = newValue[S.$clamp](this[S$1._floatingActionButtonVisibilityController].lowerBound, this[S$1._floatingActionButtonVisibilityController].upperBound);
    }
    [S$1._showFloatingActionButton]() {
      return this[S$1._floatingActionButtonVisibilityController].forward();
    }
    [S$1._moveFloatingActionButton](newLocation) {
      if (newLocation == null) dart.nullFailed(I[122], 2695, 69, "newLocation");
      let previousLocation = this[S$1._floatingActionButtonLocation];
      let restartAnimationFrom = 0.0;
      if (dart.test(this[S$1._floatingActionButtonMoveController].isAnimating)) {
        previousLocation = new scaffold$._TransitionSnapshotFabLocation.new(dart.nullCheck(this[S$1._previousFloatingActionButtonLocation]), dart.nullCheck(this[S$1._floatingActionButtonLocation]), this[S$1._floatingActionButtonAnimator], this[S$1._floatingActionButtonMoveController].value);
        restartAnimationFrom = this[S$1._floatingActionButtonAnimator].getAnimationRestart(this[S$1._floatingActionButtonMoveController].value);
      }
      this.setState(dart.fn(() => {
        this[S$1._previousFloatingActionButtonLocation] = previousLocation;
        this[S$1._floatingActionButtonLocation] = newLocation;
      }, T$.VoidTovoid()));
      this[S$1._floatingActionButtonMoveController].forward({from: restartAnimationFrom});
    }
    [S$1._handleStatusBarTap]() {
      let _primaryScrollController = primary_scroll_controller.PrimaryScrollController.of(this.context);
      if (_primaryScrollController != null && dart.test(_primaryScrollController.hasClients)) {
        _primaryScrollController.animateTo(0.0, {duration: C[2481] || CT.C2481, curve: curves.Curves.linear});
      }
    }
    get [S$1._geometryNotifier]() {
      let t92;
      return dart.test(this[S$1.__ScaffoldState__geometryNotifier_isSet]) ? (t92 = this[S$1.__ScaffoldState__geometryNotifier], t92) : dart.throw(new _internal.LateError.fieldNI("_geometryNotifier"));
    }
    set [S$1._geometryNotifier](t92) {
      if (t92 == null) dart.nullFailed(I[122], 2733, 34, "null");
      this[S$1.__ScaffoldState__geometryNotifier_isSet] = true;
      this[S$1.__ScaffoldState__geometryNotifier] = t92;
    }
    get [S$1._resizeToAvoidBottomInset]() {
      let t93;
      t93 = this.widget.resizeToAvoidBottomInset;
      return t93 == null ? true : t93;
    }
    initState() {
      let t93, t93$;
      super.initState();
      this[S$1._geometryNotifier] = new scaffold$._ScaffoldGeometryNotifier.new(C[2482] || CT.C2482, this.context);
      this[S$1._floatingActionButtonLocation] = (t93 = this.widget.floatingActionButtonLocation, t93 == null ? scaffold$._kDefaultFloatingActionButtonLocation : t93);
      this[S$1._floatingActionButtonAnimator] = (t93$ = this.widget.floatingActionButtonAnimator, t93$ == null ? scaffold$._kDefaultFloatingActionButtonAnimator : t93$);
      this[S$1._previousFloatingActionButtonLocation] = this[S$1._floatingActionButtonLocation];
      this[S$1._floatingActionButtonMoveController] = new animation_controller.AnimationController.new({vsync: this, lowerBound: 0.0, upperBound: 1.0, value: 1.0, duration: floating_action_button_location.kFloatingActionButtonSegue['*'](2)});
      this[S$1._floatingActionButtonVisibilityController] = new animation_controller.AnimationController.new({duration: floating_action_button_location.kFloatingActionButtonSegue, vsync: this});
    }
    didUpdateWidget(oldWidget) {
      let t93, t93$;
      scaffold$.Scaffold.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[122], 2761, 33, "oldWidget");
      if (!dart.equals(this.widget.floatingActionButtonAnimator, oldWidget.floatingActionButtonAnimator)) {
        this[S$1._floatingActionButtonAnimator] = (t93 = this.widget.floatingActionButtonAnimator, t93 == null ? scaffold$._kDefaultFloatingActionButtonAnimator : t93);
      }
      if (!dart.equals(this.widget.floatingActionButtonLocation, oldWidget.floatingActionButtonLocation)) {
        this[S$1._moveFloatingActionButton]((t93$ = this.widget.floatingActionButtonLocation, t93$ == null ? scaffold$._kDefaultFloatingActionButtonLocation : t93$));
      }
      if (!dart.equals(this.widget.bottomSheet, oldWidget.bottomSheet)) {
        if (!dart.test(dart.fn(() => {
          let t93;
          if (this.widget.bottomSheet != null && (t93 = this[S$1._currentBottomSheet], t93 == null ? null : t93[S$1._isLocalHistoryEntry]) === true) {
            dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Scaffold.bottomSheet cannot be specified while a bottom sheet displayed " + "with showBottomSheet() is still visible."), new assertions.ErrorHint.new("Use the PersistentBottomSheetController " + "returned by showBottomSheet() to close the old bottom sheet before creating " + "a Scaffold with a (non null) bottomSheet.")])));
          }
          return true;
        }, T$.VoidTobool())())) dart.assertFailed(null, I[122], 2770, 14, "() {\r\n        if (widget.bottomSheet != null && _currentBottomSheet?._isLocalHistoryEntry == true) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary(\r\n              'Scaffold.bottomSheet cannot be specified while a bottom sheet displayed '\r\n              'with showBottomSheet() is still visible.'\r\n            ),\r\n            ErrorHint(\r\n              'Use the PersistentBottomSheetController '\r\n              'returned by showBottomSheet() to close the old bottom sheet before creating '\r\n              'a Scaffold with a (non null) bottomSheet.'\r\n            ),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        if (this.widget.bottomSheet == null) {
          this[S$1._closeCurrentBottomSheet]();
        } else if (this.widget.bottomSheet != null && oldWidget.bottomSheet == null) {
          this[S$1._maybeBuildPersistentBottomSheet]();
        } else {
          this[S$1._updatePersistentBottomSheet]();
        }
      }
      super.didUpdateWidget(oldWidget);
    }
    didChangeDependencies() {
      let t93, t93$;
      let _currentScaffoldMessenger = scaffold$.ScaffoldMessenger.maybeOf(this.context);
      if (this[S$1._scaffoldMessenger] != null && (_currentScaffoldMessenger == null || !dart.equals(this[S$1._scaffoldMessenger], _currentScaffoldMessenger))) {
        t93 = this[S$1._scaffoldMessenger];
        t93 == null ? null : t93[S$1._unregister](this);
      }
      this[S$1._scaffoldMessenger] = _currentScaffoldMessenger;
      t93$ = this[S$1._scaffoldMessenger];
      t93$ == null ? null : t93$[S$1._register](this);
      let mediaQuery = media_query.MediaQuery.of(this.context);
      if (this[S$1._accessibleNavigation] === true && !dart.test(mediaQuery.accessibleNavigation) && this[S$1._snackBarTimer] != null && !dart.test(dart.nullCheck(this[S$1._snackBarTimer]).isActive)) {
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
      }
      this[S$1._accessibleNavigation] = mediaQuery.accessibleNavigation;
      this[S$1._maybeBuildPersistentBottomSheet]();
      super.didChangeDependencies();
    }
    dispose() {
      let t93, t93$, t93$0;
      t93 = this[S$1._snackBarController];
      t93 == null ? null : t93.dispose();
      t93$ = this[S$1._snackBarTimer];
      t93$ == null ? null : t93$.cancel();
      this[S$1._snackBarTimer] = null;
      this[S$1._geometryNotifier].dispose();
      for (let bottomSheet of this[S$1._dismissedBottomSheets]) {
        bottomSheet.animationController.dispose();
      }
      if (this[S$1._currentBottomSheet] != null) {
        dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget].animationController.dispose();
      }
      this[S$1._floatingActionButtonMoveController].dispose();
      this[S$1._floatingActionButtonVisibilityController].dispose();
      t93$0 = this[S$1._scaffoldMessenger];
      t93$0 == null ? null : t93$0[S$1._unregister](this);
      super.dispose();
    }
    [S$1._addIfNonNull](children, child, childId, opts) {
      if (children == null) dart.nullFailed(I[122], 2850, 20, "children");
      if (childId == null) dart.nullFailed(I[122], 2852, 12, "childId");
      let removeLeftPadding = opts && 'removeLeftPadding' in opts ? opts.removeLeftPadding : null;
      if (removeLeftPadding == null) dart.nullFailed(I[122], 2853, 19, "removeLeftPadding");
      let removeTopPadding = opts && 'removeTopPadding' in opts ? opts.removeTopPadding : null;
      if (removeTopPadding == null) dart.nullFailed(I[122], 2854, 19, "removeTopPadding");
      let removeRightPadding = opts && 'removeRightPadding' in opts ? opts.removeRightPadding : null;
      if (removeRightPadding == null) dart.nullFailed(I[122], 2855, 19, "removeRightPadding");
      let removeBottomPadding = opts && 'removeBottomPadding' in opts ? opts.removeBottomPadding : null;
      if (removeBottomPadding == null) dart.nullFailed(I[122], 2856, 19, "removeBottomPadding");
      let removeBottomInset = opts && 'removeBottomInset' in opts ? opts.removeBottomInset : false;
      if (removeBottomInset == null) dart.nullFailed(I[122], 2857, 10, "removeBottomInset");
      let maintainBottomViewPadding = opts && 'maintainBottomViewPadding' in opts ? opts.maintainBottomViewPadding : false;
      if (maintainBottomViewPadding == null) dart.nullFailed(I[122], 2858, 10, "maintainBottomViewPadding");
      let data = media_query.MediaQuery.of(this.context).removePadding({removeLeft: removeLeftPadding, removeTop: removeTopPadding, removeRight: removeRightPadding, removeBottom: removeBottomPadding});
      if (dart.test(removeBottomInset)) data = data.removeViewInsets({removeBottom: true});
      if (dart.test(maintainBottomViewPadding) && data.viewInsets.bottom !== 0.0) {
        data = data.copyWith({padding: data.padding.copyWith({bottom: data.viewPadding.bottom})});
      }
      if (child != null) {
        children[S.$add](new basic.LayoutId.new({id: childId, child: new media_query.MediaQuery.new({data: data, child: child, $creationLocationd_0dea112b090073317d4: C[2483] || CT.C2483}), $creationLocationd_0dea112b090073317d4: C[2487] || CT.C2487}));
      }
    }
    [S$1._buildEndDrawer](children, textDirection) {
      if (children == null) dart.nullFailed(I[122], 2885, 39, "children");
      if (textDirection == null) dart.nullFailed(I[122], 2885, 63, "textDirection");
      if (this.widget.endDrawer != null) {
        if (!dart.test(this.hasEndDrawer)) dart.assertFailed(null, I[122], 2887, 14, "hasEndDrawer");
        this[S$1._addIfNonNull](children, new drawer.DrawerController.new({key: this[S$1._endDrawerKey], alignment: drawer.DrawerAlignment.end, child: dart.nullCheck(this.widget.endDrawer), drawerCallback: dart.bind(this, S$1._endDrawerOpenedCallback), dragStartBehavior: this.widget.drawerDragStartBehavior, scrimColor: this.widget.drawerScrimColor, edgeDragWidth: this.widget.drawerEdgeDragWidth, enableOpenDragGesture: this.widget.endDrawerEnableOpenDragGesture, isDrawerOpen: this[S$1._endDrawerOpened].value, $creationLocationd_0dea112b090073317d4: C[2491] || CT.C2491}), scaffold$._ScaffoldSlot.endDrawer, {removeLeftPadding: textDirection == ui.TextDirection.ltr, removeTopPadding: false, removeRightPadding: textDirection == ui.TextDirection.rtl, removeBottomPadding: false});
      }
    }
    [S$1._buildDrawer$1](children, textDirection) {
      if (children == null) dart.nullFailed(I[122], 2911, 36, "children");
      if (textDirection == null) dart.nullFailed(I[122], 2911, 60, "textDirection");
      if (this.widget.drawer != null) {
        if (!dart.test(this.hasDrawer)) dart.assertFailed(null, I[122], 2913, 14, "hasDrawer");
        this[S$1._addIfNonNull](children, new drawer.DrawerController.new({key: this[S$1._drawerKey$1], alignment: drawer.DrawerAlignment.start, child: dart.nullCheck(this.widget.drawer), drawerCallback: dart.bind(this, S$1._drawerOpenedCallback), dragStartBehavior: this.widget.drawerDragStartBehavior, scrimColor: this.widget.drawerScrimColor, edgeDragWidth: this.widget.drawerEdgeDragWidth, enableOpenDragGesture: this.widget.drawerEnableOpenDragGesture, isDrawerOpen: this[S$1._drawerOpened].value, $creationLocationd_0dea112b090073317d4: C[2502] || CT.C2502}), scaffold$._ScaffoldSlot.drawer, {removeLeftPadding: textDirection == ui.TextDirection.rtl, removeTopPadding: false, removeRightPadding: textDirection == ui.TextDirection.ltr, removeBottomPadding: false});
      }
    }
    showBodyScrim(value, opacity) {
      if (value == null) dart.nullFailed(I[122], 2943, 27, "value");
      if (opacity == null) dart.nullFailed(I[122], 2943, 41, "opacity");
      if (!(value != null)) dart.assertFailed(null, I[122], 2944, 12, "value != null");
      if (this[S$1._showBodyScrim] == value && this[S$1._bodyScrimColor].opacity == opacity) {
        return;
      }
      this.setState(dart.fn(() => {
        this[S$1._showBodyScrim] = value;
        this[S$1._bodyScrimColor] = colors$.Colors.black.withOpacity(opacity);
      }, T$.VoidTovoid()));
    }
    build(context) {
      let t93, t94, t94$, t94$0, t94$1, t94$2, t94$3, t94$4, t94$5;
      if (context == null) dart.nullFailed(I[122], 2955, 29, "context");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[122], 2956, 12, "debugCheckHasMediaQuery(context)");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[122], 2957, 12, "debugCheckHasDirectionality(context)");
      let mediaQuery = media_query.MediaQuery.of(context);
      let themeData = theme$.Theme.of(context);
      let textDirection = basic.Directionality.of(context);
      this[S$1._accessibleNavigation] = mediaQuery.accessibleNavigation;
      if (dart.test(this[S$1._snackBars][S$.$isNotEmpty])) {
        let route = routes.ModalRoute.of(T$.ObjectN(), context);
        if (route == null || dart.test(route.isCurrent)) {
          if (dart.test(dart.nullCheck(this[S$1._snackBarController]).isCompleted) && this[S$1._snackBarTimer] == null) {
            let snackBar = this[S$1._snackBars][S$1.$first][S$1._widget];
            this[S$1._snackBarTimer] = async.Timer.new(snackBar.duration, dart.fn(() => {
              if (!(dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.forward || dart.nullCheck(this[S$1._snackBarController]).status == animation.AnimationStatus.completed)) dart.assertFailed(null, I[122], 2970, 20, "_snackBarController!.status == AnimationStatus.forward ||\r\n                   _snackBarController!.status == AnimationStatus.completed");
              let mediaQuery = media_query.MediaQuery.of(context);
              if (dart.test(mediaQuery.accessibleNavigation) && snackBar.action != null) return;
              this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
            }, T$.VoidTovoid()));
          }
        } else {
          t93 = this[S$1._snackBarTimer];
          t93 == null ? null : t93.cancel();
          this[S$1._snackBarTimer] = null;
        }
      }
      let children = T$.JSArrayOfLayoutId().of([]);
      this[S$1._addIfNonNull](children, this.widget.body == null ? null : new scaffold$._BodyBuilder.new({extendBody: this.widget.extendBody, extendBodyBehindAppBar: this.widget.extendBodyBehindAppBar, body: dart.nullCheck(this.widget.body), $creationLocationd_0dea112b090073317d4: C[2513] || CT.C2513}), scaffold$._ScaffoldSlot.body, {removeLeftPadding: false, removeTopPadding: this.widget.appBar != null, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null || this.widget.persistentFooterButtons != null, removeBottomInset: this[S$1._resizeToAvoidBottomInset]});
      if (dart.test(this[S$1._showBodyScrim])) {
        this[S$1._addIfNonNull](children, new modal_barrier.ModalBarrier.new({dismissible: false, color: this[S$1._bodyScrimColor], $creationLocationd_0dea112b090073317d4: C[2518] || CT.C2518}), scaffold$._ScaffoldSlot.bodyScrim, {removeLeftPadding: true, removeTopPadding: true, removeRightPadding: true, removeBottomPadding: true});
      }
      if (this.widget.appBar != null) {
        let topPadding = dart.test(this.widget.primary) ? mediaQuery.padding.top : 0.0;
        this[S$1._appBarMaxHeight] = dart.notNull(dart.nullCheck(this.widget.appBar).preferredSize.height) + dart.notNull(topPadding);
        if (!(dart.nullCheck(this[S$1._appBarMaxHeight]) >= 0.0 && dart.nullCheck(this[S$1._appBarMaxHeight])[S$1.$isFinite])) dart.assertFailed(null, I[122], 3018, 14, "_appBarMaxHeight! >= 0.0 && _appBarMaxHeight!.isFinite");
        this[S$1._addIfNonNull](children, new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({maxHeight: dart.nullCheck(this[S$1._appBarMaxHeight])}), child: flexible_space_bar.FlexibleSpaceBar.createSettings({currentExtent: dart.nullCheck(this[S$1._appBarMaxHeight]), child: dart.nullCheck(this.widget.appBar)}), $creationLocationd_0dea112b090073317d4: C[2522] || CT.C2522}), scaffold$._ScaffoldSlot.appBar, {removeLeftPadding: false, removeTopPadding: false, removeRightPadding: false, removeBottomPadding: true});
      }
      let isSnackBarFloating = false;
      let snackBarWidth = null;
      if (!(dart.test(this[S$1._snackBars][S$1.$isEmpty]) || this[S$1._messengerSnackBar] == null)) dart.assertFailed("Only one API should be used to manage SnackBars. The ScaffoldMessenger is " + "the preferred API instead of the Scaffold methods.", I[122], 3043, 7, "_snackBars.isEmpty || _messengerSnackBar == null");
      if (this[S$1._currentBottomSheet] != null || dart.test(this[S$1._dismissedBottomSheets][S$.$isNotEmpty])) {
        let stack = new basic.Stack.new({alignment: alignment.Alignment.bottomCenter, children: (() => {
            let t93 = T$.ListOfWidget().of(this[S$1._dismissedBottomSheets]);
            if (this[S$1._currentBottomSheet] != null) t93[S.$add](dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget]);
            return t93;
          })(), $creationLocationd_0dea112b090073317d4: C[2526] || CT.C2526});
        this[S$1._addIfNonNull](children, stack, scaffold$._ScaffoldSlot.bottomSheet, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this[S$1._resizeToAvoidBottomInset]});
      }
      if (this[S$1._messengerSnackBar] != null) {
        let snackBarBehavior = (t94$0 = (t94$ = (t94 = this[S$1._messengerSnackBar], t94 == null ? null : t94[S$1._widget].behavior), t94$ == null ? themeData.snackBarTheme.behavior : t94$), t94$0 == null ? snack_bar_theme.SnackBarBehavior.fixed : t94$0);
        isSnackBarFloating = snackBarBehavior == snack_bar_theme.SnackBarBehavior.floating;
        snackBarWidth = (t94$1 = this[S$1._messengerSnackBar], t94$1 == null ? null : t94$1[S$1._widget].width);
        this[S$1._addIfNonNull](children, (t94$2 = this[S$1._messengerSnackBar], t94$2 == null ? null : t94$2[S$1._widget]), scaffold$._ScaffoldSlot.snackBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null || this.widget.persistentFooterButtons != null, maintainBottomViewPadding: !dart.test(this[S$1._resizeToAvoidBottomInset])});
      }
      if (dart.test(this[S$1._snackBars][S$.$isNotEmpty])) {
        let snackBarBehavior = (t94$4 = (t94$3 = this[S$1._snackBars][S$1.$first][S$1._widget].behavior, t94$3 == null ? themeData.snackBarTheme.behavior : t94$3), t94$4 == null ? snack_bar_theme.SnackBarBehavior.fixed : t94$4);
        isSnackBarFloating = snackBarBehavior == snack_bar_theme.SnackBarBehavior.floating;
        snackBarWidth = this[S$1._snackBars][S$1.$first][S$1._widget].width;
        this[S$1._addIfNonNull](children, this[S$1._snackBars][S$1.$first][S$1._widget], scaffold$._ScaffoldSlot.snackBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null || this.widget.persistentFooterButtons != null, maintainBottomViewPadding: !dart.test(this[S$1._resizeToAvoidBottomInset])});
      }
      if (this.widget.persistentFooterButtons != null) {
        this[S$1._addIfNonNull](children, new container.Container.new({decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({top: divider.Divider.createBorderSide(context, {width: 1.0})})}), child: new safe_area.SafeArea.new({top: false, child: new button_bar.ButtonBar.new({children: dart.nullCheck(this.widget.persistentFooterButtons), $creationLocationd_0dea112b090073317d4: C[2530] || CT.C2530}), $creationLocationd_0dea112b090073317d4: C[2533] || CT.C2533}), $creationLocationd_0dea112b090073317d4: C[2537] || CT.C2537}), scaffold$._ScaffoldSlot.persistentFooter, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: false, maintainBottomViewPadding: !dart.test(this[S$1._resizeToAvoidBottomInset])});
      }
      if (this.widget.bottomNavigationBar != null) {
        this[S$1._addIfNonNull](children, this.widget.bottomNavigationBar, scaffold$._ScaffoldSlot.bottomNavigationBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: false, maintainBottomViewPadding: !dart.test(this[S$1._resizeToAvoidBottomInset])});
      }
      this[S$1._addIfNonNull](children, new scaffold$._FloatingActionButtonTransition.new({child: this.widget.floatingActionButton, fabMoveAnimation: this[S$1._floatingActionButtonMoveController], fabMotionAnimator: this[S$1._floatingActionButtonAnimator], geometryNotifier: this[S$1._geometryNotifier], currentController: this[S$1._floatingActionButtonVisibilityController], $creationLocationd_0dea112b090073317d4: C[2541] || CT.C2541}), scaffold$._ScaffoldSlot.floatingActionButton, {removeLeftPadding: true, removeTopPadding: true, removeRightPadding: true, removeBottomPadding: true});
      switch (themeData.platform) {
        case C[48] || CT.C48:
        case C[49] || CT.C49:
        {
          this[S$1._addIfNonNull](children, new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onTap: dart.bind(this, S$1._handleStatusBarTap), excludeFromSemantics: true, $creationLocationd_0dea112b090073317d4: C[2548] || CT.C2548}), scaffold$._ScaffoldSlot.statusBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: true});
          break;
        }
        case C[44] || CT.C44:
        case C[45] || CT.C45:
        case C[46] || CT.C46:
        case C[47] || CT.C47:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (dart.test(this[S$1._endDrawerOpened].value)) {
        this[S$1._buildDrawer$1](children, textDirection);
        this[S$1._buildEndDrawer](children, textDirection);
      } else {
        this[S$1._buildEndDrawer](children, textDirection);
        this[S$1._buildDrawer$1](children, textDirection);
      }
      let minInsets = mediaQuery.padding.copyWith({bottom: dart.test(this[S$1._resizeToAvoidBottomInset]) ? mediaQuery.viewInsets.bottom : 0.0});
      let minViewPadding = mediaQuery.viewPadding.copyWith({bottom: dart.test(this[S$1._resizeToAvoidBottomInset]) && mediaQuery.viewInsets.bottom !== 0.0 ? 0.0 : null});
      let _extendBody = dart.notNull(minInsets.bottom) <= 0 && dart.test(this.widget.extendBody);
      return new scaffold$._ScaffoldScope.new({hasDrawer: this.hasDrawer, geometryNotifier: this[S$1._geometryNotifier], child: new material.Material.new({color: (t94$5 = this.widget.backgroundColor, t94$5 == null ? themeData.scaffoldBackgroundColor : t94$5), child: new transitions.AnimatedBuilder.new({animation: this[S$1._floatingActionButtonMoveController], builder: dart.fn((context, child) => {
              if (context == null) dart.nullFailed(I[122], 3214, 103, "context");
              return new basic.CustomMultiChildLayout.new({children: children, delegate: new scaffold$._ScaffoldLayout.new({extendBody: _extendBody, extendBodyBehindAppBar: this.widget.extendBodyBehindAppBar, minInsets: minInsets, minViewPadding: minViewPadding, currentFloatingActionButtonLocation: dart.nullCheck(this[S$1._floatingActionButtonLocation]), floatingActionButtonMoveAnimationProgress: this[S$1._floatingActionButtonMoveController].value, floatingActionButtonMotionAnimator: this[S$1._floatingActionButtonAnimator], geometryNotifier: this[S$1._geometryNotifier], previousFloatingActionButtonLocation: dart.nullCheck(this[S$1._previousFloatingActionButtonLocation]), textDirection: textDirection, isSnackBarFloating: isSnackBarFloating, snackBarWidth: snackBarWidth}), $creationLocationd_0dea112b090073317d4: C[2553] || CT.C2553});
            }, T$.BuildContextAndWidgetNToCustomMultiChildLayout()), $creationLocationd_0dea112b090073317d4: C[2557] || CT.C2557}), $creationLocationd_0dea112b090073317d4: C[2561] || CT.C2561}), $creationLocationd_0dea112b090073317d4: C[2565] || CT.C2565});
    }
  };
  (scaffold$.ScaffoldState.new = function() {
    this[S$1._drawerKey$1] = T$.GlobalKeyOfDrawerControllerState().new();
    this[S$1._endDrawerKey] = T$.GlobalKeyOfDrawerControllerState().new();
    this[S$1._appBarMaxHeight] = null;
    this[S$1._drawerOpened] = new restoration_properties.RestorableBool.new(false);
    this[S$1._endDrawerOpened] = new restoration_properties.RestorableBool.new(false);
    this[S$1._snackBars] = new (T$.ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()).new();
    this[S$1._snackBarController] = null;
    this[S$1._snackBarTimer] = null;
    this[S$1._accessibleNavigation] = null;
    this[S$1._scaffoldMessenger] = null;
    this[S$1._messengerSnackBar] = null;
    this[S$1._dismissedBottomSheets] = T$.JSArrayOf_StandardBottomSheet().of([]);
    this[S$1._currentBottomSheet] = null;
    this[S$1._currentBottomSheetKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    this[S$1.__ScaffoldState__floatingActionButtonMoveController] = null;
    this[S$1.__ScaffoldState__floatingActionButtonMoveController_isSet] = false;
    this[S$1.__ScaffoldState__floatingActionButtonAnimator] = null;
    this[S$1.__ScaffoldState__floatingActionButtonAnimator_isSet] = false;
    this[S$1._previousFloatingActionButtonLocation] = null;
    this[S$1._floatingActionButtonLocation] = null;
    this[S$1.__ScaffoldState__floatingActionButtonVisibilityController] = null;
    this[S$1.__ScaffoldState__floatingActionButtonVisibilityController_isSet] = false;
    this[S$1.__ScaffoldState__geometryNotifier] = null;
    this[S$1.__ScaffoldState__geometryNotifier_isSet] = false;
    this[S$1._showBodyScrim] = false;
    this[S$1._bodyScrimColor] = colors$.Colors.black;
    scaffold$.ScaffoldState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$.ScaffoldState.prototype;
  dart.addTypeTests(scaffold$.ScaffoldState);
  dart.addTypeCaches(scaffold$.ScaffoldState);
  dart.setMethodSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldState.__proto__),
    restoreState: dart.fnType(dart.void, [dart.nullable(restoration$.RestorationBucket), core.bool]),
    [S$1._drawerOpenedCallback]: dart.fnType(dart.void, [core.bool]),
    [S$1._endDrawerOpenedCallback]: dart.fnType(dart.void, [core.bool]),
    openDrawer: dart.fnType(dart.void, []),
    openEndDrawer: dart.fnType(dart.void, []),
    showSnackBar: dart.fnType(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason), [snack_bar.SnackBar]),
    [S$1._handleSnackBarStatusChange]: dart.fnType(dart.void, [animation.AnimationStatus]),
    removeCurrentSnackBar: dart.fnType(dart.void, [], {reason: snack_bar.SnackBarClosedReason}, {}),
    hideCurrentSnackBar: dart.fnType(dart.void, [], {reason: snack_bar.SnackBarClosedReason}, {}),
    [S$1._updateSnackBar]: dart.fnType(dart.void, []),
    [S$1._maybeBuildPersistentBottomSheet]: dart.fnType(dart.void, []),
    [S$1._closeCurrentBottomSheet]: dart.fnType(dart.void, []),
    [S$1._updatePersistentBottomSheet]: dart.fnType(dart.void, []),
    [S$1._buildBottomSheet]: dart.gFnType(T => [scaffold$.PersistentBottomSheetController$(T), [dart.fnType(framework.Widget, [framework.BuildContext]), core.bool], {backgroundColor: dart.nullable(ui.Color), clipBehavior: dart.nullable(ui.Clip), elevation: dart.nullable(core.double), shape: dart.nullable(borders.ShapeBorder)}, {animationController: animation_controller.AnimationController}], T => [dart.nullable(core.Object)]),
    showBottomSheet: dart.gFnType(T => [scaffold$.PersistentBottomSheetController$(T), [dart.fnType(framework.Widget, [framework.BuildContext])], {backgroundColor: dart.nullable(ui.Color), clipBehavior: dart.nullable(ui.Clip), elevation: dart.nullable(core.double), shape: dart.nullable(borders.ShapeBorder), transitionAnimationController: dart.nullable(animation_controller.AnimationController)}, {}], T => [dart.nullable(core.Object)]),
    [S$1._showFloatingActionButton]: dart.fnType(ticker.TickerFuture, []),
    [S$1._moveFloatingActionButton]: dart.fnType(dart.void, [floating_action_button_location.FloatingActionButtonLocation]),
    [S$1._handleStatusBarTap]: dart.fnType(dart.void, []),
    [S$1._addIfNonNull]: dart.fnType(dart.void, [core.List$(basic.LayoutId), dart.nullable(framework.Widget), core.Object], {maintainBottomViewPadding: core.bool, removeBottomInset: core.bool}, {removeBottomPadding: core.bool, removeLeftPadding: core.bool, removeRightPadding: core.bool, removeTopPadding: core.bool}),
    [S$1._buildEndDrawer]: dart.fnType(dart.void, [core.List$(basic.LayoutId), ui.TextDirection]),
    [S$1._buildDrawer$1]: dart.fnType(dart.void, [core.List$(basic.LayoutId), ui.TextDirection]),
    showBodyScrim: dart.fnType(dart.void, [core.bool, core.double]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getGetters(scaffold$.ScaffoldState.__proto__),
    restorationId: dart.nullable(core.String),
    hasAppBar: core.bool,
    hasDrawer: core.bool,
    hasEndDrawer: core.bool,
    hasFloatingActionButton: core.bool,
    appBarMaxHeight: dart.nullable(core.double),
    isDrawerOpen: core.bool,
    isEndDrawerOpen: core.bool,
    [S$1._floatingActionButtonMoveController]: animation_controller.AnimationController,
    [S$1._floatingActionButtonAnimator]: floating_action_button_location.FloatingActionButtonAnimator,
    [S$1._floatingActionButtonVisibilityController]: animation_controller.AnimationController,
    [S$1._floatingActionButtonVisibilityValue]: core.double,
    [S$1._geometryNotifier]: scaffold$._ScaffoldGeometryNotifier,
    [S$1._resizeToAvoidBottomInset]: core.bool
  }));
  dart.setSetterSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getSetters(scaffold$.ScaffoldState.__proto__),
    [S$1._floatingActionButtonMoveController]: animation_controller.AnimationController,
    [S$1._floatingActionButtonAnimator]: floating_action_button_location.FloatingActionButtonAnimator,
    [S$1._floatingActionButtonVisibilityController]: animation_controller.AnimationController,
    [S$1._floatingActionButtonVisibilityValue]: core.double,
    [S$1._geometryNotifier]: scaffold$._ScaffoldGeometryNotifier
  }));
  dart.setLibraryUri(scaffold$.ScaffoldState, I[123]);
  dart.setFieldSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldState.__proto__),
    [S$1._drawerKey$1]: dart.finalFieldType(framework.GlobalKey$(drawer.DrawerControllerState)),
    [S$1._endDrawerKey]: dart.finalFieldType(framework.GlobalKey$(drawer.DrawerControllerState)),
    [S$1._appBarMaxHeight]: dart.fieldType(dart.nullable(core.double)),
    [S$1._drawerOpened]: dart.finalFieldType(restoration_properties.RestorableBool),
    [S$1._endDrawerOpened]: dart.finalFieldType(restoration_properties.RestorableBool),
    [S$1._snackBars]: dart.finalFieldType(collection.Queue$(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason))),
    [S$1._snackBarController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1._snackBarTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$1._accessibleNavigation]: dart.fieldType(dart.nullable(core.bool)),
    [S$1._scaffoldMessenger]: dart.fieldType(dart.nullable(scaffold$.ScaffoldMessengerState)),
    [S$1._messengerSnackBar]: dart.fieldType(dart.nullable(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason))),
    [S$1._dismissedBottomSheets]: dart.finalFieldType(core.List$(scaffold$._StandardBottomSheet)),
    [S$1._currentBottomSheet]: dart.fieldType(dart.nullable(scaffold$.PersistentBottomSheetController)),
    [S$1._currentBottomSheetKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S$1.__ScaffoldState__floatingActionButtonMoveController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1.__ScaffoldState__floatingActionButtonMoveController_isSet]: dart.fieldType(core.bool),
    [S$1.__ScaffoldState__floatingActionButtonAnimator]: dart.fieldType(dart.nullable(floating_action_button_location.FloatingActionButtonAnimator)),
    [S$1.__ScaffoldState__floatingActionButtonAnimator_isSet]: dart.fieldType(core.bool),
    [S$1._previousFloatingActionButtonLocation]: dart.fieldType(dart.nullable(floating_action_button_location.FloatingActionButtonLocation)),
    [S$1._floatingActionButtonLocation]: dart.fieldType(dart.nullable(floating_action_button_location.FloatingActionButtonLocation)),
    [S$1.__ScaffoldState__floatingActionButtonVisibilityController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1.__ScaffoldState__floatingActionButtonVisibilityController_isSet]: dart.fieldType(core.bool),
    [S$1.__ScaffoldState__geometryNotifier]: dart.fieldType(dart.nullable(scaffold$._ScaffoldGeometryNotifier)),
    [S$1.__ScaffoldState__geometryNotifier_isSet]: dart.fieldType(core.bool),
    [S$1._showBodyScrim]: dart.fieldType(core.bool),
    [S$1._bodyScrimColor]: dart.fieldType(ui.Color)
  }));
  const _is_ScaffoldFeatureController_default = Symbol('_is_ScaffoldFeatureController_default');
  scaffold$.ScaffoldFeatureController$ = dart.generic((T, U) => {
    class ScaffoldFeatureController extends core.Object {
      get [S$1._widget]() {
        return this[S$1._widget$1];
      }
      set [S$1._widget](value) {
        super[S$1._widget] = value;
      }
      get [S$1._completer]() {
        return this[S$1._completer$1];
      }
      set [S$1._completer](value) {
        super[S$1._completer] = value;
      }
      get close() {
        return this[S$1.close];
      }
      set close(value) {
        super.close = value;
      }
      get setState() {
        return this[S$1.setState];
      }
      set setState(value) {
        super.setState = value;
      }
      get closed() {
        return this[S$1._completer].future;
      }
    }
    (ScaffoldFeatureController.__ = function(_widget, _completer, close, setState) {
      if (_widget == null) dart.nullFailed(I[122], 3243, 42, "_widget");
      if (_completer == null) dart.nullFailed(I[122], 3243, 56, "_completer");
      if (close == null) dart.nullFailed(I[122], 3243, 73, "close");
      this[S$1._widget$1] = _widget;
      this[S$1._completer$1] = _completer;
      this[S$1.close] = close;
      this[S$1.setState] = setState;
      ;
    }).prototype = ScaffoldFeatureController.prototype;
    dart.addTypeTests(ScaffoldFeatureController);
    ScaffoldFeatureController.prototype[_is_ScaffoldFeatureController_default] = true;
    dart.addTypeCaches(ScaffoldFeatureController);
    dart.setGetterSignature(ScaffoldFeatureController, () => ({
      __proto__: dart.getGetters(ScaffoldFeatureController.__proto__),
      closed: async.Future$(U)
    }));
    dart.setLibraryUri(ScaffoldFeatureController, I[123]);
    dart.setFieldSignature(ScaffoldFeatureController, () => ({
      __proto__: dart.getFields(ScaffoldFeatureController.__proto__),
      [S$1._widget]: dart.finalFieldType(T),
      [S$1._completer]: dart.finalFieldType(async.Completer$(U)),
      close: dart.finalFieldType(dart.fnType(dart.void, [])),
      setState: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.fnType(dart.void, [])])))
    }));
    return ScaffoldFeatureController;
  });
  scaffold$.ScaffoldFeatureController = scaffold$.ScaffoldFeatureController$();
  dart.addTypeTests(scaffold$.ScaffoldFeatureController, _is_ScaffoldFeatureController_default);
  scaffold$._BottomSheetSuspendedCurve = class _BottomSheetSuspendedCurve extends curves.ParametricCurve$(core.double) {
    get startingPoint() {
      return this[S$1.startingPoint$1];
    }
    set startingPoint(value) {
      super.startingPoint = value;
    }
    get curve() {
      return this[S$1.curve$1];
    }
    set curve(value) {
      super.curve = value;
    }
    transform(t) {
      if (t == null) dart.nullFailed(I[122], 3292, 27, "t");
      if (!(dart.notNull(t) >= 0.0 && dart.notNull(t) <= 1.0)) dart.assertFailed(null, I[122], 3293, 12, "t >= 0.0 && t <= 1.0");
      if (!(dart.notNull(this.startingPoint) >= 0.0 && dart.notNull(this.startingPoint) <= 1.0)) dart.assertFailed(null, I[122], 3294, 12, "startingPoint >= 0.0 && startingPoint <= 1.0");
      if (dart.notNull(t) < dart.notNull(this.startingPoint)) {
        return t;
      }
      if (t === 1.0) {
        return t;
      }
      let curveProgress = (dart.notNull(t) - dart.notNull(this.startingPoint)) / (1 - dart.notNull(this.startingPoint));
      let transformed = this.curve.transform(curveProgress);
      return dart.nullCheck(ui.lerpDouble(this.startingPoint, 1, transformed));
    }
    toString() {
      return dart.str(diagnostics.describeIdentity(this)) + "(" + dart.str(this.startingPoint) + ", " + dart.str(this.curve) + ")";
    }
  };
  (scaffold$._BottomSheetSuspendedCurve.new = function(startingPoint, opts) {
    if (startingPoint == null) dart.nullFailed(I[122], 3278, 12, "startingPoint");
    let curve = opts && 'curve' in opts ? opts.curve : C[2399] || CT.C2399;
    if (curve == null) dart.nullFailed(I[122], 3279, 14, "curve");
    this[S$1.startingPoint$1] = startingPoint;
    this[S$1.curve$1] = curve;
    if (!(startingPoint != null)) dart.assertFailed(null, I[122], 3280, 19, "startingPoint != null");
    if (!(curve != null)) dart.assertFailed(null, I[122], 3281, 16, "curve != null");
    scaffold$._BottomSheetSuspendedCurve.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._BottomSheetSuspendedCurve.prototype;
  dart.addTypeTests(scaffold$._BottomSheetSuspendedCurve);
  dart.addTypeCaches(scaffold$._BottomSheetSuspendedCurve);
  dart.setLibraryUri(scaffold$._BottomSheetSuspendedCurve, I[123]);
  dart.setFieldSignature(scaffold$._BottomSheetSuspendedCurve, () => ({
    __proto__: dart.getFields(scaffold$._BottomSheetSuspendedCurve.__proto__),
    startingPoint: dart.finalFieldType(core.double),
    curve: dart.finalFieldType(curves.Curve)
  }));
  dart.defineExtensionMethods(scaffold$._BottomSheetSuspendedCurve, ['toString']);
  scaffold$._StandardBottomSheet = class _StandardBottomSheet extends framework.StatefulWidget {
    get animationController() {
      return this[S$1.animationController$1];
    }
    set animationController(value) {
      super.animationController = value;
    }
    get enableDrag() {
      return this[S$1.enableDrag$2];
    }
    set enableDrag(value) {
      super.enableDrag = value;
    }
    get onClosing() {
      return this[S$1.onClosing$1];
    }
    set onClosing(value) {
      super.onClosing = value;
    }
    get onDismissed() {
      return this[S$1.onDismissed];
    }
    set onDismissed(value) {
      super.onDismissed = value;
    }
    get builder() {
      return this[S$1.builder$1];
    }
    set builder(value) {
      super.builder = value;
    }
    get isPersistent() {
      return this[S$1.isPersistent];
    }
    set isPersistent(value) {
      super.isPersistent = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$20];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$1.elevation$23];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$1.shape$21];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S$1.clipBehavior$11];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createState() {
      return new scaffold$._StandardBottomSheetState.new();
    }
  };
  (scaffold$._StandardBottomSheet.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animationController = opts && 'animationController' in opts ? opts.animationController : null;
    if (animationController == null) dart.nullFailed(I[122], 3318, 19, "animationController");
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    if (enableDrag == null) dart.nullFailed(I[122], 3319, 10, "enableDrag");
    let onClosing = opts && 'onClosing' in opts ? opts.onClosing : null;
    let onDismissed = opts && 'onDismissed' in opts ? opts.onDismissed : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[122], 3322, 19, "builder");
    let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : false;
    if (isPersistent == null) dart.nullFailed(I[122], 3323, 10, "isPersistent");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.animationController$1] = animationController;
    this[S$1.enableDrag$2] = enableDrag;
    this[S$1.onClosing$1] = onClosing;
    this[S$1.onDismissed] = onDismissed;
    this[S$1.builder$1] = builder;
    this[S$1.isPersistent] = isPersistent;
    this[S$1.backgroundColor$20] = backgroundColor;
    this[S$1.elevation$23] = elevation;
    this[S$1.shape$21] = shape;
    this[S$1.clipBehavior$11] = clipBehavior;
    scaffold$._StandardBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._StandardBottomSheet.prototype;
  dart.addTypeTests(scaffold$._StandardBottomSheet);
  dart.addTypeCaches(scaffold$._StandardBottomSheet);
  dart.setMethodSignature(scaffold$._StandardBottomSheet, () => ({
    __proto__: dart.getMethods(scaffold$._StandardBottomSheet.__proto__),
    createState: dart.fnType(scaffold$._StandardBottomSheetState, [])
  }));
  dart.setLibraryUri(scaffold$._StandardBottomSheet, I[123]);
  dart.setFieldSignature(scaffold$._StandardBottomSheet, () => ({
    __proto__: dart.getFields(scaffold$._StandardBottomSheet.__proto__),
    animationController: dart.finalFieldType(animation_controller.AnimationController),
    enableDrag: dart.finalFieldType(core.bool),
    onClosing: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDismissed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
    isPersistent: dart.finalFieldType(core.bool),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip))
  }));
  scaffold$._StandardBottomSheetState = class _StandardBottomSheetState extends framework.State$(scaffold$._StandardBottomSheet) {
    initState() {
      super.initState();
      if (!(this.widget.animationController != null)) dart.assertFailed(null, I[122], 3351, 12, "widget.animationController != null");
      if (!(this.widget.animationController.status == animation.AnimationStatus.forward || this.widget.animationController.status == animation.AnimationStatus.completed)) dart.assertFailed(null, I[122], 3352, 12, "widget.animationController.status == AnimationStatus.forward\r\n        || widget.animationController.status == AnimationStatus.completed");
      this.widget.animationController.addStatusListener(dart.bind(this, S$1._handleStatusChange));
    }
    didUpdateWidget(oldWidget) {
      scaffold$._StandardBottomSheet.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[122], 3358, 45, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.animationController, oldWidget.animationController)) dart.assertFailed(null, I[122], 3360, 12, "widget.animationController == oldWidget.animationController");
    }
    close() {
      let t94;
      if (!(this.widget.animationController != null)) dart.assertFailed(null, I[122], 3364, 12, "widget.animationController != null");
      this.widget.animationController.reverse();
      t94 = this.widget.onClosing;
      t94 == null ? null : t94();
    }
    [S$1._handleDragStart$1](details) {
      if (details == null) dart.nullFailed(I[122], 3369, 42, "details");
      this.animationCurve = curves.Curves.linear;
    }
    [S$1._handleDragEnd$1](details, opts) {
      if (details == null) dart.nullFailed(I[122], 3374, 38, "details");
      let isClosing = opts && 'isClosing' in opts ? opts.isClosing : null;
      this.animationCurve = new scaffold$._BottomSheetSuspendedCurve.new(this.widget.animationController.value, {curve: scaffold$._standardBottomSheetCurve});
    }
    [S$1._handleStatusChange](status) {
      let t94;
      if (status == null) dart.nullFailed(I[122], 3382, 44, "status");
      if (status == animation.AnimationStatus.dismissed) {
        t94 = this.widget.onDismissed;
        t94 == null ? null : t94();
      }
    }
    extentChanged(notification) {
      if (notification == null) dart.nullFailed(I[122], 3388, 54, "notification");
      let extentRemaining = 1.0 - dart.notNull(notification.extent);
      let scaffold = scaffold$.Scaffold.of(this.context);
      if (extentRemaining < 0.3) {
        scaffold[S$1._floatingActionButtonVisibilityValue] = extentRemaining * 0.3 * 10;
        scaffold.showBodyScrim(true, math.max(core.double, 0.1, 0.6 - dart.notNull(scaffold[S$1._floatingActionButtonVisibilityValue])));
      } else {
        scaffold[S$1._floatingActionButtonVisibilityValue] = 1.0;
        scaffold.showBodyScrim(false, 0.0);
      }
      if (notification.extent == notification.minExtent && scaffold.widget.bottomSheet == null) {
        this.close();
      }
      return false;
    }
    [S$1._wrapBottomSheet](bottomSheet) {
      if (bottomSheet == null) dart.nullFailed(I[122], 3408, 34, "bottomSheet");
      return new basic.Semantics.new({container: true, onDismiss: dart.bind(this, 'close'), child: new (T$.NotificationListenerOfDraggableScrollableNotification()).new({onNotification: dart.bind(this, 'extentChanged'), child: bottomSheet, $creationLocationd_0dea112b090073317d4: C[2570] || CT.C2570}), $creationLocationd_0dea112b090073317d4: C[2574] || CT.C2574});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[122], 3420, 29, "context");
      return new transitions.AnimatedBuilder.new({animation: this.widget.animationController, builder: dart.fn((context, child) => {
          if (context == null) dart.nullFailed(I[122], 3423, 30, "context");
          return new basic.Align.new({alignment: alignment.AlignmentDirectional.topStart, heightFactor: this.animationCurve.transform(this.widget.animationController.value), child: child, $creationLocationd_0dea112b090073317d4: C[2579] || CT.C2579});
        }, T$.BuildContextAndWidgetNToAlign()), child: this[S$1._wrapBottomSheet](new bottom_sheet.BottomSheet.new({animationController: this.widget.animationController, enableDrag: this.widget.enableDrag, onDragStart: dart.bind(this, S$1._handleDragStart$1), onDragEnd: dart.bind(this, S$1._handleDragEnd$1), onClosing: dart.nullCheck(this.widget.onClosing), builder: this.widget.builder, backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, $creationLocationd_0dea112b090073317d4: C[2584] || CT.C2584})), $creationLocationd_0dea112b090073317d4: C[2596] || CT.C2596});
    }
  };
  (scaffold$._StandardBottomSheetState.new = function() {
    this.animationCurve = scaffold$._standardBottomSheetCurve;
    scaffold$._StandardBottomSheetState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._StandardBottomSheetState.prototype;
  dart.addTypeTests(scaffold$._StandardBottomSheetState);
  dart.addTypeCaches(scaffold$._StandardBottomSheetState);
  dart.setMethodSignature(scaffold$._StandardBottomSheetState, () => ({
    __proto__: dart.getMethods(scaffold$._StandardBottomSheetState.__proto__),
    close: dart.fnType(dart.void, []),
    [S$1._handleDragStart$1]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [S$1._handleDragEnd$1]: dart.fnType(dart.void, [drag_details.DragEndDetails], {isClosing: dart.nullable(core.bool)}, {}),
    [S$1._handleStatusChange]: dart.fnType(dart.void, [animation.AnimationStatus]),
    extentChanged: dart.fnType(core.bool, [draggable_scrollable_sheet.DraggableScrollableNotification]),
    [S$1._wrapBottomSheet]: dart.fnType(framework.Widget, [framework.Widget]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scaffold$._StandardBottomSheetState, I[123]);
  dart.setFieldSignature(scaffold$._StandardBottomSheetState, () => ({
    __proto__: dart.getFields(scaffold$._StandardBottomSheetState.__proto__),
    animationCurve: dart.fieldType(curves.ParametricCurve$(core.double))
  }));
  const _is_PersistentBottomSheetController_default = Symbol('_is_PersistentBottomSheetController_default');
  scaffold$.PersistentBottomSheetController$ = dart.generic(T => {
    class PersistentBottomSheetController extends scaffold$.ScaffoldFeatureController$(scaffold$._StandardBottomSheet, T) {
      get [S$1._isLocalHistoryEntry]() {
        return this[S$1._isLocalHistoryEntry$1];
      }
      set [S$1._isLocalHistoryEntry](value) {
        super[S$1._isLocalHistoryEntry] = value;
      }
    }
    (PersistentBottomSheetController.__ = function(widget, completer, close, setState, _isLocalHistoryEntry) {
      if (widget == null) dart.nullFailed(I[122], 3458, 26, "widget");
      if (completer == null) dart.nullFailed(I[122], 3459, 18, "completer");
      if (close == null) dart.nullFailed(I[122], 3460, 18, "close");
      if (setState == null) dart.nullFailed(I[122], 3461, 17, "setState");
      if (_isLocalHistoryEntry == null) dart.nullFailed(I[122], 3462, 10, "_isLocalHistoryEntry");
      this[S$1._isLocalHistoryEntry$1] = _isLocalHistoryEntry;
      PersistentBottomSheetController.__proto__.__.call(this, widget, completer, close, setState);
      ;
    }).prototype = PersistentBottomSheetController.prototype;
    dart.addTypeTests(PersistentBottomSheetController);
    PersistentBottomSheetController.prototype[_is_PersistentBottomSheetController_default] = true;
    dart.addTypeCaches(PersistentBottomSheetController);
    dart.setLibraryUri(PersistentBottomSheetController, I[123]);
    dart.setFieldSignature(PersistentBottomSheetController, () => ({
      __proto__: dart.getFields(PersistentBottomSheetController.__proto__),
      [S$1._isLocalHistoryEntry]: dart.finalFieldType(core.bool)
    }));
    return PersistentBottomSheetController;
  });
  scaffold$.PersistentBottomSheetController = scaffold$.PersistentBottomSheetController$();
  dart.addTypeTests(scaffold$.PersistentBottomSheetController, _is_PersistentBottomSheetController_default);
  scaffold$._ScaffoldScope = class _ScaffoldScope extends framework.InheritedWidget {
    get hasDrawer() {
      return this[S$1.hasDrawer];
    }
    set hasDrawer(value) {
      super.hasDrawer = value;
    }
    get geometryNotifier() {
      return this[S$1.geometryNotifier$1];
    }
    set geometryNotifier(value) {
      super.geometryNotifier = value;
    }
    updateShouldNotify(oldWidget) {
      scaffold$._ScaffoldScope.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[122], 3481, 42, "oldWidget");
      return this.hasDrawer != oldWidget.hasDrawer;
    }
  };
  (scaffold$._ScaffoldScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let hasDrawer = opts && 'hasDrawer' in opts ? opts.hasDrawer : null;
    if (hasDrawer == null) dart.nullFailed(I[122], 3471, 19, "hasDrawer");
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    if (geometryNotifier == null) dart.nullFailed(I[122], 3472, 19, "geometryNotifier");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[122], 3473, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.hasDrawer] = hasDrawer;
    this[S$1.geometryNotifier$1] = geometryNotifier;
    if (!(hasDrawer != null)) dart.assertFailed(null, I[122], 3474, 15, "hasDrawer != null");
    scaffold$._ScaffoldScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._ScaffoldScope.prototype;
  dart.addTypeTests(scaffold$._ScaffoldScope);
  dart.addTypeCaches(scaffold$._ScaffoldScope);
  dart.setMethodSignature(scaffold$._ScaffoldScope, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldScope, I[123]);
  dart.setFieldSignature(scaffold$._ScaffoldScope, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldScope.__proto__),
    hasDrawer: dart.finalFieldType(core.bool),
    geometryNotifier: dart.finalFieldType(scaffold$._ScaffoldGeometryNotifier)
  }));
  dart.defineLazy(scaffold$, {
    /*scaffold$._kDefaultFloatingActionButtonLocation*/get _kDefaultFloatingActionButtonLocation() {
      return C[320] || CT.C320;
    },
    /*scaffold$._kDefaultFloatingActionButtonAnimator*/get _kDefaultFloatingActionButtonAnimator() {
      return C[330] || CT.C330;
    },
    /*scaffold$._standardBottomSheetCurve*/get _standardBottomSheetCurve() {
      return C[307] || CT.C307;
    },
    /*scaffold$._kBottomSheetDominatesPercentage*/get _kBottomSheetDominatesPercentage() {
      return 0.3;
    },
    /*scaffold$._kMinBottomSheetScrimOpacity*/get _kMinBottomSheetScrimOpacity() {
      return 0.1;
    },
    /*scaffold$._kMaxBottomSheetScrimOpacity*/get _kMaxBottomSheetScrimOpacity() {
      return 0.6;
    }
  }, false);
  elevation_overlay.ElevationOverlay = class ElevationOverlay extends core.Object {
    static applyOverlay(context, color, elevation) {
      if (context == null) dart.nullFailed(I[124], 45, 42, "context");
      if (color == null) dart.nullFailed(I[124], 45, 57, "color");
      if (elevation == null) dart.nullFailed(I[124], 45, 71, "elevation");
      let theme = theme$.Theme.of(context);
      if (dart.notNull(elevation) > 0.0 && dart.test(theme.applyElevationOverlayColor) && theme.brightness == ui.Brightness.dark && dart.equals(color.withOpacity(1.0), theme.colorScheme.surface.withOpacity(1.0))) {
        return elevation_overlay.ElevationOverlay.colorWithOverlay(color, theme.colorScheme.onSurface, elevation);
      }
      return color;
    }
    static overlayColor(context, elevation) {
      if (context == null) dart.nullFailed(I[124], 63, 42, "context");
      if (elevation == null) dart.nullFailed(I[124], 63, 58, "elevation");
      let theme = theme$.Theme.of(context);
      return elevation_overlay.ElevationOverlay._overlayColor(theme.colorScheme.onSurface, elevation);
    }
    static colorWithOverlay(surface, overlay, elevation) {
      if (surface == null) dart.nullFailed(I[124], 75, 39, "surface");
      if (overlay == null) dart.nullFailed(I[124], 75, 54, "overlay");
      if (elevation == null) dart.nullFailed(I[124], 75, 70, "elevation");
      return ui.Color.alphaBlend(elevation_overlay.ElevationOverlay._overlayColor(overlay, elevation), surface);
    }
    static _overlayColor(color, elevation) {
      if (color == null) dart.nullFailed(I[124], 80, 36, "color");
      if (elevation == null) dart.nullFailed(I[124], 80, 50, "elevation");
      let opacity = (4.5 * math.log(dart.notNull(elevation) + 1) + 2) / 100.0;
      return color.withOpacity(opacity);
    }
  };
  (elevation_overlay.ElevationOverlay.__ = function() {
    ;
  }).prototype = elevation_overlay.ElevationOverlay.prototype;
  dart.addTypeTests(elevation_overlay.ElevationOverlay);
  dart.addTypeCaches(elevation_overlay.ElevationOverlay);
  dart.setLibraryUri(elevation_overlay.ElevationOverlay, I[125]);
  material.MaterialType = class MaterialType extends core.Object {
    toString() {
      return this[S$1._name$26];
    }
  };
  (material.MaterialType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[10], 25, 6, "index");
    if (_name == null) dart.nullFailed(I[10], 25, 6, "_name");
    this.index = index;
    this[S$1._name$26] = _name;
    ;
  }).prototype = material.MaterialType.prototype;
  dart.addTypeTests(material.MaterialType);
  dart.addTypeCaches(material.MaterialType);
  dart.setLibraryUri(material.MaterialType, I[11]);
  dart.setFieldSignature(material.MaterialType, () => ({
    __proto__: dart.getFields(material.MaterialType.__proto__),
    index: dart.finalFieldType(core.int),
    [S$1._name$26]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(material.MaterialType, ['toString']);
  material.MaterialType.canvas = C[2601] || CT.C2601;
  material.MaterialType.card = C[2602] || CT.C2602;
  material.MaterialType.circle = C[2603] || CT.C2603;
  material.MaterialType.button = C[2604] || CT.C2604;
  material.MaterialType.transparency = C[2605] || CT.C2605;
  material.MaterialType.values = C[2606] || CT.C2606;
  material.MaterialInkController = class MaterialInkController extends core.Object {};
  (material.MaterialInkController.new = function() {
    ;
  }).prototype = material.MaterialInkController.prototype;
  dart.addTypeTests(material.MaterialInkController);
  dart.addTypeCaches(material.MaterialInkController);
  dart.setLibraryUri(material.MaterialInkController, I[11]);
  material.Material = class Material extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$24];
    }
    set child(value) {
      super.child = value;
    }
    get type() {
      return this[S$1.type$3];
    }
    set type(value) {
      super.type = value;
    }
    get elevation() {
      return this[S$1.elevation$24];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[S$1.color$13];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[S$1.shadowColor$4];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get textStyle() {
      return this[S$1.textStyle$7];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get shape() {
      return this[S$1.shape$22];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[S$1.borderOnForeground];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    get clipBehavior() {
      return this[S$1.clipBehavior$12];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get animationDuration() {
      return this[S$1.animationDuration$3];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get borderRadius() {
      return this[S$1.borderRadius$3];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[10], 313, 49, "context");
      return context.findAncestorRenderObjectOfType(material._RenderInkFeatures);
    }
    createState() {
      return new material._MaterialState.new();
    }
    debugFillProperties(properties) {
      let t94;
      if (properties == null) dart.nullFailed(I[10], 321, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.EnumPropertyOfMaterialType()).new("type", this.type));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: 0.0}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      t94 = this.textStyle;
      t94 == null ? null : t94.debugFillProperties(properties, {prefix: "textStyle."});
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("borderOnForeground", this.borderOnForeground, {defaultValue: true}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderRadiusGeometry()).new("borderRadius", this.borderRadius, {defaultValue: null}));
    }
  };
  (material.Material.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let type = opts && 'type' in opts ? opts.type : C[2601] || CT.C2601;
    if (type == null) dart.nullFailed(I[10], 179, 10, "type");
    let elevation = opts && 'elevation' in opts ? opts.elevation : 0;
    if (elevation == null) dart.nullFailed(I[10], 180, 10, "elevation");
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    if (borderOnForeground == null) dart.nullFailed(I[10], 186, 10, "borderOnForeground");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[10], 187, 10, "clipBehavior");
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[334] || CT.C334;
    if (animationDuration == null) dart.nullFailed(I[10], 188, 10, "animationDuration");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.type$3] = type;
    this[S$1.elevation$24] = elevation;
    this[S$1.color$13] = color;
    this[S$1.shadowColor$4] = shadowColor;
    this[S$1.textStyle$7] = textStyle;
    this[S$1.borderRadius$3] = borderRadius;
    this[S$1.shape$22] = shape;
    this[S$1.borderOnForeground] = borderOnForeground;
    this[S$1.clipBehavior$12] = clipBehavior;
    this[S$1.animationDuration$3] = animationDuration;
    this[S$1.child$24] = child;
    if (!(type != null)) dart.assertFailed(null, I[10], 190, 15, "type != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[10], 191, 15, "elevation != null && elevation >= 0.0");
    if (!!(shape != null && borderRadius != null)) dart.assertFailed(null, I[10], 192, 15, "!(shape != null && borderRadius != null)");
    if (!(animationDuration != null)) dart.assertFailed(null, I[10], 193, 15, "animationDuration != null");
    if (!!(type == material.MaterialType.circle && (borderRadius != null || shape != null))) dart.assertFailed(null, I[10], 194, 15, "!(identical(type, MaterialType.circle) && (borderRadius != null || shape != null))");
    if (!(borderOnForeground != null)) dart.assertFailed(null, I[10], 195, 15, "borderOnForeground != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[10], 196, 15, "clipBehavior != null");
    material.Material.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material.Material.prototype;
  dart.addTypeTests(material.Material);
  dart.addTypeCaches(material.Material);
  dart.setMethodSignature(material.Material, () => ({
    __proto__: dart.getMethods(material.Material.__proto__),
    createState: dart.fnType(material._MaterialState, [])
  }));
  dart.setLibraryUri(material.Material, I[11]);
  dart.setFieldSignature(material.Material, () => ({
    __proto__: dart.getFields(material.Material.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    type: dart.finalFieldType(material.MaterialType),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    borderOnForeground: dart.finalFieldType(core.bool),
    clipBehavior: dart.finalFieldType(ui.Clip),
    animationDuration: dart.finalFieldType(core.Duration),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadiusGeometry))
  }));
  dart.defineLazy(material.Material, {
    /*material.Material.defaultSplashRadius*/get defaultSplashRadius() {
      return 35;
    }
  }, false);
  const State_TickerProviderStateMixin$36$6 = class State_TickerProviderStateMixin extends framework.State$(material.Material) {};
  (State_TickerProviderStateMixin$36$6.new = function() {
    ticker_provider.TickerProviderStateMixin$(material.Material)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$6.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$6.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$6, ticker_provider.TickerProviderStateMixin$(material.Material));
  material._MaterialState = class _MaterialState extends State_TickerProviderStateMixin$36$6 {
    [S$1._getBackgroundColor](context) {
      if (context == null) dart.nullFailed(I[10], 340, 43, "context");
      let theme = theme$.Theme.of(context);
      let color = this.widget.color;
      if (color == null) {
        switch (this.widget.type) {
          case C[2601] || CT.C2601:
          {
            color = theme.canvasColor;
            break;
          }
          case C[2602] || CT.C2602:
          {
            color = theme.cardColor;
            break;
          }
          default:
          {
            break;
          }
        }
      }
      return color;
    }
    build(context) {
      let t94, t94$, t94$0;
      if (context == null) dart.nullFailed(I[10], 359, 29, "context");
      let backgroundColor = this[S$1._getBackgroundColor](context);
      if (!(backgroundColor != null || this.widget.type == material.MaterialType.transparency)) dart.assertFailed("If Material type is not MaterialType.transparency, a color must " + "either be passed in through the `color` property, or be defined " + "in the theme (ex. canvasColor != null if type is set to " + "MaterialType.canvas)", I[10], 362, 7, "backgroundColor != null || widget.type == MaterialType.transparency");
      let contents = this.widget.child;
      if (contents != null) {
        contents = new implicit_animations.AnimatedDefaultTextStyle.new({style: (t94 = this.widget.textStyle, t94 == null ? dart.nullCheck(theme$.Theme.of(context).textTheme.bodyText2) : t94), duration: this.widget.animationDuration, child: contents, $creationLocationd_0dea112b090073317d4: C[2607] || CT.C2607});
      }
      contents = new (T$.NotificationListenerOfLayoutChangedNotification()).new({onNotification: dart.fn(notification => {
          if (notification == null) dart.nullFailed(I[10], 377, 50, "notification");
          let renderer = material._RenderInkFeatures.as(dart.nullCheck(dart.nullCheck(this[S$1._inkFeatureRenderer].currentContext).findRenderObject()));
          renderer[S$1._didChangeLayout]();
          return false;
        }, T$.LayoutChangedNotificationTobool()), child: new material._InkFeatures.new({key: this[S$1._inkFeatureRenderer], absorbHitTest: this.widget.type != material.MaterialType.transparency, color: backgroundColor, child: contents, vsync: this, $creationLocationd_0dea112b090073317d4: C[2612] || CT.C2612}), $creationLocationd_0dea112b090073317d4: C[2619] || CT.C2619});
      if (this.widget.type == material.MaterialType.canvas && this.widget.shape == null && this.widget.borderRadius == null) {
        return new implicit_animations.AnimatedPhysicalModel.new({curve: curves.Curves.fastOutSlowIn, duration: this.widget.animationDuration, shape: box_border.BoxShape.rectangle, clipBehavior: this.widget.clipBehavior, borderRadius: border_radius.BorderRadius.zero, elevation: this.widget.elevation, color: elevation_overlay.ElevationOverlay.applyOverlay(context, dart.nullCheck(backgroundColor), this.widget.elevation), shadowColor: (t94$ = this.widget.shadowColor, t94$ == null ? theme$.Theme.of(context).shadowColor : t94$), animateColor: false, child: contents, $creationLocationd_0dea112b090073317d4: C[2623] || CT.C2623});
      }
      let shape = this[S$1._getShape]();
      if (this.widget.type == material.MaterialType.transparency) {
        return material._MaterialState._transparentInterior({context: context, shape: shape, clipBehavior: this.widget.clipBehavior, contents: contents});
      }
      return new material._MaterialInterior.new({curve: curves.Curves.fastOutSlowIn, duration: this.widget.animationDuration, shape: shape, borderOnForeground: this.widget.borderOnForeground, clipBehavior: this.widget.clipBehavior, elevation: this.widget.elevation, color: dart.nullCheck(backgroundColor), shadowColor: (t94$0 = this.widget.shadowColor, t94$0 == null ? theme$.Theme.of(context).shadowColor : t94$0), child: contents, $creationLocationd_0dea112b090073317d4: C[2635] || CT.C2635});
    }
    static _transparentInterior(opts) {
      let context = opts && 'context' in opts ? opts.context : null;
      if (context == null) dart.nullFailed(I[10], 440, 27, "context");
      let shape = opts && 'shape' in opts ? opts.shape : null;
      if (shape == null) dart.nullFailed(I[10], 441, 26, "shape");
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      if (clipBehavior == null) dart.nullFailed(I[10], 442, 19, "clipBehavior");
      let contents = opts && 'contents' in opts ? opts.contents : null;
      if (contents == null) dart.nullFailed(I[10], 443, 21, "contents");
      let child = new material._ShapeBorderPaint.new({child: contents, shape: shape, $creationLocationd_0dea112b090073317d4: C[2646] || CT.C2646});
      if (clipBehavior == ui.Clip.none) {
        return child;
      }
      return new basic.ClipPath.new({child: child, clipper: new proxy_box.ShapeBorderClipper.new({shape: shape, textDirection: basic.Directionality.maybeOf(context)}), clipBehavior: clipBehavior, $creationLocationd_0dea112b090073317d4: C[2650] || CT.C2650});
    }
    [S$1._getShape]() {
      let t94;
      if (this.widget.shape != null) return dart.nullCheck(this.widget.shape);
      if (this.widget.borderRadius != null) return new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: dart.nullCheck(this.widget.borderRadius)});
      switch (this.widget.type) {
        case C[2601] || CT.C2601:
        case C[2605] || CT.C2605:
        {
          return C[1050] || CT.C1050;
        }
        case C[2602] || CT.C2602:
        case C[2604] || CT.C2604:
        {
          return new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: (t94 = this.widget.borderRadius, t94 == null ? dart.nullCheck(material.kMaterialEdges[S.$_get](this.widget.type)) : t94)});
        }
        case C[2603] || CT.C2603:
        {
          return C[403] || CT.C403;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  (material._MaterialState.new = function() {
    this[S$1._inkFeatureRenderer] = T$.GlobalKeyOfStateOfStatefulWidget().new({debugLabel: "ink renderer"});
    material._MaterialState.__proto__.new.call(this);
    ;
  }).prototype = material._MaterialState.prototype;
  dart.addTypeTests(material._MaterialState);
  dart.addTypeCaches(material._MaterialState);
  dart.setMethodSignature(material._MaterialState, () => ({
    __proto__: dart.getMethods(material._MaterialState.__proto__),
    [S$1._getBackgroundColor]: dart.fnType(dart.nullable(ui.Color), [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$1._getShape]: dart.fnType(borders.ShapeBorder, [])
  }));
  dart.setLibraryUri(material._MaterialState, I[11]);
  dart.setFieldSignature(material._MaterialState, () => ({
    __proto__: dart.getFields(material._MaterialState.__proto__),
    [S$1._inkFeatureRenderer]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  material._RenderInkFeatures = class _RenderInkFeatures extends proxy_box.RenderProxyBox {
    addInkFeature(feature) {
      if (feature == null) dart.nullFailed(I[10], 517, 33, "feature");
      if (!!dart.test(feature[S._debugDisposed])) dart.assertFailed(null, I[10], 518, 12, "!feature._debugDisposed");
      if (!dart.equals(feature[S._controller], this)) dart.assertFailed(null, I[10], 519, 12, "feature._controller == this");
      this[S$1._inkFeatures] == null ? this[S$1._inkFeatures] = T$.JSArrayOfInkFeature().of([]) : null;
      if (!!dart.test(dart.nullCheck(this[S$1._inkFeatures])[S.$contains](feature))) dart.assertFailed(null, I[10], 521, 12, "!_inkFeatures!.contains(feature)");
      dart.nullCheck(this[S$1._inkFeatures])[S.$add](feature);
      this.markNeedsPaint();
    }
    [S._removeFeature](feature) {
      if (feature == null) dart.nullFailed(I[10], 526, 34, "feature");
      if (!(this[S$1._inkFeatures] != null)) dart.assertFailed(null, I[10], 527, 12, "_inkFeatures != null");
      dart.nullCheck(this[S$1._inkFeatures])[S.$remove](feature);
      this.markNeedsPaint();
    }
    [S$1._didChangeLayout]() {
      if (this[S$1._inkFeatures] != null && dart.test(dart.nullCheck(this[S$1._inkFeatures])[S$.$isNotEmpty])) this.markNeedsPaint();
    }
    hitTestSelf(position) {
      if (position == null) dart.nullFailed(I[10], 538, 27, "position");
      return this.absorbHitTest;
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(I[10], 541, 30, "context");
      if (offset == null) dart.nullFailed(I[10], 541, 46, "offset");
      if (this[S$1._inkFeatures] != null && dart.test(dart.nullCheck(this[S$1._inkFeatures])[S$.$isNotEmpty])) {
        let canvas = context.canvas;
        canvas.save();
        canvas.translate(offset.dx, offset.dy);
        canvas.clipRect(ui.Offset.zero['&'](this.size));
        for (let inkFeature of dart.nullCheck(this[S$1._inkFeatures]))
          inkFeature[S._paint](canvas);
        canvas.restore();
      }
      super.paint(context, offset);
    }
  };
  (material._RenderInkFeatures.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(I[10], 494, 19, "vsync");
    let absorbHitTest = opts && 'absorbHitTest' in opts ? opts.absorbHitTest : null;
    if (absorbHitTest == null) dart.nullFailed(I[10], 495, 19, "absorbHitTest");
    let color = opts && 'color' in opts ? opts.color : null;
    this[S$1._inkFeatures] = null;
    this.vsync = vsync;
    this.absorbHitTest = absorbHitTest;
    this.color = color;
    if (!(vsync != null)) dart.assertFailed(null, I[10], 497, 15, "vsync != null");
    material._RenderInkFeatures.__proto__.new.call(this, child);
    ;
  }).prototype = material._RenderInkFeatures.prototype;
  dart.addTypeTests(material._RenderInkFeatures);
  dart.addTypeCaches(material._RenderInkFeatures);
  material._RenderInkFeatures[dart.implements] = () => [material.MaterialInkController];
  dart.setMethodSignature(material._RenderInkFeatures, () => ({
    __proto__: dart.getMethods(material._RenderInkFeatures.__proto__),
    addInkFeature: dart.fnType(dart.void, [material.InkFeature]),
    [S._removeFeature]: dart.fnType(dart.void, [material.InkFeature]),
    [S$1._didChangeLayout]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(material._RenderInkFeatures, I[11]);
  dart.setFieldSignature(material._RenderInkFeatures, () => ({
    __proto__: dart.getFields(material._RenderInkFeatures.__proto__),
    vsync: dart.finalFieldType(ticker.TickerProvider),
    color: dart.fieldType(dart.nullable(ui.Color)),
    absorbHitTest: dart.fieldType(core.bool),
    [S$1._inkFeatures]: dart.fieldType(dart.nullable(core.List$(material.InkFeature)))
  }));
  material._InkFeatures = class _InkFeatures extends framework.SingleChildRenderObjectWidget {
    get color() {
      return this[S$1.color$14];
    }
    set color(value) {
      super.color = value;
    }
    get vsync() {
      return this[S$1.vsync];
    }
    set vsync(value) {
      super.vsync = value;
    }
    get absorbHitTest() {
      return this[S$1.absorbHitTest];
    }
    set absorbHitTest(value) {
      super.absorbHitTest = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[10], 574, 54, "context");
      return new material._RenderInkFeatures.new({color: this.color, absorbHitTest: this.absorbHitTest, vsync: this.vsync});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(I[10], 583, 40, "context");
      material._RenderInkFeatures.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[10], 583, 68, "renderObject");
      t94 = renderObject;
      (() => {
        t94.color = this.color;
        t94.absorbHitTest = this.absorbHitTest;
        return t94;
      })();
      if (!dart.equals(this.vsync, renderObject.vsync)) dart.assertFailed(null, I[10], 586, 12, "vsync == renderObject.vsync");
    }
  };
  (material._InkFeatures.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(I[10], 559, 19, "vsync");
    let absorbHitTest = opts && 'absorbHitTest' in opts ? opts.absorbHitTest : null;
    if (absorbHitTest == null) dart.nullFailed(I[10], 560, 19, "absorbHitTest");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.color$14] = color;
    this[S$1.vsync] = vsync;
    this[S$1.absorbHitTest] = absorbHitTest;
    material._InkFeatures.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._InkFeatures.prototype;
  dart.addTypeTests(material._InkFeatures);
  dart.addTypeCaches(material._InkFeatures);
  dart.setMethodSignature(material._InkFeatures, () => ({
    __proto__: dart.getMethods(material._InkFeatures.__proto__),
    createRenderObject: dart.fnType(material._RenderInkFeatures, [framework.BuildContext])
  }));
  dart.setLibraryUri(material._InkFeatures, I[11]);
  dart.setFieldSignature(material._InkFeatures, () => ({
    __proto__: dart.getFields(material._InkFeatures.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    vsync: dart.finalFieldType(ticker.TickerProvider),
    absorbHitTest: dart.finalFieldType(core.bool)
  }));
  material.ShapeBorderTween = class ShapeBorderTween extends tween.Tween$(dart.nullable(borders.ShapeBorder)) {
    lerp(t) {
      if (t == null) dart.nullFailed(I[10], 674, 28, "t");
      return borders.ShapeBorder.lerp(this.begin, this.end, t);
    }
  };
  (material.ShapeBorderTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    material.ShapeBorderTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = material.ShapeBorderTween.prototype;
  dart.addTypeTests(material.ShapeBorderTween);
  dart.addTypeCaches(material.ShapeBorderTween);
  dart.setLibraryUri(material.ShapeBorderTween, I[11]);
  material._MaterialInterior = class _MaterialInterior extends implicit_animations.ImplicitlyAnimatedWidget {
    get child() {
      return this[S$1.child$25];
    }
    set child(value) {
      super.child = value;
    }
    get shape() {
      return this[S$1.shape$23];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[S$1.borderOnForeground$1];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    get clipBehavior() {
      return this[S$1.clipBehavior$13];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get elevation() {
      return this[S$1.elevation$25];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[S$1.color$15];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[S$1.shadowColor$5];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    createState() {
      return new material._MaterialInteriorState.new();
    }
    debugFillProperties(description) {
      if (description == null) dart.nullFailed(I[10], 745, 56, "description");
      super.debugFillProperties(description);
      description.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape));
      description.add(new diagnostics.DoubleProperty.new("elevation", this.elevation));
      description.add(new colors.ColorProperty.new("color", this.color));
      description.add(new colors.ColorProperty.new("shadowColor", this.shadowColor));
    }
  };
  (material._MaterialInterior.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[10], 690, 19, "child");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    if (shape == null) dart.nullFailed(I[10], 691, 19, "shape");
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    if (borderOnForeground == null) dart.nullFailed(I[10], 692, 10, "borderOnForeground");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[152] || CT.C152;
    if (clipBehavior == null) dart.nullFailed(I[10], 693, 10, "clipBehavior");
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    if (elevation == null) dart.nullFailed(I[10], 694, 19, "elevation");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[10], 695, 19, "color");
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    if (shadowColor == null) dart.nullFailed(I[10], 696, 19, "shadowColor");
    let curve = opts && 'curve' in opts ? opts.curve : C[91] || CT.C91;
    if (curve == null) dart.nullFailed(I[10], 697, 11, "curve");
    let duration = opts && 'duration' in opts ? opts.duration : null;
    if (duration == null) dart.nullFailed(I[10], 698, 23, "duration");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$25] = child;
    this[S$1.shape$23] = shape;
    this[S$1.borderOnForeground$1] = borderOnForeground;
    this[S$1.clipBehavior$13] = clipBehavior;
    this[S$1.elevation$25] = elevation;
    this[S$1.color$15] = color;
    this[S$1.shadowColor$5] = shadowColor;
    if (!(child != null)) dart.assertFailed(null, I[10], 699, 15, "child != null");
    if (!(shape != null)) dart.assertFailed(null, I[10], 700, 15, "shape != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, I[10], 701, 15, "clipBehavior != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[10], 702, 15, "elevation != null && elevation >= 0.0");
    if (!(color != null)) dart.assertFailed(null, I[10], 703, 15, "color != null");
    if (!(shadowColor != null)) dart.assertFailed(null, I[10], 704, 15, "shadowColor != null");
    material._MaterialInterior.__proto__.new.call(this, {key: key, curve: curve, duration: duration, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._MaterialInterior.prototype;
  dart.addTypeTests(material._MaterialInterior);
  dart.addTypeCaches(material._MaterialInterior);
  dart.setMethodSignature(material._MaterialInterior, () => ({
    __proto__: dart.getMethods(material._MaterialInterior.__proto__),
    createState: dart.fnType(material._MaterialInteriorState, [])
  }));
  dart.setLibraryUri(material._MaterialInterior, I[11]);
  dart.setFieldSignature(material._MaterialInterior, () => ({
    __proto__: dart.getFields(material._MaterialInterior.__proto__),
    child: dart.finalFieldType(framework.Widget),
    shape: dart.finalFieldType(borders.ShapeBorder),
    borderOnForeground: dart.finalFieldType(core.bool),
    clipBehavior: dart.finalFieldType(ui.Clip),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color)
  }));
  material._MaterialInteriorState = class _MaterialInteriorState extends implicit_animations.AnimatedWidgetBaseState$(material._MaterialInterior) {
    forEachTween(visitor) {
      if (visitor == null) dart.nullFailed(I[10], 760, 43, "visitor");
      this[S$1._elevation$1] = T$.TweenNOfdouble().as(visitor(this[S$1._elevation$1], this.widget.elevation, dart.fn(value => new (T$.TweenOfdouble()).new({begin: core.double.as(value)}), T$.dynamicToTweenOfdouble())));
      this[S$1._shadowColor] = T$.ColorTweenN().as(visitor(this[S$1._shadowColor], this.widget.shadowColor, dart.fn(value => new tween.ColorTween.new({begin: ui.Color.as(value)}), T$.dynamicToColorTween())));
      this[S$1._border$1] = T$.ShapeBorderTweenN().as(visitor(this[S$1._border$1], this.widget.shape, dart.fn(value => new material.ShapeBorderTween.new({begin: borders.ShapeBorder.as(value)}), T$.dynamicToShapeBorderTween())));
    }
    build(context) {
      if (context == null) dart.nullFailed(I[10], 779, 29, "context");
      let shape = dart.nullCheck(dart.nullCheck(this[S$1._border$1]).evaluate(this.animation));
      let elevation = dart.nullCheck(this[S$1._elevation$1]).evaluate(this.animation);
      return new basic.PhysicalShape.new({child: new material._ShapeBorderPaint.new({child: this.widget.child, shape: shape, borderOnForeground: this.widget.borderOnForeground, $creationLocationd_0dea112b090073317d4: C[2655] || CT.C2655}), clipper: new proxy_box.ShapeBorderClipper.new({shape: shape, textDirection: basic.Directionality.maybeOf(context)}), clipBehavior: this.widget.clipBehavior, elevation: elevation, color: elevation_overlay.ElevationOverlay.applyOverlay(context, this.widget.color, elevation), shadowColor: dart.nullCheck(dart.nullCheck(this[S$1._shadowColor]).evaluate(this.animation)), $creationLocationd_0dea112b090073317d4: C[2660] || CT.C2660});
    }
  };
  (material._MaterialInteriorState.new = function() {
    this[S$1._elevation$1] = null;
    this[S$1._shadowColor] = null;
    this[S$1._border$1] = null;
    material._MaterialInteriorState.__proto__.new.call(this);
    ;
  }).prototype = material._MaterialInteriorState.prototype;
  dart.addTypeTests(material._MaterialInteriorState);
  dart.addTypeCaches(material._MaterialInteriorState);
  dart.setMethodSignature(material._MaterialInteriorState, () => ({
    __proto__: dart.getMethods(material._MaterialInteriorState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(dart.nullable(tween.Tween), [dart.nullable(tween.Tween), dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(material._MaterialInteriorState, I[11]);
  dart.setFieldSignature(material._MaterialInteriorState, () => ({
    __proto__: dart.getFields(material._MaterialInteriorState.__proto__),
    [S$1._elevation$1]: dart.fieldType(dart.nullable(tween.Tween$(core.double))),
    [S$1._shadowColor]: dart.fieldType(dart.nullable(tween.ColorTween)),
    [S$1._border$1]: dart.fieldType(dart.nullable(material.ShapeBorderTween))
  }));
  material._ShapeBorderPaint = class _ShapeBorderPaint extends framework.StatelessWidget {
    get child() {
      return this[S$1.child$26];
    }
    set child(value) {
      super.child = value;
    }
    get shape() {
      return this[S$1.shape$24];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[S$1.borderOnForeground$2];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[10], 812, 29, "context");
      return new basic.CustomPaint.new({child: this.child, painter: dart.test(this.borderOnForeground) ? null : new material._ShapeBorderPainter.new(this.shape, basic.Directionality.maybeOf(context)), foregroundPainter: dart.test(this.borderOnForeground) ? new material._ShapeBorderPainter.new(this.shape, basic.Directionality.maybeOf(context)) : null, $creationLocationd_0dea112b090073317d4: C[2668] || CT.C2668});
    }
  };
  (material._ShapeBorderPaint.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[10], 802, 19, "child");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    if (shape == null) dart.nullFailed(I[10], 803, 19, "shape");
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    if (borderOnForeground == null) dart.nullFailed(I[10], 804, 10, "borderOnForeground");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$26] = child;
    this[S$1.shape$24] = shape;
    this[S$1.borderOnForeground$2] = borderOnForeground;
    material._ShapeBorderPaint.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._ShapeBorderPaint.prototype;
  dart.addTypeTests(material._ShapeBorderPaint);
  dart.addTypeCaches(material._ShapeBorderPaint);
  dart.setMethodSignature(material._ShapeBorderPaint, () => ({
    __proto__: dart.getMethods(material._ShapeBorderPaint.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(material._ShapeBorderPaint, I[11]);
  dart.setFieldSignature(material._ShapeBorderPaint, () => ({
    __proto__: dart.getFields(material._ShapeBorderPaint.__proto__),
    child: dart.finalFieldType(framework.Widget),
    shape: dart.finalFieldType(borders.ShapeBorder),
    borderOnForeground: dart.finalFieldType(core.bool)
  }));
  material._ShapeBorderPainter = class _ShapeBorderPainter extends custom_paint.CustomPainter {
    paint(canvas, size) {
      if (canvas == null) dart.nullFailed(I[10], 827, 21, "canvas");
      if (size == null) dart.nullFailed(I[10], 827, 34, "size");
      this.border.paint(canvas, ui.Offset.zero['&'](size), {textDirection: this.textDirection});
    }
    shouldRepaint(oldDelegate) {
      material._ShapeBorderPainter.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[10], 832, 42, "oldDelegate");
      return !dart.equals(oldDelegate.border, this.border);
    }
  };
  (material._ShapeBorderPainter.new = function(border, textDirection) {
    if (border == null) dart.nullFailed(I[10], 822, 28, "border");
    this.border = border;
    this.textDirection = textDirection;
    material._ShapeBorderPainter.__proto__.new.call(this);
    ;
  }).prototype = material._ShapeBorderPainter.prototype;
  dart.addTypeTests(material._ShapeBorderPainter);
  dart.addTypeCaches(material._ShapeBorderPainter);
  dart.setMethodSignature(material._ShapeBorderPainter, () => ({
    __proto__: dart.getMethods(material._ShapeBorderPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(material._ShapeBorderPainter, I[11]);
  dart.setFieldSignature(material._ShapeBorderPainter, () => ({
    __proto__: dart.getFields(material._ShapeBorderPainter.__proto__),
    border: dart.finalFieldType(borders.ShapeBorder),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection))
  }));
  dart.defineLazy(material, {
    /*material.kMaterialEdges*/get kMaterialEdges() {
      return new (T$.LinkedMapOfMaterialType$BorderRadiusN()).from([material.MaterialType.canvas, null, material.MaterialType.card, new border_radius.BorderRadius.circular(2.0), material.MaterialType.circle, null, material.MaterialType.button, new border_radius.BorderRadius.circular(2.0), material.MaterialType.transparency, null]);
    }
  }, false);
  debug$0.debugCheckHasMaterial = function debugCheckHasMaterial(context) {
    if (context == null) dart.nullFailed(I[126], 25, 41, "context");
    if (!dart.test(dart.fn(() => {
      if (!material.Material.is(context.widget) && context.findAncestorWidgetOfExactType(material.Material) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t94 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No Material widget found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a Material " + "widget ancestor.\n" + "In material design, most widgets are conceptually \"printed\" on " + "a sheet of material. In Flutter's material library, that " + "material is represented by the Material widget. It is the " + "Material widget that renders ink splashes, for instance. " + "Because of this, many material library widgets require that " + "there be a Material widget in the tree above them."), new assertions.ErrorHint.new("To introduce a Material widget, you can either directly " + "include one, or use a widget that contains Material itself, " + "such as a Card, Dialog, Drawer, or Scaffold.")]);
          t94[S$.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(material.Material)}));
          return t94;
        })()));
      }
      return true;
    }, T$.VoidTobool())())) dart.assertFailed(null, I[126], 26, 10, "() {\r\n    if (context.widget is! Material && context.findAncestorWidgetOfExactType<Material>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No Material widget found.'),\r\n        ErrorDescription(\r\n          '${context.widget.runtimeType} widgets require a Material '\r\n          'widget ancestor.\\n'\r\n          'In material design, most widgets are conceptually \"printed\" on '\r\n          \"a sheet of material. In Flutter's material library, that \"\r\n          'material is represented by the Material widget. It is the '\r\n          'Material widget that renders ink splashes, for instance. '\r\n          'Because of this, many material library widgets require that '\r\n          'there be a Material widget in the tree above them.'\r\n        ),\r\n        ErrorHint(\r\n          'To introduce a Material widget, you can either directly '\r\n          'include one, or use a widget that contains Material itself, '\r\n          'such as a Card, Dialog, Drawer, or Scaffold.',\r\n        ),\r\n        ...context.describeMissingAncestor(expectedAncestorType: Material)\r\n      ]\r\n      );\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasMaterialLocalizations = function debugCheckHasMaterialLocalizations(context) {
    if (context == null) dart.nullFailed(I[126], 68, 54, "context");
    if (!dart.test(dart.fn(() => {
      if (localizations$.Localizations.of(material_localizations.MaterialLocalizations, context, dart.wrapType(material_localizations.MaterialLocalizations)) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t95 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No MaterialLocalizations found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require MaterialLocalizations " + "to be provided by a Localizations widget ancestor."), new assertions.ErrorDescription.new("The material library uses Localizations to generate messages, " + "labels, and abbreviations."), new assertions.ErrorHint.new("To introduce a MaterialLocalizations, either use a " + "MaterialApp at the root of your application to include them " + "automatically, or add a Localization widget with a " + "MaterialLocalizations delegate.")]);
          t95[S$.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(material_localizations.MaterialLocalizations)}));
          return t95;
        })()));
      }
      return true;
    }, T$.VoidTobool())())) dart.assertFailed(null, I[126], 69, 10, "() {\r\n    if (Localizations.of<MaterialLocalizations>(context, MaterialLocalizations) == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No MaterialLocalizations found.'),\r\n        ErrorDescription(\r\n          '${context.widget.runtimeType} widgets require MaterialLocalizations '\r\n          'to be provided by a Localizations widget ancestor.'\r\n        ),\r\n        ErrorDescription(\r\n          'The material library uses Localizations to generate messages, '\r\n          'labels, and abbreviations.'\r\n        ),\r\n        ErrorHint(\r\n          'To introduce a MaterialLocalizations, either use a '\r\n          'MaterialApp at the root of your application to include them '\r\n          'automatically, or add a Localization widget with a '\r\n          'MaterialLocalizations delegate.'\r\n        ),\r\n        ...context.describeMissingAncestor(expectedAncestorType: MaterialLocalizations)\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasScaffold = function debugCheckHasScaffold(context) {
    if (context == null) dart.nullFailed(I[126], 108, 41, "context");
    if (!dart.test(dart.fn(() => {
      if (!scaffold$.Scaffold.is(context.widget) && context.findAncestorWidgetOfExactType(scaffold$.Scaffold) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t96 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No Scaffold widget found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a Scaffold widget ancestor.")]);
          t96[S$.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(scaffold$.Scaffold)}));
          t96[S.$add](new assertions.ErrorHint.new("Typically, the Scaffold widget is introduced by the MaterialApp or " + "WidgetsApp widget at the top of your application widget tree."));
          return t96;
        })()));
      }
      return true;
    }, T$.VoidTobool())())) dart.assertFailed(null, I[126], 109, 10, "() {\r\n    if (context.widget is! Scaffold && context.findAncestorWidgetOfExactType<Scaffold>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No Scaffold widget found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a Scaffold widget ancestor.'),\r\n        ...context.describeMissingAncestor(expectedAncestorType: Scaffold),\r\n        ErrorHint(\r\n          'Typically, the Scaffold widget is introduced by the MaterialApp or '\r\n          'WidgetsApp widget at the top of your application widget tree.'\r\n        )\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasScaffoldMessenger = function debugCheckHasScaffoldMessenger(context) {
    if (context == null) dart.nullFailed(I[126], 139, 50, "context");
    if (!dart.test(dart.fn(() => {
      if (context.findAncestorWidgetOfExactType(scaffold$.ScaffoldMessenger) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t97 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No ScaffoldMessenger widget found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a ScaffoldMessenger widget ancestor.")]);
          t97[S$.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(scaffold$.ScaffoldMessenger)}));
          t97[S.$add](new assertions.ErrorHint.new("Typically, the ScaffoldMessenger widget is introduced by the MaterialApp " + "at the top of your application widget tree."));
          return t97;
        })()));
      }
      return true;
    }, T$.VoidTobool())())) dart.assertFailed(null, I[126], 140, 10, "() {\r\n    if (context.findAncestorWidgetOfExactType<ScaffoldMessenger>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No ScaffoldMessenger widget found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a ScaffoldMessenger widget ancestor.'),\r\n        ...context.describeMissingAncestor(expectedAncestorType: ScaffoldMessenger),\r\n        ErrorHint(\r\n          'Typically, the ScaffoldMessenger widget is introduced by the MaterialApp '\r\n          'at the top of your application widget tree.'\r\n        )\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  material_localizations.MaterialLocalizations = class MaterialLocalizations extends core.Object {
    get expandedIconTapHint() {
      return "Collapse";
    }
    get collapsedIconTapHint() {
      return "Expand";
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[127], 508, 48, "context");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[127], 509, 12, "debugCheckHasMaterialLocalizations(context)");
      return dart.nullCheck(localizations$.Localizations.of(material_localizations.MaterialLocalizations, context, dart.wrapType(material_localizations.MaterialLocalizations)));
    }
  };
  (material_localizations.MaterialLocalizations.new = function() {
    ;
  }).prototype = material_localizations.MaterialLocalizations.prototype;
  dart.addTypeTests(material_localizations.MaterialLocalizations);
  dart.addTypeCaches(material_localizations.MaterialLocalizations);
  dart.setGetterSignature(material_localizations.MaterialLocalizations, () => ({
    __proto__: dart.getGetters(material_localizations.MaterialLocalizations.__proto__),
    expandedIconTapHint: core.String,
    collapsedIconTapHint: core.String
  }));
  dart.setLibraryUri(material_localizations.MaterialLocalizations, I[128]);
  material_localizations._MaterialLocalizationsDelegate = class _MaterialLocalizationsDelegate extends localizations$.LocalizationsDelegate$(material_localizations.MaterialLocalizations) {
    isSupported(locale) {
      if (locale == null) dart.nullFailed(I[127], 518, 27, "locale");
      return locale.languageCode === "en";
    }
    load(locale) {
      if (locale == null) dart.nullFailed(I[127], 521, 45, "locale");
      return material_localizations.DefaultMaterialLocalizations.load(locale);
    }
    shouldReload(old) {
      material_localizations._MaterialLocalizationsDelegate.as(old);
      if (old == null) dart.nullFailed(I[127], 524, 52, "old");
      return false;
    }
    toString() {
      return "DefaultMaterialLocalizations.delegate(en_US)";
    }
  };
  (material_localizations._MaterialLocalizationsDelegate.new = function() {
    material_localizations._MaterialLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = material_localizations._MaterialLocalizationsDelegate.prototype;
  dart.addTypeTests(material_localizations._MaterialLocalizationsDelegate);
  dart.addTypeCaches(material_localizations._MaterialLocalizationsDelegate);
  dart.setMethodSignature(material_localizations._MaterialLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(material_localizations._MaterialLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(core.bool, [ui.Locale]),
    load: dart.fnType(async.Future$(material_localizations.MaterialLocalizations), [ui.Locale]),
    shouldReload: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(material_localizations._MaterialLocalizationsDelegate, I[128]);
  dart.defineExtensionMethods(material_localizations._MaterialLocalizationsDelegate, ['toString']);
  material_localizations.DefaultMaterialLocalizations = class DefaultMaterialLocalizations extends core.Object {
    [S$1._getDaysInMonth](year, month) {
      if (year == null) dart.nullFailed(I[127], 613, 27, "year");
      if (month == null) dart.nullFailed(I[127], 613, 37, "month");
      if (month === 2) {
        let isLeapYear = year[S$1.$modulo](4) === 0 && year[S$1.$modulo](100) !== 0 || year[S$1.$modulo](400) === 0;
        if (isLeapYear) return 29;
        return 28;
      }
      let daysInMonth = C[2673] || CT.C2673;
      return daysInMonth[S.$_get](dart.notNull(month) - 1);
    }
    formatHour(timeOfDay, opts) {
      if (timeOfDay == null) dart.nullFailed(I[127], 626, 31, "timeOfDay");
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      if (alwaysUse24HourFormat == null) dart.nullFailed(I[127], 626, 49, "alwaysUse24HourFormat");
      let format = this.timeOfDayFormat({alwaysUse24HourFormat: alwaysUse24HourFormat});
      switch (format) {
        case C[80] || CT.C80:
        {
          return this.formatDecimal(timeOfDay.hourOfPeriod === 0 ? 12 : timeOfDay.hourOfPeriod);
        }
        case C[76] || CT.C76:
        {
          return this[S$1._formatTwoDigitZeroPad](timeOfDay.hour);
        }
        default:
        {
          dart.throw(new core.AssertionError.new(dart.str(this[S.$runtimeType]) + " does not support " + dart.str(format) + "."));
        }
      }
    }
    [S$1._formatTwoDigitZeroPad](number) {
      if (number == null) dart.nullFailed(I[127], 640, 37, "number");
      if (!(0 <= dart.notNull(number) && dart.notNull(number) < 100)) dart.assertFailed(null, I[127], 641, 12, "0 <= number && number < 100");
      if (dart.notNull(number) < 10) return "0" + dart.str(number);
      return dart.str(number);
    }
    formatMinute(timeOfDay) {
      if (timeOfDay == null) dart.nullFailed(I[127], 650, 33, "timeOfDay");
      let minute = timeOfDay.minute;
      return dart.notNull(minute) < 10 ? "0" + dart.str(minute) : dart.toString(minute);
    }
    formatYear(date) {
      if (date == null) dart.nullFailed(I[127], 656, 30, "date");
      return dart.toString(date.year);
    }
    formatCompactDate(date) {
      if (date == null) dart.nullFailed(I[127], 659, 37, "date");
      let month = this[S$1._formatTwoDigitZeroPad](date.month);
      let day = this[S$1._formatTwoDigitZeroPad](date.day);
      let year = dart.toString(date.year)[S$1.$padLeft](4, "0");
      return dart.str(month) + "/" + dart.str(day) + "/" + year;
    }
    formatShortDate(date) {
      if (date == null) dart.nullFailed(I[127], 668, 35, "date");
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[S.$_get](dart.notNull(date.month) - 1);
      return dart.str(month) + " " + dart.str(date.day) + ", " + dart.str(date.year);
    }
    formatMediumDate(date) {
      if (date == null) dart.nullFailed(I[127], 674, 36, "date");
      let day = material_localizations.DefaultMaterialLocalizations._shortWeekdays[S.$_get](dart.notNull(date.weekday) - 1);
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[S.$_get](dart.notNull(date.month) - 1);
      return dart.str(day) + ", " + dart.str(month) + " " + dart.str(date.day);
    }
    formatFullDate(date) {
      if (date == null) dart.nullFailed(I[127], 681, 34, "date");
      let month = material_localizations.DefaultMaterialLocalizations._months[S.$_get](dart.notNull(date.month) - 1);
      return dart.str(material_localizations.DefaultMaterialLocalizations._weekdays[S.$_get](dart.notNull(date.weekday) - 1)) + ", " + dart.str(month) + " " + dart.str(date.day) + ", " + dart.str(date.year);
    }
    formatMonthYear(date) {
      if (date == null) dart.nullFailed(I[127], 687, 35, "date");
      let year = this.formatYear(date);
      let month = material_localizations.DefaultMaterialLocalizations._months[S.$_get](dart.notNull(date.month) - 1);
      return dart.str(month) + " " + dart.str(year);
    }
    formatShortMonthDay(date) {
      if (date == null) dart.nullFailed(I[127], 694, 39, "date");
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[S.$_get](dart.notNull(date.month) - 1);
      return dart.str(month) + " " + dart.str(date.day);
    }
    parseCompactDate(inputString) {
      if (inputString == null) {
        return null;
      }
      let inputParts = inputString[S$1.$split]("/");
      if (inputParts[S.$length] !== 3) {
        return null;
      }
      let year = core.int.tryParse(inputParts[S.$_get](2), {radix: 10});
      if (year == null || dart.notNull(year) < 1) {
        return null;
      }
      let month = core.int.tryParse(inputParts[S.$_get](0), {radix: 10});
      if (month == null || dart.notNull(month) < 1 || dart.notNull(month) > 12) {
        return null;
      }
      let day = core.int.tryParse(inputParts[S.$_get](1), {radix: 10});
      if (day == null || dart.notNull(day) < 1 || dart.notNull(day) > dart.notNull(this[S$1._getDaysInMonth](year, month))) {
        return null;
      }
      return new core.DateTime.new(year, month, day);
    }
    get narrowWeekdays() {
      return material_localizations.DefaultMaterialLocalizations._narrowWeekdays;
    }
    get firstDayOfWeekIndex() {
      return 0;
    }
    get dateSeparator() {
      return "/";
    }
    get dateHelpText() {
      return "mm/dd/yyyy";
    }
    get selectYearSemanticsLabel() {
      return "Select year";
    }
    get unspecifiedDate() {
      return "Date";
    }
    get unspecifiedDateRange() {
      return "Date Range";
    }
    get dateInputLabel() {
      return "Enter Date";
    }
    get dateRangeStartLabel() {
      return "Start Date";
    }
    get dateRangeEndLabel() {
      return "End Date";
    }
    dateRangeStartDateSemanticLabel(fullDate) {
      if (fullDate == null) dart.nullFailed(I[127], 759, 49, "fullDate");
      return "Start date " + dart.str(fullDate);
    }
    dateRangeEndDateSemanticLabel(fullDate) {
      if (fullDate == null) dart.nullFailed(I[127], 762, 47, "fullDate");
      return "End date " + dart.str(fullDate);
    }
    get invalidDateFormatLabel() {
      return "Invalid format.";
    }
    get invalidDateRangeLabel() {
      return "Invalid range.";
    }
    get dateOutOfRangeLabel() {
      return "Out of range.";
    }
    get saveButtonLabel() {
      return "SAVE";
    }
    get datePickerHelpText() {
      return "SELECT DATE";
    }
    get dateRangePickerHelpText() {
      return "SELECT RANGE";
    }
    get calendarModeButtonLabel() {
      return "Switch to calendar";
    }
    get inputDateModeButtonLabel() {
      return "Switch to input";
    }
    get timePickerDialHelpText() {
      return "SELECT TIME";
    }
    get timePickerInputHelpText() {
      return "ENTER TIME";
    }
    get timePickerHourLabel() {
      return "Hour";
    }
    get timePickerMinuteLabel() {
      return "Minute";
    }
    get invalidTimeLabel() {
      return "Enter a valid time";
    }
    get dialModeButtonLabel() {
      return "Switch to dial picker mode";
    }
    get inputTimeModeButtonLabel() {
      return "Switch to text input mode";
    }
    [S$1._formatDayPeriod](timeOfDay) {
      if (timeOfDay == null) dart.nullFailed(I[127], 809, 37, "timeOfDay");
      switch (timeOfDay.period) {
        case C[73] || CT.C73:
        {
          return this.anteMeridiemAbbreviation;
        }
        case C[74] || CT.C74:
        {
          return this.postMeridiemAbbreviation;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    formatDecimal(number) {
      if (number == null) dart.nullFailed(I[127], 819, 28, "number");
      if (dart.notNull(number) > -1000 && dart.notNull(number) < 1000) return dart.toString(number);
      let digits = number[S.$abs]()[S.$toString]();
      let result = new core.StringBuffer.new(dart.notNull(number) < 0 ? "-" : "");
      let maxDigitIndex = digits.length - 1;
      for (let i = 0; i <= maxDigitIndex; i = i + 1) {
        result.write(digits[S.$_get](i));
        if (i < maxDigitIndex && (maxDigitIndex - i)[S$1.$modulo](3) === 0) result.write(",");
      }
      return result.toString();
    }
    formatTimeOfDay(timeOfDay, opts) {
      let t98, t98$;
      if (timeOfDay == null) dart.nullFailed(I[127], 835, 36, "timeOfDay");
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      if (alwaysUse24HourFormat == null) dart.nullFailed(I[127], 835, 54, "alwaysUse24HourFormat");
      let buffer = new core.StringBuffer.new();
      t98 = buffer;
      (() => {
        t98.write(this.formatHour(timeOfDay, {alwaysUse24HourFormat: alwaysUse24HourFormat}));
        t98.write(":");
        t98.write(this.formatMinute(timeOfDay));
        return t98;
      })();
      if (dart.test(alwaysUse24HourFormat)) {
        return dart.str(buffer);
      }
      t98$ = buffer;
      (() => {
        t98$.write(" ");
        t98$.write(this[S$1._formatDayPeriod](timeOfDay));
        return t98$;
      })();
      return dart.str(buffer);
    }
    get openAppDrawerTooltip() {
      return "Open navigation menu";
    }
    get backButtonTooltip() {
      return "Back";
    }
    get closeButtonTooltip() {
      return "Close";
    }
    get deleteButtonTooltip() {
      return "Delete";
    }
    get moreButtonTooltip() {
      return "More";
    }
    get nextMonthTooltip() {
      return "Next month";
    }
    get previousMonthTooltip() {
      return "Previous month";
    }
    get nextPageTooltip() {
      return "Next page";
    }
    get previousPageTooltip() {
      return "Previous page";
    }
    get showMenuTooltip() {
      return "Show menu";
    }
    get drawerLabel() {
      return "Navigation menu";
    }
    get popupMenuLabel() {
      return "Popup menu";
    }
    get dialogLabel() {
      return "Dialog";
    }
    get alertDialogLabel() {
      return "Alert";
    }
    get searchFieldLabel() {
      return "Search";
    }
    aboutListTileTitle(applicationName) {
      if (applicationName == null) dart.nullFailed(I[127], 910, 36, "applicationName");
      return "About " + dart.str(applicationName);
    }
    get licensesPageTitle() {
      return "Licenses";
    }
    licensesPackageDetailText(licenseCount) {
      if (licenseCount == null) dart.nullFailed(I[127], 916, 40, "licenseCount");
      if (!(dart.notNull(licenseCount) >= 0)) dart.assertFailed(null, I[127], 917, 13, "licenseCount >= 0");
      switch (licenseCount) {
        case 0:
        {
          return "No licenses.";
        }
        case 1:
        {
          return "1 license.";
        }
        default:
        {
          return dart.str(licenseCount) + " licenses.";
        }
      }
    }
    pageRowsInfoTitle(firstRow, lastRow, rowCount, rowCountIsApproximate) {
      if (firstRow == null) dart.nullFailed(I[127], 929, 32, "firstRow");
      if (lastRow == null) dart.nullFailed(I[127], 929, 46, "lastRow");
      if (rowCount == null) dart.nullFailed(I[127], 929, 59, "rowCount");
      if (rowCountIsApproximate == null) dart.nullFailed(I[127], 929, 74, "rowCountIsApproximate");
      return dart.test(rowCountIsApproximate) ? dart.str(firstRow) + "–" + dart.str(lastRow) + " of about " + dart.str(rowCount) : dart.str(firstRow) + "–" + dart.str(lastRow) + " of " + dart.str(rowCount);
    }
    get rowsPerPageTitle() {
      return "Rows per page:";
    }
    tabLabel(opts) {
      let tabIndex = opts && 'tabIndex' in opts ? opts.tabIndex : null;
      if (tabIndex == null) dart.nullFailed(I[127], 939, 34, "tabIndex");
      let tabCount = opts && 'tabCount' in opts ? opts.tabCount : null;
      if (tabCount == null) dart.nullFailed(I[127], 939, 57, "tabCount");
      if (!(dart.notNull(tabIndex) >= 1)) dart.assertFailed(null, I[127], 940, 12, "tabIndex >= 1");
      if (!(dart.notNull(tabCount) >= 1)) dart.assertFailed(null, I[127], 941, 12, "tabCount >= 1");
      return "Tab " + dart.str(tabIndex) + " of " + dart.str(tabCount);
    }
    selectedRowCountTitle(selectedRowCount) {
      if (selectedRowCount == null) dart.nullFailed(I[127], 946, 36, "selectedRowCount");
      switch (selectedRowCount) {
        case 0:
        {
          return "No items selected";
        }
        case 1:
        {
          return "1 item selected";
        }
        default:
        {
          return dart.str(selectedRowCount) + " items selected";
        }
      }
    }
    get cancelButtonLabel() {
      return "CANCEL";
    }
    get closeButtonLabel() {
      return "CLOSE";
    }
    get continueButtonLabel() {
      return "CONTINUE";
    }
    get copyButtonLabel() {
      return "Copy";
    }
    get cutButtonLabel() {
      return "Cut";
    }
    get okButtonLabel() {
      return "OK";
    }
    get pasteButtonLabel() {
      return "Paste";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENSES";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get timePickerHourModeAnnouncement() {
      return "Select hours";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Select minutes";
    }
    get modalBarrierDismissLabel() {
      return "Dismiss";
    }
    get scriptCategory() {
      return typography$.ScriptCategory.englishLike;
    }
    timeOfDayFormat(opts) {
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      if (alwaysUse24HourFormat == null) dart.nullFailed(I[127], 1003, 42, "alwaysUse24HourFormat");
      return dart.test(alwaysUse24HourFormat) ? time.TimeOfDayFormat.HH_colon_mm : time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get signedInLabel() {
      return "Signed in";
    }
    get hideAccountsLabel() {
      return "Hide accounts";
    }
    get showAccountsLabel() {
      return "Show accounts";
    }
    get reorderItemUp() {
      return "Move up";
    }
    get reorderItemDown() {
      return "Move down";
    }
    get reorderItemLeft() {
      return "Move left";
    }
    get reorderItemRight() {
      return "Move right";
    }
    get reorderItemToEnd() {
      return "Move to the end";
    }
    get reorderItemToStart() {
      return "Move to the start";
    }
    get expandedIconTapHint() {
      return "Collapse";
    }
    get collapsedIconTapHint() {
      return "Expand";
    }
    get refreshIndicatorSemanticLabel() {
      return "Refresh";
    }
    static load(locale) {
      if (locale == null) dart.nullFailed(I[127], 1052, 52, "locale");
      return new (T$.SynchronousFutureOfMaterialLocalizations()).new(C[2674] || CT.C2674);
    }
    remainingTextFieldCharacterCount(remaining) {
      if (remaining == null) dart.nullFailed(I[127], 1063, 47, "remaining");
      switch (remaining) {
        case 0:
        {
          return "No characters remaining";
        }
        case 1:
        {
          return "1 character remaining";
        }
        default:
        {
          return dart.str(remaining) + " characters remaining";
        }
      }
    }
  };
  (material_localizations.DefaultMaterialLocalizations.new = function() {
    ;
  }).prototype = material_localizations.DefaultMaterialLocalizations.prototype;
  dart.addTypeTests(material_localizations.DefaultMaterialLocalizations);
  dart.addTypeCaches(material_localizations.DefaultMaterialLocalizations);
  material_localizations.DefaultMaterialLocalizations[dart.implements] = () => [material_localizations.MaterialLocalizations];
  dart.setMethodSignature(material_localizations.DefaultMaterialLocalizations, () => ({
    __proto__: dart.getMethods(material_localizations.DefaultMaterialLocalizations.__proto__),
    [S$1._getDaysInMonth]: dart.fnType(core.int, [core.int, core.int]),
    formatHour: dart.fnType(core.String, [time.TimeOfDay], {alwaysUse24HourFormat: core.bool}, {}),
    [S$1._formatTwoDigitZeroPad]: dart.fnType(core.String, [core.int]),
    formatMinute: dart.fnType(core.String, [time.TimeOfDay]),
    formatYear: dart.fnType(core.String, [core.DateTime]),
    formatCompactDate: dart.fnType(core.String, [core.DateTime]),
    formatShortDate: dart.fnType(core.String, [core.DateTime]),
    formatMediumDate: dart.fnType(core.String, [core.DateTime]),
    formatFullDate: dart.fnType(core.String, [core.DateTime]),
    formatMonthYear: dart.fnType(core.String, [core.DateTime]),
    formatShortMonthDay: dart.fnType(core.String, [core.DateTime]),
    parseCompactDate: dart.fnType(dart.nullable(core.DateTime), [dart.nullable(core.String)]),
    dateRangeStartDateSemanticLabel: dart.fnType(core.String, [core.String]),
    dateRangeEndDateSemanticLabel: dart.fnType(core.String, [core.String]),
    [S$1._formatDayPeriod]: dart.fnType(core.String, [time.TimeOfDay]),
    formatDecimal: dart.fnType(core.String, [core.int]),
    formatTimeOfDay: dart.fnType(core.String, [time.TimeOfDay], {alwaysUse24HourFormat: core.bool}, {}),
    aboutListTileTitle: dart.fnType(core.String, [core.String]),
    licensesPackageDetailText: dart.fnType(core.String, [core.int]),
    pageRowsInfoTitle: dart.fnType(core.String, [core.int, core.int, core.int, core.bool]),
    tabLabel: dart.fnType(core.String, [], {}, {tabCount: core.int, tabIndex: core.int}),
    selectedRowCountTitle: dart.fnType(core.String, [core.int]),
    timeOfDayFormat: dart.fnType(time.TimeOfDayFormat, [], {alwaysUse24HourFormat: core.bool}, {}),
    remainingTextFieldCharacterCount: dart.fnType(core.String, [core.int])
  }));
  dart.setGetterSignature(material_localizations.DefaultMaterialLocalizations, () => ({
    __proto__: dart.getGetters(material_localizations.DefaultMaterialLocalizations.__proto__),
    narrowWeekdays: core.List$(core.String),
    firstDayOfWeekIndex: core.int,
    dateSeparator: core.String,
    dateHelpText: core.String,
    selectYearSemanticsLabel: core.String,
    unspecifiedDate: core.String,
    unspecifiedDateRange: core.String,
    dateInputLabel: core.String,
    dateRangeStartLabel: core.String,
    dateRangeEndLabel: core.String,
    invalidDateFormatLabel: core.String,
    invalidDateRangeLabel: core.String,
    dateOutOfRangeLabel: core.String,
    saveButtonLabel: core.String,
    datePickerHelpText: core.String,
    dateRangePickerHelpText: core.String,
    calendarModeButtonLabel: core.String,
    inputDateModeButtonLabel: core.String,
    timePickerDialHelpText: core.String,
    timePickerInputHelpText: core.String,
    timePickerHourLabel: core.String,
    timePickerMinuteLabel: core.String,
    invalidTimeLabel: core.String,
    dialModeButtonLabel: core.String,
    inputTimeModeButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    backButtonTooltip: core.String,
    closeButtonTooltip: core.String,
    deleteButtonTooltip: core.String,
    moreButtonTooltip: core.String,
    nextMonthTooltip: core.String,
    previousMonthTooltip: core.String,
    nextPageTooltip: core.String,
    previousPageTooltip: core.String,
    showMenuTooltip: core.String,
    drawerLabel: core.String,
    popupMenuLabel: core.String,
    dialogLabel: core.String,
    alertDialogLabel: core.String,
    searchFieldLabel: core.String,
    licensesPageTitle: core.String,
    rowsPerPageTitle: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    okButtonLabel: core.String,
    pasteButtonLabel: core.String,
    selectAllButtonLabel: core.String,
    viewLicensesButtonLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    postMeridiemAbbreviation: core.String,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    modalBarrierDismissLabel: core.String,
    scriptCategory: typography$.ScriptCategory,
    signedInLabel: core.String,
    hideAccountsLabel: core.String,
    showAccountsLabel: core.String,
    reorderItemUp: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    expandedIconTapHint: core.String,
    collapsedIconTapHint: core.String,
    refreshIndicatorSemanticLabel: core.String
  }));
  dart.setLibraryUri(material_localizations.DefaultMaterialLocalizations, I[128]);
  dart.defineLazy(material_localizations.DefaultMaterialLocalizations, {
    /*material_localizations.DefaultMaterialLocalizations._shortWeekdays*/get _shortWeekdays() {
      return C[2675] || CT.C2675;
    },
    /*material_localizations.DefaultMaterialLocalizations._weekdays*/get _weekdays() {
      return C[2676] || CT.C2676;
    },
    /*material_localizations.DefaultMaterialLocalizations._narrowWeekdays*/get _narrowWeekdays() {
      return C[2677] || CT.C2677;
    },
    /*material_localizations.DefaultMaterialLocalizations._shortMonths*/get _shortMonths() {
      return C[2678] || CT.C2678;
    },
    /*material_localizations.DefaultMaterialLocalizations._months*/get _months() {
      return C[2679] || CT.C2679;
    },
    /*material_localizations.DefaultMaterialLocalizations.delegate*/get delegate() {
      return C[2680] || CT.C2680;
    }
  }, false);
  theme$.Theme = class Theme extends framework.StatelessWidget {
    get data() {
      return this[S$1.data$21];
    }
    set data(value) {
      super.data = value;
    }
    get child() {
      return this[S$1.child$27];
    }
    set child(value) {
      super.child = value;
    }
    static of(context) {
      let t98, t98$, t98$0, t98$1;
      if (context == null) dart.nullFailed(I[129], 107, 36, "context");
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(theme$._InheritedTheme);
      let localizations = localizations$.Localizations.of(material_localizations.MaterialLocalizations, context, dart.wrapType(material_localizations.MaterialLocalizations));
      let category = (t98$ = (t98 = localizations, t98 == null ? null : t98.scriptCategory), t98$ == null ? typography$.ScriptCategory.englishLike : t98$);
      let theme = (t98$1 = (t98$0 = inheritedTheme, t98$0 == null ? null : t98$0.theme.data), t98$1 == null ? theme$.Theme._kFallbackTheme : t98$1);
      return theme_data.ThemeData.localize(theme, theme.typography.geometryThemeFor(category));
    }
    build(context) {
      if (context == null) dart.nullFailed(I[129], 116, 29, "context");
      return new theme$._InheritedTheme.new({theme: this, child: new theme.CupertinoTheme.new({data: new theme_data.MaterialBasedCupertinoThemeData.new({materialTheme: this.data}), child: new icon_theme.IconTheme.new({data: this.data.iconTheme, child: this.child, $creationLocationd_0dea112b090073317d4: C[2681] || CT.C2681}), $creationLocationd_0dea112b090073317d4: C[2685] || CT.C2685}), $creationLocationd_0dea112b090073317d4: C[2689] || CT.C2689});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[129], 135, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfThemeData()).new("data", this.data, {showName: false}));
    }
  };
  (theme$.Theme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[129], 42, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[129], 43, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$21] = data;
    this[S$1.child$27] = child;
    if (!(child != null)) dart.assertFailed(null, I[129], 44, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, I[129], 45, 15, "data != null");
    theme$.Theme.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$.Theme.prototype;
  dart.addTypeTests(theme$.Theme);
  dart.addTypeCaches(theme$.Theme);
  dart.setMethodSignature(theme$.Theme, () => ({
    __proto__: dart.getMethods(theme$.Theme.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(theme$.Theme, I[130]);
  dart.setFieldSignature(theme$.Theme, () => ({
    __proto__: dart.getFields(theme$.Theme.__proto__),
    data: dart.finalFieldType(theme_data.ThemeData),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.defineLazy(theme$.Theme, {
    /*theme$.Theme._kFallbackTheme*/get _kFallbackTheme() {
      return theme_data.ThemeData.fallback();
    }
  }, false);
  theme$._InheritedTheme = class _InheritedTheme extends inherited_theme.InheritedTheme {
    get theme() {
      return this[S$1.theme];
    }
    set theme(value) {
      super.theme = value;
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(I[129], 152, 28, "context");
      if (child == null) dart.nullFailed(I[129], 152, 44, "child");
      return new theme$.Theme.new({data: this.theme.data, child: child, $creationLocationd_0dea112b090073317d4: C[2693] || CT.C2693});
    }
    updateShouldNotify(old) {
      theme$._InheritedTheme.as(old);
      if (old == null) dart.nullFailed(I[129], 157, 43, "old");
      return !dart.equals(this.theme.data, old.theme.data);
    }
  };
  (theme$._InheritedTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    if (theme == null) dart.nullFailed(I[129], 144, 19, "theme");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[129], 145, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.theme] = theme;
    if (!(theme != null)) dart.assertFailed(null, I[129], 146, 15, "theme != null");
    theme$._InheritedTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$._InheritedTheme.prototype;
  dart.addTypeTests(theme$._InheritedTheme);
  dart.addTypeCaches(theme$._InheritedTheme);
  dart.setMethodSignature(theme$._InheritedTheme, () => ({
    __proto__: dart.getMethods(theme$._InheritedTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(theme$._InheritedTheme, I[130]);
  dart.setFieldSignature(theme$._InheritedTheme, () => ({
    __proto__: dart.getFields(theme$._InheritedTheme.__proto__),
    theme: dart.finalFieldType(theme$.Theme)
  }));
  theme$.ThemeDataTween = class ThemeDataTween extends tween.Tween$(theme_data.ThemeData) {
    lerp(t) {
      if (t == null) dart.nullFailed(I[129], 175, 25, "t");
      return theme_data.ThemeData.lerp(dart.nullCheck(this.begin), dart.nullCheck(this.end), t);
    }
  };
  (theme$.ThemeDataTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    theme$.ThemeDataTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = theme$.ThemeDataTween.prototype;
  dart.addTypeTests(theme$.ThemeDataTween);
  dart.addTypeCaches(theme$.ThemeDataTween);
  dart.setLibraryUri(theme$.ThemeDataTween, I[130]);
  theme$.AnimatedTheme = class AnimatedTheme extends implicit_animations.ImplicitlyAnimatedWidget {
    get data() {
      return this[S$1.data$22];
    }
    set data(value) {
      super.data = value;
    }
    get child() {
      return this[S$1.child$28];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new theme$._AnimatedThemeState.new();
    }
  };
  (theme$.AnimatedTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(I[129], 199, 19, "data");
    let curve = opts && 'curve' in opts ? opts.curve : C[91] || CT.C91;
    if (curve == null) dart.nullFailed(I[129], 200, 11, "curve");
    let duration = opts && 'duration' in opts ? opts.duration : C[334] || CT.C334;
    if (duration == null) dart.nullFailed(I[129], 201, 14, "duration");
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[129], 203, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$22] = data;
    this[S$1.child$28] = child;
    if (!(child != null)) dart.assertFailed(null, I[129], 204, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, I[129], 205, 15, "data != null");
    theme$.AnimatedTheme.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$.AnimatedTheme.prototype;
  dart.addTypeTests(theme$.AnimatedTheme);
  dart.addTypeCaches(theme$.AnimatedTheme);
  dart.setMethodSignature(theme$.AnimatedTheme, () => ({
    __proto__: dart.getMethods(theme$.AnimatedTheme.__proto__),
    createState: dart.fnType(theme$._AnimatedThemeState, [])
  }));
  dart.setLibraryUri(theme$.AnimatedTheme, I[130]);
  dart.setFieldSignature(theme$.AnimatedTheme, () => ({
    __proto__: dart.getFields(theme$.AnimatedTheme.__proto__),
    data: dart.finalFieldType(theme_data.ThemeData),
    child: dart.finalFieldType(framework.Widget)
  }));
  theme$._AnimatedThemeState = class _AnimatedThemeState extends implicit_animations.AnimatedWidgetBaseState$(theme$.AnimatedTheme) {
    forEachTween(visitor) {
      if (visitor == null) dart.nullFailed(I[129], 224, 43, "visitor");
      this[S$1._data] = theme$.ThemeDataTween.as(dart.nullCheck(visitor(this[S$1._data], this.widget.data, dart.fn(value => new theme$.ThemeDataTween.new({begin: theme_data.ThemeData.as(value)}), T$.dynamicToThemeDataTween()))));
    }
    build(context) {
      if (context == null) dart.nullFailed(I[129], 230, 29, "context");
      return new theme$.Theme.new({child: this.widget.child, data: dart.nullCheck(this[S$1._data]).evaluate(this.animation), $creationLocationd_0dea112b090073317d4: C[2697] || CT.C2697});
    }
    debugFillProperties(description) {
      if (description == null) dart.nullFailed(I[129], 238, 56, "description");
      super.debugFillProperties(description);
      description.add(new (T$.DiagnosticsPropertyOfThemeDataTween()).new("data", this[S$1._data], {showName: false, defaultValue: null}));
    }
  };
  (theme$._AnimatedThemeState.new = function() {
    this[S$1._data] = null;
    theme$._AnimatedThemeState.__proto__.new.call(this);
    ;
  }).prototype = theme$._AnimatedThemeState.prototype;
  dart.addTypeTests(theme$._AnimatedThemeState);
  dart.addTypeCaches(theme$._AnimatedThemeState);
  dart.setMethodSignature(theme$._AnimatedThemeState, () => ({
    __proto__: dart.getMethods(theme$._AnimatedThemeState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(dart.nullable(tween.Tween), [dart.nullable(tween.Tween), dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(theme$._AnimatedThemeState, I[130]);
  dart.setFieldSignature(theme$._AnimatedThemeState, () => ({
    __proto__: dart.getFields(theme$._AnimatedThemeState.__proto__),
    [S$1._data]: dart.fieldType(dart.nullable(theme$.ThemeDataTween))
  }));
  dart.defineLazy(theme$, {
    /*theme$.kThemeAnimationDuration*/get kThemeAnimationDuration() {
      return C[334] || CT.C334;
    }
  }, false);
  const Object_Diagnosticable$36$30 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$30.new = function() {
  }).prototype = Object_Diagnosticable$36$30.prototype;
  dart.applyMixin(Object_Diagnosticable$36$30, diagnostics.Diagnosticable);
  app_bar_theme.AppBarTheme = class AppBarTheme extends Object_Diagnosticable$36$30 {
    get brightness() {
      return this[S$1.brightness$3];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$21];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$1.foregroundColor$2];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get elevation() {
      return this[S$1.elevation$26];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[S$1.shadowColor$6];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get iconTheme() {
      return this[S$1.iconTheme$1];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[S$1.actionsIconTheme];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[S$1.textTheme$4];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get centerTitle() {
      return this[S$1.centerTitle$1];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get titleSpacing() {
      return this[S$1.titleSpacing];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get toolbarTextStyle() {
      return this[S$1.toolbarTextStyle];
    }
    set toolbarTextStyle(value) {
      super.toolbarTextStyle = value;
    }
    get titleTextStyle() {
      return this[S$1.titleTextStyle$3];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get systemOverlayStyle() {
      return this[S$1.systemOverlayStyle];
    }
    set systemOverlayStyle(value) {
      super.systemOverlayStyle = value;
    }
    get backwardsCompatibility() {
      return this[S$1.backwardsCompatibility];
    }
    set backwardsCompatibility(value) {
      super.backwardsCompatibility = value;
    }
    get color() {
      return this.backgroundColor;
    }
    copyWith(opts) {
      let t98, t98$, t98$0, t98$1, t98$2, t98$3, t98$4, t98$5, t98$6, t98$7, t98$8, t98$9, t98$10, t98$11, t98$12;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
      if (!(color == null || backgroundColor == null)) dart.assertFailed("The color and backgroundColor parameters mean the same thing. Only specify one.", I[131], 192, 7, "color == null || backgroundColor == null");
      return new app_bar_theme.AppBarTheme.new({brightness: (t98 = brightness, t98 == null ? this.brightness : t98), backgroundColor: (t98$0 = (t98$ = backgroundColor, t98$ == null ? color : t98$), t98$0 == null ? this.backgroundColor : t98$0), foregroundColor: (t98$1 = foregroundColor, t98$1 == null ? this.foregroundColor : t98$1), elevation: (t98$2 = elevation, t98$2 == null ? this.elevation : t98$2), shadowColor: (t98$3 = shadowColor, t98$3 == null ? this.shadowColor : t98$3), iconTheme: (t98$4 = iconTheme, t98$4 == null ? this.iconTheme : t98$4), actionsIconTheme: (t98$5 = actionsIconTheme, t98$5 == null ? this.actionsIconTheme : t98$5), textTheme: (t98$6 = textTheme, t98$6 == null ? this.textTheme : t98$6), centerTitle: (t98$7 = centerTitle, t98$7 == null ? this.centerTitle : t98$7), titleSpacing: (t98$8 = titleSpacing, t98$8 == null ? this.titleSpacing : t98$8), toolbarTextStyle: (t98$9 = toolbarTextStyle, t98$9 == null ? this.toolbarTextStyle : t98$9), titleTextStyle: (t98$10 = titleTextStyle, t98$10 == null ? this.titleTextStyle : t98$10), systemOverlayStyle: (t98$11 = systemOverlayStyle, t98$11 == null ? this.systemOverlayStyle : t98$11), backwardsCompatibility: (t98$12 = backwardsCompatibility, t98$12 == null ? this.backwardsCompatibility : t98$12)});
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[131], 213, 38, "context");
      return theme$.Theme.of(context).appBarTheme;
    }
    static lerp(a, b, t) {
      let t98, t98$, t98$0, t98$1, t98$2, t98$3, t98$4, t98$5, t98$6, t98$7, t98$8, t98$9, t98$10, t98$11, t98$12, t98$13, t98$14, t98$15, t98$16, t98$17, t98$18, t98$19, t98$20, t98$21, t98$22, t98$23, t98$24, t98$25;
      if (t == null) dart.nullFailed(I[131], 222, 66, "t");
      if (!(t != null)) dart.assertFailed(null, I[131], 223, 12, "t != null");
      return new app_bar_theme.AppBarTheme.new({brightness: dart.notNull(t) < 0.5 ? (t98 = a, t98 == null ? null : t98.brightness) : (t98$ = b, t98$ == null ? null : t98$.brightness), backgroundColor: ui.Color.lerp((t98$0 = a, t98$0 == null ? null : t98$0.backgroundColor), (t98$1 = b, t98$1 == null ? null : t98$1.backgroundColor), t), foregroundColor: ui.Color.lerp((t98$2 = a, t98$2 == null ? null : t98$2.foregroundColor), (t98$3 = b, t98$3 == null ? null : t98$3.foregroundColor), t), elevation: ui.lerpDouble((t98$4 = a, t98$4 == null ? null : t98$4.elevation), (t98$5 = b, t98$5 == null ? null : t98$5.elevation), t), shadowColor: ui.Color.lerp((t98$6 = a, t98$6 == null ? null : t98$6.shadowColor), (t98$7 = b, t98$7 == null ? null : t98$7.shadowColor), t), iconTheme: icon_theme_data.IconThemeData.lerp((t98$8 = a, t98$8 == null ? null : t98$8.iconTheme), (t98$9 = b, t98$9 == null ? null : t98$9.iconTheme), t), actionsIconTheme: icon_theme_data.IconThemeData.lerp((t98$10 = a, t98$10 == null ? null : t98$10.actionsIconTheme), (t98$11 = b, t98$11 == null ? null : t98$11.actionsIconTheme), t), textTheme: text_theme.TextTheme.lerp((t98$12 = a, t98$12 == null ? null : t98$12.textTheme), (t98$13 = b, t98$13 == null ? null : t98$13.textTheme), t), centerTitle: dart.notNull(t) < 0.5 ? (t98$14 = a, t98$14 == null ? null : t98$14.centerTitle) : (t98$15 = b, t98$15 == null ? null : t98$15.centerTitle), titleSpacing: ui.lerpDouble((t98$16 = a, t98$16 == null ? null : t98$16.titleSpacing), (t98$17 = b, t98$17 == null ? null : t98$17.titleSpacing), t), toolbarTextStyle: text_style.TextStyle.lerp((t98$18 = a, t98$18 == null ? null : t98$18.toolbarTextStyle), (t98$19 = b, t98$19 == null ? null : t98$19.toolbarTextStyle), t), titleTextStyle: text_style.TextStyle.lerp((t98$20 = a, t98$20 == null ? null : t98$20.titleTextStyle), (t98$21 = b, t98$21 == null ? null : t98$21.titleTextStyle), t), systemOverlayStyle: dart.notNull(t) < 0.5 ? (t98$22 = a, t98$22 == null ? null : t98$22.systemOverlayStyle) : (t98$23 = b, t98$23 == null ? null : t98$23.systemOverlayStyle), backwardsCompatibility: dart.notNull(t) < 0.5 ? (t98$24 = a, t98$24 == null ? null : t98$24.backwardsCompatibility) : (t98$25 = b, t98$25 == null ? null : t98$25.backwardsCompatibility)});
    }
    get hashCode() {
      return ui.hashValues(this.brightness, this.backgroundColor, this.foregroundColor, this.elevation, this.shadowColor, this.iconTheme, this.actionsIconTheme, this.textTheme, this.centerTitle, this.titleSpacing, this.toolbarTextStyle, this.titleTextStyle, this.systemOverlayStyle, this.backwardsCompatibility);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[S.$runtimeType])) return false;
      return app_bar_theme.AppBarTheme.is(other) && other.brightness == this.brightness && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.foregroundColor, this.foregroundColor) && other.elevation == this.elevation && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.iconTheme, this.iconTheme) && dart.equals(other.actionsIconTheme, this.actionsIconTheme) && dart.equals(other.textTheme, this.textTheme) && other.centerTitle == this.centerTitle && other.titleSpacing == this.titleSpacing && dart.equals(other.toolbarTextStyle, this.toolbarTextStyle) && dart.equals(other.titleTextStyle, this.titleTextStyle) && dart.equals(other.systemOverlayStyle, this.systemOverlayStyle) && other.backwardsCompatibility == this.backwardsCompatibility;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[131], 286, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("iconTheme", this.iconTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("actionsIconTheme", this.actionsIconTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("textTheme", this.textTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("centerTitle", this.centerTitle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("titleSpacing", this.titleSpacing, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("toolbarTextStyle", this.toolbarTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("titleTextStyle", this.titleTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("backwardsCompatibility", this.backwardsCompatibility, {defaultValue: null}));
    }
  };
  (app_bar_theme.AppBarTheme.new = function(opts) {
    let t98;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    this[S$1.brightness$3] = brightness;
    this[S$1.foregroundColor$2] = foregroundColor;
    this[S$1.elevation$26] = elevation;
    this[S$1.shadowColor$6] = shadowColor;
    this[S$1.iconTheme$1] = iconTheme;
    this[S$1.actionsIconTheme] = actionsIconTheme;
    this[S$1.textTheme$4] = textTheme;
    this[S$1.centerTitle$1] = centerTitle;
    this[S$1.titleSpacing] = titleSpacing;
    this[S$1.toolbarTextStyle] = toolbarTextStyle;
    this[S$1.titleTextStyle$3] = titleTextStyle;
    this[S$1.systemOverlayStyle] = systemOverlayStyle;
    this[S$1.backwardsCompatibility] = backwardsCompatibility;
    if (!(color == null || backgroundColor == null)) dart.assertFailed("The color and backgroundColor parameters mean the same thing. Only specify one.", I[131], 47, 10, "color == null || backgroundColor == null");
    this[S$1.backgroundColor$21] = (t98 = backgroundColor, t98 == null ? color : t98);
    ;
  }).prototype = app_bar_theme.AppBarTheme.prototype;
  dart.addTypeTests(app_bar_theme.AppBarTheme);
  dart.addTypeCaches(app_bar_theme.AppBarTheme);
  dart.setMethodSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getMethods(app_bar_theme.AppBarTheme.__proto__),
    copyWith: dart.fnType(app_bar_theme.AppBarTheme, [], {actionsIconTheme: dart.nullable(icon_theme_data.IconThemeData), backgroundColor: dart.nullable(ui.Color), backwardsCompatibility: dart.nullable(core.bool), brightness: dart.nullable(ui.Brightness), centerTitle: dart.nullable(core.bool), color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), foregroundColor: dart.nullable(ui.Color), iconTheme: dart.nullable(icon_theme_data.IconThemeData), shadowColor: dart.nullable(ui.Color), systemOverlayStyle: dart.nullable(system_chrome.SystemUiOverlayStyle), textTheme: dart.nullable(text_theme.TextTheme), titleSpacing: dart.nullable(core.double), titleTextStyle: dart.nullable(text_style.TextStyle), toolbarTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setGetterSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getGetters(app_bar_theme.AppBarTheme.__proto__),
    color: dart.nullable(ui.Color)
  }));
  dart.setLibraryUri(app_bar_theme.AppBarTheme, I[132]);
  dart.setFieldSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getFields(app_bar_theme.AppBarTheme.__proto__),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle)),
    backwardsCompatibility: dart.finalFieldType(dart.nullable(core.bool))
  }));
  dart.defineExtensionMethods(app_bar_theme.AppBarTheme, ['_equals']);
  dart.defineExtensionAccessors(app_bar_theme.AppBarTheme, ['hashCode']);
  app_bar._ToolbarContainerLayout = class _ToolbarContainerLayout extends shifted_box.SingleChildLayoutDelegate {
    get toolbarHeight() {
      return this[S$1.toolbarHeight];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    getConstraintsForChild(constraints) {
      if (constraints == null) dart.nullFailed(I[133], 37, 56, "constraints");
      return constraints.tighten({height: this.toolbarHeight});
    }
    getSize(constraints) {
      if (constraints == null) dart.nullFailed(I[133], 42, 31, "constraints");
      return new ui.Size.new(constraints.maxWidth, this.toolbarHeight);
    }
    getPositionForChild(size, childSize) {
      if (size == null) dart.nullFailed(I[133], 47, 35, "size");
      if (childSize == null) dart.nullFailed(I[133], 47, 46, "childSize");
      return new ui.Offset.new(0.0, dart.notNull(size.height) - dart.notNull(childSize.height));
    }
    shouldRelayout(oldDelegate) {
      app_bar._ToolbarContainerLayout.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[133], 52, 47, "oldDelegate");
      return this.toolbarHeight != oldDelegate.toolbarHeight;
    }
  };
  (app_bar._ToolbarContainerLayout.new = function(toolbarHeight) {
    if (toolbarHeight == null) dart.nullFailed(I[133], 32, 38, "toolbarHeight");
    this[S$1.toolbarHeight] = toolbarHeight;
    app_bar._ToolbarContainerLayout.__proto__.new.call(this);
    ;
  }).prototype = app_bar._ToolbarContainerLayout.prototype;
  dart.addTypeTests(app_bar._ToolbarContainerLayout);
  dart.addTypeCaches(app_bar._ToolbarContainerLayout);
  dart.setMethodSignature(app_bar._ToolbarContainerLayout, () => ({
    __proto__: dart.getMethods(app_bar._ToolbarContainerLayout.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(app_bar._ToolbarContainerLayout, I[134]);
  dart.setFieldSignature(app_bar._ToolbarContainerLayout, () => ({
    __proto__: dart.getFields(app_bar._ToolbarContainerLayout.__proto__),
    toolbarHeight: dart.finalFieldType(core.double)
  }));
  app_bar.AppBar = class AppBar extends framework.StatefulWidget {
    get leading() {
      return this[S$1.leading$3];
    }
    set leading(value) {
      super.leading = value;
    }
    get automaticallyImplyLeading() {
      return this[S$1.automaticallyImplyLeading];
    }
    set automaticallyImplyLeading(value) {
      super.automaticallyImplyLeading = value;
    }
    get title() {
      return this[S$1.title$5];
    }
    set title(value) {
      super.title = value;
    }
    get actions() {
      return this[S$1.actions$1];
    }
    set actions(value) {
      super.actions = value;
    }
    get flexibleSpace() {
      return this[S$1.flexibleSpace];
    }
    set flexibleSpace(value) {
      super.flexibleSpace = value;
    }
    get bottom() {
      return this[S$1.bottom];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get elevation() {
      return this[S$1.elevation$27];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[S$1.shadowColor$7];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get shape() {
      return this[S$1.shape$25];
    }
    set shape(value) {
      super.shape = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$22];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$1.foregroundColor$3];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get brightness() {
      return this[S$1.brightness$4];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get iconTheme() {
      return this[S$1.iconTheme$2];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[S$1.actionsIconTheme$1];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[S$1.textTheme$5];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primary() {
      return this[S$1.primary$2];
    }
    set primary(value) {
      super.primary = value;
    }
    get centerTitle() {
      return this[S$1.centerTitle$2];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get excludeHeaderSemantics() {
      return this[S$1.excludeHeaderSemantics];
    }
    set excludeHeaderSemantics(value) {
      super.excludeHeaderSemantics = value;
    }
    get titleSpacing() {
      return this[S$1.titleSpacing$1];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get toolbarOpacity() {
      return this[S$1.toolbarOpacity$1];
    }
    set toolbarOpacity(value) {
      super.toolbarOpacity = value;
    }
    get bottomOpacity() {
      return this[S$1.bottomOpacity];
    }
    set bottomOpacity(value) {
      super.bottomOpacity = value;
    }
    get preferredSize() {
      return this[S$1.preferredSize];
    }
    set preferredSize(value) {
      super.preferredSize = value;
    }
    get toolbarHeight() {
      return this[S$1.toolbarHeight$1];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    get leadingWidth() {
      return this[S$1.leadingWidth];
    }
    set leadingWidth(value) {
      super.leadingWidth = value;
    }
    get backwardsCompatibility() {
      return this[S$1.backwardsCompatibility$1];
    }
    set backwardsCompatibility(value) {
      super.backwardsCompatibility = value;
    }
    get toolbarTextStyle() {
      return this[S$1.toolbarTextStyle$1];
    }
    set toolbarTextStyle(value) {
      super.toolbarTextStyle = value;
    }
    get titleTextStyle() {
      return this[S$1.titleTextStyle$4];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get systemOverlayStyle() {
      return this[S$1.systemOverlayStyle$1];
    }
    set systemOverlayStyle(value) {
      super.systemOverlayStyle = value;
    }
    [S$1._getEffectiveCenterTitle$1](theme) {
      if (theme == null) dart.nullFailed(I[133], 678, 43, "theme");
      if (this.centerTitle != null) return dart.nullCheck(this.centerTitle);
      if (theme.appBarTheme.centerTitle != null) return dart.nullCheck(theme.appBarTheme.centerTitle);
      if (!(theme.platform != null)) dart.assertFailed(null, I[133], 683, 12, "theme.platform != null");
      switch (theme.platform) {
        case C[44] || CT.C44:
        case C[45] || CT.C45:
        case C[46] || CT.C46:
        case C[47] || CT.C47:
        {
          return false;
        }
        case C[48] || CT.C48:
        case C[49] || CT.C49:
        {
          return this.actions == null || dart.notNull(dart.nullCheck(this.actions)[S.$length]) < 2;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    createState() {
      return new app_bar._AppBarState.new();
    }
  };
  (app_bar.AppBar.new = function(opts) {
    let t99, t99$, t98;
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
    if (automaticallyImplyLeading == null) dart.nullFailed(I[133], 173, 10, "automaticallyImplyLeading");
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    if (primary == null) dart.nullFailed(I[133], 187, 10, "primary");
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
    if (excludeHeaderSemantics == null) dart.nullFailed(I[133], 189, 10, "excludeHeaderSemantics");
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : 1;
    if (toolbarOpacity == null) dart.nullFailed(I[133], 191, 10, "toolbarOpacity");
    let bottomOpacity = opts && 'bottomOpacity' in opts ? opts.bottomOpacity : 1;
    if (bottomOpacity == null) dart.nullFailed(I[133], 192, 10, "bottomOpacity");
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.leading$3] = leading;
    this[S$1.automaticallyImplyLeading] = automaticallyImplyLeading;
    this[S$1.title$5] = title;
    this[S$1.actions$1] = actions;
    this[S$1.flexibleSpace] = flexibleSpace;
    this[S$1.bottom] = bottom;
    this[S$1.elevation$27] = elevation;
    this[S$1.shadowColor$7] = shadowColor;
    this[S$1.shape$25] = shape;
    this[S$1.backgroundColor$22] = backgroundColor;
    this[S$1.foregroundColor$3] = foregroundColor;
    this[S$1.brightness$4] = brightness;
    this[S$1.iconTheme$2] = iconTheme;
    this[S$1.actionsIconTheme$1] = actionsIconTheme;
    this[S$1.textTheme$5] = textTheme;
    this[S$1.primary$2] = primary;
    this[S$1.centerTitle$2] = centerTitle;
    this[S$1.excludeHeaderSemantics] = excludeHeaderSemantics;
    this[S$1.titleSpacing$1] = titleSpacing;
    this[S$1.toolbarOpacity$1] = toolbarOpacity;
    this[S$1.bottomOpacity] = bottomOpacity;
    this[S$1.toolbarHeight$1] = toolbarHeight;
    this[S$1.leadingWidth] = leadingWidth;
    this[S$1.backwardsCompatibility$1] = backwardsCompatibility;
    this[S$1.toolbarTextStyle$1] = toolbarTextStyle;
    this[S$1.titleTextStyle$4] = titleTextStyle;
    this[S$1.systemOverlayStyle$1] = systemOverlayStyle;
    if (!(automaticallyImplyLeading != null)) dart.assertFailed(null, I[133], 199, 15, "automaticallyImplyLeading != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[133], 200, 15, "elevation == null || elevation >= 0.0");
    if (!(primary != null)) dart.assertFailed(null, I[133], 201, 15, "primary != null");
    if (!(toolbarOpacity != null)) dart.assertFailed(null, I[133], 202, 15, "toolbarOpacity != null");
    if (!(bottomOpacity != null)) dart.assertFailed(null, I[133], 203, 15, "bottomOpacity != null");
    this[S$1.preferredSize] = new ui.Size.fromHeight((t98 = toolbarHeight, t98 == null ? 56 + dart.notNull((t99$ = (t99 = bottom, t99 == null ? null : t99.preferredSize.height), t99$ == null ? 0.0 : t99$)) : t98));
    app_bar.AppBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar.AppBar.prototype;
  dart.addTypeTests(app_bar.AppBar);
  dart.addTypeCaches(app_bar.AppBar);
  app_bar.AppBar[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(app_bar.AppBar, () => ({
    __proto__: dart.getMethods(app_bar.AppBar.__proto__),
    [S$1._getEffectiveCenterTitle$1]: dart.fnType(core.bool, [theme_data.ThemeData]),
    createState: dart.fnType(app_bar._AppBarState, [])
  }));
  dart.setLibraryUri(app_bar.AppBar, I[134]);
  dart.setFieldSignature(app_bar.AppBar, () => ({
    __proto__: dart.getFields(app_bar.AppBar.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(core.bool),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    flexibleSpace: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottom: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    primary: dart.finalFieldType(core.bool),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(core.bool),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    toolbarOpacity: dart.finalFieldType(core.double),
    bottomOpacity: dart.finalFieldType(core.double),
    preferredSize: dart.finalFieldType(ui.Size),
    toolbarHeight: dart.finalFieldType(dart.nullable(core.double)),
    leadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    backwardsCompatibility: dart.finalFieldType(dart.nullable(core.bool)),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle))
  }));
  app_bar._AppBarState = class _AppBarState extends framework.State$(app_bar.AppBar) {
    [S$1._handleDrawerButton]() {
      scaffold$.Scaffold.of(this.context).openDrawer();
    }
    [S$1._handleDrawerButtonEnd]() {
      scaffold$.Scaffold.of(this.context).openEndDrawer();
    }
    build(context) {
      let t98, t98$, t98$0, t98$1, t98$2, t98$3, t98$4, t98$5, t98$6, t98$7, t98$8, t98$9, t98$10, t98$11, t98$12, t98$13, t98$14, t98$15, t98$16, t98$17, t98$18, t98$19, t99, t98$20, t98$21, t98$22, t99$, t98$23, t98$24, t99$0, t98$25, t98$26, t98$27, t99$1, t98$28, t98$29, t98$30, t98$31, t98$32, t98$33, t98$34, t98$35, t99$2, t99$3, t99$4, t99$5, t99$6, t99$7, t99$8, t99$9;
      if (context == null) dart.nullFailed(I[133], 713, 29, "context");
      if (!(!dart.test(this.widget.primary) || dart.test(debug.debugCheckHasMediaQuery(context)))) dart.assertFailed(null, I[133], 714, 12, "!widget.primary || debugCheckHasMediaQuery(context)");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[133], 715, 12, "debugCheckHasMaterialLocalizations(context)");
      let theme = theme$.Theme.of(context);
      let colorScheme = theme.colorScheme;
      let appBarTheme = app_bar_theme.AppBarTheme.of(context);
      let scaffold = scaffold$.Scaffold.maybeOf(context);
      let parentRoute = routes.ModalRoute.of(T$.ObjectN(), context);
      let hasDrawer = (t98$ = (t98 = scaffold, t98 == null ? null : t98.hasDrawer), t98$ == null ? false : t98$);
      let hasEndDrawer = (t98$1 = (t98$0 = scaffold, t98$0 == null ? null : t98$0.hasEndDrawer), t98$1 == null ? false : t98$1);
      let canPop = (t98$3 = (t98$2 = parentRoute, t98$2 == null ? null : t98$2.canPop), t98$3 == null ? false : t98$3);
      let useCloseButton = pages.PageRoute.is(parentRoute) && dart.test(parentRoute.fullscreenDialog);
      let toolbarHeight = (t98$4 = this.widget.toolbarHeight, t98$4 == null ? 56 : t98$4);
      let backwardsCompatibility = (t98$6 = (t98$5 = this.widget.backwardsCompatibility, t98$5 == null ? appBarTheme.backwardsCompatibility : t98$5), t98$6 == null ? true : t98$6);
      let backgroundColor = dart.test(backwardsCompatibility) ? (t98$8 = (t98$7 = this.widget.backgroundColor, t98$7 == null ? appBarTheme.backgroundColor : t98$7), t98$8 == null ? theme.primaryColor : t98$8) : (t98$10 = (t98$9 = this.widget.backgroundColor, t98$9 == null ? appBarTheme.backgroundColor : t98$9), t98$10 == null ? colorScheme.brightness == ui.Brightness.dark ? colorScheme.surface : colorScheme.primary : t98$10);
      let foregroundColor = (t98$12 = (t98$11 = this.widget.foregroundColor, t98$11 == null ? appBarTheme.foregroundColor : t98$11), t98$12 == null ? colorScheme.brightness == ui.Brightness.dark ? colorScheme.onSurface : colorScheme.onPrimary : t98$12);
      let overallIconTheme = dart.test(backwardsCompatibility) ? (t98$14 = (t98$13 = this.widget.iconTheme, t98$13 == null ? appBarTheme.iconTheme : t98$13), t98$14 == null ? theme.primaryIconTheme : t98$14) : (t98$16 = (t98$15 = this.widget.iconTheme, t98$15 == null ? appBarTheme.iconTheme : t98$15), t98$16 == null ? theme.iconTheme.copyWith({color: foregroundColor}) : t98$16);
      let actionsIconTheme = (t98$18 = (t98$17 = this.widget.actionsIconTheme, t98$17 == null ? appBarTheme.actionsIconTheme : t98$17), t98$18 == null ? overallIconTheme : t98$18);
      let toolbarTextStyle = dart.test(backwardsCompatibility) ? (t98$21 = (t98$20 = (t98$19 = this.widget.textTheme, t98$19 == null ? null : t98$19.bodyText2), t98$20 == null ? (t99 = appBarTheme.textTheme, t99 == null ? null : t99.bodyText2) : t98$20), t98$21 == null ? theme.primaryTextTheme.bodyText2 : t98$21) : (t98$23 = (t98$22 = this.widget.toolbarTextStyle, t98$22 == null ? appBarTheme.toolbarTextStyle : t98$22), t98$23 == null ? (t99$ = theme.textTheme.bodyText2, t99$ == null ? null : t99$.copyWith({color: foregroundColor})) : t98$23);
      let titleTextStyle = dart.test(backwardsCompatibility) ? (t98$26 = (t98$25 = (t98$24 = this.widget.textTheme, t98$24 == null ? null : t98$24.headline6), t98$25 == null ? (t99$0 = appBarTheme.textTheme, t99$0 == null ? null : t99$0.headline6) : t98$25), t98$26 == null ? theme.primaryTextTheme.headline6 : t98$26) : (t98$28 = (t98$27 = this.widget.titleTextStyle, t98$27 == null ? appBarTheme.titleTextStyle : t98$27), t98$28 == null ? (t99$1 = theme.textTheme.headline6, t99$1 == null ? null : t99$1.copyWith({color: foregroundColor})) : t98$28);
      if (this.widget.toolbarOpacity !== 1.0) {
        let opacity = (C[2701] || CT.C2701).transform(this.widget.toolbarOpacity);
        if ((t98$29 = titleTextStyle, t98$29 == null ? null : t98$29.color) != null) titleTextStyle = dart.nullCheck(titleTextStyle).copyWith({color: dart.nullCheck(titleTextStyle.color).withOpacity(opacity)});
        if ((t98$30 = toolbarTextStyle, t98$30 == null ? null : t98$30.color) != null) toolbarTextStyle = dart.nullCheck(toolbarTextStyle).copyWith({color: dart.nullCheck(toolbarTextStyle.color).withOpacity(opacity)});
        overallIconTheme = overallIconTheme.copyWith({opacity: dart.notNull(opacity) * dart.notNull((t98$31 = overallIconTheme.opacity, t98$31 == null ? 1.0 : t98$31))});
        actionsIconTheme = actionsIconTheme.copyWith({opacity: dart.notNull(opacity) * dart.notNull((t98$32 = actionsIconTheme.opacity, t98$32 == null ? 1.0 : t98$32))});
      }
      let leading = this.widget.leading;
      if (leading == null && dart.test(this.widget.automaticallyImplyLeading)) {
        if (dart.test(hasDrawer)) {
          leading = new icon_button.IconButton.new({icon: C[2702] || CT.C2702, onPressed: dart.bind(this, S$1._handleDrawerButton), tooltip: material_localizations.MaterialLocalizations.of(context).openAppDrawerTooltip, $creationLocationd_0dea112b090073317d4: C[2707] || CT.C2707});
        } else {
          if (!dart.test(hasEndDrawer) && dart.test(canPop)) leading = useCloseButton ? C[2712] || CT.C2712 : C[2714] || CT.C2714;
        }
      }
      if (leading != null) {
        leading = new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.tightFor({width: (t98$33 = this.widget.leadingWidth, t98$33 == null ? 56 : t98$33)}), child: leading, $creationLocationd_0dea112b090073317d4: C[2716] || CT.C2716});
      }
      let title = this.widget.title;
      if (title != null) {
        let namesRoute = null;
        switch (theme.platform) {
          case C[44] || CT.C44:
          case C[45] || CT.C45:
          case C[46] || CT.C46:
          case C[47] || CT.C47:
          {
            namesRoute = true;
            break;
          }
          case C[48] || CT.C48:
          case C[49] || CT.C49:
          {
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        title = new app_bar._AppBarTitleBox.new({child: title, $creationLocationd_0dea112b090073317d4: C[2720] || CT.C2720});
        if (!dart.test(this.widget.excludeHeaderSemantics)) {
          title = new basic.Semantics.new({namesRoute: namesRoute, child: title, header: true, $creationLocationd_0dea112b090073317d4: C[2723] || CT.C2723});
        }
        title = new text$.DefaultTextStyle.new({style: dart.nullCheck(titleTextStyle), softWrap: false, overflow: paragraph.TextOverflow.ellipsis, child: title, $creationLocationd_0dea112b090073317d4: C[2728] || CT.C2728});
        let mediaQueryData = media_query.MediaQuery.of(context);
        title = new media_query.MediaQuery.new({data: mediaQueryData.copyWith({textScaleFactor: math.min(core.double, mediaQueryData.textScaleFactor, 1.34)}), child: title, $creationLocationd_0dea112b090073317d4: C[2734] || CT.C2734});
      }
      let actions = null;
      if (this.widget.actions != null && dart.test(dart.nullCheck(this.widget.actions)[S$.$isNotEmpty])) {
        actions = new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: dart.nullCheck(this.widget.actions), $creationLocationd_0dea112b090073317d4: C[2738] || CT.C2738});
      } else if (dart.test(hasEndDrawer)) {
        actions = new icon_button.IconButton.new({icon: C[2743] || CT.C2743, onPressed: dart.bind(this, S$1._handleDrawerButtonEnd), tooltip: material_localizations.MaterialLocalizations.of(context).openAppDrawerTooltip, $creationLocationd_0dea112b090073317d4: C[2747] || CT.C2747});
      }
      if (actions != null) {
        actions = icon_theme.IconTheme.merge({data: actionsIconTheme, child: actions});
      }
      let toolbar = new navigation_toolbar.NavigationToolbar.new({leading: leading, middle: title, trailing: actions, centerMiddle: this.widget[S$1._getEffectiveCenterTitle$1](theme), middleSpacing: (t98$35 = (t98$34 = this.widget.titleSpacing, t98$34 == null ? appBarTheme.titleSpacing : t98$34), t98$35 == null ? 16 : t98$35), $creationLocationd_0dea112b090073317d4: C[2752] || CT.C2752});
      let appBar = new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new app_bar._ToolbarContainerLayout.new(toolbarHeight), child: icon_theme.IconTheme.merge({data: overallIconTheme, child: new text$.DefaultTextStyle.new({style: dart.nullCheck(toolbarTextStyle), child: toolbar, $creationLocationd_0dea112b090073317d4: C[2759] || CT.C2759})}), $creationLocationd_0dea112b090073317d4: C[2763] || CT.C2763}), $creationLocationd_0dea112b090073317d4: C[2767] || CT.C2767});
      if (this.widget.bottom != null) {
        appBar = new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: (() => {
            let t98 = T$.JSArrayOfWidget().of([new basic.Flexible.new({child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({maxHeight: toolbarHeight}), child: appBar, $creationLocationd_0dea112b090073317d4: C[2770] || CT.C2770}), $creationLocationd_0dea112b090073317d4: C[2774] || CT.C2774})]);
            if (this.widget.bottomOpacity === 1.0)
              t98[S.$add](dart.nullCheck(this.widget.bottom));
            else
              t98[S.$add](new basic.Opacity.new({opacity: (C[2701] || CT.C2701).transform(this.widget.bottomOpacity), child: this.widget.bottom, $creationLocationd_0dea112b090073317d4: C[2777] || CT.C2777}));
            return t98;
          })(), $creationLocationd_0dea112b090073317d4: C[2781] || CT.C2781});
      }
      if (dart.test(this.widget.primary)) {
        appBar = new safe_area.SafeArea.new({bottom: false, top: true, child: appBar, $creationLocationd_0dea112b090073317d4: C[2785] || CT.C2785});
      }
      appBar = new basic.Align.new({alignment: alignment.Alignment.topCenter, child: appBar, $creationLocationd_0dea112b090073317d4: C[2790] || CT.C2790});
      if (this.widget.flexibleSpace != null) {
        appBar = new basic.Stack.new({fit: stack.StackFit.passthrough, children: T$.JSArrayOfWidget().of([new basic.Semantics.new({sortKey: C[2794] || CT.C2794, explicitChildNodes: true, child: this.widget.flexibleSpace, $creationLocationd_0dea112b090073317d4: C[2795] || CT.C2795}), new basic.Semantics.new({sortKey: C[2800] || CT.C2800, explicitChildNodes: true, child: new material.Material.new({type: material.MaterialType.transparency, child: appBar, $creationLocationd_0dea112b090073317d4: C[2801] || CT.C2801}), $creationLocationd_0dea112b090073317d4: C[2805] || CT.C2805})]), $creationLocationd_0dea112b090073317d4: C[2810] || CT.C2810});
      }
      let overlayStyleBrightness = (t99$3 = (t99$2 = this.widget.brightness, t99$2 == null ? appBarTheme.brightness : t99$2), t99$3 == null ? colorScheme.brightness : t99$3);
      let overlayStyle = dart.test(backwardsCompatibility) ? overlayStyleBrightness == ui.Brightness.dark ? system_chrome.SystemUiOverlayStyle.light : system_chrome.SystemUiOverlayStyle.dark : (t99$5 = (t99$4 = this.widget.systemOverlayStyle, t99$4 == null ? appBarTheme.systemOverlayStyle : t99$4), t99$5 == null ? colorScheme.brightness == ui.Brightness.dark ? system_chrome.SystemUiOverlayStyle.light : system_chrome.SystemUiOverlayStyle.dark : t99$5);
      return new basic.Semantics.new({container: true, child: new (T$.AnnotatedRegionOfSystemUiOverlayStyle()).new({value: overlayStyle, child: new material.Material.new({color: backgroundColor, elevation: (t99$7 = (t99$6 = this.widget.elevation, t99$6 == null ? appBarTheme.elevation : t99$6), t99$7 == null ? 4 : t99$7), shadowColor: (t99$9 = (t99$8 = this.widget.shadowColor, t99$8 == null ? appBarTheme.shadowColor : t99$8), t99$9 == null ? app_bar._AppBarState._defaultShadowColor : t99$9), shape: this.widget.shape, child: new basic.Semantics.new({explicitChildNodes: true, child: appBar, $creationLocationd_0dea112b090073317d4: C[2814] || CT.C2814}), $creationLocationd_0dea112b090073317d4: C[2818] || CT.C2818}), $creationLocationd_0dea112b090073317d4: C[2825] || CT.C2825}), $creationLocationd_0dea112b090073317d4: C[2829] || CT.C2829});
    }
  };
  (app_bar._AppBarState.new = function() {
    app_bar._AppBarState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._AppBarState.prototype;
  dart.addTypeTests(app_bar._AppBarState);
  dart.addTypeCaches(app_bar._AppBarState);
  dart.setMethodSignature(app_bar._AppBarState, () => ({
    __proto__: dart.getMethods(app_bar._AppBarState.__proto__),
    [S$1._handleDrawerButton]: dart.fnType(dart.void, []),
    [S$1._handleDrawerButtonEnd]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._AppBarState, I[134]);
  dart.defineLazy(app_bar._AppBarState, {
    /*app_bar._AppBarState._defaultElevation*/get _defaultElevation() {
      return 4;
    },
    /*app_bar._AppBarState._defaultShadowColor*/get _defaultShadowColor() {
      return C[159] || CT.C159;
    }
  }, false);
  app_bar._FloatingAppBar = class _FloatingAppBar extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$29];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new app_bar._FloatingAppBarState.new();
    }
  };
  (app_bar._FloatingAppBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[133], 986, 51, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$29] = child;
    app_bar._FloatingAppBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar._FloatingAppBar.prototype;
  dart.addTypeTests(app_bar._FloatingAppBar);
  dart.addTypeCaches(app_bar._FloatingAppBar);
  dart.setMethodSignature(app_bar._FloatingAppBar, () => ({
    __proto__: dart.getMethods(app_bar._FloatingAppBar.__proto__),
    createState: dart.fnType(app_bar._FloatingAppBarState, [])
  }));
  dart.setLibraryUri(app_bar._FloatingAppBar, I[134]);
  dart.setFieldSignature(app_bar._FloatingAppBar, () => ({
    __proto__: dart.getFields(app_bar._FloatingAppBar.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  app_bar._FloatingAppBarState = class _FloatingAppBarState extends framework.State$(app_bar._FloatingAppBar) {
    didChangeDependencies() {
      let t99;
      super.didChangeDependencies();
      if (this[S$1._position$2] != null) dart.nullCheck(this[S$1._position$2]).isScrollingNotifier.removeListener(dart.bind(this, S$1._isScrollingListener));
      this[S$1._position$2] = (t99 = scrollable.Scrollable.of(this.context), t99 == null ? null : t99.position);
      if (this[S$1._position$2] != null) dart.nullCheck(this[S$1._position$2]).isScrollingNotifier.addListener(dart.bind(this, S$1._isScrollingListener));
    }
    dispose() {
      if (this[S$1._position$2] != null) dart.nullCheck(this[S$1._position$2]).isScrollingNotifier.removeListener(dart.bind(this, S$1._isScrollingListener));
      super.dispose();
    }
    [S$1._headerRenderer]() {
      return this.context.findAncestorRenderObjectOfType(sliver_persistent_header.RenderSliverFloatingPersistentHeader);
    }
    [S$1._isScrollingListener]() {
      let t99, t99$;
      if (this[S$1._position$2] == null) return;
      let header = this[S$1._headerRenderer]();
      if (dart.test(dart.nullCheck(this[S$1._position$2]).isScrollingNotifier.value)) {
        t99 = header;
        t99 == null ? null : t99.maybeStopSnapAnimation(dart.nullCheck(this[S$1._position$2]).userScrollDirection);
      } else {
        t99$ = header;
        t99$ == null ? null : t99$.maybeStartSnapAnimation(dart.nullCheck(this[S$1._position$2]).userScrollDirection);
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[133], 1034, 29, "context");
      return this.widget.child;
    }
  };
  (app_bar._FloatingAppBarState.new = function() {
    this[S$1._position$2] = null;
    app_bar._FloatingAppBarState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._FloatingAppBarState.prototype;
  dart.addTypeTests(app_bar._FloatingAppBarState);
  dart.addTypeCaches(app_bar._FloatingAppBarState);
  dart.setMethodSignature(app_bar._FloatingAppBarState, () => ({
    __proto__: dart.getMethods(app_bar._FloatingAppBarState.__proto__),
    [S$1._headerRenderer]: dart.fnType(dart.nullable(sliver_persistent_header.RenderSliverFloatingPersistentHeader), []),
    [S$1._isScrollingListener]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._FloatingAppBarState, I[134]);
  dart.setFieldSignature(app_bar._FloatingAppBarState, () => ({
    __proto__: dart.getFields(app_bar._FloatingAppBarState.__proto__),
    [S$1._position$2]: dart.fieldType(dart.nullable(scroll_position.ScrollPosition))
  }));
  app_bar._SliverAppBarDelegate = class _SliverAppBarDelegate extends sliver_persistent_header$.SliverPersistentHeaderDelegate {
    get vsync() {
      return this[S$1.vsync$1];
    }
    set vsync(value) {
      super.vsync = value;
    }
    get snapConfiguration() {
      return this[S$1.snapConfiguration];
    }
    set snapConfiguration(value) {
      super.snapConfiguration = value;
    }
    get stretchConfiguration() {
      return this[S$1.stretchConfiguration];
    }
    set stretchConfiguration(value) {
      super.stretchConfiguration = value;
    }
    get showOnScreenConfiguration() {
      return this[S$1.showOnScreenConfiguration];
    }
    set showOnScreenConfiguration(value) {
      super.showOnScreenConfiguration = value;
    }
    get minExtent() {
      return this.collapsedHeight;
    }
    get maxExtent() {
      let t100, t99;
      return math.max(core.double, dart.notNull(this.topPadding) + dart.notNull((t99 = this.expandedHeight, t99 == null ? dart.notNull((t100 = this.toolbarHeight, t100 == null ? 56 : t100)) + dart.notNull(this[S$1._bottomHeight]) : t99)), this.minExtent);
    }
    build(context, shrinkOffset, overlapsContent) {
      let t99, t99$, t99$0;
      if (context == null) dart.nullFailed(I[133], 1133, 29, "context");
      if (shrinkOffset == null) dart.nullFailed(I[133], 1133, 45, "shrinkOffset");
      if (overlapsContent == null) dart.nullFailed(I[133], 1133, 64, "overlapsContent");
      let visibleMainHeight = dart.notNull(this.maxExtent) - dart.notNull(shrinkOffset) - dart.notNull(this.topPadding);
      let extraToolbarHeight = math.max(core.double, dart.notNull(this.minExtent) - dart.notNull(this[S$1._bottomHeight]) - dart.notNull(this.topPadding) - dart.notNull((t99 = this.toolbarHeight, t99 == null ? 56 : t99)), 0.0);
      let visibleToolbarHeight = visibleMainHeight - dart.notNull(this[S$1._bottomHeight]) - extraToolbarHeight;
      let isPinnedWithOpacityFade = dart.test(this.pinned) && dart.test(this.floating) && this.bottom != null && extraToolbarHeight === 0.0;
      let toolbarOpacity = !dart.test(this.pinned) || isPinnedWithOpacityFade ? (visibleToolbarHeight / dart.notNull((t99$ = this.toolbarHeight, t99$ == null ? 56 : t99$)))[S.$clamp](0.0, 1.0) : 1.0;
      let appBar = flexible_space_bar.FlexibleSpaceBar.createSettings({minExtent: this.minExtent, maxExtent: this.maxExtent, currentExtent: math.max(core.double, this.minExtent, dart.notNull(this.maxExtent) - dart.notNull(shrinkOffset)), toolbarOpacity: toolbarOpacity, child: new app_bar.AppBar.new({leading: this.leading, automaticallyImplyLeading: this.automaticallyImplyLeading, title: this.title, actions: this.actions, flexibleSpace: this.title == null && this.flexibleSpace != null && !dart.test(this.excludeHeaderSemantics) ? new basic.Semantics.new({child: this.flexibleSpace, header: true, $creationLocationd_0dea112b090073317d4: C[2833] || CT.C2833}) : this.flexibleSpace, bottom: this.bottom, elevation: dart.test(this.forceElevated) || dart.test(overlapsContent) || dart.test(this.pinned) && dart.notNull(shrinkOffset) > dart.notNull(this.maxExtent) - dart.notNull(this.minExtent) ? (t99$0 = this.elevation, t99$0 == null ? 4.0 : t99$0) : 0.0, shadowColor: this.shadowColor, backgroundColor: this.backgroundColor, foregroundColor: this.foregroundColor, brightness: this.brightness, iconTheme: this.iconTheme, actionsIconTheme: this.actionsIconTheme, textTheme: this.textTheme, primary: this.primary, centerTitle: this.centerTitle, excludeHeaderSemantics: this.excludeHeaderSemantics, titleSpacing: this.titleSpacing, shape: this.shape, toolbarOpacity: toolbarOpacity, bottomOpacity: dart.test(this.pinned) ? 1.0 : (visibleMainHeight / dart.notNull(this[S$1._bottomHeight]))[S.$clamp](0.0, 1.0), toolbarHeight: this.toolbarHeight, leadingWidth: this.leadingWidth, backwardsCompatibility: this.backwardsCompatibility, toolbarTextStyle: this.toolbarTextStyle, titleTextStyle: this.titleTextStyle, systemOverlayStyle: this.systemOverlayStyle, $creationLocationd_0dea112b090073317d4: C[2837] || CT.C2837})});
      return dart.test(this.floating) ? new app_bar._FloatingAppBar.new({child: appBar, $creationLocationd_0dea112b090073317d4: C[2866] || CT.C2866}) : appBar;
    }
    shouldRebuild(oldDelegate) {
      app_bar._SliverAppBarDelegate.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[133], 1184, 54, "oldDelegate");
      return !dart.equals(this.leading, oldDelegate.leading) || this.automaticallyImplyLeading != oldDelegate.automaticallyImplyLeading || !dart.equals(this.title, oldDelegate.title) || !dart.equals(this.actions, oldDelegate.actions) || !dart.equals(this.flexibleSpace, oldDelegate.flexibleSpace) || !dart.equals(this.bottom, oldDelegate.bottom) || this[S$1._bottomHeight] != oldDelegate[S$1._bottomHeight] || this.elevation != oldDelegate.elevation || !dart.equals(this.shadowColor, oldDelegate.shadowColor) || !dart.equals(this.backgroundColor, oldDelegate.backgroundColor) || !dart.equals(this.foregroundColor, oldDelegate.foregroundColor) || this.brightness != oldDelegate.brightness || !dart.equals(this.iconTheme, oldDelegate.iconTheme) || !dart.equals(this.actionsIconTheme, oldDelegate.actionsIconTheme) || !dart.equals(this.textTheme, oldDelegate.textTheme) || this.primary != oldDelegate.primary || this.centerTitle != oldDelegate.centerTitle || this.titleSpacing != oldDelegate.titleSpacing || this.expandedHeight != oldDelegate.expandedHeight || this.topPadding != oldDelegate.topPadding || this.pinned != oldDelegate.pinned || this.floating != oldDelegate.floating || !dart.equals(this.vsync, oldDelegate.vsync) || !dart.equals(this.snapConfiguration, oldDelegate.snapConfiguration) || !dart.equals(this.stretchConfiguration, oldDelegate.stretchConfiguration) || !dart.equals(this.showOnScreenConfiguration, oldDelegate.showOnScreenConfiguration) || this.forceElevated != oldDelegate.forceElevated || this.toolbarHeight != oldDelegate.toolbarHeight || this.leadingWidth != oldDelegate.leadingWidth || this.backwardsCompatibility != oldDelegate.backwardsCompatibility || !dart.equals(this.toolbarTextStyle, oldDelegate.toolbarTextStyle) || !dart.equals(this.titleTextStyle, oldDelegate.titleTextStyle) || !dart.equals(this.systemOverlayStyle, oldDelegate.systemOverlayStyle);
    }
    toString() {
      return dart.str(diagnostics.describeIdentity(this)) + "(topPadding: " + this.topPadding[S$1.$toStringAsFixed](1) + ", bottomHeight: " + this[S$1._bottomHeight][S$1.$toStringAsFixed](1) + ", ...)";
    }
  };
  (app_bar._SliverAppBarDelegate.new = function(opts) {
    let t99, t99$;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : null;
    if (automaticallyImplyLeading == null) dart.nullFailed(I[133], 1040, 19, "automaticallyImplyLeading");
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : null;
    if (forceElevated == null) dart.nullFailed(I[133], 1047, 19, "forceElevated");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    if (primary == null) dart.nullFailed(I[133], 1054, 19, "primary");
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : null;
    if (excludeHeaderSemantics == null) dart.nullFailed(I[133], 1056, 19, "excludeHeaderSemantics");
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
    let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
    if (collapsedHeight == null) dart.nullFailed(I[133], 1059, 19, "collapsedHeight");
    let topPadding = opts && 'topPadding' in opts ? opts.topPadding : null;
    if (topPadding == null) dart.nullFailed(I[133], 1060, 19, "topPadding");
    let floating = opts && 'floating' in opts ? opts.floating : null;
    if (floating == null) dart.nullFailed(I[133], 1061, 19, "floating");
    let pinned = opts && 'pinned' in opts ? opts.pinned : null;
    if (pinned == null) dart.nullFailed(I[133], 1062, 19, "pinned");
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(I[133], 1063, 19, "vsync");
    let snapConfiguration = opts && 'snapConfiguration' in opts ? opts.snapConfiguration : null;
    let stretchConfiguration = opts && 'stretchConfiguration' in opts ? opts.stretchConfiguration : null;
    let showOnScreenConfiguration = opts && 'showOnScreenConfiguration' in opts ? opts.showOnScreenConfiguration : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    if (backwardsCompatibility == null) dart.nullFailed(I[133], 1070, 19, "backwardsCompatibility");
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    this.leading = leading;
    this.automaticallyImplyLeading = automaticallyImplyLeading;
    this.title = title;
    this.actions = actions;
    this.flexibleSpace = flexibleSpace;
    this.bottom = bottom;
    this.elevation = elevation;
    this.shadowColor = shadowColor;
    this.forceElevated = forceElevated;
    this.backgroundColor = backgroundColor;
    this.foregroundColor = foregroundColor;
    this.brightness = brightness;
    this.iconTheme = iconTheme;
    this.actionsIconTheme = actionsIconTheme;
    this.textTheme = textTheme;
    this.primary = primary;
    this.centerTitle = centerTitle;
    this.excludeHeaderSemantics = excludeHeaderSemantics;
    this.titleSpacing = titleSpacing;
    this.expandedHeight = expandedHeight;
    this.collapsedHeight = collapsedHeight;
    this.topPadding = topPadding;
    this.floating = floating;
    this.pinned = pinned;
    this[S$1.vsync$1] = vsync;
    this[S$1.snapConfiguration] = snapConfiguration;
    this[S$1.stretchConfiguration] = stretchConfiguration;
    this[S$1.showOnScreenConfiguration] = showOnScreenConfiguration;
    this.shape = shape;
    this.toolbarHeight = toolbarHeight;
    this.leadingWidth = leadingWidth;
    this.backwardsCompatibility = backwardsCompatibility;
    this.toolbarTextStyle = toolbarTextStyle;
    this.titleTextStyle = titleTextStyle;
    this.systemOverlayStyle = systemOverlayStyle;
    if (!(dart.test(primary) || topPadding === 0.0)) dart.assertFailed(null, I[133], 1074, 15, "primary || topPadding == 0.0");
    if (!(!dart.test(floating) || snapConfiguration == null && showOnScreenConfiguration == null || vsync != null)) dart.assertFailed("vsync cannot be null when snapConfiguration or showOnScreenConfiguration is not null, and floating is true", I[133], 1076, 10, "!floating || (snapConfiguration == null && showOnScreenConfiguration == null) || vsync != null");
    this[S$1._bottomHeight] = (t99$ = (t99 = bottom, t99 == null ? null : t99.preferredSize.height), t99$ == null ? 0.0 : t99$);
    app_bar._SliverAppBarDelegate.__proto__.new.call(this);
    ;
  }).prototype = app_bar._SliverAppBarDelegate.prototype;
  dart.addTypeTests(app_bar._SliverAppBarDelegate);
  dart.addTypeCaches(app_bar._SliverAppBarDelegate);
  dart.setMethodSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getMethods(app_bar._SliverAppBarDelegate.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext, core.double, core.bool]),
    shouldRebuild: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getGetters(app_bar._SliverAppBarDelegate.__proto__),
    minExtent: core.double,
    maxExtent: core.double
  }));
  dart.setLibraryUri(app_bar._SliverAppBarDelegate, I[134]);
  dart.setFieldSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getFields(app_bar._SliverAppBarDelegate.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(core.bool),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    flexibleSpace: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottom: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    forceElevated: dart.finalFieldType(core.bool),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    primary: dart.finalFieldType(core.bool),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(core.bool),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    expandedHeight: dart.finalFieldType(dart.nullable(core.double)),
    collapsedHeight: dart.finalFieldType(core.double),
    topPadding: dart.finalFieldType(core.double),
    floating: dart.finalFieldType(core.bool),
    pinned: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    toolbarHeight: dart.finalFieldType(dart.nullable(core.double)),
    leadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    backwardsCompatibility: dart.finalFieldType(core.bool),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle)),
    [S$1._bottomHeight]: dart.finalFieldType(core.double),
    vsync: dart.finalFieldType(ticker.TickerProvider),
    snapConfiguration: dart.finalFieldType(dart.nullable(sliver_persistent_header.FloatingHeaderSnapConfiguration)),
    stretchConfiguration: dart.finalFieldType(dart.nullable(sliver_persistent_header.OverScrollHeaderStretchConfiguration)),
    showOnScreenConfiguration: dart.finalFieldType(dart.nullable(sliver_persistent_header.PersistentHeaderShowOnScreenConfiguration))
  }));
  dart.defineExtensionMethods(app_bar._SliverAppBarDelegate, ['toString']);
  app_bar.SliverAppBar = class SliverAppBar extends framework.StatefulWidget {
    get leading() {
      return this[S$1.leading$4];
    }
    set leading(value) {
      super.leading = value;
    }
    get automaticallyImplyLeading() {
      return this[S$1.automaticallyImplyLeading$1];
    }
    set automaticallyImplyLeading(value) {
      super.automaticallyImplyLeading = value;
    }
    get title() {
      return this[S$1.title$6];
    }
    set title(value) {
      super.title = value;
    }
    get actions() {
      return this[S$1.actions$2];
    }
    set actions(value) {
      super.actions = value;
    }
    get flexibleSpace() {
      return this[S$1.flexibleSpace$1];
    }
    set flexibleSpace(value) {
      super.flexibleSpace = value;
    }
    get bottom() {
      return this[S$1.bottom$1];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get elevation() {
      return this[S$1.elevation$28];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[S$1.shadowColor$8];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get forceElevated() {
      return this[S$1.forceElevated];
    }
    set forceElevated(value) {
      super.forceElevated = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$23];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$1.foregroundColor$4];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get brightness() {
      return this[S$1.brightness$5];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get iconTheme() {
      return this[S$1.iconTheme$3];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[S$1.actionsIconTheme$2];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[S$1.textTheme$6];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primary() {
      return this[S$1.primary$3];
    }
    set primary(value) {
      super.primary = value;
    }
    get centerTitle() {
      return this[S$1.centerTitle$3];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get excludeHeaderSemantics() {
      return this[S$1.excludeHeaderSemantics$1];
    }
    set excludeHeaderSemantics(value) {
      super.excludeHeaderSemantics = value;
    }
    get titleSpacing() {
      return this[S$1.titleSpacing$2];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get collapsedHeight() {
      return this[S$1.collapsedHeight];
    }
    set collapsedHeight(value) {
      super.collapsedHeight = value;
    }
    get expandedHeight() {
      return this[S$1.expandedHeight];
    }
    set expandedHeight(value) {
      super.expandedHeight = value;
    }
    get floating() {
      return this[S$1.floating];
    }
    set floating(value) {
      super.floating = value;
    }
    get pinned() {
      return this[S$1.pinned];
    }
    set pinned(value) {
      super.pinned = value;
    }
    get shape() {
      return this[S$1.shape$26];
    }
    set shape(value) {
      super.shape = value;
    }
    get snap() {
      return this[S$1.snap];
    }
    set snap(value) {
      super.snap = value;
    }
    get stretch() {
      return this[S$1.stretch];
    }
    set stretch(value) {
      super.stretch = value;
    }
    get stretchTriggerOffset() {
      return this[S$1.stretchTriggerOffset];
    }
    set stretchTriggerOffset(value) {
      super.stretchTriggerOffset = value;
    }
    get onStretchTrigger() {
      return this[S$1.onStretchTrigger];
    }
    set onStretchTrigger(value) {
      super.onStretchTrigger = value;
    }
    get toolbarHeight() {
      return this[S$1.toolbarHeight$2];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    get leadingWidth() {
      return this[S$1.leadingWidth$1];
    }
    set leadingWidth(value) {
      super.leadingWidth = value;
    }
    get backwardsCompatibility() {
      return this[S$1.backwardsCompatibility$2];
    }
    set backwardsCompatibility(value) {
      super.backwardsCompatibility = value;
    }
    get toolbarTextStyle() {
      return this[S$1.toolbarTextStyle$2];
    }
    set toolbarTextStyle(value) {
      super.toolbarTextStyle = value;
    }
    get titleTextStyle() {
      return this[S$1.titleTextStyle$5];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get systemOverlayStyle() {
      return this[S$1.systemOverlayStyle$2];
    }
    set systemOverlayStyle(value) {
      super.systemOverlayStyle = value;
    }
    createState() {
      return new app_bar._SliverAppBarState.new();
    }
  };
  (app_bar.SliverAppBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
    if (automaticallyImplyLeading == null) dart.nullFailed(I[133], 1424, 10, "automaticallyImplyLeading");
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : false;
    if (forceElevated == null) dart.nullFailed(I[133], 1431, 10, "forceElevated");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    if (primary == null) dart.nullFailed(I[133], 1438, 10, "primary");
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
    if (excludeHeaderSemantics == null) dart.nullFailed(I[133], 1440, 10, "excludeHeaderSemantics");
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
    let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
    let floating = opts && 'floating' in opts ? opts.floating : false;
    if (floating == null) dart.nullFailed(I[133], 1444, 10, "floating");
    let pinned = opts && 'pinned' in opts ? opts.pinned : false;
    if (pinned == null) dart.nullFailed(I[133], 1445, 10, "pinned");
    let snap = opts && 'snap' in opts ? opts.snap : false;
    if (snap == null) dart.nullFailed(I[133], 1446, 10, "snap");
    let stretch = opts && 'stretch' in opts ? opts.stretch : false;
    if (stretch == null) dart.nullFailed(I[133], 1447, 10, "stretch");
    let stretchTriggerOffset = opts && 'stretchTriggerOffset' in opts ? opts.stretchTriggerOffset : 100;
    if (stretchTriggerOffset == null) dart.nullFailed(I[133], 1448, 10, "stretchTriggerOffset");
    let onStretchTrigger = opts && 'onStretchTrigger' in opts ? opts.onStretchTrigger : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : 56;
    if (toolbarHeight == null) dart.nullFailed(I[133], 1451, 10, "toolbarHeight");
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : true;
    if (backwardsCompatibility == null) dart.nullFailed(I[133], 1453, 10, "backwardsCompatibility");
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.leading$4] = leading;
    this[S$1.automaticallyImplyLeading$1] = automaticallyImplyLeading;
    this[S$1.title$6] = title;
    this[S$1.actions$2] = actions;
    this[S$1.flexibleSpace$1] = flexibleSpace;
    this[S$1.bottom$1] = bottom;
    this[S$1.elevation$28] = elevation;
    this[S$1.shadowColor$8] = shadowColor;
    this[S$1.forceElevated] = forceElevated;
    this[S$1.backgroundColor$23] = backgroundColor;
    this[S$1.foregroundColor$4] = foregroundColor;
    this[S$1.brightness$5] = brightness;
    this[S$1.iconTheme$3] = iconTheme;
    this[S$1.actionsIconTheme$2] = actionsIconTheme;
    this[S$1.textTheme$6] = textTheme;
    this[S$1.primary$3] = primary;
    this[S$1.centerTitle$3] = centerTitle;
    this[S$1.excludeHeaderSemantics$1] = excludeHeaderSemantics;
    this[S$1.titleSpacing$2] = titleSpacing;
    this[S$1.collapsedHeight] = collapsedHeight;
    this[S$1.expandedHeight] = expandedHeight;
    this[S$1.floating] = floating;
    this[S$1.pinned] = pinned;
    this[S$1.snap] = snap;
    this[S$1.stretch] = stretch;
    this[S$1.stretchTriggerOffset] = stretchTriggerOffset;
    this[S$1.onStretchTrigger] = onStretchTrigger;
    this[S$1.shape$26] = shape;
    this[S$1.toolbarHeight$2] = toolbarHeight;
    this[S$1.leadingWidth$1] = leadingWidth;
    this[S$1.backwardsCompatibility$2] = backwardsCompatibility;
    this[S$1.toolbarTextStyle$2] = toolbarTextStyle;
    this[S$1.titleTextStyle$5] = titleTextStyle;
    this[S$1.systemOverlayStyle$2] = systemOverlayStyle;
    if (!(automaticallyImplyLeading != null)) dart.assertFailed(null, I[133], 1457, 15, "automaticallyImplyLeading != null");
    if (!(forceElevated != null)) dart.assertFailed(null, I[133], 1458, 15, "forceElevated != null");
    if (!(primary != null)) dart.assertFailed(null, I[133], 1459, 15, "primary != null");
    if (!(floating != null)) dart.assertFailed(null, I[133], 1460, 15, "floating != null");
    if (!(pinned != null)) dart.assertFailed(null, I[133], 1461, 15, "pinned != null");
    if (!(snap != null)) dart.assertFailed(null, I[133], 1462, 15, "snap != null");
    if (!(stretch != null)) dart.assertFailed(null, I[133], 1463, 15, "stretch != null");
    if (!(toolbarHeight != null)) dart.assertFailed(null, I[133], 1464, 15, "toolbarHeight != null");
    if (!(dart.test(floating) || !dart.test(snap))) dart.assertFailed("The \"snap\" argument only makes sense for floating app bars.", I[133], 1465, 15, "floating || !snap");
    if (!(dart.notNull(stretchTriggerOffset) > 0.0)) dart.assertFailed(null, I[133], 1466, 15, "stretchTriggerOffset > 0.0");
    if (!(collapsedHeight == null || dart.notNull(collapsedHeight) >= dart.notNull(toolbarHeight))) dart.assertFailed("The \"collapsedHeight\" argument has to be larger than or equal to [toolbarHeight].", I[133], 1467, 15, "collapsedHeight == null || collapsedHeight >= toolbarHeight");
    app_bar.SliverAppBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar.SliverAppBar.prototype;
  dart.addTypeTests(app_bar.SliverAppBar);
  dart.addTypeCaches(app_bar.SliverAppBar);
  dart.setMethodSignature(app_bar.SliverAppBar, () => ({
    __proto__: dart.getMethods(app_bar.SliverAppBar.__proto__),
    createState: dart.fnType(app_bar._SliverAppBarState, [])
  }));
  dart.setLibraryUri(app_bar.SliverAppBar, I[134]);
  dart.setFieldSignature(app_bar.SliverAppBar, () => ({
    __proto__: dart.getFields(app_bar.SliverAppBar.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(core.bool),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    flexibleSpace: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottom: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    forceElevated: dart.finalFieldType(core.bool),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    primary: dart.finalFieldType(core.bool),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(core.bool),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    collapsedHeight: dart.finalFieldType(dart.nullable(core.double)),
    expandedHeight: dart.finalFieldType(dart.nullable(core.double)),
    floating: dart.finalFieldType(core.bool),
    pinned: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    snap: dart.finalFieldType(core.bool),
    stretch: dart.finalFieldType(core.bool),
    stretchTriggerOffset: dart.finalFieldType(core.double),
    onStretchTrigger: dart.finalFieldType(dart.nullable(dart.fnType(async.Future$(dart.void), []))),
    toolbarHeight: dart.finalFieldType(core.double),
    leadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    backwardsCompatibility: dart.finalFieldType(core.bool),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle))
  }));
  const State_TickerProviderStateMixin$36$7 = class State_TickerProviderStateMixin extends framework.State$(app_bar.SliverAppBar) {};
  (State_TickerProviderStateMixin$36$7.new = function() {
    ticker_provider.TickerProviderStateMixin$(app_bar.SliverAppBar)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$7.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$7.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$7, ticker_provider.TickerProviderStateMixin$(app_bar.SliverAppBar));
  app_bar._SliverAppBarState = class _SliverAppBarState extends State_TickerProviderStateMixin$36$7 {
    [S$1._updateSnapConfiguration]() {
      if (dart.test(this.widget.snap) && dart.test(this.widget.floating)) {
        this[S$1._snapConfiguration] = new sliver_persistent_header.FloatingHeaderSnapConfiguration.new({curve: curves.Curves.easeOut, duration: C[334] || CT.C334});
      } else {
        this[S$1._snapConfiguration] = null;
      }
      this[S$1._showOnScreenConfiguration] = !!(dart.notNull(this.widget.floating) & dart.test(this.widget.snap)) ? C[2869] || CT.C2869 : null;
    }
    [S$1._updateStretchConfiguration]() {
      if (dart.test(this.widget.stretch)) {
        this[S$1._stretchConfiguration] = new sliver_persistent_header.OverScrollHeaderStretchConfiguration.new({stretchTriggerOffset: this.widget.stretchTriggerOffset, onStretchTrigger: this.widget.onStretchTrigger});
      } else {
        this[S$1._stretchConfiguration] = null;
      }
    }
    initState() {
      super.initState();
      this[S$1._updateSnapConfiguration]();
      this[S$1._updateStretchConfiguration]();
    }
    didUpdateWidget(oldWidget) {
      app_bar.SliverAppBar.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[133], 1767, 37, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this.widget.snap != oldWidget.snap || this.widget.floating != oldWidget.floating) this[S$1._updateSnapConfiguration]();
      if (this.widget.stretch != oldWidget.stretch) this[S$1._updateStretchConfiguration]();
    }
    build(context) {
      let t99, t99$, t99$0, t99$1;
      if (context == null) dart.nullFailed(I[133], 1776, 29, "context");
      if (!(!dart.test(this.widget.primary) || dart.test(debug.debugCheckHasMediaQuery(context)))) dart.assertFailed(null, I[133], 1777, 12, "!widget.primary || debugCheckHasMediaQuery(context)");
      let bottomHeight = (t99$ = (t99 = this.widget.bottom, t99 == null ? null : t99.preferredSize.height), t99$ == null ? 0.0 : t99$);
      let topPadding = dart.test(this.widget.primary) ? media_query.MediaQuery.of(context).padding.top : 0.0;
      let collapsedHeight = dart.test(this.widget.pinned) && dart.test(this.widget.floating) && this.widget.bottom != null ? dart.notNull((t99$0 = this.widget.collapsedHeight, t99$0 == null ? 0.0 : t99$0)) + dart.notNull(bottomHeight) + dart.notNull(topPadding) : dart.notNull((t99$1 = this.widget.collapsedHeight, t99$1 == null ? this.widget.toolbarHeight : t99$1)) + dart.notNull(bottomHeight) + dart.notNull(topPadding);
      return media_query.MediaQuery.removePadding({context: context, removeBottom: true, child: new sliver_persistent_header$.SliverPersistentHeader.new({floating: this.widget.floating, pinned: this.widget.pinned, delegate: new app_bar._SliverAppBarDelegate.new({vsync: this, leading: this.widget.leading, automaticallyImplyLeading: this.widget.automaticallyImplyLeading, title: this.widget.title, actions: this.widget.actions, flexibleSpace: this.widget.flexibleSpace, bottom: this.widget.bottom, elevation: this.widget.elevation, shadowColor: this.widget.shadowColor, forceElevated: this.widget.forceElevated, backgroundColor: this.widget.backgroundColor, foregroundColor: this.widget.foregroundColor, brightness: this.widget.brightness, iconTheme: this.widget.iconTheme, actionsIconTheme: this.widget.actionsIconTheme, textTheme: this.widget.textTheme, primary: this.widget.primary, centerTitle: this.widget.centerTitle, excludeHeaderSemantics: this.widget.excludeHeaderSemantics, titleSpacing: this.widget.titleSpacing, expandedHeight: this.widget.expandedHeight, collapsedHeight: collapsedHeight, topPadding: topPadding, floating: this.widget.floating, pinned: this.widget.pinned, shape: this.widget.shape, snapConfiguration: this[S$1._snapConfiguration], stretchConfiguration: this[S$1._stretchConfiguration], showOnScreenConfiguration: this[S$1._showOnScreenConfiguration], toolbarHeight: this.widget.toolbarHeight, leadingWidth: this.widget.leadingWidth, backwardsCompatibility: this.widget.backwardsCompatibility, toolbarTextStyle: this.widget.toolbarTextStyle, titleTextStyle: this.widget.titleTextStyle, systemOverlayStyle: this.widget.systemOverlayStyle}), $creationLocationd_0dea112b090073317d4: C[2870] || CT.C2870}), $creationLocationd_0dea112b090073317d4: C[2875] || CT.C2875});
    }
  };
  (app_bar._SliverAppBarState.new = function() {
    this[S$1._snapConfiguration] = null;
    this[S$1._stretchConfiguration] = null;
    this[S$1._showOnScreenConfiguration] = null;
    app_bar._SliverAppBarState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._SliverAppBarState.prototype;
  dart.addTypeTests(app_bar._SliverAppBarState);
  dart.addTypeCaches(app_bar._SliverAppBarState);
  dart.setMethodSignature(app_bar._SliverAppBarState, () => ({
    __proto__: dart.getMethods(app_bar._SliverAppBarState.__proto__),
    [S$1._updateSnapConfiguration]: dart.fnType(dart.void, []),
    [S$1._updateStretchConfiguration]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._SliverAppBarState, I[134]);
  dart.setFieldSignature(app_bar._SliverAppBarState, () => ({
    __proto__: dart.getFields(app_bar._SliverAppBarState.__proto__),
    [S$1._snapConfiguration]: dart.fieldType(dart.nullable(sliver_persistent_header.FloatingHeaderSnapConfiguration)),
    [S$1._stretchConfiguration]: dart.fieldType(dart.nullable(sliver_persistent_header.OverScrollHeaderStretchConfiguration)),
    [S$1._showOnScreenConfiguration]: dart.fieldType(dart.nullable(sliver_persistent_header.PersistentHeaderShowOnScreenConfiguration))
  }));
  app_bar._AppBarTitleBox = class _AppBarTitleBox extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[133], 1839, 57, "context");
      return new app_bar._RenderAppBarTitleBox.new({textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(I[133], 1846, 40, "context");
      app_bar._RenderAppBarTitleBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[133], 1846, 71, "renderObject");
      renderObject.textDirection = basic.Directionality.of(context);
    }
  };
  (app_bar._AppBarTitleBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[133], 1836, 53, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(child != null)) dart.assertFailed(null, I[133], 1836, 71, "child != null");
    app_bar._AppBarTitleBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar._AppBarTitleBox.prototype;
  dart.addTypeTests(app_bar._AppBarTitleBox);
  dart.addTypeCaches(app_bar._AppBarTitleBox);
  dart.setMethodSignature(app_bar._AppBarTitleBox, () => ({
    __proto__: dart.getMethods(app_bar._AppBarTitleBox.__proto__),
    createRenderObject: dart.fnType(app_bar._RenderAppBarTitleBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._AppBarTitleBox, I[134]);
  app_bar._RenderAppBarTitleBox = class _RenderAppBarTitleBox extends shifted_box.RenderAligningShiftedBox {
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[133], 1858, 40, "constraints");
      let innerConstraints = constraints.copyWith({maxHeight: 1 / 0});
      let childSize = dart.nullCheck(this.child).getDryLayout(innerConstraints);
      return constraints.constrain(childSize);
    }
    performLayout() {
      let innerConstraints = this.constraints.copyWith({maxHeight: 1 / 0});
      dart.nullCheck(this.child).layout(innerConstraints, {parentUsesSize: true});
      this.size = this.constraints.constrain(dart.nullCheck(this.child).size);
      this.alignChild();
    }
  };
  (app_bar._RenderAppBarTitleBox.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    app_bar._RenderAppBarTitleBox.__proto__.new.call(this, {child: child, alignment: alignment.Alignment.center, textDirection: textDirection});
    ;
  }).prototype = app_bar._RenderAppBarTitleBox.prototype;
  dart.addTypeTests(app_bar._RenderAppBarTitleBox);
  dart.addTypeCaches(app_bar._RenderAppBarTitleBox);
  dart.setLibraryUri(app_bar._RenderAppBarTitleBox, I[134]);
  dart.defineLazy(app_bar, {
    /*app_bar._kLeadingWidth*/get _kLeadingWidth() {
      return 56;
    },
    /*app_bar._kMaxTitleTextScaleFactor*/get _kMaxTitleTextScaleFactor() {
      return 1.34;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/material/icon_button.dart", {
    "package:flutter/src/material/icon_button.dart": icon_button,
    "package:flutter/src/material/back_button.dart": back_button,
    "package:flutter/src/material/time.dart": time,
    "package:flutter/src/material/ink_ripple.dart": ink_ripple,
    "package:flutter/src/material/button_style_button.dart": button_style_button,
    "package:flutter/src/material/text_button.dart": text_button,
    "package:flutter/src/material/snack_bar.dart": snack_bar,
    "package:flutter/src/material/floating_action_button_location.dart": floating_action_button_location,
    "package:flutter/src/material/floating_action_button.dart": floating_action_button,
    "package:flutter/src/material/flexible_space_bar.dart": flexible_space_bar,
    "package:flutter/src/material/list_tile.dart": list_tile,
    "package:flutter/src/material/drawer.dart": drawer,
    "package:flutter/src/material/divider.dart": divider,
    "package:flutter/src/material/dialog.dart": dialog,
    "package:flutter/src/material/raised_button.dart": raised_button,
    "package:flutter/src/material/outline_button.dart": outline_button,
    "package:flutter/src/material/material_button.dart": material_button,
    "package:flutter/src/material/button.dart": button,
    "package:flutter/src/material/flat_button.dart": flat_button,
    "package:flutter/src/material/toggle_buttons_theme.dart": toggle_buttons_theme,
    "package:flutter/src/material/time_picker_theme.dart": time_picker_theme,
    "package:flutter/src/material/text_selection_theme.dart": text_selection_theme,
    "package:flutter/src/material/text_button_theme.dart": text_button_theme,
    "package:flutter/src/material/tabs.dart": tabs$,
    "package:flutter/src/material/tab_bar_theme.dart": tab_bar_theme,
    "package:flutter/src/material/switch_theme.dart": switch_theme,
    "package:flutter/src/material/snack_bar_theme.dart": snack_bar_theme,
    "package:flutter/src/material/slider_theme.dart": slider_theme,
    "package:flutter/src/material/scrollbar_theme.dart": scrollbar_theme,
    "package:flutter/src/material/radio_theme.dart": radio_theme,
    "package:flutter/src/material/popup_menu_theme.dart": popup_menu_theme,
    "package:flutter/src/material/page_transitions_theme.dart": page_transitions_theme,
    "package:flutter/src/material/outlined_button_theme.dart": outlined_button_theme,
    "package:flutter/src/material/navigation_rail.dart": navigation_rail,
    "package:flutter/src/material/navigation_rail_theme.dart": navigation_rail_theme,
    "package:flutter/src/material/input_decorator.dart": input_decorator,
    "package:flutter/src/material/ink_splash.dart": ink_splash,
    "package:flutter/src/material/button_style.dart": button_style,
    "package:flutter/src/material/elevated_button_theme.dart": elevated_button_theme,
    "package:flutter/src/material/divider_theme.dart": divider_theme,
    "package:flutter/src/material/dialog_theme.dart": dialog_theme,
    "package:flutter/src/material/data_table_theme.dart": data_table_theme,
    "package:flutter/src/material/chip_theme.dart": chip_theme,
    "package:flutter/src/material/checkbox_theme.dart": checkbox_theme,
    "package:flutter/src/material/card_theme.dart": card_theme,
    "package:flutter/src/material/tooltip_theme.dart": tooltip_theme,
    "package:flutter/src/material/tooltip.dart": tooltip,
    "package:flutter/src/material/ink_highlight.dart": ink_highlight,
    "package:flutter/src/material/feedback.dart": feedback,
    "package:flutter/src/material/ink_well.dart": ink_well,
    "package:flutter/src/material/bottom_navigation_bar.dart": bottom_navigation_bar,
    "package:flutter/src/material/bottom_navigation_bar_theme.dart": bottom_navigation_bar_theme,
    "package:flutter/src/material/bottom_app_bar_theme.dart": bottom_app_bar_theme,
    "package:flutter/src/material/banner_theme.dart": banner_theme,
    "package:flutter/src/material/theme_data.dart": theme_data,
    "package:flutter/src/material/color_scheme.dart": color_scheme,
    "package:flutter/src/material/button_theme.dart": button_theme,
    "package:flutter/src/material/button_bar_theme.dart": button_bar_theme,
    "package:flutter/src/material/button_bar.dart": button_bar,
    "package:flutter/src/material/bottom_sheet.dart": bottom_sheet,
    "package:flutter/src/material/scaffold.dart": scaffold$,
    "package:flutter/src/material/elevation_overlay.dart": elevation_overlay,
    "package:flutter/src/material/material.dart": material,
    "package:flutter/src/material/debug.dart": debug$0,
    "package:flutter/src/material/material_localizations.dart": material_localizations,
    "package:flutter/src/material/theme.dart": theme$,
    "package:flutter/src/material/app_bar_theme.dart": app_bar_theme,
    "package:flutter/src/material/app_bar.dart": app_bar
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["icon_button.dart","back_button.dart","time.dart","ink_well.dart","ink_ripple.dart","material.dart","button_style_button.dart","text_button.dart","snack_bar.dart","floating_action_button_location.dart","floating_action_button.dart","flexible_space_bar.dart","list_tile.dart","drawer.dart","divider.dart","dialog.dart","material_button.dart","raised_button.dart","outline_button.dart","button.dart","flat_button.dart","toggle_buttons_theme.dart","time_picker_theme.dart","text_selection_theme.dart","text_button_theme.dart","tabs.dart","tab_bar_theme.dart","switch_theme.dart","snack_bar_theme.dart","slider_theme.dart","scrollbar_theme.dart","radio_theme.dart","popup_menu_theme.dart","page_transitions_theme.dart","outlined_button_theme.dart","navigation_rail.dart","navigation_rail_theme.dart","input_decorator.dart","ink_splash.dart","button_style.dart","elevated_button_theme.dart","divider_theme.dart","dialog_theme.dart","data_table_theme.dart","chip_theme.dart","checkbox_theme.dart","card_theme.dart","tooltip_theme.dart","tooltip.dart","ink_highlight.dart","feedback.dart","bottom_navigation_bar.dart","bottom_navigation_bar_theme.dart","bottom_app_bar_theme.dart","banner_theme.dart","theme_data.dart","color_scheme.dart","button_theme.dart","button_bar_theme.dart","button_bar.dart","bottom_sheet.dart","scaffold.dart","elevation_overlay.dart","debug.dart","material_localizations.dart","theme.dart","app_bar_theme.dart","app_bar.dart"],"names":[],"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0BAAoC,YAA3B,2BAAe;AACxC,YAAI,AAAa,2BAAsC,YAA7B,4BAAgB;AAC1C,YAAI,AAAO,gBAAG,MAAM;AACpB,YAAI,AAAU,wBAAgC,YAAvB,yBAAa;AACpC,YAAI,AAAW,yBAAkC,YAAzB,0BAAc;AACtC,YAAI,AAAW,yBAAkC,YAAzB,0BAAc;AACtC,YAAI,AAAY,0BAAoC,YAA3B,2BAAe;AACxC,YAAI,AAAc,4BAAwC,YAA/B,6BAAiB;AAC5C,YAAI,AAAmB,iCAAkD,YAAzC,kCAAsB;AACtD,YAAI,AAAe,6BAA0C,YAAjC,8BAAkB;AAC9C,YAAI,AAAc,4BAAwC,YAA/B,6BAAiB;AAC5C,YAAI,AAAO,qBAA0B,YAAjB,sBAAU;AAC9B,uBAAK,eAAS;AACd,YAAI,AAAoB,kCAAoD,YAA3C,mCAAuB;AACxD,YAAI,AAAmB,iCAAkD,YAAzC,kCAAsB;;;AAExD,YAAO,AAA4C,+BAAzB,AAAY,WAAD,YAAM,SAAM;IACnD;;;QA7jCO;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAKA;;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;QACA;IA/CA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAAQ,OAAD;SACP,EAAE,AAAO,MAAD,YAAY,AAAW,UAAD,6BAAW;SACzC,EAAE,AAAO,MAAD,YAAY,AAAW,UAAD,6BAAW;;EAAyD;;QAQ9F;QAKT;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAdS;IAKT;IACA;IACA;IACA;IACA;IACA;IACA;IACA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CA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAAiB,gBAAD;UAChB,AAAe,cAAD;UACd,AAAe,cAAD;UACd,AAAqB,oBAAD;UACpB,AAAU,SAAD;UACT,AAAgB,eAAD;AACtB,wDAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqVN;;;;;;IACY;;;;;;IACI;;;;;;IACJ;;;;;;IACA;;;;;;IACM;;;;;;IACN;;;;;;IACA;;;;;;IACP;;;;;;IACR;;;;;;IACI;;;;;;IACD;;;;;;IACM;;;;;;IACD;;;;;;IACN;;;;;;IACA;;;;;;IACA;;;;;;IACwB;;;;;;IACxB;;;;;;IACuB;;;;;;IACzB;;;;;;IACA;;;;;;IACe;;;;;;IACf;;;;;;IACM;;;;;;IACN;;;;;;IACoB;;;;;;IACP;;;;;;IACJ;;;;;;;AAGe;IAAmB;;UAGD;AACd,MAA/B,0BAAoB,UAAU;AACjB,qBAAmB;;AACpC,YAAI,AAAM,oBAAS;AACnB,YAAI,AAAY,0BAAS;AACzB,YAAI,AAAY,0BAAS;AACzB,YAAI,AAAU,wBAAS;AACvB,YAAI,AAAY,0BAAS;;;AAEsD,MAAjF,AAAW,UAAD,KAAK,wCAAyB,YAAY,QAAQ,YAAW;AACK,MAA5E,AAAW,UAAD,KAAK,gDAAiC,eAAe;AAC6C,MAA5G,AAAW,UAAD,KAAK,yCAA0B,oBAAoB,+BAAyC;AAMpG,MALF,AAAW,UAAD,KAAK,6CACb,kBACA,mCACsE,WAAtD,yBAAmB,gBAAgB,eAAI,gCAC7C;IAEd;;;QAxFO;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;;QACA;QACA;;QACA;QACA;;QACA;QACA;QACS;;;IA5BT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACS;UACJ,AAAiB,gBAAD;UAChB,AAAe,cAAD;UACd,AAAe,cAAD;UACd,AAAqB,oBAAD;UACpB,AAAU,SAAD;UACT,AAAgB,eAAD;AAnCrB;;EAmC8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA+DtC;;;QAJK;;;;;EAIL;;;;;;;;;;;;;;;;;;;;;;;AASuC;kBAAmC,uFACtD,mEAAyC,wEACnC,yEAA+C;AAFlC;;;;;;IAGpC;;AAE2B,YAAA,AAAY,AAAO,AAAsD,8CAAhD,QAAe,aAAc,AAAU,SAAD;IAAoB;gCAKtD,YAAiB;;UAAjB;UAAiB;AACxE,YAAO,AAAW,UAAD;AACN,2BAAiB;AAC5B,oBAAI,KAAK;AACwB,QAA/B,AAAgB,8BAAI,UAAU;;AAEI,QAAlC,AAAgB,iCAAO,UAAU;;AAExB,0BAAgB;AAC3B,UAAI,AAAc,aAAD,IAAI,cAAc;AACmC,cAApE,AAAO;sBAAA,OAAa,gCAA4B,MAAM,aAAa;;IAEvE;;AACwC,YAAA,AAAgB;IAAU;uBAEvC;AACK,MAA9B,iCAAsB;AACV,MAAZ;IACF;;AAGgC,MAA9B,iCAAsB;AACJ,MAAlB;IACF;;AAImB,MAAX;AACyE,MAAlE,AAAS,uEAAyB;IACjD;;0CAG6C;;AACX,MAA1B,sBAAgB,SAAS;AAC/B,UAAI,AAAyB,2BAAR,gBAAW,2BAAiB,SAAS;AACxD,sBAAI;AAGyE,UAA3E,qBAA+B,uCAAc,kCAAwB;;AAE/C,QAAxB;;IAEJ;;AAIoF,MAArE,AAAS,0EAA4B;AACnC,MAAT;IACR;;AAG0B,YAAgB,WAAhB,yBAAoB,AAAU,yCAAoB,AAAE,eAAX;IAAsB;6BAE3C;;;AACnB;AACA;AAEzB,cAAQ,IAAI;;;AAKR,gBAAO,AAAO;gBAAA,eAAwB,AAAY,gBAAT;;;;AAEzC,mBAA6C,gBAAtC,AAAO,yCAAA,OAAc,aAAQ,OAAO,IAA7B,gBAAkC,AAAO;gBAAV,iBAA8B,AAAY,gBAAT;;;;AAE9E,mBAA6C,iBAAtC,AAAO,0CAAA,OAAc,cAAQ,OAAO,IAA7B,gBAAkC,AAAO;gBAAV,iBAA8B,AAAY,gBAAT;;;;AATlF;;;IAWF;;UAE+C;AAC7C,cAAQ,IAAI;;;AAER;;;;;AAGA;;;;AALJ;;;IAOF;oBAEoC;;;UAAsB;;UAAY;;AAChD,sBAAY,AAAW,+BAAC,IAAI;AAChD,YAAK;AACH,cAAO,AAAW,AAAO,+BAAN,IAAI;AACC,QAAxB,AAAW,+BAAC,IAAI,EAAI;AACH,QAAjB;;;AAGF,UAAI,AAAK,IAAD,IAAmB;AACmC,cAA5D,AAAO;sBAAA,OAAa,gCAA4B,MAAM,KAAK;;AAE7D,UAAI,AAAM,KAAD,MAAK,AAAU,AAAQ,SAAT,sBAAY,AAAU,SAAD,WAC1C;AACF,oBAAI,KAAK;AACP,YAAI,AAAU,SAAD;AACK,6BAA2C,kBAAF,eAA1B,AAAQ;AAatC,UAZD,AAAW,+BAAC,IAAI,EAAI,gDACc,eAAX,qBAAG,8BACV,YAAY,SACnB,8BAAyB,IAAI,UAC7B,AAAO,oCACN,AAAO,kCACD,AAAO,wCACP,AAAO,wCACe,AAAC,eAAvB,AAAO,6BAAiB,YAAY,cACvC,gBAAgB,iBACG,wBAAG,6BACnB,4BAAuB,IAAI;AAE1B,UAAjB;;AAEoB,UAApB,AAAU,SAAD;;;AAGY,QAAd,AAAE,eAAX,SAAS;;AAEX,YAAO,AAAM,KAAD,MAAK,AAAW,AAAO,AAAQ,+BAAd,IAAI,uBAA8B,AAAE,eAAnB,AAAW,+BAAC,IAAI;AAE9D,cAAQ,IAAI;;;AAER,cAAI,AAAO,AAAmB,wCACH,AAAC,AAAO,eAAjC,AAAO,gCAAoB,KAAK;AAClC;;;;AAEA,wBAAI,WAAW,KAAI,AAAO,AAAQ,6BAClB,AAAC,AAAO,eAAtB,AAAO,qBAAS,KAAK;AACvB;;;;AAEA;;;;AAVJ;;;IAYF;4BAE+C;;;AACjB,0BAAoC,eAAX,qBAAG;AACxC,yBAA2C,kBAAF,eAA1B,AAAQ;AAC1B,qBAAW,AAAa,YAAD,eAAe,cAAc;AACxC;AACb,mBAAqE,SAAtB,cAAtC,AAAO,wCAAA,OAAc,YAAQ,OAAO,IAA7B,eAAkC,AAAO,iCAAV,gBAA+B,AAAY,gBAAT;AACzE,mCAAe,AAAO,gCAAyC,AAAC,eAAvB,AAAO,6BAAiB,YAAY,IAAI;AACjF,yBAAe,AAAO;AACvB,yBAAe,AAAO;AAElB;AACvB,YAAK;AACH,YAAI,AAAU;AACZ,yBAAgB,AAAE,eAAX,8BAAoB,MAAM;AACR,UAAhB,AAAE,eAAX,4BAAkB,MAAM;AACxB,cAAmB,YAAf,0BAAkB,MAAM,GAC1B,AAAqB,2BAAJ;AACF,UAAjB;;;;AAgBH,MAZD,SAAmE,CAApC,QAArB,AAAO,2BAAA,gBAAuB,AAAY,gBAAT,yDAC7B,aAAa,gBACX,YAAY,YAChB,QAAQ,SACX,KAAK,oBACM,AAAO,4CACX,YAAY,UAClB,AAAO,kCACD,YAAY,gBACZ,YAAY,aACf,SAAS,iBACU,wBAAG;AAGnC,YAAO,OAAM;IACf;;UAEwD;AACtD,qBAAK;AACH;;AAIA,MAFF,cAAS;AACiB,QAAxB;;IAEJ;;;AAGuB,kBAAmD,cAAjC,+BAAQ,6BAAR,OAAkB,qBAAlB,eAAmD;AAC1F,cAAQ,IAAI;;;AAER,gBAAe,WAAR,2BAAW;;;;AAElB,gBAAO;;;;AAJX;;;IAMF;;AAGa;AACX,cAAqB,AAAS;;;AAET,UAAjB,YAAY;AACZ;;;;AAE4B,UAA5B,YAAY;AACZ;;;;AANJ;;;AAQuD,MAAvD,qBAA+B,uCAAc,SAAS;IACxD;;UAG6B;AACP,MAApB,sBAAY,QAAQ;AACI,MAAxB;AACA,UAAI,AAAO,AAAc;AACQ,QAAX,AAAC,eAArB,AAAO,2BAAe,QAAQ;;IAElC;;UAEmC;AACjC,oBAAI,wCACF;AAC4B,MAA9B,iCAAsB,OAAO;AAC7B,UAAI,AAAO,AAAU;AACO,QAAV,AAAC,eAAjB,AAAO,uBAAW,OAAO;;IAE7B;;UAEmC;UAAuB;AACxD,YAAO,AAAQ,AAAQ,OAAT,YAAY,AAAQ,OAAD;AAEpB;AACb,UAAI,AAAQ,OAAD;AACO,2BAA2C,kBAAF,eAA1B,AAAQ,OAAD;AACtC,uBAAO,AAAa,YAAD,6BAAU;AAC+C,QAA5E,iBAAiB,AAAa,YAAD,eAAe,AAAa,AAAY,YAAb;;AAEhB,QAAxC,iBAAwB,AAAE,eAAT,OAAO;;AAEE,mBAAS,4BAAkB,cAAc;AACvB,MAApC,8BAAV,sBAAc,mDAAJ;AACY,MAAb,AAAE,eAAX,yBAAe,MAAM;AACE,MAAvB,2BAAiB,MAAM;AACN,MAAjB;AACoD,MAApD,qBAA+B,yCAAgB;IACjD;;;AAG2B,YAAzB;2BAAgB;AACK,MAArB,2BAAiB;AACoC,MAArD,qBAA+B,yCAAgB;AAC/C,UAAI,AAAO,AAAM;AACf,sBAAI,AAAO,6BACA,AAAe,yBAAR;AACH,QAAH,AAAC,eAAb,AAAO;;IAEX;;;AAG0B,YAAxB;2BAAgB;AACK,MAArB,2BAAiB;AACjB,UAAI,AAAO,AAAY;AACA,QAAH,AAAC,eAAnB,AAAO;;AAE4C,MAArD,qBAA+B,yCAAgB;IACjD;;;AAG2B,YAAzB;2BAAgB;AACK,MAArB,2BAAiB;AACjB,UAAI,AAAO,AAAY,iCACH,AAAC,AAAE,eAArB,AAAO;IACX;;;AAG2B,YAAzB;2BAAgB;AACK,MAArB,2BAAiB;AACjB,UAAI,AAAO,AAAY;AACrB,sBAAI,AAAO,6BACA,AAAqB,+BAAR;AACH,QAAH,AAAC,eAAnB,AAAO;;IAEX;;;AAIE,UAAI,AAAU;AACqB,uBAAoB,eAAT;AAC5B,QAAhB,sBAAY;AACZ,iBAAiC,SAAU,SAAQ;AACjC,UAAhB,AAAO,MAAD;AACa,QAArB,2BAAiB;;AAEnB,YAAO,AAAe;AACtB,eAA0B,YAAa,AAAY;AAChB,cAAjC,AAAW,+BAAC,SAAS;sBAAV,OAAa;AACK,QAA7B,AAAW,+BAAC,SAAS,EAAI;;AAEiC,aAA5D,AAAO;qBAAA,OAAa,iCAA4B,MAAM;AACpC,MAAZ;IACR;;UAE8C;AAC5C,YAAO,AAAO,AAAM,AAAsC,OAA7C,kBAAkB,AAAO,AAAY,MAAb,wBAAwB,AAAO,AAAY,MAAb;IACrE;;AAEoB,wCAAiB;IAAO;;UAEH;AACvB,MAAhB,sBAAY;AACZ,oBAAI;AACkB,QAApB;;IAEJ;;UAEuC;AACpB,MAAjB,sBAAY;AAGQ,MAApB;IACF;;AAGyD,MAAvD,qBAA+B,uCAAc;IAC/C;;;AAGuB,kBAAmD,cAAjC,+BAAQ,6BAAR,OAAkB,qBAAlB,eAAmD;AAC1F,cAAQ,IAAI;;;AAER,gBAAe,WAAR,2BAAW,AAAO;;;;AAEzB,gBAAO;;;;AAJX;;;IAMF;UAG0B;;;AACxB,4BAAO,mBAAyB,OAAO,EAAR;AACX,MAAd,YAAM,OAAO;AACnB,eAA0B,OAAQ,AAAY;AACa,eAAzD,AAAW,+BAAC,IAAI;uBAAL,OAAQ,aAAQ,8BAAyB,IAAI;;AAGjC;AAC2F,cAApH;6BAAgB,eAAoE,SAAtB,gBAAtC,AAAO,yCAAA,OAAc,aAAQ,OAAO,IAA7B,gBAAkC,AAAO,kCAAV,gBAA+B,AAAY,gBAAT,OAAO;AAErF,iCAA6C,0EAC1C,QAAnB,AAAO,yBAAA,gBAAwC,4DAChC;;AACb,uBAAK,eAAuB;AAC5B,sBAAI,kCAAa,eAAuB;AACxC,sBAAI,sBAAyB;;;AAGjC,YAAO,qDACE,aACA,kCACI,6BACF,sCACM,AAAO,wCACD,qDACF,0CACJ,AAAO,8BACX,mCACG,oBAAoB,qBACnB,gDACD,oCACD,gCAC8B,UAA5B,AAAO,qCAAwB,AAAO,AAAM,4BAAU,iBAAO,sCAC3B,UAA5B,AAAO,qCAAwB,AAAO,AAAY,kCAAU,iBAAO,sCACzE,+DACM,0BAAU,4BAAiB,uBAC/B,0BAAU,0BAAa,6BACjB,0BAAU,8BAAmB,mBAC7B,AAAO,AAAY,4CAAU,8BAAmB,mBAChD,AAAO,AAAY,4CAAU,gCAAmB,gBACnC,wDACJ,aACf,AAAO;IAO5B;;;IAxY4B;IACL;IAClB,sBAAY;IACwB,wBAA6C;+CACjD;;IAOO,4BAAkB;IA6MzD,sBAAY;;;EAiLnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAkGS;QACG;QACY;QACA;QACM;QACF;QACE;QACN;QACA;QACP;QACN;QACA;QACA;QACwB;QACxB;QACuB;QACtB;QACM;QACD;QACP;QACD;;QACM;QACN;;QACe;QACf;;;AACF,oDACE,GAAG,SACD,KAAK,SACL,KAAK,eACC,WAAW,eACX,WAAW,aACb,SAAS,eACP,WAAW,sBACJ,kBAAkB,WAC7B,OAAO,eACH,WAAW,oBACN,sBACO,2CACb,UAAU,cACV,UAAU,kBACN,cAAc,gBAChB,YAAY,eACb,WAAW,iBACT,aAAa,UACpB,MAAM,gBACA,YAAY,gBACZ,YAAY,mBACK,MAAf,cAAc,EAAd,cAAkB,mCACZ,oBAAoB,aAC/B,SAAS,mBACH,eAAe,iBACjB,aAAa,aACjB,SAAS;;EACrB;;;;;;;IgDvtCH;;;QAPK;;;;;EAOL;;;;;;;;;;;;;;IAuQsC;;;;;;IAOX;;;;;;IAGf;;;;;;IAOI;;;;;;IAMiB;;;;;;IAalB;;;;;;IAKA;;;;;;IAMA;;;;;;IAMA;;;;;;IAWQ;;;;;;IAWA;;;;;;IAIJ;;;;;;IAIA;;;;;;IAQJ;;;;;;IASA;;;;;;IAGD;;;;;;IAGA;;;;;;IAMO;;;;;;;AAnFM;IAAiB;;AAsFC;IAA2B;;;;QA5J/D;QACS;;QACT;QACA;;QACA;QACA;QACE;QACF;QACA;;QACE;QACF;QACA;QACA;QACA;;QACA;;QACA;QACA;QACA;QACA;QACA;;IAlBS;IACT;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAAM,KAAD;UACQ,aAAb,AAAM,KAAD,gBAAW;UAE4C,UAAlE,AAAM,KAAD,aAAO;UAAyB;AAAS,YAAA,AAAK,AAAM,KAAP;0DAClD,AAAM,KAAD,aAAO;UAAyB;AAAS,YAAA,AAAK,AAAM,KAAP;iEAClD;UAEM,AAAE,AAAgB,kBAAb,YAAY,KAAiB,aAAb,YAAY,iBAAG,AAAM,KAAD;UACzC,AAAU,AAAQ,SAAT,YAAsB,aAAV,SAAS,KAAI;UAClC,AAAS,AAAQ,QAAT,YAAqB,aAAT,QAAQ,KAAI;UAErC,AAAkB,AAAQ,iBAAT,YAAY,AAAW,UAAD,6BACvC;UAEK,AAAiB,AAAQ,gBAAT,YAA6B,aAAjB,gBAAgB,KAAI;UAChD,AAAmB,AAAQ,kBAAT,YAA+B,aAAnB,kBAAkB,KAAI;IACzC,+BAAoB,MAAlB,iBAAiB,EAAjB,cAAqB,UAAU;AACnD,6EAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsJU;;;;;;IACA;;;;;;IACN;;;;;;IACX;;;;;;IACO;;;;;;IACF;;;;;;IACJ;;;;;;IACH;;;;;;IACU;;;;;;IACA;;;;;;IACL;;;;;;IACA;;;;;;IACF;;;;;;IACH;;;;;;IACA;;;;;;IACO;;;;;;UAGQ;;;AAKd;AAEG,6BAA8C,eAA3B,AAAmB;AAEtC,8BAA2C,oDAAxB,OAAmB,WAAnB,eAA2B;AAC9C,gCAA+C,2DAA1B,OAAqB,aAArB,gBAA6B;AAIlD,6BAAmB,sBAA0B,aAAjB,gBAAgB,iBAAG,kBAAkB,GAAE;AAGnE,+BAAqB,sBAA4B,aAAnB,kBAAkB,iBAAG,gBAAgB,GAAE;AAGpE,6BAAmB,AAAK,AAAQ,sBAAG,KAAK,QAAoB,QAAb,AAAK,mBAAA,gBAAW,AAAK;AAmB3E;AACA;AACP,oBAAI,uCAAuB;AAIJ,QAHrB,gBAAgB,AAGd,qCAFO,AAAiB,gBAAD,GAAG,UACrB,AAAiB,AAAM,gBAAP,GAAG,MAAM,AAAmB,kBAAD,GAAG,eAC1C;AAIU,QAHrB,aAAa,AAGX,qCAFO,AAAiB,gBAAD,GAAG,AAAiB,gBAAD,GAAG,UACxC,AAAiB,AAAM,gBAAP,GAAG,MAAM,AAAmB,kBAAD,GAAG,eAC1C;YACN,gBAAK,uCAAuB;AAIZ,QAHrB,gBAAgB,AAGd,qCAFO,AAAiB,gBAAD,GAAG,UACrB,AAAmB,kBAAD,GAAG,eACjB;AAIU,QAHrB,aAAa,AAGX,qCAFO,AAAiB,gBAAD,GAAG,AAAiB,gBAAD,GAAG,UACxC,AAAiB,gBAAD,GAAG,AAAmB,kBAAD,GAAG,eACpC;;AAKU,QAHrB,gBAAgB,AAGd,qCAFO,AAAiB,AAAM,gBAAP,GAAG,MAAM,AAAiB,gBAAD,GAAG,UAC9C,AAAiB,AAAM,gBAAP,GAAG,MAAM,AAAmB,kBAAD,GAAG,eAC1C;AAIU,QAHrB,aAAa,AAGX,qCAFO,AAAiB,AAAM,gBAAP,GAAG,MAAM,AAAiB,gBAAD,GAAG,UAC9C,AAAiB,AAAM,gBAAP,GAAG,MAAM,AAAmB,kBAAD,GAAG,eAC1C;;AAGb,cAAQ;;;AAEI,UAAR,OAAO;AACP;;;;AAE+B,UAA/B,OAAwB,CAAZ,AAAE,eAAN,aAAQ;AAChB;;;;AANJ;;;AASO,mBAAS,qCACP,yBACM,yBACN,gCACe,sCAAU,UAAU,UAAU,aAAa,WACxD,0CACkC,mDACF,mDACV,iCACT,yBAChB,qDACwB,eAAV,6BACD,0BACD,yBACA,qBACJ,8BACa,6CACE,yFAEvB,kDACwB,eAAV,6BACD,sBACL,+BACc,+CACE,+CACF,+CACE;AAOhC,UAAI,AAAiB,gBAAD;AAOjB,QAND,SAAS,kCACE,gBAAgB,eACZ,uBACoB,aAAjB,gBAAgB,IAAG,gBAAgB,wBAC7B,aACf,MAAM;;AAehB,MAXD,SAAS,mCACG,0BACC,aACJ,+BACa,yBAChB,MAAM,EACN,gCACS;AAMf,YAAO,+BACC,IAAI,SACH,MAAM;IAEjB;;8DArLO,MACA,MACA,WACA;QAHA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACS;;QACA;;QACA;QACA;QACA;;QACA;;QACT;QACS;;;IAfT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACS;IACA;IACA;IACA;IACA;IACA;IACT;IACS;UACF,AAAK,IAAD;UACJ,AAAK,IAAD;UACJ,AAAU,SAAD;UACT,AAAS,QAAD;UACR,AAAmB,kBAAD;UAClB,AAAqB,oBAAD;UACpB,AAAY,WAAD;AAvBnB;;EAuB4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiLjB;;;;;;IACO;;;;;;IACX;;;;;;IACF;;;;;;IACmB;;;;;;IACT;;;;;;IACA;;;;;;;UAGK;AACX,sBAAY,AAAW,yBAAS;AACzB,6BAAmB,8CAC9B,SAAS,QACV;AAEY,0BAA8B,mCAChD,AAAiB,gBAAD,OAAO,2BACvB,AAAiB,gBAAD,OAAO,yBACvB,AAAU;AAGZ,YAAO,iCACgB,6CACP,YACP,oCACE,oCACC,aAAa,mBACZ,iBAAW,AAAK,uBAAa,AAAK;IAIjD;;;QA3CO;QACS;;QACA;;QACA;;QACA;;QACA;;QACA;QACA;;IANA;IACA;IACA;IACA;IACA;IACA;IACA;UACJ,AAAS,QAAD;UACR,AAAK,IAAD;AACX,mEAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;IAuDH;;;;;;IACO;;;;;;IACM;;;;;;IACd;;;;;;IACA;;;;;;IACL;;;;;;IACA;;;;;;UAGe;;;AACV,6BAAmB,AAAmB;AACtC,+BAAqB,AAAqB;AAExC,wBAIf,eAJuC,0BACtC,2BACA,yBACA,AAAU;AAEL,iBAAwB,qCACtB,AAAY,WAAD,qBACN,gBAAgB,SACnB,AAAW,yBAAS,0BAKtB,oCACc,iCACT,2BACN,AAGE,qCAFyB,AAAE,eAApB,kBAAkB,IAAoB,eAAhB,gBAAgB,QACxC,eACI,8BAGM,0CACH,MAAX,AAAK,iBAAA,cAAS,mBAAe,eAAV,AAAK;AAInC,qBAAK,yCAAyB;AAM3B,QAJD,OAAO,+CACmB,eACf,YACF,IAAI;YAER,gBAAK;AAMT,QAJD,OAAO,4DACmB,eACf,uBACF,IAAI;YAER,gBAAK;AAMT,QAJD,OAAO,4DACmB,eACf,AAAoC,qCAAf,UAAU,cAAa,wBAC9C,IAAI;;AAQd,MAJD,OAAO,gCACgB,gDACP,YACP,oCAAiB,IAAI;AAG9B,UAAI,AAAK,AAAM;AAGQ,6BAA4B,0BAAG,OAAO;AAM1D,QALD,OAAO,sCACC,AAAe,cAAD,4BACD,sBAAS,KAAK,AAAe,cAAD,4BAExC,IAAI;;AAIf,YAAO,KAAI;IACb;;;QAnGO;QACS;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;;IANA;IACA;IACA;IACA;IACA;IACA;IACA;UACJ,AAAW,UAAD;UACV,AAAU,SAAD;UACT,AAAK,IAAD;UACJ,AAAmB,kBAAD;UAClB,AAAqB,oBAAD;UACpB,AAAmB,kBAAD;UAClB,AAAqB,oBAAD;AAC3B,gEAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFO;IAAW;;;AAAX;;IAAW;;AAYpC,eAA+B,aAAc;AACvB,QAApB,AAAW,UAAD;AACZ,eAAmB,SAAU;AACX,QAAhB,AAAO,MAAD;AACQ,MAAhB,AAAS;AAOP,MALF,yBAAe,wCAAmC,AAAO,AAAM,8BAAQ,QAAK;;;AAC1E,cAAO,4DACK,uCACH;cAFF;AAGJ,oCAAY;;;;AAQf,MANF,wBAAc,oCAA+B,AAAO,AAAM,8BAAQ;YAAK;AACrE,cAAO,6CACG,AAAY,gCAAC,KAAK,UACZ,2CACO,AAAc;;AAGM,MAA7C,AAAY,AAAsB,gCAArB,AAAO,kCAAsB;AAC0B,MAApE,+BAAmB,AAAO,AAAK,AAAsB,2BAArB,AAAO;IACzC;;;AASE,cACE,MADK,AAAO,kBAAA,cACgB,AAAY,wDAAT;YAA/B,gBACwB,aAApB,AAAO,AAAM,iCAAU,IAA4B,sDAAgC;IAC3F;;AAOE,cAAQ;;;AAEJ,gBAAO;;;;AAEP,gBAAO;;;;AAJX;;;IAMF;;AAImB,MAAX;AACO,MAAb;IACF;;AAMI,MAHF,cAAS;;IAIX;;AAIE,eAA+B,aAAc;AACvB,QAApB,AAAW,UAAD;AACZ,eAAmB,SAAU;AACX,QAAhB,AAAO,MAAD;AACO,MAAT;IACR;;UAEuC;AAAc,YAAA,AAAW,qEAAS,SAAS;IAAC;sBAE9D;;;AACnB,UAAI,AAAO,AAAK,AAAQ,AAAgB,2BAAvB,KAAK;AAwBnB,QAvBD,AAAS,8BACP,8CACS,aACA,KAAK,SAC8B,eAAnC,AAAO,AAAK,AAAQ,2BAAP,KAAK,2BAClB,QAJT;AAKc,UAAX,iCACD;gBAAiB;AACf,oBAAQ,MAAM;;;AAMR,gBAJF,cAAS;AACO,+BAAS,AAAS;AACD,kBAA/B,+BAAmB,AAAO,MAAD;AACT,kBAAhB,AAAO,MAAD;;AAER;;;;;;AAIA;;;;AAXJ;;;;;;;IAiBV;;mDAGyC;;AACP,MAA1B,sBAAgB,SAAS;AAG/B,UAAI,AAAO,AAAM,AAAO,gCAAG,AAAU,AAAM,SAAP;AACrB,QAAb;AACA;;AAGF,UAAI,AAAO,AAAa,4BAAG,AAAU,SAAD;AAClC,gBAAQ;;;AAEJ;;;;AAEgC,YAAhC,sBAAY,AAAO;AACnB;;;;AALJ;;;AAO8C,QAA9C,AAAY,AAAyB,gCAAxB,AAAU,SAAD;AACqB,QAA3C,AAAY,AAAsB,gCAArB,AAAO;;AAEpB,YAAqB,aAAjB,8BAAoB,AAAO,AAAK,AAAsB,2BAArB,AAAO,4CAC1C,AAAoE,+BAAjD,AAAO,AAAK,AAAsB,2BAArB,AAAO;;IAE7C;+BAIgD;UAAkB;AACjC,MAA/B,AAAU,SAAD,WAAT,kCAAU;AAEV,YAAO,AAAU,AAAS,UAAV,oBAAoB,AAAU,SAAD,qBAAoB,QAAQ,KAAI,SAAS;IACxF;;;AAG8B,0BAAsC,gDAAG;AACrE,YAAO,AAAc,aAAD;AAEJ,sBAAkB,gBAAG;AACF,wBAAuC,wDAAG;AAE7D,wCACd,qEAC4B,MAA1B,AAAO,gCAAA,cAAsB,AAAY,WAAD,4BACxC,AAAO;AAEK,0CACd,qEAC8B,OAA5B,AAAO,kCAAA,eAAwB,AAAY,WAAD,+BAC1C,AAAO;AAGC;AACZ,cAAQ,AAAU,SAAD;;;AAEsB,UAAnC,aAAa,AAAU,SAAD;AACtB;;;;AAEkC,UAAlC,aAAa,AAAU,SAAD;AACtB;;;;AANJ;;;AASiB;AACjB,cAAQ;;;AAUH,UARD,aAAa,kCAGT,SADA,QADK,AAAO,iCAAA,gBACT,AAAY,WAAD,+BAAd,gBACG,AAAU,SAAD,uCAIZ,SADA,SADA,QADG,AAAO,+BAAA,gBACP,AAAY,WAAD,6BAAd,gBACG,AAAO,iCAAV,gBACG,UAAU;AAEjB;;;;AASC,UAPD,aAAa,kCAGT,SADA,QADK,AAAO,iCAAA,gBACT,AAAY,WAAD,+BAAd,gBACG,AAAU,AAAY,SAAb,qCAGZ,SADA,QADG,AAAO,+BAAA,gBACP,AAAY,WAAD,6BAAd,gBACG,AAAU,AAAY,SAAb;AAEhB;;;;AArBJ;;;AAuBkB,kCAA0C,QAAnB,AAAO,yBAAA,gBAAkC;AAE/D,kBAAgB;AACnC,eAAS,IAAI,GAAG,AAAE,CAAD,gBAAG,AAAO,AAAM,+BAAQ,IAAA,AAAC,CAAA;AAqBtC,QApBF,AAAM,KAAD,SAAK,oDACR,0BACA,AAAO,AAAK,2BAAC,CAAC,GACd,AAAW,+BAAC,CAAC,GACb,AAAO,2CACqC,SAAzB,AAAO,+BAAA,iBAAqB,AAAY,WAAD,oDACV,SAA3B,AAAO,iCAAA,iBAAuB,AAAY,WAAD,oDAC1C,2BAA2B,wBACzB,6BAA6B,SAC5C;AACL,gBAAI,AAAO,AAAM,2BACH,AAAC,AAAG,eAAhB,AAAO,mBAAO,CAAC;2CAEP,UAAU,QAChB,wBAAc,AAAW,+BAAC,CAAC,cACvB,AAAE,CAAD,KAAI,AAAO,+CAC0D,UAAlC,SAA1B,AAAO,gCAAA,iBAAsB,AAAY,WAAD,+BAAd,iBAAqC,uCACG,UAApC,SAA5B,AAAO,kCAAA,iBAAwB,AAAY,WAAD,iCAAd,iBAAuC,wDAC7E,AAAc,aAAD,qBAAoB,AAAE,CAAD,GAAG,aAAa,AAAO,AAAM,6CAC9D,oBAAoB;;AAGrC,YAAO,MAAK;IACd;;UAEqC;AACnC,YAAwB,yCACC,wCAChB,sCACgC,+CAC3B,KAAK;IAGrB;UAG0B;;;AACxB,qBAAO,kCAA4B,OAAO;AAC1C,qBAAO,2CAAmC,OAAO;AACjD,qBAAO,8BAAwB,OAAO;AACtC,YAAe,AAAsC,oBAAnC,OAAO,qBAAoB;AAEV,wBAAuC,wDAAG,OAAO;AAGvE,oCAA0B,sBAA+C,aAA3B,AAAY,AAAQ,0BAAjB,OAAO,oBAA2C,aAAxB,AAAO,gCAAmB,KAAK;AAChH;AACP,cAAQ;;;AAEmE,UAAvE,mBAAyC,MAAvB,AAAO,6BAAA,cAAmB,AAAY,WAAD;AACvD;;;;AAEkC,UAAlC,kBAAkB;AAClB;;;;AANJ;;;AAQA,YAAO,8CACe,aACb,uCACgD,SAAzB,OAAjB,AAAO,uBAAA,eAAa,AAAY,WAAD,oBAAd,gBAA4B,qBACjD,eAAe,SACf,2CACQ,wCAAqD,KAAE,uBAAuB,WACpF,oCACI,uDACE,AAAS,iDACY,wBAAG,OAAO,YAEnC,iCACc,2CACZ,gCACe,yCAAa,uBAAuB,WACtC,+CACP,OAAO,gBACF,aACP,2BAAiB;IAQxC;;;IA9R0B,yBAAoC;wDACnC;;IAGN,qBAAW;IAIzB;;;EAuRT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MArRkC,0DAAU;YAAG,sCAAqB,UAAU;;;;;;AA+SnD;IAAU;;;AAAV;;IAAU;;;AACd;IAAS;;;AAAT;;IAAS;;AAG5B,YAAO;YAAsC;AAG3C,cAAO,AAAW,AAAiC,WAAlC,uBAAmB,UAAN,wDAAkC,KAAK,SAAQ,KAAY;cAAZ;cAAY;AAAU,gBAAI,cAAJ,GAAG,iBAAG,KAAK;;;;AAGnG,uBAAa,SAAS,CAAC,AAAM;AAE7B,2BAAiB,SAAS,CAAC,AAAM,AAAY,0CAAQ,GAAG;AAGrE,YAA8E,EAAvD,aAAf,cAAc,IAAiD,aAA9C,AAAM,8BAAc,AAAM,AAAW,qCAAC,gBAAU,oBAAO,UAAU;IAC5F;;AAGsB,MAApB,AAAW;IACb;;;QAzCgB;;QACA;;QACA;;QACU;;qCAkBD;;oCACJ;;IAtBL;IACA;IACA;UAEJ,AAAM,KAAD;UACL,AAAM,KAAD;UACL,AAAM,KAAD;AAId,IAHD,kBAAa,4DACD,uCACH,KAAK;AAKb,IAHD,iBAAY,4CACF,wBACM;AAEI,IAApB,AAAW;EACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBA2CgC,QAAa;UAAb;UAAa;AAC9B,iBAAO,sBAAS,AAAO,MAAD,KAAgB,aAAX,AAAK,IAAD,uBAAS,AAAO,MAAD;AAC9C,iBAAO,sBAAS,AAAO,MAAD,KAAiB,aAAZ,AAAK,IAAD,wBAAU,AAAO,MAAD;AAC5D,YAAO,WAAU,AAAK,AAAO,IAAR,GAAG,IAAI,GAAG,AAAK,IAAD,GAAG,IAAI;IAC5C;;8CAGkC;;AAChC,UAAI,AAAc,sBAAG,AAAW,UAAD,gBAC7B,MAAO;AACT,UAAY,YAAR,cAAW,AAAW,UAAD,WACvB,MAAO;AACT,UAAI,AAAQ,AAAO,2BAAG,AAAW,AAAQ,UAAT,qBAC9B,MAAO;AACT,eAAS,IAAI,GAAG,AAAE,CAAD,gBAAG,AAAQ,0BAAQ,IAAA,AAAE,CAAD,GAAI;AACvC,YAAe,aAAX,AAAO,sBAAC,CAAC,GAAK,AAAW,AAAO,UAAR,kBAAS,CAAC,IACpC,MAAO;AACX,YAAO;IACT;UAGkB,QAAa;;UAAb;UAAa;AAC7B,eAAmB,SAAU;AACf,2CAAQ;AAAS,sBAAQ,AAAO,MAAD;;;AAChC,mBAAY,qBAAS,KAAK,KAAK,AAAK,IAAD,QAAQ,AAAK,IAAD;AACrC,QAArB,AAAO,MAAD,UAAU,IAAI;AACP;AACb,gBAAQ;;;AAE+C,YAAnD,eAAe,AAAI,mBAAE,AAAO,MAAD;AAC3B;;;;AAE6C,YAA7C,eAAe,AAAO,MAAD;AACrB;;;;AANJ;;;AAQa,qBAAS,kBAAoB,aAAb,YAAY,iBAAG,AAAK,IAAD,SAAoB,aAAZ,AAAK,IAAD,WAAU;AAClD,0BAAc,qCACzB,UACF,gDAAW,MAAM,EAAE,IAAI;AAM7B,QAJD,AAAO,MAAD,YACJ,MAAM,EACN,AAAY,WAAD,WAAW,AAAO,AAAU,MAAX,mBAC5B,KAAK;;IAGX;;;QA1DgB;;QACA;;IADA;IACA;UACJ,AAAQ,OAAD;UACP,AAAc,aAAD;AAJzB;;EAIkC;;;;;;;;;;;;;;;;;;;IC1hCrB;;;;;;IAKC;;;;;;IAUO;;;;;;IAUA;;;;;;IAMR;;;;;;IAMA;;;;;;IAMI;;;;;;IAMA;;;;;;IAKL;;;;;;IAKA;;;;;;IAKmB;;;;;;;;UAKtB;UACC;UACO;UACA;UACR;UACA;UACI;UACA;UACL;UACA;UACmB;AAEzB,YAAO,qFAC4B,MAAhB,eAAe,EAAf,cAAwB,yCACpB,OAAV,SAAS,EAAT,eAAkB,4CACQ,QAAlB,iBAAiB,EAAjB,gBAA0B,uDACJ,QAApB,mBAAmB,EAAnB,gBAA4B,uDACZ,QAAlB,iBAAiB,EAAjB,gBAA0B,uDACJ,QAApB,mBAAmB,EAAnB,gBAA4B,wDACV,QAAnB,kBAAkB,EAAlB,gBAA2B,yDACJ,QAArB,oBAAoB,EAApB,gBAA6B,yDACZ,QAAnB,kBAAkB,EAAlB,gBAA2B,yDACJ,QAArB,oBAAoB,EAApB,gBAA6B,2CACxC,QAAL,IAAI,EAAJ,gBAAa;IAEvB;gBAOuE,GAAiC,GAAU;;;AAChH,YAAO,AAAE,CAAD;AACR,YAAO,oFACkB,qBAAK,CAAC,gBAAD,OAAG,8BAAiB,CAAC,iBAAD,OAAG,uBAAiB,CAAC,cAC1D,uBAAW,CAAC,kBAAD,OAAG,2BAAW,CAAC,kBAAD,OAAG,kBAAW,CAAC,sBAClB,4CAAK,CAAC,kBAAD,OAAG,mCAAmB,CAAC,kBAAD,OAAG,0BAAmB,CAAC,wBAChD,4CAAK,CAAC,kBAAD,OAAG,qCAAqB,CAAC,kBAAD,OAAG,4BAAqB,CAAC,sBAChE,uBAAK,CAAC,kBAAD,OAAG,mCAAmB,CAAC,kBAAD,OAAG,0BAAmB,CAAC,wBAChD,uBAAK,CAAC,kBAAD,OAAG,qCAAqB,CAAC,kBAAD,OAAG,4BAAqB,CAAC,uBACnD,oCAAK,CAAC,mBAAD,OAAG,sCAAoB,CAAC,mBAAD,OAAG,4BAAoB,CAAC,yBAClD,oCAAK,CAAC,mBAAD,OAAG,wCAAsB,CAAC,mBAAD,OAAG,8BAAsB,CAAC,uBAClE,aAAF,CAAC,IAAG,gBAAM,CAAC,mBAAD,OAAG,uCAAqB,CAAC,mBAAD,OAAG,kDACjC,aAAF,CAAC,IAAG,gBAAM,CAAC,mBAAD,OAAG,yCAAuB,CAAC,mBAAD,OAAG,oCACrD,aAAF,CAAC,IAAG,gBAAM,CAAC,mBAAD,OAAG,yBAAO,CAAC,mBAAD,OAAG;IAEjC;;AAIE,YAAO,eACL,sBACA,gBACA,wBACA,0BACA,wBACA,0BACA,yBACA,2BACA,yBACA,2BACA;IAEJ;;UAGwB;AACtB,UAAI,AAAU,SAAM,KAAK,EACvB,MAAO;AACT,UAAsB,aAAZ,iBAAN,KAAK,GAAgB,uBACvB,MAAO;AACT,YAAa,AAWT,6DAXG,KAAK,KACiB,YAAtB,AAAM,KAAD,kBAAoB,yBACzB,AAAM,AAAU,KAAX,cAAc,kBACK,YAAxB,AAAM,KAAD,oBAAsB,2BACD,YAA1B,AAAM,KAAD,sBAAwB,6BACL,YAAxB,AAAM,KAAD,oBAAsB,2BACD,YAA1B,AAAM,KAAD,sBAAwB,6BACJ,YAAzB,AAAM,KAAD,qBAAuB,4BACD,YAA3B,AAAM,KAAD,uBAAyB,8BAC9B,AAAM,AAAmB,KAApB,uBAAuB,2BAC5B,AAAM,AAAqB,KAAtB,yBAAyB,6BAC9B,AAAM,AAAK,KAAN,SAAS;IACvB;;UAGqD;AACd,MAA/B,0BAAoB,UAAU;AACiD,MAArF,AAAW,UAAD,KAAK,6BAAc,mBAAmB,qCAA+B;AACL,MAA1E,AAAW,UAAD,KAAK,mCAAe,aAAa,+BAAyB;AAC0C,MAA9G,AAAW,UAAD,KAAK,kDAAmC,qBAAqB,uCAAiC;AACU,MAAlH,AAAW,UAAD,KAAK,kDAAmC,uBAAuB,yCAAmC;AACnB,MAAzF,AAAW,UAAD,KAAK,6BAAc,qBAAqB,uCAAiC;AACU,MAA7F,AAAW,UAAD,KAAK,6BAAc,uBAAuB,yCAAmC;AACqB,MAA5G,AAAW,UAAD,KAAK,8CAA+B,sBAAsB,wCAAkC;AACU,MAAhH,AAAW,UAAD,KAAK,8CAA+B,wBAAwB,0CAAoC;AACH,MAAvG,AAAW,UAAD,KAAK,yCAA0B,sBAAsB,wCAAkC;AACU,MAA3G,AAAW,UAAD,KAAK,yCAA0B,wBAAwB,0CAAoC;AACP,MAA9F,AAAW,UAAD,KAAK,4DAA6C,QAAQ,0BAAoB;IAC1F;;;QAzLO;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IAVA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACL;;;;;;;;;;;;;;;;;;;;;;;;;IA4MiC;;;;;;cAYiB;;;AAClB,2BAAiB,AAAQ,OAAD;AACxD,oBAAO,cAAc,gBAAd,OAAgB;YAAhB,gBAA8B,AAAY,gBAAT,OAAO;IACjD;;8DAGiD;;AAAc,YAAK,cAAL,WAAQ,AAAU,SAAD;IAAK;;;QAxB9E;QACS;;QACE;;;IADF;UAEJ,AAAK,IAAD;AAAW,wFAAW,GAAG,SAAS,KAAK;;EAAC;;;;;;;;;;;;;;;;;IC/M3C;;;;;;IAGC;;;;;;IAGM;;;;;;;;UAKX;UACC;UACM;AAEd,YAAO,yDACQ,MAAN,KAAK,EAAL,cAAc,+BACA,OAAV,SAAS,EAAT,eAAkB,gCAChB,QAAN,KAAK,EAAL,gBAAc;IAEzB;;UAGyC;AACvC,YAAa,AAAY,iBAAT,OAAO;IACzB;gBAOiD,GAAsB,GAAU;;;AAC/E,YAAO,AAAE,CAAD;AACR,YAAO,wDACQ,qBAAK,CAAC,gBAAD,OAAG,oBAAO,CAAC,iBAAD,OAAG,aAAO,CAAC,cAC5B,uBAAW,CAAC,kBAAD,OAAG,2BAAW,CAAC,kBAAD,OAAG,kBAAW,CAAC,UAC1C,aAAF,CAAC,IAAG,eAAM,CAAC,kBAAD,OAAG,wBAAQ,CAAC,kBAAD,OAAG;IAEnC;;AAIE,YAAO,eACL,YACA,gBACA;IAEJ;;UAGwB;AACtB,UAAI,AAAU,SAAM,KAAK,EACvB,MAAO;AACT,UAAsB,aAAZ,iBAAN,KAAK,GAAgB,uBACvB,MAAO;AACT,YAAa,AAGT,2CAHG,KAAK,KACO,YAAZ,AAAM,KAAD,QAAU,eACf,AAAM,AAAU,KAAX,cAAc,kBACP,YAAZ,AAAM,KAAD,QAAU;IACxB;;UAGqD;AACd,MAA/B,0BAAoB,UAAU;AAC6B,MAAjE,AAAW,UAAD,KAAK,6BAAc,SAAS,2BAAqB;AAC4B,MAAvF,AAAW,UAAD,KAAK,2CAA4B,aAAa,+BAAyB;AACI,MAArF,AAAW,UAAD,KAAK,iDAAkC,SAAS,2BAAqB;IACjF;;;QA5EO;QACA;QACA;IAFA;IACA;IACA;;EACL;;;;;;;;;;;;;;;;;;;;;ICIW;;;;;;IAII;;;;;;IAGS;;;;;;IAGA;;;;;;;;UAKjB;UACI;UACS;UACA;AAEpB,YAAO,iEAC4B,MAAhB,eAAe,EAAf,cAAwB,gDACN,OAAjB,gBAAgB,EAAhB,eAAyB,yCAC1B,QAAR,OAAO,EAAP,gBAAgB,wCACM,QAAf,cAAc,EAAd,gBAAuB;IAE3C;gBAO6D,GAA4B,GAAU;;;AACjG,YAAO,AAAE,CAAD;AACR,YAAO,gEACkB,qBAAK,CAAC,gBAAD,OAAG,8BAAiB,CAAC,iBAAD,OAAG,uBAAiB,CAAC,qBACzC,mCAAK,CAAC,kBAAD,OAAG,kCAAkB,CAAC,kBAAD,OAAG,yBAAkB,CAAC,YAChD,6CAAK,CAAC,kBAAD,OAAG,yBAAS,CAAC,kBAAD,OAAG,gBAAS,CAAC,mBACvB,6CAAK,CAAC,kBAAD,OAAG,gCAAgB,CAAC,kBAAD,OAAG,uBAAgB,CAAC;IAEnF;;AAIE,YAAO,eACL,sBACA,uBACA,cACA;IAEJ;;UAGwB;AACtB,UAAI,AAAU,SAAM,KAAK,EACvB,MAAO;AACT,UAAsB,aAAZ,iBAAN,KAAK,GAAgB,uBACvB,MAAO;AACT,YAAa,AAIT,yCAJG,KAAK,KACiB,YAAtB,AAAM,KAAD,kBAAoB,yBACF,YAAvB,AAAM,KAAD,mBAAqB,0BACZ,YAAd,AAAM,KAAD,UAAY,iBACI,YAArB,AAAM,KAAD,iBAAmB;IACjC;;UAGqD;AACd,MAA/B,0BAAoB,UAAU;AACiD,MAArF,AAAW,UAAD,KAAK,6BAAc,mBAAmB,qCAA+B;AACyB,MAAxG,AAAW,UAAD,KAAK,8CAA+B,oBAAoB,sCAAgC;AACH,MAA/F,AAAW,UAAD,KAAK,uDAAwC,WAAW,6BAAuB;AACoB,MAA7G,AAAW,UAAD,KAAK,uDAAwC,kBAAkB,oCAA8B;IACzG;;;QAhFO;QACA;QACA;QACA;IAHA;IACA;IACA;IACA;;EACL;;;;;;;;;;;;;;;;;;IA8F6B;;;;;;cAagB;;;AAClB,wBAAc,AAAQ,OAAD;AAChD,oBAAO,WAAW,gBAAX,OAAa;YAAb,gBAA2B,AAAY,gBAAT,OAAO;IAC9C;SAGyB,SAAgB;UAAhB;UAAgB;AACvC,YAAO,iDAA0B,kBAAa,KAAK;IACrD;;0CAG4C;;AAAc,YAAK,cAAL,WAAQ,AAAU,SAAD;IAAK;;;QA9BzE;QACA;QACW;;;IADX;AAEF,oEAAW,GAAG,SAAS,KAAK;;EAAC;;;;;;;;;;;;;;;;ICrBpC;;;QAXK;;;;;EAWL;;;;;;;;;;;;;;;;;;IAmsBsB;;;;;;IAQR;;;;;;IAIK;;;;;;IAGL;;;;;;IAGA;;;;;;IAGA;;;;;;IAWA;;;;;;IAUA;;;;;;IAKK;;;;;;IAIL;;;;;;IAKA;;;;;;IAGA;;;;;;IAOA;;;;;;IAGA;;;;;;IAIA;;;;;;IAIA;;;;;;IAGA;;;;;;IAUuB;;;;;;IAGvB;;;;;;IAKA;;;;;;IAKA;;;;;;IAIU;;;;;;IAGO;;;;;;IAGjB;;;;;;IAMA;;;;;;IAOA;;;;;;IAOA;;;;;;IAOA;;;;;;IAIA;;;;;;IAGA;;;;;;IAGA;;;;;;IAIA;;;;;;IAGA;;;;;;IAIA;;;;;;IAGI;;;;;;IAGA;;;;;;IAGA;;;;;;IAMW;;;;;;IAGP;;;;;;IAGA;;;;;;IAGA;;;;;;IAKE;;;;;;IAGJ;;;;;;IAKK;;;;;;IAKP;;;;;;IAKI;;;;;;IAyBC;;;;;;IAGO;;;;;;IAgCjB;;;;;;IAOgB;;;;;;IAIT;;;;;;IAGO;;;;;;IAGD;;;;;;IAUN;;;;;;IAGM;;;;;;IAGN;;;;;;IAIkB;;;;;;IAIN;;;;;;IAIb;;;;;;IAYkB;;;;;;IAGR;;;;;;IAIF;;;;;;IAGK;;;;;;IAIP;;;;;;IAGE;;;;;;IAIU;;;;;;IAGT;;;;;;IAIA;;;;;;IAII;;;;;;IAIA;;;;;;IAGD;;;;;;IAIJ;;;;;;IAGD;;;;;;IAGH;;;;;;IAGC;;;;;;IAYX;;;;;;IAUA;;;;;;;;UAp+BG;UACG;UACA;UACR;UACK;UACL;UACA;UACA;UACK;UACL;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACuB;UACvB;UACA;UACA;UACA;UACU;UACO;UACjB;UAKA;UAKA;UAKA;UACA;UACA;UACA;UACA;UACA;UACA;UACC;UACG;UACA;UACA;UACW;UACP;UACA;UACA;UACE;UACJ;UACK;UACP;UACI;UACC;UACO;UACjB;UACgB;UACT;UACO;UACD;UACN;UACA;UACkB;UACN;UACb;UACiB;UACV;UACG;UACF;UACK;UACP;UACE;UACU;UACT;UACA;UACI;UACA;UACD;UACJ;UACD;UACH;UACC;UACX;UAKA;AAEN,YAA+B,AAA8B,OAAtD,WAAW,gBAAX,OAAa,2BAAsB,AAAW,UAAD,YAAuB,AAAE,AAAW,eAAxB,WAAW,gBAAgB,UAAU;AACpF,yBAAoD,SAA3B,OAAX,UAAU,EAAV,sBAAc,WAAW,gBAAX,OAAa,yBAAhB,gBAAyC;AACxE,mBAAS,AAAY,WAAD,IAAe;AACS,MAAvD,AAAc,aAAD,WAAb,gBAAgC,mDAAlB;AACe,MAA7B,AAAc,aAAD,WAAb,gBAAyB,sBAAX;AAC6C,MAA3D,AAAa,YAAD,WAAZ,eAAiB,MAAM,GAAmB,eAAT,AAAI,yBAAC,QAAQ,aAAa,GAA9C;AACsD,MAAnE,AAAuB,sBAAD,WAAtB,yBAA2B,gDAA2B,YAAY,IAA3C;AAC+C,MAAtE,AAAkB,iBAAD,WAAjB,oBAAsB,MAAM,GAAmB,eAAT,AAAI,yBAAC,QAA0B,eAAlB,AAAa,aAAA,MAAC,QAA/C;AAC8C,MAAhE,AAAiB,gBAAD,WAAhB,mBAAqB,MAAM,GAAU,uBAA0B,eAAlB,AAAa,aAAA,MAAC,QAA1C;AACN,0BAAgB,AAAuB,sBAAD,IAAe;AACiC,MAAjG,AAAsB,qBAAD,WAArB,wBAA0B,MAAM,GAAyB,eAAf,AAAU,+BAAC,SAAqB,QAAZ,WAAW,EAAX,gBAAiC,eAAlB,AAAa,aAAA,MAAC,iBAArE;AACgD,MAAtE,AAAY,WAAD,WAAX,cAAgB,MAAM,GAAyB,eAAf,AAAU,+BAAC,QAA0B,eAAlB,AAAa,aAAA,MAAC,QAArD;AACqD,MAAjE,AAAsB,qBAAD,WAArB,wBAA0B,gDAA2B,WAAW,IAA1C;AACX,yBAAe,AAAsB,qBAAD,IAAe;AACD,MAA7D,AAAY,WAAD,WAAX,cAAgB,MAAM,GAAmB,eAAT,AAAI,yBAAC,QAAuB,eAAR,AAAI,yBAAC,OAA7C;AACgB,MAA5B,AAAY,WAAD,WAAX,cAAuB,uBAAX;AAC2B,MAAvC,AAAwB,uBAAD,WAAvB,0BAA4B,WAAW,GAAf;AACuC,MAA/D,AAAkB,iBAAD,WAAjB,oBAAsB,MAAM,GAAmB,eAAT,AAAI,yBAAC,QAAe,uBAAxC;AACqC,MAAvD,AAAU,SAAD,WAAT,YAAc,MAAM,GAAmB,eAAT,AAAI,yBAAC,QAAe,uBAAxC;AACiE,MAA3E,AAAa,YAAD,WAAZ,eAAiB,MAAM,+CAAV;AAYZ,MARD,AAAY,WAAD,WAAX,cAA4B,oDACX,aAAa,oBACV,gBAAgB,eACrB,WAAW,aACb,SAAS,mBACH,eAAe,cACpB,UAAU,cACV,WAAW,KAPb;AAU6B,MAAzC,AAAc,aAAD,WAAb,gBAA4B,qCAAd;AACwB,MAAtC,AAAiB,gBAAD,WAAhB,mBAAqC,eAAT,AAAI,yBAAC,QAAhB;AACiD,MAAlE,AAAsB,qBAAD,WAArB,wBAA0B,MAAM,GAAU,yBAAiB,yBAArC;AAEkD,MAAxE,AAAqB,oBAAD,WAApB,uBAAyB,MAAM,GAAmB,eAAT,AAAI,yBAAC,QAAyB,eAAjB,AAAa,aAAA,MAAC,OAA/C;AAC4C,MAAjE,AAAmB,kBAAD,WAAlB,qBAAuB,MAAM,GAAG,WAAW,GAAqB,eAAlB,AAAa,aAAA,MAAC,QAAzC;AACiD,MAApE,eAA0B,QAAZ,WAAW,EAAX;AACqE,MAAnF,AAAyB,wBAAD,WAAxB,2BAA6B,MAAM,GAAyB,eAAf,AAAU,+BAAC,QAA0B,eAAlB,AAAa,aAAA,MAAC,QAArD;AAC2C,MAApE,AAAgB,eAAD,WAAf,kBAAoB,MAAM,GAAmB,eAAT,AAAI,yBAAC,QAA0B,eAAlB,AAAa,aAAA,MAAC,QAA/C;AACmD,MAAnE,AAAsB,qBAAD,WAArB,wBAA0B,MAAM,GAAmB,eAAT,AAAI,yBAAC,QAAe,uBAAxC;AACqD,MAA3E,AAAe,cAAD,WAAd,iBAA+B,YAAZ,WAAW,EAAI,YAAY,IAAU,uBAAQ,WAAW,GAA5D;AACsD,MAArE,AAAU,SAAD,WAAT,YAAc,MAAM,GAAU,yBAAiB,AAAM,iCAAY,OAAvD;AACqB,MAA/B,AAAW,UAAD,WAAV,aAA8B,eAAR,AAAG,wBAAC,QAAf;AAC0C,MAArD,AAAqB,oBAAD,WAApB,6CAAqB;AACgC,MAArD,AAAqB,oBAAD,WAApB,6CAAqB;AACmG,MAAxH,AAAiB,gBAAD,WAAhB,mBAAqB,aAAa,+CAAjB;AACqG,MAAtH,AAAgB,eAAD,WAAf,kBAAoB,YAAY,+CAAhB;AAC4F,MAA5G,AAAU,SAAD,WAAT,YAAc,MAAM,+CAAV;AACwB,MAAlC,AAAS,QAAD,WAAR,WAAa,kCAAJ;AACiD,MAA1D,AAAW,UAAD,WAAV,aAA0B,+CAAuB,QAAQ,KAA9C;AACD,6BAAmB,MAAM,GAAG,AAAW,UAAD,SAAS,AAAW,UAAD;AACzD,oCAA0B,aAAa,GAAG,AAAW,UAAD,SAAS,AAAW,UAAD;AACvE,mCAAyB,YAAY,GAAG,AAAW,UAAD,SAAS,AAAW,UAAD;AAC/E,UAAI,AAAW,UAAD;AACqD,QAAjE,mBAAmB,AAAiB,gBAAD,oBAAmB,UAAU;AACe,QAA/E,0BAA0B,AAAwB,uBAAD,oBAAmB,UAAU;AACD,QAA7E,yBAAyB,AAAuB,sBAAD,oBAAmB,UAAU;;AAEjC,MAA7C,YAAY,AAAiB,gBAAD,OAAO,SAAS;AACsB,MAAlE,mBAAmB,AAAwB,uBAAD,OAAO,gBAAgB;AACF,MAA/D,kBAAkB,AAAuB,sBAAD,OAAO,eAAe;AAC9D,cAAQ,QAAQ;;;;;AAI0C,UAAtD,AAAsB,qBAAD,WAArB,wBAAgD,0CAA1B;AACtB;;;;;;AAI2D,UAA1D,AAAsB,qBAAD,WAArB,wBAAgD,8CAA1B;AACvB;;;;AAVJ;;;AAYoC,MAApC,AAA2B,0BAAD,WAA1B,6BAA+B,QAAJ;AAIqC,MAAhE,AAAY,WAAD,WAAX,cAAgB,MAAM,GAAqB,eAAlB,AAAa,aAAA,MAAC,QAAwB,eAAT,AAAI,yBAAC,QAA/C;AAC2E,MAAvF,AAAW,UAAD,WAAV,aAAe,MAAM,GAAU,AAAM,iCAAY,QAAe,AAAM,iCAAY,QAAvE;AAC4E,MAAvF,AAAW,UAAD,WAAV,aAAe,MAAM,GAAU,AAAM,iCAAY,QAAe,AAAM,iCAAY,QAAvE;AAUV,MATD,AAAY,WAAD,WAAX,cAAgB,mDACD,WAAW,eACX,WAAW,iBACT,aAAa,cAChB,UAAU,cACV,UAAU,kBACN,cAAc,eACjB,WAAW,yBACD,qBAAqB,KARlC;AAUyC,MAArD,AAAmB,kBAAD,WAAlB,2CAAmB;AACuC,MAA1D,AAAc,aAAD,WAAb,gBAAkB,MAAM,GAAU,yBAAiB,yBAArC;AACoE,MAAlF,AAAe,cAAD,WAAd,iBAAmB,MAAM,GAAG,uCAA4B,wCAAzC;AAC0D,MAAzE,AAAY,WAAD,WAAX,cAAgB,MAAM,GAAG,oCAAyB,qCAAtC;AAE2B,MAAvC,AAAY,WAAD,WAAX,oCAAY;AACuB,MAAnC,AAAY,WAAD,WAAX,oCAAY;AAC6B,MAAzC,AAAa,YAAD,WAAZ,qCAAa;AACsB,MAAnC,AAAY,WAAD,WAAX,oCAAY;AACiC,MAA7C,AAAe,cAAD,WAAd,uCAAe;AACgC,MAA/C,AAAkB,iBAAD,WAAjB,0CAAkB;AACa,MAA/B,AAAU,SAAD,WAAT,kCAAU;AAKT,MAJD,AAAU,SAAD,WAAT,YAA4B,uDACV,MAAM,GAAyB,eAAf,AAAU,+BAAC,QAAQ,YAAY,cACnD,AAAY,WAAD,yBACQ,eAAnB,AAAU,SAAD,gBAHb;AAKyB,MAAnC,AAAY,WAAD,WAAX,oCAAY;AACuD,MAAnE,AAA0B,yBAAD,WAAzB,kDAA0B;AAC6B,MAAvD,AAAoB,mBAAD,WAAnB,4CAAoB;AACwC,MAA5D,kCAAyB,sBAAsB,kBAAtB,OAAwB;AACN,MAA3C,AAAc,aAAD,WAAb,sCAAc;AACmC,MAAjD,AAAiB,gBAAD,WAAhB,yCAAiB;AAC4B,MAA7C,AAAe,cAAD,WAAd,uCAAe;AACgC,MAA/C,AAAY,WAAD,WAAX,oCAAY;AAC6B,MAAzC,AAAa,YAAD,WAAZ,qCAAa;AACgC,MAA7C,AAAe,cAAD,WAAd,uCAAe;AACkD,MAAjE,AAAyB,wBAAD,WAAxB,iDAAyB;AACsB,MAA/C,AAAgB,eAAD,WAAf,wCAAgB;AAC+B,MAA/C,AAAgB,eAAD,WAAf,wCAAgB;AACuC,MAAvD,AAAoB,mBAAD,WAAnB,4CAAoB;AACmC,MAAvD,AAAoB,mBAAD,WAAnB,4CAAoB;AACiC,MAArD,AAAmB,kBAAD,WAAlB,2CAAmB;AAC0B,MAA7C,AAAe,cAAD,WAAd,uCAAe;AAC4B,MAA3C,AAAc,aAAD,WAAb,sCAAc;AACuB,MAArC,AAAW,UAAD,WAAV,mCAAW;AAC4B,MAAvC,AAAY,WAAD,WAAX,oCAAY;AAEsB,MAAlC,AAAyB,wBAAD,WAAxB,2BAA6B,QAAJ;AACK,MAA9B,AAAsB,qBAAD,WAArB,wBAA0B,OAAJ;AAEtB,YAAiB,8CACA,aAAa,gBACd,YAAY,0BACF,sBAAsB,qBAC3B,iBAAiB,oBAClB,gBAAgB,eACrB,WAAW,yBACD,qBAAqB,eAC/B,WAAW,eACX,WAAW,2BACC,uBAAuB,qBAC7B,iBAAiB,aACzB,SAAS,gBACN,YAAY,cACd,UAAU,cACV,UAAU,kBACN,cAAc,eACjB,WAAW,iBACT,aAAa,oBACV,gBAAgB,yBACX,qBAAqB,iBAC7B,aAAa,eACf,WAAW,eACX,WAAW,sBACJ,kBAAkB,yBACf,qBAAqB,wBACtB,oBAAoB,sBACtB,kBAAkB,eACzB,WAAW,4BACE,wBAAwB,mBACjC,eAAe,yBACT,qBAAqB,kBAC5B,cAAc,aACnB,SAAS,cACR,UAAU,aACX,SAAS,oBACF,gBAAgB,mBACjB,eAAe,wBACV,oBAAoB,aAC/B,SAAS,oBACF,gBAAgB,mBACjB,eAAe,eACnB,WAAW,eACX,WAAW,gBACV,YAAY,aACf,SAAS,aACT,SAAS,YACV,QAAQ,yBACK,qBAAqB,8BAChB,0BAA0B,wBAChC,oBAAoB,eAC7B,WAAW,kBACR,cAAc,qBACX,iBAAiB,eACvB,WAAW,eACX,WAAW,6BACG,yBAAyB,uBAC/B,mBAAmB,cAC5B,UAAU,0BACE,sBAAsB,iBAC/B,aAAa,oBACV,gBAAgB,kBAClB,cAAc,eACjB,WAAW,gBACV,YAAY,kBACV,cAAc,4BACJ,wBAAwB,mBACjC,eAAe,mBACf,eAAe,uBACX,mBAAmB,uBACnB,mBAAmB,sBACpB,kBAAkB,kBACtB,cAAc,iBACf,aAAa,cAChB,UAAU,eACT,WAAW,4BACE,wBAAwB,yBAC3B,qBAAqB;IAEhD;;UAkMuB;;UACV;AAEX,YAAO,AAAY,WAAD;AAEP,mBAAS,AAAY,AAAW,WAAZ,eAA0B;AAG7C,gCAAsB,MAAM,GAAG,AAAY,WAAD,WAAW,AAAY,WAAD;AAChE,kCAAwB,MAAM,GAAG,AAAY,WAAD,aAAa,AAAY,WAAD;AAEhF,YAAO,uCACO,AAAY,WAAD,2BACT,mBAAmB,0BACC,gDAA2B,mBAAmB,gBACnE,AAAY,WAAD,0BACX,AAAY,WAAD,mCACS,gDAA2B,AAAY,WAAD,sCAC9C,AAAY,WAAD,gCACjB,AAAY,WAAD,qBACnB,AAAY,WAAD,wBACR,AAAY,AAAU,WAAX,uBAAuB,wBAC/B,AAAY,WAAD,oCACL,AAAY,WAAD,yBACtB,AAAY,WAAD,mBACZ,SAAS,kBACJ,qBAAqB,8BACT,MAAM,eACrB,WAAW;IAE5B;;AAM6B,mDAAiC;IAAM;;AAMxC,mDAAiC;IAAK;;AAWlC,YAAU;IAAO;;AAWpB,YAAA,AAAY;IAAU;;;UAkbrC;UACG;UACR;UACK;UACL;UACA;UACA;UACK;UACL;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACuB;UACvB;UACA;UACA;UACU;UACO;UACjB;UACA;UAKA;UAKA;UAKA;UACA;UACA;UACA;UACA;UACA;UACA;UACI;UACA;UACA;UACW;UACP;UACA;UACA;UACE;UACJ;UACK;UACP;UACI;UACC;UACO;UACjB;UACgB;UACT;UACO;UACD;UACN;UACA;UACkB;UACN;UACb;UACiB;UACV;UACG;UACF;UACK;UACP;UACE;UACU;UACT;UACA;UACI;UACA;UACD;UACJ;UACD;UACH;UACC;UACX;UAKA;AAEsD,MAA5D,gCAAyB,sBAAsB,gBAAtB,OAAwB;AACjD,YAAiB,+CACc,OAAd,aAAa,EAAb,eAAsB,2CACV,QAAb,YAAY,EAAZ,gBAAqB,qDACY,QAAvB,sBAAsB,EAAtB,gBAA+B,0DAClB,QAAlB,iBAAiB,EAAjB,gBAA0B,oDACV,QAAjB,gBAAgB,EAAhB,gBAAyB,8CAClB,QAAZ,WAAW,EAAX,gBAAoB,mDACY,QAAtB,qBAAqB,EAArB,gBAA8B,mDAC5B,QAAZ,WAAW,EAAX,gBAAoB,yCACR,QAAZ,WAAW,EAAX,gBAAoB,qDACgB,QAAxB,uBAAuB,EAAvB,gBAAgC,2DACpB,QAAlB,iBAAiB,EAAjB,gBAA0B,6CACxB,SAAV,SAAS,EAAT,iBAAkB,yCACF,SAAb,YAAY,EAAZ,iBAAqB,0CACZ,SAAX,UAAU,EAAV,iBAAmB,wCACR,SAAX,UAAU,EAAV,iBAAmB,4CACA,SAAf,cAAc,EAAd,iBAAuB,6CACd,SAAZ,WAAW,EAAX,iBAAoB,4CACJ,SAAd,aAAa,EAAb,iBAAsB,iDACF,SAAjB,gBAAgB,EAAhB,iBAAyB,yDACE,SAAtB,qBAAqB,EAArB,iBAA8B,sDACxB,SAAd,aAAa,EAAb,iBAAsB,4CACZ,SAAZ,WAAW,EAAX,iBAAoB,0CACR,SAAZ,WAAW,EAAX,iBAAoB,iDACM,SAAnB,kBAAkB,EAAlB,iBAA2B,0DACJ,SAArB,oBAAoB,EAApB,iBAA6B,0DACZ,SAAnB,kBAAkB,EAAlB,iBAA2B,iDACtB,SAAZ,WAAW,EAAX,iBAAoB,uDACkB,SAAzB,wBAAwB,EAAxB,iBAAiC,2DAC1B,SAAhB,eAAe,EAAf,iBAAwB,wDACI,SAAtB,qBAAqB,EAArB,iBAA8B,uDACtB,SAAf,cAAc,EAAd,iBAAuB,2CAClB,SAAV,SAAS,EAAT,iBAAkB,uCACN,SAAX,UAAU,EAAV,iBAAmB,mDACc,SAAtB,qBAAqB,EAArB,iBAA8B,kDAChC,SAAV,SAAS,EAAT,iBAAkB,6CACM,SAAjB,gBAAgB,EAAhB,iBAAyB,mDACV,SAAhB,eAAe,EAAf,iBAAwB,uDACE,SAArB,oBAAoB,EAApB,iBAA6B,iDAC9B,SAAV,SAAS,EAAT,iBAAkB,6CACM,SAAjB,gBAAgB,EAAhB,iBAAyB,mDACV,SAAhB,eAAe,EAAf,iBAAwB,8CAChB,SAAZ,WAAW,EAAX,iBAAoB,0CACR,SAAZ,WAAW,EAAX,iBAAoB,2CACN,SAAb,YAAY,EAAZ,iBAAqB,yCACd,SAAV,SAAS,EAAT,iBAAkB,sCACR,SAAV,SAAS,EAAT,iBAAkB,qCACV,SAAT,QAAQ,EAAR,iBAAiB,iDACkB,SAAtB,qBAAqB,EAArB,iBAA8B,mEACE,SAA3B,0BAA0B,EAA1B,iBAAmC,kEACpB,SAArB,oBAAoB,EAApB,iBAA6B,mDAC1B,SAAZ,WAAW,EAAX,iBAAoB,6CACF,SAAf,cAAc,EAAd,iBAAuB,mDACF,SAAlB,iBAAiB,EAAjB,iBAA0B,+CACE,CAArB,SAAZ,WAAW,EAAX,iBAAoB,iDAAkC,UAAU,kBACrD,SAAZ,WAAW,EAAX,iBAAoB,wDACoB,SAA1B,yBAAyB,EAAzB,iBAAkC,gEACpB,SAApB,mBAAmB,EAAnB,iBAA4B,iDAC1B,SAAX,UAAU,EAAV,iBAAmB,oDACgB,SAAvB,sBAAsB,EAAtB,iBAA+B,uDAC1B,SAAd,aAAa,EAAb,iBAAsB,iDACF,SAAjB,gBAAgB,EAAhB,iBAAyB,kDACZ,SAAf,cAAc,EAAd,iBAAuB,6CACd,SAAZ,WAAW,EAAX,iBAAoB,2CACN,SAAb,YAAY,EAAZ,iBAAqB,8CACJ,SAAf,cAAc,EAAd,iBAAuB,0DACY,SAAzB,wBAAwB,EAAxB,iBAAiC,2DAC1B,SAAhB,eAAe,EAAf,iBAAwB,kDACR,SAAhB,eAAe,EAAf,iBAAwB,sDACA,SAApB,mBAAmB,EAAnB,iBAA4B,0DACR,SAApB,mBAAmB,EAAnB,iBAA4B,yDACV,SAAnB,kBAAkB,EAAlB,iBAA2B,oDAChB,SAAf,cAAc,EAAd,iBAAuB,+CACV,SAAd,aAAa,EAAb,iBAAsB,2CACd,SAAX,UAAU,EAAV,iBAAmB,yCACN,SAAZ,WAAW,EAAX,iBAAoB,uDACkB,SAAzB,wBAAwB,EAAxB,iBAAiC,iEACd,SAAtB,qBAAqB,EAArB,iBAA8B;IAEzD;oBAmBoC,WAAqB;UAArB;UAAqB;AAavD,YAAO,AAAU,SAAD;AAChB,YAAO,AAAkB,iBAAD;AAExB,YAAO,AAAyB,2DAC9B,8CAA2B,SAAS,EAAE,iBAAiB,GACvD,cACS,AAAU,SAAD,6BACI,AAAkB,iBAAD,OAAO,AAAU,SAAD,qCAClC,AAAkB,iBAAD,OAAO,AAAU,SAAD,8BACvC,AAAkB,iBAAD,OAAO,AAAU,SAAD;IAIpD;;UAOmD;AACpC,8BAAoB,AAAM,KAAD;AAStC,UAA+B,AAA6B,CAArC,aAAlB,iBAAiB,IAAG,SAA2B,aAAlB,iBAAiB,IAAG,cACpD,MAAkB;AACpB,YAAkB;IACpB;gBAOgC,GAAa,GAAU;UAAvB;UAAa;UAAU;AACrD,YAAO,AAAE,CAAD;AACR,YAAO,AAAE,CAAD;AACR,YAAO,AAAE,CAAD;AAIR,YAAiB,8CACc,8BAAK,AAAE,CAAD,gBAAgB,AAAE,CAAD,gBAAgB,CAAC,iBACV,eAAvC,cAAK,AAAE,CAAD,eAAe,AAAE,CAAD,eAAe,CAAC,4BAChC,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,0BAA0B,AAAE,CAAD,4CACY,eAAjD,cAAK,AAAE,CAAD,oBAAoB,AAAE,CAAD,oBAAoB,CAAC,sBACF,eAA/C,cAAK,AAAE,CAAD,mBAAmB,AAAE,CAAD,mBAAmB,CAAC,iBACd,eAArC,cAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,iBACC,eAArC,cAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,iBACC,eAArC,cAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,2BAC9B,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,yBAAyB,AAAE,CAAD,iDACgC,eAA7D,cAAK,AAAE,CAAD,0BAA0B,AAAE,CAAD,0BAA0B,CAAC,uBACjB,eAAjD,cAAK,AAAE,CAAD,oBAAoB,AAAE,CAAD,oBAAoB,CAAC,eACvB,eAAjC,cAAK,AAAE,CAAD,YAAY,AAAE,CAAD,YAAY,CAAC,kBACU,eAAvC,cAAK,AAAE,CAAD,eAAe,AAAE,CAAD,eAAe,CAAC,gBACL,eAAnC,cAAK,AAAE,CAAD,aAAa,AAAE,CAAD,aAAa,CAAC,gBACC,eAAnC,cAAK,AAAE,CAAD,aAAa,AAAE,CAAD,aAAa,CAAC,oBACa,eAA3C,cAAK,AAAE,CAAD,iBAAiB,AAAE,CAAD,iBAAiB,CAAC,iBACR,eAArC,cAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,mBACtC,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,iBAAiB,AAAE,CAAD,kCAC2B,eAA/C,cAAK,AAAE,CAAD,mBAAmB,AAAE,CAAD,mBAAmB,CAAC,2BACgB,eAAzD,cAAK,AAAE,CAAD,wBAAwB,AAAE,CAAD,wBAAwB,CAAC,mBACvB,eAAzC,cAAK,AAAE,CAAD,gBAAgB,AAAE,CAAD,gBAAgB,CAAC,iBAC9C,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,eAAe,AAAE,CAAD,kCACsD,eAAnD,iDAAK,AAAE,CAAD,qBAAqB,AAAE,CAAD,qBAAqB,CAAC,iBACrC,eAArC,cAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,0BAC4B,eAAvD,cAAK,AAAE,CAAD,uBAAuB,AAAE,CAAD,uBAAuB,CAAC,wBACL,eAAnD,cAAK,AAAE,CAAD,qBAAqB,AAAE,CAAD,qBAAqB,CAAC,iBACpB,eAArC,cAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,8BACwC,eAA/D,cAAK,AAAE,CAAD,2BAA2B,AAAE,CAAD,2BAA2B,CAAC,qBAC1B,eAA7C,cAAK,AAAE,CAAD,kBAAkB,AAAE,CAAD,kBAAkB,CAAC,2BACmB,eAAzD,cAAK,AAAE,CAAD,wBAAwB,AAAE,CAAD,wBAAwB,CAAC,oBACpB,eAA3C,cAAK,AAAE,CAAD,iBAAiB,AAAE,CAAD,iBAAiB,CAAC,eACd,eAAjC,cAAK,AAAE,CAAD,YAAY,AAAE,CAAD,YAAY,CAAC,gBACI,eAAnC,cAAK,AAAE,CAAD,aAAa,AAAE,CAAD,aAAa,CAAC,2BACkC,eAAzD,cAAK,AAAE,CAAD,wBAAwB,AAAE,CAAD,wBAAwB,CAAC,eAChE,0BAAK,AAAE,CAAD,YAAY,AAAE,CAAD,YAAY,CAAC,qBACzB,0BAAK,AAAE,CAAD,mBAAmB,AAAE,CAAD,mBAAmB,CAAC,oBAC/C,0BAAK,AAAE,CAAD,kBAAkB,AAAE,CAAD,kBAAkB,CAAC,yBAC/C,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,wBAAwB,AAAE,CAAD,kCACjC,mCAAK,AAAE,CAAD,YAAY,AAAE,CAAD,YAAY,CAAC,qBACzB,mCAAK,AAAE,CAAD,mBAAmB,AAAE,CAAD,mBAAmB,CAAC,oBAC/C,mCAAK,AAAE,CAAD,kBAAkB,AAAE,CAAD,kBAAkB,CAAC,gBAC9C,kCAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,gBACxC,+BAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,iBACS,eAAvC,oCAAK,AAAE,CAAD,eAAe,AAAE,CAAD,eAAe,CAAC,eAChD,0BAAK,AAAE,CAAD,YAAY,AAAE,CAAD,YAAY,CAAC,cACK,eAAjC,8BAAK,AAAE,CAAD,YAAY,AAAE,CAAD,YAAY,CAAC,cAC7C,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,YAAY,AAAE,CAAD,kCACT,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,yBAAyB,AAAE,CAAD,oDAC9B,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,8BAA8B,AAAE,CAAD,mDAC9C,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,wBAAwB,AAAE,CAAD,oCACjC,+BAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,mBAC1B,wCAAK,AAAE,CAAD,iBAAiB,AAAE,CAAD,iBAAiB,CAAC,sBACxC,4CAAK,AAAE,CAAD,oBAAoB,AAAE,CAAD,oBAAoB,CAAC,gBAC5D,8BAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,gBACpC,8BAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,8BAC6D,eAAjE,gEAAK,AAAE,CAAD,4BAA4B,AAAE,CAAD,4BAA4B,CAAC,yBACvB,eAArD,mDAAK,AAAE,CAAD,sBAAsB,AAAE,CAAD,sBAAsB,CAAC,gBAC1E,4BAAK,AAAE,CAAD,aAAa,AAAE,CAAD,aAAa,CAAC,2BAC/B,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,0BAA0B,AAAE,CAAD,wCAC7B,uCAAK,AAAE,CAAD,gBAAgB,AAAE,CAAD,gBAAgB,CAAC,qBACa,eAA/C,6CAAK,AAAE,CAAD,mBAAmB,AAAE,CAAD,mBAAmB,CAAC,oBACP,eAA3C,yCAAK,AAAE,CAAD,iBAAiB,AAAE,CAAD,iBAAiB,CAAC,iBACxC,0CAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,iBAC1C,oCAAK,AAAE,CAAD,eAAe,AAAE,CAAD,eAAe,CAAC,mBACS,eAA3C,yCAAK,AAAE,CAAD,iBAAiB,AAAE,CAAD,iBAAiB,CAAC,8BACtB,8DAAK,AAAE,CAAD,2BAA2B,AAAE,CAAD,2BAA2B,CAAC,oBAChF,2CAAK,AAAE,CAAD,kBAAkB,AAAE,CAAD,kBAAkB,CAAC,oBACC,eAA7C,2CAAK,AAAE,CAAD,kBAAkB,AAAE,CAAD,kBAAkB,CAAC,yBACiB,eAArD,mDAAK,AAAE,CAAD,sBAAsB,AAAE,CAAD,sBAAsB,CAAC,yBACC,eAArD,mDAAK,AAAE,CAAD,sBAAsB,AAAE,CAAD,sBAAsB,CAAC,wBACF,eAAnD,iDAAK,AAAE,CAAD,qBAAqB,AAAE,CAAD,qBAAqB,CAAC,oBAC3D,yCAAK,AAAE,CAAD,iBAAiB,AAAE,CAAD,iBAAiB,CAAC,kBAC5C,sCAAK,AAAE,CAAD,gBAAgB,AAAE,CAAD,gBAAgB,CAAC,eAC9C,gCAAK,AAAE,CAAD,aAAa,AAAE,CAAD,aAAa,CAAC,gBAChC,kCAAK,AAAE,CAAD,cAAc,AAAE,CAAD,cAAc,CAAC,6BACrC,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,4BAA4B,AAAE,CAAD,kDACzC,aAAF,CAAC,IAAG,MAAM,AAAE,CAAD,yBAAyB,AAAE,CAAD;IAEhE;;UAGwB;AACtB,UAAsB,aAAZ,iBAAN,KAAK,GAAgB,uBACvB,MAAO;AAIT,YAAa,AA2ET,yBA3EG,KAAK,KACe,YAApB,AAAM,KAAD,gBAAkB,uBACJ,YAAnB,AAAM,KAAD,eAAiB,sBACtB,AAAM,AAAuB,KAAxB,2BAA2B,+BACR,YAAxB,AAAM,KAAD,oBAAsB,2BACJ,YAAvB,AAAM,KAAD,mBAAqB,0BACR,YAAlB,AAAM,KAAD,cAAgB,qBACrB,AAAM,AAAsB,KAAvB,0BAA0B,8BACb,YAAlB,AAAM,KAAD,cAAgB,qBACS,YAA9B,AAAM,KAAD,0BAA4B,iCACT,YAAxB,AAAM,KAAD,oBAAsB,2BACX,YAAhB,AAAM,KAAD,YAAc,mBACD,YAAlB,AAAM,KAAD,cAAgB,qBACF,YAAnB,AAAM,KAAD,eAAiB,sBACD,YAArB,AAAM,KAAD,iBAAmB,wBACN,YAAlB,AAAM,KAAD,cAAgB,qBACD,YAApB,AAAM,KAAD,gBAAkB,uBACA,YAAvB,AAAM,KAAD,mBAAqB,0BACE,YAA5B,AAAM,KAAD,wBAA0B,+BACX,YAApB,AAAM,KAAD,gBAAkB,uBACL,YAAlB,AAAM,KAAD,cAAgB,qBACH,YAAlB,AAAM,KAAD,cAAgB,qBACI,YAAzB,AAAM,KAAD,qBAAuB,4BACD,YAA3B,AAAM,KAAD,uBAAyB,8BACL,YAAzB,AAAM,KAAD,qBAAuB,4BACV,YAAlB,AAAM,KAAD,cAAgB,qBACU,YAA/B,AAAM,KAAD,2BAA6B,kCACZ,YAAtB,AAAM,KAAD,kBAAoB,yBACG,YAA5B,AAAM,KAAD,wBAA0B,+BACV,YAArB,AAAM,KAAD,iBAAmB,wBACR,YAAhB,AAAM,KAAD,YAAc,mBACF,YAAjB,AAAM,KAAD,aAAe,oBACQ,YAA5B,AAAM,KAAD,wBAA0B,+BACf,YAAhB,AAAM,KAAD,YAAc,mBACI,YAAvB,AAAM,KAAD,mBAAqB,0BACJ,YAAtB,AAAM,KAAD,kBAAoB,yBACE,YAA3B,AAAM,KAAD,uBAAyB,8BACd,YAAhB,AAAM,KAAD,YAAc,mBACI,YAAvB,AAAM,KAAD,mBAAqB,0BACJ,YAAtB,AAAM,KAAD,kBAAoB,yBACP,YAAlB,AAAM,KAAD,cAAgB,qBACH,YAAlB,AAAM,KAAD,cAAgB,qBACF,YAAnB,AAAM,KAAD,eAAiB,sBACN,YAAhB,AAAM,KAAD,YAAc,mBACH,YAAhB,AAAM,KAAD,YAAc,mBACnB,AAAM,AAAS,KAAV,aAAa,iBAClB,AAAM,AAAsB,KAAvB,0BAA0B,8BAC/B,AAAM,AAA2B,KAA5B,+BAA+B,mCACT,YAA3B,AAAM,KAAD,uBAAyB,8BACZ,YAAlB,AAAM,KAAD,cAAgB,qBACA,YAArB,AAAM,KAAD,iBAAmB,wBACA,YAAxB,AAAM,KAAD,oBAAsB,2BACT,YAAlB,AAAM,KAAD,cAAgB,qBACH,YAAlB,AAAM,KAAD,cAAgB,qBACW,YAAhC,AAAM,KAAD,4BAA8B,mCACT,YAA1B,AAAM,KAAD,sBAAwB,6BACZ,YAAjB,AAAM,KAAD,aAAe,oBACS,YAA7B,AAAM,KAAD,yBAA2B,gCACZ,YAApB,AAAM,KAAD,gBAAkB,uBACA,YAAvB,AAAM,KAAD,mBAAqB,0BACL,YAArB,AAAM,KAAD,iBAAmB,wBACN,YAAlB,AAAM,KAAD,cAAgB,qBACF,YAAnB,AAAM,KAAD,eAAiB,sBACD,YAArB,AAAM,KAAD,iBAAmB,wBACO,YAA/B,AAAM,KAAD,2BAA6B,kCACZ,YAAtB,AAAM,KAAD,kBAAoB,yBACH,YAAtB,AAAM,KAAD,kBAAoB,yBACC,YAA1B,AAAM,KAAD,sBAAwB,6BACH,YAA1B,AAAM,KAAD,sBAAwB,6BACJ,YAAzB,AAAM,KAAD,qBAAuB,4BACP,YAArB,AAAM,KAAD,iBAAmB,wBACJ,YAApB,AAAM,KAAD,gBAAkB,uBACN,YAAjB,AAAM,KAAD,aAAe,oBACF,YAAlB,AAAM,KAAD,cAAgB,qBACrB,AAAM,AAAyB,KAA1B,6BAA6B,iCAClC,AAAM,AAAsB,KAAvB,0BAA0B;IACxC;;AAOsB,mBAAkB,0BACpC,oBACA,mBACA,6BACA,wBACA,uBACA,kBACA,4BACA,kBACA,kBACA,8BACA,wBACA,gBACA,mBACA,iBACA,iBACA,qBACA,kBACA,oBACA,uBACA,4BACA,oBACA,kBACA,kBACA,yBACA,4BACA,2BACA,yBACA,kBACA,+BACA,sBACA,4BACA,qBACA,gBACA,iBACA,gBACA,uBACA,sBACA,2BACA,gBACA,uBACA,sBACA,kBACA,kBACA,mBACA,gBACA,gBACA,eACA,4BACA,iCACA,2BACA,kBACA,qBACA,wBACA,kBACA,kBACA,gCACA,0BACA,iBACA,6BACA,oBACA,uBACA,qBACA,kBACA,mBACA,qBACA,+BACA,sBACA,sBACA,0BACA,0BACA,yBACA,qBACA,oBACA,iBACA,kBACA,+BACA;AAEF,YAAO,aAAS,MAAM;IACxB;;UAGqD;AACd,MAA/B,0BAAoB,UAAU;AACpB,wBAAwB;AAC6F,MAArI,AAAW,UAAD,KAAK,4CAA6B,YAAY,8BAAwB,wCAA8C;AACQ,MAAtI,AAAW,UAAD,KAAK,wCAAyB,cAAc,gCAA0B,AAAY,WAAD,oBAAoC;AACE,MAAjI,AAAW,UAAD,KAAK,6BAAc,gBAAgB,kCAA4B,AAAY,WAAD,sBAAsC;AACgD,MAA1K,AAAW,UAAD,KAAK,wCAAyB,0BAA0B,4CAAsC,AAAY,WAAD,gCAAgD;AACrC,MAA9H,AAAW,UAAD,KAAK,6BAAc,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;AACgD,MAAvK,AAAW,UAAD,KAAK,wCAAyB,yBAAyB,2CAAqC,AAAY,WAAD,+BAA+C;AAClC,MAA9H,AAAW,UAAD,KAAK,6BAAc,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;AACO,MAA9H,AAAW,UAAD,KAAK,6BAAc,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;AAC2C,MAAlK,AAAW,UAAD,KAAK,6BAAc,2BAA2B,6CAAuC,AAAY,WAAD,iCAAiD;AACX,MAAhJ,AAAW,UAAD,KAAK,6BAAc,qBAAqB,uCAAiC,AAAY,WAAD,2BAA2C;AACjB,MAAxH,AAAW,UAAD,KAAK,6BAAc,aAAa,+BAAyB,AAAY,WAAD,mBAAmC;AACgB,MAAjI,AAAW,UAAD,KAAK,6BAAc,gBAAgB,kCAA4B,AAAY,WAAD,sBAAsC;AACC,MAA3H,AAAW,UAAD,KAAK,6BAAc,cAAc,gCAA0B,AAAY,WAAD,oBAAoC;AACO,MAA3H,AAAW,UAAD,KAAK,6BAAc,cAAc,gCAA0B,AAAY,WAAD,oBAAoC;AACmB,MAAvI,AAAW,UAAD,KAAK,6BAAc,kBAAkB,oCAA8B,AAAY,WAAD,wBAAwC;AACF,MAA9H,AAAW,UAAD,KAAK,6BAAc,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;AACsB,MAA7I,AAAW,UAAD,KAAK,6BAAc,oBAAoB,sCAAgC,AAAY,WAAD,0BAA0C;AACsB,MAA5J,AAAW,UAAD,KAAK,6BAAc,yBAAyB,2CAAqC,AAAY,WAAD,+BAA+C;AACjB,MAApI,AAAW,UAAD,KAAK,6BAAc,iBAAiB,mCAA6B,AAAY,WAAD,uBAAuC;AACC,MAA9H,AAAW,UAAD,KAAK,6BAAc,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;AACkC,MAAzJ,AAAW,UAAD,KAAK,6BAAc,wBAAwB,0CAAoC,AAAY,WAAD,8BAA8C;AACC,MAAnJ,AAAW,UAAD,KAAK,6BAAc,sBAAsB,wCAAkC,AAAY,WAAD,4BAA4C;AACd,MAA9H,AAAW,UAAD,KAAK,6BAAc,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;AAC8C,MAArK,AAAW,UAAD,KAAK,6BAAc,4BAA4B,8CAAwC,AAAY,WAAD,kCAAkD;AACpB,MAA1I,AAAW,UAAD,KAAK,6BAAc,mBAAmB,qCAA+B,AAAY,WAAD,yBAAyC;AACyB,MAA5J,AAAW,UAAD,KAAK,6BAAc,yBAAyB,2CAAqC,AAAY,WAAD,+BAA+C;AACd,MAAvI,AAAW,UAAD,KAAK,6BAAc,kBAAkB,oCAA8B,AAAY,WAAD,wBAAwC;AACR,MAAxH,AAAW,UAAD,KAAK,6BAAc,aAAa,+BAAyB,AAAY,WAAD,mBAAmC;AACU,MAA3H,AAAW,UAAD,KAAK,6BAAc,cAAc,gCAA0B,AAAY,WAAD,oBAAoC;AACwC,MAA5J,AAAW,UAAD,KAAK,6BAAc,yBAAyB,2CAAqC,AAAY,WAAD,+BAA+C;AACvC,MAA9G,AAAW,UAAD,KAAK,oDAAqC,eAAe,0BAAoC;AAC4B,MAAnI,AAAW,UAAD,KAAK,2DAA4C,sBAAsB,iCAA2C;AACxB,MAApG,AAAW,UAAD,KAAK,8CAA+B,aAAa,wBAAkC;AACqB,MAAlH,AAAW,UAAD,KAAK,8CAA+B,oBAAoB,+BAAyC;AACK,MAAhH,AAAW,UAAD,KAAK,8CAA+B,mBAAmB,8BAAwC;AAC4B,MAArI,AAAW,UAAD,KAAK,yDAA0C,wBAAwB,mCAA6C;AACtB,MAAxG,AAAW,UAAD,KAAK,kDAAmC,aAAa,wBAAkC;AACqB,MAAtH,AAAW,UAAD,KAAK,kDAAmC,oBAAoB,+BAAyC;AACK,MAApH,AAAW,UAAD,KAAK,kDAAmC,mBAAmB,8BAAwC;AACC,MAA9G,AAAW,UAAD,KAAK,oDAAqC,eAAe,0BAAoC;AACG,MAA1G,AAAW,UAAD,KAAK,gDAAiC,eAAe,0BAAoC;AACc,MAAjH,AAAW,UAAD,KAAK,qDAAsC,gBAAgB,2BAAqC;AACN,MAApG,AAAW,UAAD,KAAK,8CAA+B,aAAa,wBAAkC;AACW,MAAxG,AAAW,UAAD,KAAK,kDAAmC,aAAa,wBAAkC;AACuC,MAAxI,AAAW,UAAD,KAAK,0DAA2C,yBAAyB,oCAA8C;AACA,MAAjI,AAAW,UAAD,KAAK,yCAA0B,8BAA8B,yCAAmD;AACW,MAArI,AAAW,UAAD,KAAK,yDAA0C,wBAAwB,mCAA6C;AACmB,MAAjJ,AAAW,UAAD,KAAK,gDAAiC,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;AACuB,MAAjK,AAAW,UAAD,KAAK,uDAAwC,kBAAkB,oCAA8B,AAAY,WAAD,wBAAwC;AACe,MAAzK,AAAW,UAAD,KAAK,sDAAuC,qBAAqB,uCAAiC,AAAY,WAAD,2BAA2C;AACjB,MAAjJ,AAAW,UAAD,KAAK,gDAAiC,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;AACO,MAAjJ,AAAW,UAAD,KAAK,gDAAiC,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;AACuE,MAAjN,AAAW,UAAD,KAAK,kEAAmD,iCAAiC,+CAAyC,AAAY,WAAD,mCAAmD;AACjB,MAAzL,AAAW,UAAD,KAAK,4DAA6C,2BAA2B,yCAAmC,AAAY,WAAD,6BAA6C;AACrC,MAA7I,AAAW,UAAD,KAAK,+CAAgC,cAAc,gCAA0B,AAAY,WAAD,oBAAoC;AAC4D,MAAlM,AAAW,UAAD,KAAK,gEAAiD,0BAA0B,4CAAsC,AAAY,WAAD,gCAAgD;AAC9B,MAA7J,AAAW,UAAD,KAAK,sDAAuC,iBAAiB,mCAA6B,AAAY,WAAD,uBAAuC;AACmB,MAAzK,AAAW,UAAD,KAAK,yDAA0C,oBAAoB,sCAAgC,AAAY,WAAD,0BAA0C;AACD,MAAjK,AAAW,UAAD,KAAK,uDAAwC,kBAAkB,oCAA8B,AAAY,WAAD,wBAAwC;AACG,MAA7J,AAAW,UAAD,KAAK,4DAA6C,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;AACG,MAAzJ,AAAW,UAAD,KAAK,qDAAsC,gBAAgB,kCAA4B,AAAY,WAAD,sBAAsC;AACe,MAAjK,AAAW,UAAD,KAAK,uDAAwC,kBAAkB,oCAA8B,AAAY,WAAD,wBAAwC;AACW,MAArK,AAAW,UAAD,KAAK,wDAAyC,mBAAmB,qCAA+B,AAAY,WAAD,yBAAyC;AACmB,MAAjL,AAAW,UAAD,KAAK,2DAA4C,sBAAsB,wCAAkC,AAAY,WAAD,4BAA4C;AACO,MAAjL,AAAW,UAAD,KAAK,2DAA4C,sBAAsB,wCAAkC,AAAY,WAAD,4BAA4C;AAC+B,MAAzM,AAAW,UAAD,KAAK,iEAAkD,4BAA4B,8CAAwC,AAAY,WAAD,kCAAkD;AAC7B,MAArK,AAAW,UAAD,KAAK,wDAAyC,mBAAmB,qCAA+B,AAAY,WAAD,yBAAyC;AACuB,MAArL,AAAW,UAAD,KAAK,4DAA6C,uBAAuB,yCAAmC,AAAY,WAAD,6BAA6C;AACO,MAArL,AAAW,UAAD,KAAK,4DAA6C,uBAAuB,yCAAmC,AAAY,WAAD,6BAA6C;AACb,MAAjK,AAAW,UAAD,KAAK,uDAAwC,kBAAkB,oCAA8B,AAAY,WAAD,wBAAwC;AACG,MAA7J,AAAW,UAAD,KAAK,sDAAuC,iBAAiB,mCAA6B,AAAY,WAAD,uBAAuC;AACL,MAAjJ,AAAW,UAAD,KAAK,mDAAoC,cAAc,gCAA0B,AAAY,WAAD,oBAAoC;AACW,MAArJ,AAAW,UAAD,KAAK,oDAAqC,eAAe,iCAA2B,AAAY,WAAD,qBAAqC;IAChJ;;;QA/uCgB;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;IA5EA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACJ,AAAc,aAAD;UACb,AAAa,YAAD;UACZ,AAAuB,sBAAD;UACtB,AAAkB,iBAAD;UACjB,AAAiB,gBAAD;UAChB,AAAY,WAAD;UACX,AAAsB,qBAAD;UACrB,AAAY,WAAD;UACX,AAAY,WAAD;UACX,AAAwB,uBAAD;UACvB,AAAkB,iBAAD;UACjB,AAAU,SAAD;UACT,AAAa,YAAD;UACZ,AAAW,UAAD;UACV,AAAW,UAAD;UACV,AAAe,cAAD;UACd,AAAY,WAAD;UACX,AAAc,aAAD;UACb,AAAiB,gBAAD;UAChB,AAAsB,qBAAD;UACrB,AAAc,aAAD;UACb,AAAsB,qBAAD;UACrB,AAAY,WAAD;UACX,AAAmB,kBAAD;UAClB,AAAqB,oBAAD;UACpB,AAAmB,kBAAD;UAClB,AAAY,WAAD;UACX,AAAyB,wBAAD;UACxB,AAAgB,eAAD;UACf,AAAsB,qBAAD;UACrB,AAAe,cAAD;UACd,AAAU,SAAD;UACT,AAAW,UAAD;UACV,AAAU,SAAD;UACT,AAAiB,gBAAD;UAChB,AAAgB,eAAD;UACf,AAAqB,oBAAD;UACpB,AAAU,SAAD;UACT,AAAiB,gBAAD;UAChB,AAAgB,eAAD;UACf,AAAY,WAAD;UACX,AAAY,WAAD;UACX,AAAa,YAAD;UACZ,AAAU,SAAD;UACT,AAAU,SAAD;UACT,AAAS,QAAD;UACR,AAAsB,qBAAD;UACrB,AAAqB,oBAAD;UACpB,AAAY,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","file":"../../../../../../packages/flutter/src/material/icon_button.dart.lib.js"}');
  // Exports:
  return {
    src__material__icon_button: icon_button,
    src__material__back_button: back_button,
    src__material__time: time,
    src__material__ink_ripple: ink_ripple,
    src__material__button_style_button: button_style_button,
    src__material__text_button: text_button,
    src__material__snack_bar: snack_bar,
    src__material__floating_action_button_location: floating_action_button_location,
    src__material__floating_action_button: floating_action_button,
    src__material__flexible_space_bar: flexible_space_bar,
    src__material__list_tile: list_tile,
    src__material__drawer: drawer,
    src__material__divider: divider,
    src__material__dialog: dialog,
    src__material__raised_button: raised_button,
    src__material__outline_button: outline_button,
    src__material__material_button: material_button,
    src__material__button: button,
    src__material__flat_button: flat_button,
    src__material__toggle_buttons_theme: toggle_buttons_theme,
    src__material__time_picker_theme: time_picker_theme,
    src__material__text_selection_theme: text_selection_theme,
    src__material__text_button_theme: text_button_theme,
    src__material__tabs: tabs$,
    src__material__tab_bar_theme: tab_bar_theme,
    src__material__switch_theme: switch_theme,
    src__material__snack_bar_theme: snack_bar_theme,
    src__material__slider_theme: slider_theme,
    src__material__scrollbar_theme: scrollbar_theme,
    src__material__radio_theme: radio_theme,
    src__material__popup_menu_theme: popup_menu_theme,
    src__material__page_transitions_theme: page_transitions_theme,
    src__material__outlined_button_theme: outlined_button_theme,
    src__material__navigation_rail: navigation_rail,
    src__material__navigation_rail_theme: navigation_rail_theme,
    src__material__input_decorator: input_decorator,
    src__material__ink_splash: ink_splash,
    src__material__button_style: button_style,
    src__material__elevated_button_theme: elevated_button_theme,
    src__material__divider_theme: divider_theme,
    src__material__dialog_theme: dialog_theme,
    src__material__data_table_theme: data_table_theme,
    src__material__chip_theme: chip_theme,
    src__material__checkbox_theme: checkbox_theme,
    src__material__card_theme: card_theme,
    src__material__tooltip_theme: tooltip_theme,
    src__material__tooltip: tooltip,
    src__material__ink_highlight: ink_highlight,
    src__material__feedback: feedback,
    src__material__ink_well: ink_well,
    src__material__bottom_navigation_bar: bottom_navigation_bar,
    src__material__bottom_navigation_bar_theme: bottom_navigation_bar_theme,
    src__material__bottom_app_bar_theme: bottom_app_bar_theme,
    src__material__banner_theme: banner_theme,
    src__material__theme_data: theme_data,
    src__material__color_scheme: color_scheme,
    src__material__button_theme: button_theme,
    src__material__button_bar_theme: button_bar_theme,
    src__material__button_bar: button_bar,
    src__material__bottom_sheet: bottom_sheet,
    src__material__scaffold: scaffold$,
    src__material__elevation_overlay: elevation_overlay,
    src__material__material: material,
    src__material__debug: debug$0,
    src__material__material_localizations: material_localizations,
    src__material__theme: theme$,
    src__material__app_bar_theme: app_bar_theme,
    src__material__app_bar: app_bar
  };
}));

//# sourceMappingURL=icon_button.dart.lib.js.map
